<?php if ( ! defined('BASEPATH')) exit('No direct script access allowed');
include_once (dirname(__FILE__) . "/reads.php");

use Mike42\Escpos\Printer;
use Mike42\Escpos\EscposImage;
use Mike42\Escpos\PrintConnectors\WindowsPrintConnector;
use Mike42\Escpos\TsplPrinter;

class Cashier extends Reads {
    public function __construct(){
        parent::__construct();
        $this->load->model('dine/cashier_model');
        $this->load->helper('core/string_helper');
        $this->load->model('site/site_model');

        // if(LOCALSYNC){
        //     $this->load->model('core/sync_model');
        // }
        // $this->load->helper('dine/cpanel_helper');
    }
    #CONTROL PANEL SECTION
        public function index(){
            $this->load->helper('dine/cashier_helper');
            $this->load->helper('core/on_screen_key_helper');
            $data = $this->syter->spawn(null);
            sess_clear('trans_mod_cart');
            sess_clear('trans_submod_cart');
            sess_clear('trans_cart');
            sess_clear('counter');
            sess_clear('trans_disc_cart');
            sess_clear('trans_charge_cart');
            sess_clear('trans_type_cart');
            sess_clear('trans_multi_disc_cart');
            sess_clear('item_discount');
            sess_clear('selected_person');
            sess_clear('person_disc_cart');
            sess_clear('payment_change');
            sess_clear('brand_session');


            // $time = $this->site_model->get_db_now();
            // $prev_date = date('Y-m-d', strtotime($time .' -1 day'));
            // $result = $this->cashier_model->get_latest_read_date(Z_READ);
            // $need_eod = false;
            // if(!empty($result)){
            //     if(strtotime($prev_date) > strtotime($result->maxi)){
            //         $need_eod = true;
            //     }
            // }
            $set = $this->cashier_model->get_pos_settings();
            // echo "<pre>",print_r($trans_buttons),"</pre>";die(); 

            $today = date2Word($this->site_model->get_db_now('sql'));
            $data['code'] = indexPage(false,$set,$today);
            $data['add_css'] = array('css/cashier.css','css/onscrkeys.css','css/virtual_keyboard.css');
            $data['add_js'] = array('js/on_screen_keys.js','js/jquery.keyboard.extension-navigation.min.js','js/jquery.keyboard.min.js');
            $data['load_js'] = 'dine/cashier.php';
            $data['use_js'] = 'controlPanelJs';
            $this->load->view('cashier',$data);
        }
        public function search_panel(){
            $this->load->helper('dine/cashier_helper');
            $this->load->helper('core/on_screen_key_helper');
            $data = $this->syter->spawn(null);
            sess_clear('trans_mod_cart');
            sess_clear('trans_submod_cart');
            sess_clear('trans_cart');
            sess_clear('counter');
            sess_clear('trans_disc_cart');
            sess_clear('trans_multi_disc_cart');
            sess_clear('trans_charge_cart');
            sess_clear('item_discount');
            sess_clear('selected_person');
            sess_clear('person_disc_cart');
            sess_clear('payment_change');

            $set = $this->cashier_model->get_pos_settings();
            $today = sql2Date($this->site_model->get_db_now('sql'));
            $data['code'] = searchPanelPage(false,$set,$today);
            $data['add_css'] = array('css/cashier.css','css/onscrkeys.css','css/virtual_keyboard.css','css/datepicker/datepicker.css','css/daterangepicker/daterangepicker-bs3.css');
            $data['add_js'] = array('js/on_screen_keys.js','js/jquery.keyboard.extension-navigation.min.js','js/jquery.keyboard.min.js','js/plugins/datepicker/bootstrap-datepicker.js','js/plugins/daterangepicker/daterangepicker.js');
            $data['load_js'] = 'dine/cashier.php';
            $data['use_js'] = 'searchPanelJs';
            $this->load->view('cashier',$data);
        }
        public function index2(){
            $this->load->helper('dine/cashier_helper');
            $this->load->helper('dine/cpanel_helper');
            $this->load->helper('core/on_screen_key_helper');
            $data = $this->syter->spawn(null);
            $today = sql2Date($this->site_model->get_db_now('sql'));
            $user = $data['user'];
            $data['add_css'] = array('css/cashier.css','css/onscrkeys.css','css/cpanel.css');
            $set = $this->cashier_model->get_pos_settings();
            $data['code'] = cpanel($user,$set,$today);
            $data['load_js'] = 'dine/cpanel';
            $data['use_js'] = 'cpanelJs';
            $data['noNavbar'] = true;
            $this->load->view('cashier',$data);
        }
        function guest_edit_call(){
            $this->load->helper('dine/manager_helper');
            $this->load->helper('core/on_screen_key_helper');
            $data = $this->syter->spawn(null,false);
            $data['code'] = onScrNumPadOnly('guest-call-pin-login');
            $data['add_css'] = array('css/pos.css','css/onscrkeys.css');
            $data['add_js'] = array('js/on_screen_keys.js');
            $this->load->view('load',$data);
        }
        function server_no_call(){
            $this->load->helper('dine/manager_helper');
            $this->load->helper('core/on_screen_key_helper');
            $data = $this->syter->spawn(null,false);
            $data['code'] = onScrNumPadOnly('server-no-pin');
            $data['add_css'] = array('css/pos.css','css/onscrkeys.css');
            $data['add_js'] = array('js/on_screen_keys.js');
            $this->load->view('load',$data);
        }
        function server_no_call_go($no=0){
            $trans_type_cart = sess('trans_type_cart');
            $cart = $trans_type_cart[0];
            $cart['serve_no'] = $no;
            $trans_type_cart[0] = $cart;
            $this->session->set_userdata('trans_type_cart',$trans_type_cart);
        }
        function guest_edit_call_go($no=0){
            $trans_type_cart = sess('trans_type_cart');
            $cart = $trans_type_cart[0];
            $cart['guest'] = $no;
            $trans_type_cart[0] = $cart;
            $this->session->set_userdata('trans_type_cart',$trans_type_cart);
        }
        function manager_call(){
            $this->load->helper('dine/manager_helper');
            $this->load->helper('core/on_screen_key_helper');
            $data = $this->syter->spawn(null,false);
            $data['code'] = onScrNumPwdPadOnly('manager-call-pin-login');
            $data['add_css'] = array('css/pos.css','css/onscrkeys.css');
            $data['add_js'] = array('js/on_screen_keys.js');
            $this->load->view('load',$data);
        }
        function manager_reasons(){
            $this->load->helper('dine/manager_helper');
            $this->load->helper('core/on_screen_key_helper');
            $data = $this->syter->spawn(null,false);
            $data['code'] = managerReasonsPage();
            $data['add_css'] = array('css/pos.css','css/onscrkeys.css', 'css/cashier.css');
            $data['add_js'] = array('js/on_screen_keys.js');
            $data['load_js'] = 'dine/manager';
            $data['use_js'] = 'managerReasonsJs';
            $this->load->view('load',$data);
        }
        function manager_go_login() {
            $this->load->model('dine/manager_model');
            $pin = $this->input->post('pin');
            $ptype = $this->input->post('ptype');

            $manager = $this->manager_model->get_manager_by_pin($pin);
            $man = array();
            if (!isset($manager->id)) {
                echo json_encode(array('error_msg'=>'Invalid manager pin','manager'=>$man));
            } else {
                $this->session->set_userdata('manager_privs',array('method'=>'page','id'=>$manager->id));
                $man = array(
                    "manager_id"=>$manager->id,
                    "manager_username"=>$manager->username
                );
                if($ptype)
                    $this->logs_model->add_logs($ptype,$manager->id,$manager->username." Enter Manager Code for ".$ptype,null);

                echo json_encode(array('success_msg'=>'Go','manager'=>$man));
            }

            // return false;
        }
        public function _remap($method,$params=array()){
            $this->load->model('dine/clock_model');
                $user = $this->session->userdata('user');
                $user_id = $user['role_id'];
                if(ORDERING_STATION){
                    if($method == 'settle'){
                        $now = $this->site_model->get_db_now();
                        $user = $this->session->userdata('user');
                        $user_id = $user['id'];
                        $shift = $this->clock_model->get_curr_shift(date2Sql($now),$user_id);
                        if(count($shift) > 0){
                            call_user_func_array(array($this,$method), $params);
                        }
                        else{
                            site_alert('You need to start a shift before selling.','error');
                            header("Location:".base_url()."shift");
                        }
                    }
                    else{
                        call_user_func_array(array($this,$method), $params);  
                    }   
                    return false;
                }else{
                    if($user_id == SERVER_ID){
                        if($method == 'settle'){
                            $now = $this->site_model->get_db_now();
                            $user = $this->session->userdata('user');
                            $user_id = $user['id'];
                            $shift = $this->clock_model->get_curr_shift(date2Sql($now),$user_id);
                            if(count($shift) > 0){
                                call_user_func_array(array($this,$method), $params);
                            }
                            else{
                                site_alert('You need to start a shift before selling.','error');
                                header("Location:".base_url()."shift");
                            }
                        }
                        else{
                            call_user_func_array(array($this,$method), $params);  
                        }   
                        return false;         
                    }
                }
                $high_position = array(1,2);
                if(!CHECK_OIC_ID){
                    $high_position[] = OIC_ID;
                }
                // if($user_id == 1 || $user_id == 2){
                if(in_array($user_id,$high_position)){
                    if($method == 'counter' || $method == 'tables' || $method == 'delivery' ){
                        $now = $this->site_model->get_db_now();
                        $user = $this->session->userdata('user');
                        $user_id = $user['id'];
                        $shift = $this->clock_model->get_curr_shift(date2Sql($now),$user_id);
                        if(count($shift) > 0){
                            call_user_func_array(array($this,$method), $params);
                        }
                        else{
                            site_alert('You need to start a shift before selling.','error');
                            header("Location:".base_url()."shift");
                        }   
                    }
                    else if($method == 'settle'){
                        $now = $this->site_model->get_db_now();
                        $user = $this->session->userdata('user');
                        $user_id = $user['id'];
                        $shift = $this->clock_model->get_curr_shift(date2Sql($now),$user_id);
                        if(count($shift) > 0){
                            call_user_func_array(array($this,$method), $params);
                        }
                        else{
                            site_alert('You need to start a shift before you can settle.','error');
                            header("Location:".base_url()."shift");
                        }
                    }
                    else                
                        call_user_func_array(array($this,$method), $params);
                }
                else{
                    if($method != 'manager_call' && $method != 'manager_go_login' && $method != 'manager_reasons' && $method != 'app_save_order' && $method != 'app_rows' && $method != 'app_users' && $method != 'app_get_open_orders' && $method != 'app_cancel_order' && $method != 'counter2'){
                        $now = $this->site_model->get_db_now();
                        $user = $this->session->userdata('user');
                        $user_id = $user['id'];
                        $shift = $this->clock_model->get_curr_shift(date2Sql($now),$user_id);
                        if(count($shift) > 0){
                            if($method != 'index' && $method != 'summary' && $method != 'summary_orders' && $method != 'end_shift' && $method != 'read_shift_sales' && $method != 'end_day'){
                                $time = $this->site_model->get_db_now();
                                $yesterday = date('Y-m-d',strtotime($time. "-1 days"));
                                $unclosed_shifts = $this->clock_model->get_shift_id(null,$user_id,$yesterday);
                                $error = "";
                                call_user_func_array(array($this,$method), $params);
                            }
                            else{
                                call_user_func_array(array($this,$method), $params);
                            }
                        }
                        else{
                            site_alert('You need to start a shift before selling.','error');
                            header("Location:".base_url()."shift");
                        }

                    }
                    else{
                        call_user_func_array(array($this,$method), $params);
                    }
                }
        }
        public function orders($terminal='my',$status='open',$types='all',$now='all_trans',$search_id='none',$server_id='0',$show='box',$page_no=1){
            $this->load->model('dine/cashier_model');
            $this->load->model('site/site_model');
                // "trans_sales.terminal_id"=>TERMINAL_ID,
            // echo $show;
            $args = array(
                "trans_sales.trans_ref"=>null,
                "trans_sales.type_id"=>SALES_TRANS,
                "trans_sales.inactive"=>0,
            );
            if($now != 'all_trans'){
                // echo "here";
                $date = $this->site_model->get_db_now(null,true);
                // $args["DATE_FORMAT(trans_sales.datetime,'%Y-%m-%d') <= "] = date('Y-m-d',strtotime($date. "-1 days"));
                $date_from = date('Y-m-d',strtotime($date. "-1 days"));
                $date_to = $date;
                $args["DATE(trans_sales.datetime)  BETWEEN DATE('".$date_from."') AND DATE('".$date_to."')"] = array('use'=>'where','val'=>null,'third'=>false);
            }
            else{
                $this->db = $this->load->database('main',true);
            }
            // if($terminal != 'my')
            //     unset($args["trans_sales.terminal_id"]);
            if($status != 'open'){
                unset($args["trans_sales.trans_ref"]);
                if($status == 'settled'){
                    $args["trans_sales.trans_ref  IS NOT NULL"] = array('use'=>'where','val'=>null,'third'=>false);
                    $args["trans_sales.inactive"] = 0;
                }else if($status == 'cancel'){
                    $args["trans_sales.trans_ref  IS NULL"] = array('use'=>'where','val'=>null,'third'=>false);
                    $args["trans_sales.inactive"] = 1;
                }else{
                    $args["trans_sales.trans_ref  IS NOT NULL"] = array('use'=>'where','val'=>null,'third'=>false);
                     $args["trans_sales.inactive"] = 1;
                }
            }
            if($types != 'all'){
                $args["trans_sales.type"] = $types;
            }
            if($search_id != 'none'){
                $args["trans_sales.sales_id"] = array('use'=>'like','val'=>$search_id,'third'=>false);
                if($status == 'settled'){
                    $args["trans_sales.trans_ref"] = array('use'=>'or_like','val'=>$search_id,'third'=>false);
                }
            }
            if($server_id != 0){
                $args["trans_sales.waiter_id"] = $server_id;
            }
            #STOPPED HERE
                  // "trans_sales.terminal_id"=>TERMINAL_ID,
            if($this->input->post())  {
              $args = array(
                  "trans_sales.trans_ref"=>null,
                  "trans_sales.type_id"=>SALES_TRANS,
                  "trans_sales.inactive"=>0,
              );
              if($this->input->post('s_status')){
                switch ($this->input->post('s_status')) {
                    case 'settled':
                        unset($args["trans_sales.trans_ref"]);
                        $args["trans_sales.trans_ref  IS NOT NULL"] = array('use'=>'where','val'=>null,'third'=>false);
                        $args["trans_sales.inactive"] = 0;
                        break;
                    case 'void':
                        unset($args["trans_sales.trans_ref"]);
                        $args["trans_sales.trans_ref  IS NOT NULL"] = array('use'=>'where','val'=>null,'third'=>false);
                        $args["trans_sales.inactive"] = 1;
                        break;
                    case 'cancel':
                        unset($args["trans_sales.trans_ref"]);
                        $args["trans_sales.trans_ref IS NULL"] = array('use'=>'where','val'=>null,'third'=>false);
                        $args["trans_sales.inactive"] = 1;
                    default:
                        break;
                }
              }
              if($this->input->post('s_order_type')){
                $args["trans_sales.type"] = $this->input->post('s_order_type');
              }
              if($this->input->post('s_ref_code')){
                $args["trans_sales.sales_id"] = array('use'=>'like','val'=>$this->input->post('s_ref_code'),'third'=>false);
              }
              if($this->input->post('s_rec_code')){
                $args["trans_sales.trans_ref"] = array('use'=>'like','val'=>$this->input->post('s_rec_code'),'third'=>false);
              }
              if($this->input->post('s_from_amt')){
                $args["trans_sales.total_amount >= "] = $this->input->post('s_from_amt');
              }
              if($this->input->post('s_to_amt')){
                $args["trans_sales.total_amount <= "] = $this->input->post('s_to_amt');
              }
              if($this->input->post('s_order_date')){
                $date_today = date2Sql($this->site_model->get_db_now(null,true));
                $orD = date2Sql($this->input->post('s_order_date'));
                if(strtotime($orD) >= strtotime($date_today)){
                    $date_from = date('Y-m-d',strtotime($orD. "-1 days"));
                    $date_to = $orD;
                    $args["DATE(trans_sales.datetime)  BETWEEN DATE('".$date_from."') AND DATE('".$date_to."')"] = array('use'=>'where','val'=>null,'third'=>false);
                }
                else{
                    $this->db = $this->load->database('main',true);
                    $date_from = date('Y-m-d',strtotime($orD. "-1 days"));
                    $date_to = $orD;
                    $args["DATE(trans_sales.datetime)  BETWEEN DATE('".$date_from."') AND DATE('".$date_to."')"] = array('use'=>'where','val'=>null,'third'=>false);
                }
              }
            }

            if($page_no == 1){
                $limit=0;
            }else{
                $limit = ($page_no - 1) * TRANS_COUNT_BUTTONS;
            }
            $orders = $this->cashier_model->get_trans_sales_dashboard(null,$args,'desc',null,$limit);
            // echo $this->cashier_model->db->last_query();
            // return false;
            $code = "";
            $ids = array();
            $time = $this->site_model->get_db_now();
            $this->make->sDivRow();
            $ord=array();
            $combine_cart = sess('trans_combine_cart');
            foreach ($orders as $res) {
                if($res->trans_ref == null and $res->inactive == 0){
                    $status = "open";
                }else if($res->trans_ref != null and $res->inactive == 0){
                    $status = "settled";
                }else{
                    $status = "voided";
                }
                $ord[$res->sales_id] = array(
                    "type"=>$res->type,
                    "status"=>$status,
                    "user_id"=>$res->user_id,
                    "name"=>$res->username,
                    "terminal_id"=>$res->terminal_id,
                    "terminal_name"=>$res->terminal_name,
                    "shift_id"=>$res->shift_id,
                    "datetime"=>$res->datetime,
                    "amount"=>$res->total_amount,
                    "table_id"=>$res->table_id
                );
                if($show == "box"){
                    $this->make->sDivCol(4,'left',0);
                        $this->make->sDiv(array('class'=>'order-btn','id'=>'order-btn-'.$res->sales_id,'ref'=>$res->sales_id,'style'=>'margin-bottom:-20px;'));
                            if($res->trans_ref == null and $res->inactive == 0){
                                if(MANANGS){
                                    if($res->type == 'takeout'){
                                        $this->make->sBox('default',array('class'=>'box-solid new-light','style'=>'background-color: #20877f;'));
                                    }elseif($res->type == 'foodpanda'){
                                        $this->make->sBox('default',array('class'=>'box-solid new-light','style'=>'background-color: #f04fe8;'));
                                    }elseif($res->type == 'grabfood'){
                                        $this->make->sBox('default',array('class'=>'box-solid new-light','style'=>'background-color: #8527e3;'));
                                    }else{
                                        $this->make->sBox('default',array('class'=>'box-solid new-light','style'=>'background-color: #00B0F0;'));
                                    }
                                }else{
                                    $this->make->sBox('default',array('class'=>'box-solid new-light','style'=>'background-color: #00B0F0;'));
                                }

                            }else if($res->trans_ref != null and $res->inactive == 0){
                                $this->make->sBox('default',array('class'=>'box-solid bg-green new-light'));
                            }
                            else if($res->trans_ref != null and $res->inactive == 1){
                                $this->make->sBox('default',array('class'=>'box-solid new-light','style'=>'background-color: #ed4959;'));
                            }
                            else{
                                $this->make->sBox('default',array('class'=>'box-solid new-light','style'=>'background-color: #EE7600;'));
                            }
                                $this->make->sBoxBody(array('style'=>'height:60px;'));
                                    $this->make->sDivRow();
                                        $this->make->sDivCol(6,'',0,array('class'=>'new-light-media-box'));
                                            $splitTxt = '';
                                            if($res->split != 0){
                                                if($res->sales_id == $res->split){
                                                    $splitTxt = fa('fa-code fa-lg fa-fw');
                                                }
                                                else{
                                                    $splitTxt = '(From ORDER #'.$res->split.')';
                                                }
                                            }
                                            // $this->make->H(5,"ORDER #".$res->sales_id." ".$splitTxt,array("style"=>'font-weight:700;color:#000;margin-top:-10px;'));
                                            // if($res->trans_ref == null and $res->inactive == 0){
                                            //     // $this->make->H(5,strtoupper($res->username),array("style"=>'color:#000'));
                                            //     // $this->make->H(6,strtoupper($res->terminal_name),array("style"=>'color:#000'));
                                            // }else if($res->trans_ref != null and $res->inactive == 0){
                                            //     // $this->make->H(5,$res->trans_ref,array("style"=>'color:#fff'));
                                            //     $this->make->H(5,strtoupper($res->username),array("style"=>'color:#000'));
                                            //     // $this->make->H(6,'FS - '.strtoupper($res->waiterfname." ".$res->waitermname." ".$res->waiterlname." ".$res->waitersuffix),array("style"=>'color:#fff'));
                                            //     $this->make->H(6,strtoupper($res->terminal_name),array("style"=>'color:#000'));
                                            // }else{
                                            //     // $this->make->H(5,$res->trans_ref,array("style"=>'color:#fff'));
                                            //     $this->make->H(5,strtoupper($res->username),array("style"=>'color:#000'));
                                            //     // $this->make->H(6,'FS - '.strtoupper($res->waiterfname." ".$res->waitermname." ".$res->waiterlname." ".$res->waitersuffix),array("style"=>'color:#fff'));
                                            //     $this->make->H(6,strtoupper($res->terminal_name),array("style"=>'color:#000'));
                                            // }
                                            // if($res->reason != null)
                                            //     $this->make->H(6,'('.ucwords($res->reason).')',array("style"=>'color:#000'));
                                            // $this->make->H(5,tagWord(strtoupper(ago($res->datetime,$time) ) ) );

                                            $tbl_n = "";
                                            if($res->table_id != ""){
                                                $tbl_n = strtoupper($res->table_name);
                                            }
                                            $serve_no = "";
                                            if($res->type == "counter" || $res->type == 'takeout'){
                                                if($res->serve_no > 0){
                                                    $serve_no = "Serve # ".$res->serve_no;
                                                }
                                            }
                                            $this->make->H(5,$tbl_n,array('class'=>'text-center','style'=>'font-weight:bold;text-shadow: 1px 3px 5px rgba(0, 0, 0, 0.5);-webkit-font-smoothing: antialiased !important;opacity: 0.8;'));
                                            $this->make->H(5,$serve_no,array('class'=>'text-center','style'=>'font-weight:bold;text-shadow: 1px 3px 5px rgba(0, 0, 0, 0.5);-webkit-font-smoothing: antialiased !important;opacity: 0.8;'));
                                            $this->make->H(5,tagWord(strtoupper(new_ago($res->datetime,$time))),array('class'=>'text-center','style'=>'font-weight:bold;text-shadow: 1px 3px 5px rgba(0, 0, 0, 0.5);-webkit-font-smoothing: antialiased !important;opacity: 0.8;'));


                                        $this->make->eDivCol();
                                        $this->make->sDivCol(6);
                                            // if($res->trans_ref != "")
                                                // $this->make->H(4,'#'.$res->trans_ref,array('class'=>'text-center','style'=>'font-weight:bold;text-shadow: 1px 3px 5px rgba(0, 0, 0, 0.5);-webkit-font-smoothing: antialiased !important;opacity: 0.8;margin-top:-10px;'));
                                            // else
                                                // $this->make->H(4,'Order Total',array('class'=>'text-center','style'=>'margin-top:-10px;'));
                                            $this->make->H(5,strtoupper($res->type),array('class'=>'text-center'));
                                            $this->make->H(5,num($res->total_amount),array('class'=>'text-center'));
                                        $this->make->eDivCol();
                                    $this->make->eDivRow();

                                $this->make->eBoxBody();
                            $this->make->eBox();
                        $this->make->eDiv();
                    $this->make->eDivCol();
                }
                else if($show=='combineList'){
                    $got = false;
                    if(count($combine_cart) > 0){
                        foreach ($combine_cart as $key => $co) {
                            if($co['sales_id'] == $res->sales_id){
                                $got = true;
                                break;
                            }
                        }
                    }
                    if(!$got){
                        $this->make->sDivRow(array('class'=>'orders-list-div-btnish','id'=>'order-btnish-'.$res->sales_id));
                            $this->make->sDivCol(4);
                                $this->make->sDiv(array('style'=>'margin-left:10px;'));
                                    $this->make->H(5,strtoupper($res->type)." #".$res->sales_id,array("style"=>'font-weight:700;'));
                                    $tbl_n = "";
                                    if($res->table_id != ""){
                                        $tbl_n = strtoupper($res->table_name);
                                        $this->make->H(5,$tbl_n,array('style'=>'font-weight:bold;text-shadow: 1px 3px 5px rgba(0, 0, 0, 0.5);-webkit-font-smoothing: antialiased !important;opacity: 0.8;')); 
                                    }
                                    $this->make->H(5,strtoupper($res->username),array("style"=>'color:#888'));
                                    $this->make->H(5,strtoupper($res->terminal_name),array("style"=>'color:#888'));
                                $this->make->eDiv();
                            $this->make->eDivCol();
                            $this->make->sDivCol(4);
                                $this->make->sDiv(array('style'=>'margin-left:10px;'));
                                    $this->make->H(4,'BALANCE DUE',array('class'=>'text-center'));
                                    $this->make->H(3,num($res->total_amount),array('class'=>'text-center','style'=>'margin-top:10px;'));
                                $this->make->eDiv();
                            $this->make->eDivCol();
                            $this->make->sDivCol(4);
                                $this->make->sDiv(array('class'=>'order-btn-right-container','style'=>'margin-left:10px;margin-right:10px;margin-top:15px;'));
                                    $this->make->button(fa('fa-angle-double-right fa-lg fa-fw'),array('id'=>'add-to-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'add-btn-row btn-block counter-btn-green'));
                                $this->make->eDiv();
                            $this->make->eDivCol();
                        $this->make->eDivRow();
                    }
                }
                $ids[] = $res->sales_id;
            }
            //}
            $this->make->eDivRow();
            $code = $this->make->code();
            $has = 1;
            if(count($ord) == 0){
                $has = 0;
            }
            echo json_encode(array('code'=>$code,'ids'=>$ord,'has'=>$has));
        }
        public function new_orders($terminal='my',$status='open',$types='all',$now='all_trans',$search_id='none',$server_id='0',$last_id=null){
            $this->load->model('dine/cashier_model');
            $this->load->model('site/site_model');
            $args = array(
                "trans_sales.trans_ref"=>null,
                "trans_sales.terminal_id"=>TERMINAL_ID,
                "trans_sales.type_id"=>SALES_TRANS,
                "trans_sales.inactive"=>0,
            );
            if($now != 'all_trans'){
                $date = $this->site_model->get_db_now(null,true);
                $args["DATE_FORMAT(trans_sales.datetime,'%Y-%m-%d')"] = $date;
            }
            else{
                $this->db = $this->load->database('main',true);
            }
            if($terminal != 'my')
                unset($args["trans_sales.terminal_id"]);
            if($status != 'open'){
                unset($args["trans_sales.trans_ref"]);
                if($status == 'settled'){
                    $args["trans_sales.trans_ref  IS NOT NULL"] = array('use'=>'where','val'=>null,'third'=>false);
                    $args["trans_sales.inactive"] = 0;
                }else{
                     $args["trans_sales.inactive"] = 1;
                }
            }
            if($types != 'all'){
                $args["trans_sales.type"] = $types;
            }
            if($search_id != 'none'){
                $args["trans_sales.sales_id"] = array('use'=>'like','val'=>$search_id,'third'=>false);;
                if($status == 'settled'){
                    $args["trans_sales.trans_ref"] = array('use'=>'or_like','val'=>$search_id,'third'=>false);
                }
            }
            if($server_id != 0){
                $args["trans_sales.waiter_id"] = $server_id;
            }
            if($last_id != ""){
                $args["trans_sales.sales_id >"] = $last_id;
            }
            $orders = $this->cashier_model->get_trans_sales(null,$args);
            $code = "";
            $ids = array();
            $time = $this->site_model->get_db_now();
            $ord=array();
            $combine_cart = sess('trans_combine_cart');
            foreach ($orders as $res) {
                if($res->trans_ref == null and $res->inactive == 0){
                    $status = "open";
                }else if($res->trans_ref != null and $res->inactive == 0){
                    $status = "settled";
                }else{
                    $status = "voided";
                }
                $ord[$res->sales_id] = array(
                    "type"=>$res->type,
                    "status"=>$status,
                    "user_id"=>$res->user_id,
                    "name"=>$res->username,
                    "terminal_id"=>$res->terminal_id,
                    "terminal_name"=>$res->terminal_name,
                    "shift_id"=>$res->shift_id,
                    "datetime"=>$res->datetime,
                    "amount"=>$res->total_amount
                );
                    $this->make->sDivCol(6,'left',0);
                        $this->make->sDiv(array('class'=>'order-btn','id'=>'order-btn-'.$res->sales_id,'ref'=>$res->sales_id));
                            if($res->trans_ref == null and $res->inactive == 0){
                                $this->make->sBox('default',array('class'=>'box-solid'));
                            }else if($res->trans_ref != null and $res->inactive == 0){
                                $this->make->sBox('default',array('class'=>'box-solid bg-green'));
                            }else{
                                $this->make->sBox('default',array('class'=>'box-solid','style'=>'background-color: #ed4959;'));
                            }
                                $this->make->sBoxBody();
                                    $this->make->sDivRow();
                                        $this->make->sDivCol(6);
                                            $splitTxt = '';
                                            if($res->split != 0){
                                                if($res->sales_id == $res->split){
                                                    $splitTxt = fa('fa-code fa-lg fa-fw');
                                                }
                                                else{
                                                    $splitTxt = '(From ORDER #'.$res->split.')';
                                                }
                                            }
                                            $this->make->H(5,"ORDER #".$res->sales_id." ".$splitTxt,array("style"=>'font-weight:700;'));
                                            if($res->trans_ref == null and $res->inactive == 0){
                                                $this->make->H(5,strtoupper($res->username),array("style"=>'color:#888'));
                                                // $this->make->H(6,'FS - '.strtoupper($res->waiterfname." ".$res->waitermname." ".$res->waiterlname." ".$res->waitersuffix),array("style"=>'color:#888'));
                                                $this->make->H(6,strtoupper($res->terminal_name),array("style"=>'color:#888'));
                                            }else if($res->trans_ref != null and $res->inactive == 0){
                                                $this->make->H(5,strtoupper($res->username),array("style"=>'color:#fff'));
                                                // $this->make->H(6,'FS - '.strtoupper($res->waiterfname." ".$res->waitermname." ".$res->waiterlname." ".$res->waitersuffix),array("style"=>'color:#fff'));
                                                $this->make->H(6,strtoupper($res->terminal_name),array("style"=>'color:#fff'));
                                            }else{
                                                $this->make->H(5,strtoupper($res->username),array("style"=>'color:#fff'));
                                                // $this->make->H(6,'FS - '.strtoupper($res->waiterfname." ".$res->waitermname." ".$res->waiterlname." ".$res->waitersuffix),array("style"=>'color:#fff'));
                                                $this->make->H(6,strtoupper($res->terminal_name),array("style"=>'color:#fff'));
                                            }
                                            if($res->reason != null)
                                                $this->make->H(6,'('.ucwords($res->reason).')',array("style"=>'color:#fff'));
                                            $this->make->H(5,tagWord(strtoupper(ago($res->datetime,$time) ) ) );
                                        $this->make->eDivCol();
                                        $this->make->sDivCol(6);
                                            $this->make->H(4,'Order Total',array('class'=>'text-center'));
                                            $this->make->H(3,num($res->total_amount),array('class'=>'text-center'));
                                            $tbl_n = "";
                                            if($res->table_id != ""){
                                                $tbl_n = " - ".strtoupper($res->table_name);
                                            }
                                            $this->make->H(5,strtoupper($res->type).$tbl_n,array('class'=>'text-center','style'=>'font-weight:bold;text-shadow: 1px 3px 5px rgba(0, 0, 0, 0.5);-webkit-font-smoothing: antialiased !important;opacity: 0.8;'));
                                        $this->make->eDivCol();
                                    $this->make->eDivRow();

                                $this->make->eBoxBody();
                            $this->make->eBox();
                        $this->make->eDiv();
                    $this->make->eDivCol();
                $ids[] = $res->sales_id;
            }
            //}
            $code = $this->make->code();
            echo json_encode(array('code'=>$code,'ids'=>$ord));
        }
        public function order_view($sales_id=null,$prev=false){
            sess_clear('counter');
            if($prev)
                $this->db = $this->load->database('main',true);

            $order = $this->get_order(false,$sales_id);
            // echo "<pre>",print_r($order),"</pre>";die(); 
            $ord = $order['order'];
            $det = $order['details'];
            $discs = $order['discounts'];
            $charges = $order['charges'];
            $zero_rated = $order['zero_rated'];


            $counter = array(
                // "datetime"=> sql2DateTime($order['datetime']),
                // "shift_id"=> $shift_id,
                // "sales_id"=> $sales_id,
                "terminal_id"=> TERMINAL_ID,
                // "user_id"=> $user['id'],
                "type"=> $ord['type'],
                // "zero_name"=>$zname,
                // "zero_card_no"=>$zcard_no
            );

            $this->session->set_userData('counter',$counter);


            $total = 0;
            $totals = $this->total_trans(false,$det,$discs,$charges,$zero_rated);
            if($ord['type'] == 'counter'){
               $this->make->H(3,strtoupper(COUNTERTEXT)." #".$ord['sales_id'],array('class'=>'receipt text-center'));
            }elseif($ord['type'] == 'takeout'){
               $this->make->H(3,strtoupper(TAKEOUTTEXT)." #".$ord['sales_id'],array('class'=>'receipt text-center'));
            }else{

                $this->make->H(3,strtoupper($ord['type'])." #".$ord['sales_id'],array('class'=>'receipt text-center'));
            }
            $this->make->H(5,sql2DateTime($ord['datetime']),array('class'=>'receipt text-center'));
            $waiter_name = trim($ord['waiter_username']);
            if($waiter_name != "")
                $this->make->H(5,'Food Server: '.$ord['waiter_username'],array('class'=>'receipt text-center'));
            $this->make->append('<hr>');
            $this->make->sDiv(array('class'=>'body'));
                $this->make->sUl();
                    foreach ($det as $menu_id => $opt) {
                        $qty = $this->make->span($opt['qty'],array('class'=>'qty','return'=>true));

                        $line_price = "";
                        $line_total = $opt['price'];
                        
                        if($opt['qty'] > 1){
                            $line_price = " @".$opt['price'];
                            $line_total = $opt['price'] * $opt['qty'];
                        }

                        foreach($discs as $line_item => $val){
                            if($val['items'] != ""){
                                if($line_item == $menu_id){
                                    $line_disc = $val['amount'];
                                    $less_vat = 0;

                                    if($val['fix'] == 1){
                                        $less_vat = 0;
                                    }else{
                                        if($val['no_tax'] == 1){
                                            $less_vat = ($line_total / 1.12) * 0.12;
                                        }
                                    }

                                    $line_total = $line_total - $line_disc - $less_vat;
                                }
                            }

                        }



                        if($opt['is_takeout'] == 1  && $ord['type'] == 'dinein'){
                            $name = $this->make->span(fa('fa-magnet').$opt['name'].$line_price,array('class'=>'name','return'=>true));
                        }else{
                            $name = $this->make->span($opt['name'].$line_price,array('class'=>'name','return'=>true));
                            // $name = $CI->make->span($opt['name'],array('class'=>'name','return'=>true));
                        }
                        // $cost = $this->make->span($opt['price'],array('class'=>'cost','return'=>true));
                        $cost = $this->make->span(round($line_total,2),array('class'=>'cost','return'=>true));
                        $price = $opt['qty']*$opt['price'];
                        $this->make->li($qty." ".$name." ".$cost);
                        // echo "<pre>",print_r($ord),"</pre>";die();
                        // if($ord['type'] == "App Order" && $ord['memo'] != ""){
                            // $remarks = $this->make->span(fa('fa-text-width').' '.ucwords($ord['memo']),array('class'=>'name','style'=>'margin-left:36px;','return'=>true));
                            // $this->make->li($remarks);
                        // }else{
                            if($opt['remarks'] != ""){
                                $remarks = $this->make->span(fa('fa-text-width').' '.ucwords($opt['remarks']),array('class'=>'name','style'=>'margin-left:36px;','return'=>true));
                                $this->make->li($remarks);
                            }   
                        // }
                        if(isset($opt['modifiers']) && count($opt['modifiers']) > 0){
                            foreach ($opt['modifiers'] as $mod_id => $mod) {
                                if($mod['qty'] == 1){
                                    $name = $this->make->span($mod['name'],array('class'=>'name','style'=>'margin-left:36px;','return'=>true));
                                }else{
                                    $name = $this->make->span($mod['qty'].' '.$mod['name'],array('class'=>'name','style'=>'margin-left:36px;','return'=>true));
                                }
                                
                                $cost = "";
                                if($mod['price'] > 0 )
                                    $cost = $this->make->span($mod['qty']*$mod['price'],array('class'=>'cost','return'=>true));
                                $this->make->li($name." ".$cost);
                                $price += $mod['qty']*$mod['price'];

                                if(isset($mod['submodifiers']) && count($mod['submodifiers']) > 0){
                                    foreach ($mod['submodifiers'] as $sub_id => $submod) {
                                        
                                        if($submod['mod_line_id'] == $mod['mod_line_id']){
                                            if($submod['qty']==1){
                                                $sname = $this->make->span('*'.$submod['name'],array('class'=>'name','style'=>'margin-left:50px;','return'=>true));
                                            }else{
                                                $sname = $this->make->span('*'.$submod['qty'].' '.$submod['name'],array('class'=>'name','style'=>'margin-left:50px;','return'=>true));
                                            }
                                            
                                            $scost = "";
                                            if($submod['price'] > 0 )
                                                $scost = $this->make->span($submod['qty']*$submod['price'],array('class'=>'cost','return'=>true));
                                            $this->make->li($sname." ".$scost);
                                            $price += $submod['qty']*$submod['price'];
                                        }
                                    }
                                }


                            }
                        }
                        // $total += $opt['qty'] * $price  ;
                        $total +=  $price  ;
                    }

                    if(count($charges) > 0){
                        foreach ($charges as $charge_id => $ch) {
                            $qty = $this->make->span(fa('fa fa-tag'),array('class'=>'qty','return'=>true));
                            $name = $this->make->span($ch['name'],array('class'=>'name','return'=>true));
                            $tx = $ch['amount'];
                            if($ch['absolute'] == 0)
                                $tx = $ch['amount']."%";
                            $cost = $this->make->span($tx,array('class'=>'cost','return'=>true));
                            $this->make->li($qty." ".$name." ".$cost);
                        }
                    }

                $this->make->eUl();
            $this->make->eDiv();
            $this->make->append('<hr>');
            $this->make->H(3,'TOTAL: '.num($ord['amount']),array('class'=>'receipt text-center'));
            $this->make->H(4,'DISCOUNT: '.num($totals['discount']),array('class'=>'receipt text-center'));
            $code = $this->make->code();
            echo json_encode(array('code'=>$code));
        }
        public function change_order_to($sales_id=null,$old=false){
            $this->load->model('dine/cashier_model');
            $tbl_id = null;
            $type = null;
            $error = '';
            if($this->input->post('type'))
                $type = $this->input->post('type');

            if($this->input->post('tbl_id'))
                $tbl_id = $this->input->post('tbl_id');

            $this->cashier_model->update_trans_sales(array('type'=>$type,'table_id'=>$tbl_id),$sales_id);

            if($type != 'dinein' || $type != 'eatigo' || $type != 'bigdish'){
                $this->site_model->delete_tbl('trans_sales_charges',array('sales_id'=>$sales_id));
            }

            $order = $this->get_order(false,$sales_id);
            $trans = $this->load_trans(false,$order,false);

            $charge = null;
            if(AUTO_ADD_SERVICE_CHARGE){
                $this->load->model('dine/settings_model');
                if($type == 'dinein' || $type == 'eatigo' || $type == 'bigdish'){
                    if(!isset($charge[SERVICE_CHARGE_ID])){
                        $serc = $this->settings_model->get_charges(SERVICE_CHARGE_ID);
                        $sc = $serc[0];
                        $charge[$sc->charge_id] = array(
                            "name"  => $sc->charge_name,
                            "code"  => $sc->charge_code,
                            "amount"  => $sc->charge_amount,
                            "absolute" => $sc->absolute
                        );
                        sess_add("trans_charge_cart",$charge[$sc->charge_id],$sc->charge_id);
                    }
                }
            }

            if(AUTO_ADD_SERVICE_CHARGE_DELIVERY){
                if($type == 'delivery'){
                    if(!isset($charge[SERVICE_CHARGE_DELIVERY_ID])){
                        $serc = $this->settings_model->get_charges(SERVICE_CHARGE_DELIVERY_ID);
                        $sc = $serc[0];
                        $charge[$sc->charge_id] = array(
                            "name"  => $sc->charge_name,
                            "code"  => $sc->charge_code,
                            "amount"  => $sc->charge_amount,
                            "absolute" => $sc->absolute
                        );
                        sess_add("trans_charge_cart",$charge[$sc->charge_id],$sc->charge_id);
                    }
                }
            }
            if(AUTO_ADD_SERVICE_CHARGE_TAKEOUT){
                if($type == 'takeout'){
                    if(!isset($charge[SERVICE_CHARGE_TAKEOUT_ID])){
                        $serc = $this->settings_model->get_charges(SERVICE_CHARGE_TAKEOUT_ID);
                        $sc = $serc[0];
                        $charge[$sc->charge_id] = array(
                            "name"  => $sc->charge_name,
                            "code"  => $sc->charge_code,
                            "amount"  => $sc->charge_amount,
                            "absolute" => $sc->absolute
                        );
                        sess_add("trans_charge_cart",$charge[$sc->charge_id],$sc->charge_id);
                    }
                }
            }
            if(AUTO_ADD_HANDLING_CHARGE_PANDA){
                if($type == 'foodpanda' || $type == 'honestbee'){
                    if(!isset($charge[SERVICE_CHARGE_PANDA_ID])){
                        $serc = $this->settings_model->get_charges(SERVICE_CHARGE_PANDA_ID);
                        $sc = $serc[0];
                        $charge[$sc->charge_id] = array(
                            "name"  => $sc->charge_name,
                            "code"  => $sc->charge_code,
                            "amount"  => $sc->charge_amount,
                            "absolute" => $sc->absolute
                        );
                        sess_add("trans_charge_cart",$charge[$sc->charge_id],$sc->charge_id);
                    }
                }
            }

            $update = $this->submit_trans(false,null,false,null);



            $log_user = $this->session->userdata('user');
            $this->logs_model->add_logs('Change To',$log_user['id'],$log_user['full_name']." Change type to ".$type,$sales_id);
            
            echo json_encode(array('error'=>$error));
        }
        public function other_reason_pop(){
            $this->make->textarea('Type Reason','other-reason-txt');
            echo $this->make->code();    
        }
        public function void_reserve_reason_pop(){
            // $this->make->input('Amount','add_amount');
            $this->make->input('Amount','credit_amount',null,null,array('class'=>'count-inputs big-man-input rOkay','type'=>'number','ro-msg'=>'tenant code must not be empty'));
            $this->make->input('Credit Note No','credit_note_no');
            $this->make->textarea('Type Reason','other-reason-txt');
            // $this->make->input('Date & Time','datetime',null,null,array('class'=>'rOkay datetimepicker','style'=>'position:initial;'),fa('fa-calendar'));
            // $this->make->textarea('Type Reason','other-reason-txt');
            echo $this->make->code();    
        }
        public function void_order($sales_id=null,$old=false){
            $this->load->model('dine/cashier_model');
            $this->load->model('dine/items_model');
            $this->load->model('core/trans_model');
            $approver = "";
            $reason = "";
            $error = '';
            if($this->input->post('reason'))
                $reason = $this->input->post('reason');
            if($this->input->post('approver'))
                $approver = $this->input->post('approver');

            $now = $this->site_model->get_db_now();
            $user = $this->session->userdata('user');
            $user_id = $user['id'];
            $shift = $this->clock_model->get_curr_shift(date2Sql($now),$user_id);
            if(count($shift) == 0){
                $error = 'You need to start a shift before voiding.';
                echo json_encode(array('error'=>$error));
                return false;
            }
            if(!$reason || $reason == ""){
                $error = 'Please sight the reason.';
                echo json_encode(array('error'=>$error));
                return false;                
            }

            $js_rcps = array();

            if($old){
                $this->db = $this->load->database('main',true);
                    $order = $this->get_order(false,$sales_id);
                    $head = $order['order'];
                    $this->cashier_model->update_trans_sales(array('reason'=>$reason,'void_user_id'=>$approver,'inactive'=>1),$sales_id);
                $this->db = $this->load->database('default',true);
                    $trans = $this->load_trans(false,$order,true);
                    $void = $this->submit_trans(false,null,true,$sales_id);
                    // $asJson=true,$submit=null,$void=false,$void_ref=null,$cart=null,$mod_cart=null,$print=false,$split_id=null,$printKitSlip=false
                    $this->finish_trans($void['id'],true,true);
                    $this->cashier_model->update_trans_sales(array('reason'=>$reason,'void_user_id'=>$approver,'inactive'=>1),$sales_id);

                    ##for Combined
                    $wheres = array('main_sales_id'=>$sales_id);
                    $detc = $this->site_model->get_details($wheres,'combine_tables');

                    if(count($detc)>0){
                        //update inactive = 1 kasi naka 2 pag cinombine
                        $this->cashier_model->update_trans_sales(array('inactive'=>1),$detc[0]->combined_sales_id);
                        //delete na sa combone tables yun records na naka combine pa sila
                        $this->cashier_model->delete_combine_tables($detc[0]->main_sales_id);

                    }



                $this->db = $this->load->database('main',true);
                    
                    $prints = $this->print_sales_receipt($sales_id,false);
                    $print_os = $this->print_os($sales_id,false);

                    if(PRINT_VERSION && PRINT_VERSION=='V3'){
                        foreach($prints['js_rcps'] as $print){
                            $js_rcps[]=array('printer'=>$print['printer'],'value'=>$print['value']);
                        }

                        foreach($print_os['js_rcps'] as $os){
                            $js_rcps[]=array('printer'=>$os['printer'],'value'=>$os['value']);
                        }
                    }


                // if(LOCALSYNC){
                //     $this->sync_model->update_trans_sales($sales_id);
                // }


                if(MALL_ENABLED){
                    if(MALL == 'megamall'){
                        $this->sm_file($head['datetime']);
                    }elseif(MALL == 'cbmall'){
                        $void_det = $this->site_model->get_tbl('trans_sales',array('void_ref'=>$sales_id));
                        $void_ref = $void_det[0]->trans_ref;
                        $this->cb_file($head['datetime'],null,$void_ref,$sales_id,true);
                    }elseif(MALL == 'miaa'){
                        $void_det = $this->site_model->get_tbl('trans_sales',array('void_ref'=>$sales_id));
                        $void_ref = $void_det[0]->trans_ref;
                        $this->miaa_file($head['datetime'],null,$void_ref,$sales_id,true);
                    }elseif(MALL == 'araneta'){
                        $rargs["DATE(read_details.read_date) = DATE('".date2Sql($head['datetime'])."') "] = array('use'=>'where','val'=>null,'third'=>false);
                        $select = "read_details.*";
                        $results = $this->site_model->get_tbl('read_details',$rargs,array('scope_from'=>'asc'),"",true,$select);

                        $zread_id = $results[0]->id;

                        $this->araneta_trans_file($head['datetime'],$zread_id);
                    }
                }    


            }
            else{
                $order = $this->get_order_header(false,$sales_id);
                $datetime = $order['datetime'];
                if($order['paid'] == 0){
                    $this->cashier_model->update_trans_sales(array('reason'=>$reason,'void_user_id'=>$approver,'inactive'=>1),$sales_id);

                    ##for Combined
                    $wheres = array('main_sales_id'=>$sales_id);
                    $detc = $this->site_model->get_details($wheres,'combine_tables');

                    if(count($detc)>0){
                        //update inactive = 1 kasi naka 2 pag cinombine
                        $this->cashier_model->update_trans_sales(array('inactive'=>1),$detc[0]->combined_sales_id);
                        //delete na sa combone tables yun records na naka combine pa sila
                        $this->cashier_model->delete_combine_tables($detc[0]->main_sales_id);

                    }
                    
                    $prints = $this->print_sales_receipt($sales_id,false);
                    // if(LOCALSYNC){
                    //     $this->sync_model->update_trans_sales($sales_id);
                    // }
                    $print_os = $this->print_os($sales_id,false);

                    if(PRINT_VERSION && PRINT_VERSION=='V3'){
                        foreach($prints['js_rcps'] as $print){
                            $js_rcps[]=array('printer'=>$print['printer'],'value'=>$print['value']);
                        }

                        foreach($print_os['js_rcps'] as $os){
                            $js_rcps[]=array('printer'=>$os['printer'],'value'=>$os['value']);
                        }
                    }

                    if(MIGRATION_VERSION == '2'){
                        run_main_exec();
                    }
                }
                else{
                    $order = $this->get_order(false,$sales_id);
                    $trans = $this->load_trans(false,$order,true);
                    $void = $this->submit_trans(false,null,true,$sales_id);
                    $this->finish_trans($void['id'],true,true);
                    $this->cashier_model->update_trans_sales(array('reason'=>$reason,'void_user_id'=>$approver,'inactive'=>1),$sales_id);
                    $prints = $this->print_sales_receipt($sales_id,false);
                    $print_os = $this->print_os($sales_id,false);

                    ##for Combined
                    $wheres = array('main_sales_id'=>$sales_id);
                    $detc = $this->site_model->get_details($wheres,'combine_tables');

                    if(count($detc)>0){
                        //update inactive = 1 kasi naka 2 pag cinombine
                        $this->cashier_model->update_trans_sales(array('inactive'=>1),$detc[0]->combined_sales_id);
                        //delete na sa combone tables yun records na naka combine pa sila
                        $this->cashier_model->delete_combine_tables($detc[0]->main_sales_id);

                    }

                    
                    if(PRINT_VERSION && PRINT_VERSION=='V3'){
                        foreach($prints['js_rcps'] as $print){
                            $js_rcps[]=array('printer'=>$print['printer'],'value'=>$print['value']);
                        }

                        foreach($print_os['js_rcps'] as $os){
                            $js_rcps[]=array('printer'=>$os['printer'],'value'=>$os['value']);
                        }
                    }

                    if(MALL_ENABLED){
                        if(MALL == 'megamall'){
                            $this->sm_file($datetime);
                        }elseif(MALL == 'cbmall'){

                            $void_det = $this->site_model->get_tbl('trans_sales',array('void_ref'=>$sales_id));
                            $void_ref = $void_det[0]->trans_ref;
                            $this->cb_file($datetime,null,$void_ref,$sales_id,true);
                        }elseif(MALL == 'miaa'){
                            $void_det = $this->site_model->get_tbl('trans_sales',array('void_ref'=>$sales_id));
                            $void_ref = $void_det[0]->trans_ref;
                            $this->miaa_file($datetime,null,$void_ref,$sales_id,true);
                        }elseif(MALL == 'araneta'){
                            $this->araneta_trans_file($datetime,null);
                        }
                    }
                }

                // if(LOCALSYNC){
                //     $this->sync_model->update_trans_sales($sales_id);
                // }
            }

            //  if(MIGRATION_VERSION == '2'){
            //         run_main_exec();
            //         // run_master_exec();
                 
            // }

            echo json_encode(array('error'=>$error,'js_rcps'=>$js_rcps));
        }
        public function rvoid_order($sales_id=null,$old=false){
            // echo "<pre>",print_r($_POST),"</pre>";die();
            $this->load->model('dine/cashier_model');
            $this->load->model('dine/items_model');
            $this->load->model('core/trans_model');
            $approver = "";
            $reason = "";
            $credit_amount = "";
            $credit_note_no = "";
            $ref_no = "";
            $error = '';
            if($this->input->post('approver'))
                $approver = $this->input->post('approver');
            if($this->input->post('ref_no'))
                $ref_no = $this->input->post('ref_no');
            if($this->input->post('reason'))
                $reason = $this->input->post('reason');
            if($this->input->post('approver'))
                $approver = $this->input->post('approver');
            if($this->input->post('credit_amount'))
                $credit_amount = $this->input->post('credit_amount');
            if($this->input->post('credit_note_no'))
                $credit_note_no = $this->input->post('credit_note_no');
            $sid = array();
            $now = $this->site_model->get_db_now();
            $user = $this->session->userdata('user');
            $user_id = $user['id'];
            $shift = $this->clock_model->get_curr_shift(date2Sql($now),$user_id);
            if(count($shift) == 0){
                $error = 'You need to start a shift before voiding.';
                echo json_encode(array('error'=>$error));
                return false;
            }
            if(!$credit_amount || $credit_amount == ""){
                $error = 'Amount shall not be empty.';
                echo json_encode(array('error'=>$error));
                return false;                
            }
            if(!$credit_note_no || $credit_note_no == ""){
                $error = 'Credit Note # shall not be empty.';
                echo json_encode(array('error'=>$error));
                return false;                
            }
            if($sales_id){
                $this->cashier_model->update_trans_sales(array('reason'=>$reason,'void_user_id'=>$approver,'inactive'=>1),$sales_id);
                $sid = $this->cashier_model->get_reservation_sales_id($sales_id);
                $ref_no = $sid[0]->ref_no;
            }
            // echo $ref_no;die();
            $this->cashier_model->update_customer_bank_inactive(array('credit_amount'=>$credit_amount,'credit_note_no'=>$credit_note_no,'approver'=>$approver,'reason'=>$reason,'inactive'=>1),$ref_no);
            // $print = $this->print_sales_receipt($sales_id,false);
            $prints = $this->print_void_reservation($ref_no,false);

            echo json_encode(array('error'=>$error,'js_rcps'=>$prints['js_rcps']));
            // redirect(base_url()."cashier",'refresh');
        }
        public function rvoid_order_cancel($sales_id=null,$old=false){
            // echo "<pre>",print_r($_POST),"</pre>";die();
            $this->load->model('dine/cashier_model');
            $this->load->model('dine/items_model');
            $this->load->model('core/trans_model');
            $approver = "";
            $reason = "";
            $add_amount = "";
            $ref_no = "";
            $error = '';
            if($this->input->post('reason'))
                $reason = $this->input->post('reason');
            if($this->input->post('approver'))
                $approver = $this->input->post('approver');
            // if($this->input->post('add_amount'))
                // $add_amount = $this->input->post('add_amount');
            if($this->input->post('ref_no'))
                $ref_no = $this->input->post('ref_no');

            $now = $this->site_model->get_db_now();
            $user = $this->session->userdata('user');
            $user_id = $user['id'];
            $shift = $this->clock_model->get_curr_shift(date2Sql($now),$user_id);
            if(count($shift) == 0){
                $error = 'You need to start a shift before voiding.';
                echo json_encode(array('error'=>$error));
                return false;
            }
            if(!$reason || $reason == ""){
                $error = 'Please sight the reason.';
                echo json_encode(array('error'=>$error));
                return false;                
            }
                $this->db = $this->load->database('main',true);
                    $this->cashier_model->update_customer_bank_inactive(array('inactive'=>1),$ref_no);
                $this->db = $this->load->database('default',true);
                    $this->cashier_model->update_customer_bank_inactive(array('inactive'=>1),$ref_no);

            echo json_encode(array('error'=>$error));
            redirect(base_url()."cashier",'refresh');
        }
    #COUNTER TRANSACTIONS SECTION  
        public function counter($type=null,$sales_id=null,$update=''){
            $this->load->model('site/site_model');
            $this->load->model('dine/cashier_model');
            $this->load->helper('dine/cashier_helper');

            // echo $update; die();
            $to_dec = str_replace('~~','%',$type);
            $txts = rawurldecode($to_dec);
            $type = $this->encrypt->decode($txts);



            $data = $this->syter->spawn(null);
            $loaded = null;
            $order = array();
            $app_type = $type;
            $loc_res = $this->site_model->get_tbl('settings',array(),array(),null,true,'*',null,1);
            $local_tax = $loc_res[0]->local_tax;
            $kitchen_printer = "";
            if(iSetObj($loc_res[0],'kitchen_printer_name') != ""){
                $kitchen_printer = iSetObj($loc_res[0],'kitchen_printer_name');
            }

            if($sales_id != null){
                $order = $this->get_order(false,$sales_id);
                $trans = $this->load_trans(false,$order);
                $time = $trans['datetime'];
                $type = $type." #".$order['order']['sales_id'];
                $loaded = "loaded";
            }
            else{
                $trans = $this->new_trans(false,$type);
                $time = $trans['datetime'];
            }
            if(isset($order['order']))
                $order = $order['order'];
            $typeCN = sess('trans_type_cart');

            if(isset($typeCN[0]['table'])){
                $error = $this->check_tbl_activity($typeCN[0]['table'],false);
                if($error == ""){
                    $this->update_tbl_activity($typeCN[0]['table']);

                    // if(LOCALSYNC){

                    //     $this->sync_model->update_table_activity($typeCN[0]['table']);
                    // }
                }
                else{
                    site_alert($error,'error');
                    header("Location:".base_url()."cashier");
                }
            }

            $branch = $this->get_branch_details(false);
            $is_multibrand = $branch['is_multibrand'];

            $where = array('id'=>$branch['brand']);
            $bdet = $this->site_model->get_details($where,'brands');
            // $tbl_id = $details[0]->table_id;

            $brand_name = $bdet[0]->brand_name;


            $data['code'] = counterPage($type,$time,$loaded,$order,$typeCN,$local_tax,$kitchen_printer,$app_type,$is_multibrand,$update,$brand_name);
            // $data['add_css'] = 'css/cashier.css';
            $data['add_css'] = array('css/virtual_keyboard.css', 'css/cashier.css','js/typeaheadmap/typeaheadmap.css');
            $data['add_js'] = array('js/jquery.keyboard.extension-navigation.min.js','js/jquery.keyboard.min.js','js/jquery.scannerdetection.js','js/typeaheadmap/typeaheadmap.js');
            // $data['add_js'] = array('js/jquery.keyboard.extension-navigation.min.js','js/jquery.keyboard.min.js');
            $data['load_js'] = 'dine/cashier.php';
            $data['use_js'] = 'counterJs';
            $data['noNavbar'] = true;
            $this->load->view('cashier_counter',$data);
        }


        public function customer_call(){
            // $this->load->helper('dine/manager_helper');
            // $this->load->helper('core/on_screen_key_helper');
            $data = $this->syter->spawn(null,false);
            $data['code'] = "easd";
            // $data['add_css'] = array('css/pos.css','css/onscrkeys.css');
            // $data['add_js'] = array('js/on_screen_keys.js');
            $this->load->view('load',$data);
        }  
        public function food_server_call(){
            // $this->load->helper('dine/manager_helper');
            $this->load->helper('core/on_screen_key_helper');
            $data = $this->syter->spawn(null,false);
            $data['code'] = onScrNumPwdPadOnly('fs-call-pin-login');
            $data['add_css'] = array('css/pos.css','css/onscrkeys.css');
            $data['add_js'] = array('js/on_screen_keys.js');
            $this->load->view('load',$data);
        }
        public function food_server_login() {
            $pin = $this->input->post('pin');
            $employee = $this->site_model->get_tbl('users',array("pin"=>md5($pin)));
            $emp = array();
            if(count($employee) > 0){
                $em = $employee[0];
                $emp = array(
                    "emp_id"=>$em->id,
                    "emp_username"=>$em->username,
                    'full_name'=>ucwords(strtolower($em->fname." ".$em->mname." ".$em->lname." ".$em->suffix))
                );
                echo json_encode(array('success_msg'=>'Go','emp'=>$emp));
            }
            else{
                echo json_encode(array('error_msg'=>'Invalid pin','emp'=>$emp));
            }
        }
        function record_delete_line($cart=null,$id=null,$type=null,$reason=null,$man_id=null,$man_user=null) {
            $this->load->model('dine/cashier_model');
            $this->load->model('site/site_model');
            $counter = sess('counter');
            $reasons = sess('reasons');

            $wagon = $this->session->userData($cart);
            $ar = $wagon[$id];
            $log_user = $this->session->userdata('user');
            $res = array();
            $sales_id = null;
            $time = $this->site_model->get_db_now();
            $res_mod = array();

            if(count($counter['sales_id'])){
                $sales_id = $counter['sales_id'];
            }
            if($type == 'menu'){
                $trans_charge_cart = sess('trans_charge_cart');
                $menus = $this->menu_model->get_menus($ar['menu_id'],null);
                $price = 0;

                $menu_name = str_replace(" - "," ",$ar['name']);

                if($trans_charge_cart){

                    foreach ($trans_charge_cart as $charge_id => $opt) {
                        $charge_amount = $opt['amount'];
                        if($opt['absolute'] == 0){ 
                            $charge_amount = ($opt['amount'] / 100) * ($menus[0]->cost/1.12);
                        }
                        $price = ($menus[0]->cost + $charge_amount) * $ar['qty'];
                    }


                }else{
                    $price = $menus[0]->cost * $ar['qty'];
                }

                $res = array(
                    'user_id'=>$log_user['id'],
                    'manager_id'=>$man_id,
                    'type'=>$type,
                    'ref_id'=>$ar['menu_id'],
                    'ref_name'=>"line:".$id." - ".$menu_name." - qty:".$ar['qty']." - ".$price,
                    "reason"=>$reason,
                    "trans_id"=>$sales_id,
                    "datetime"=>date2Sql($time)
                );
                $mods = $this->session->userData('trans_mod_cart');
                foreach ($mods as $line_id => $mod) {
                    $result = $this->site_model->get_tbl('modifiers',array('mod_id'=>$mod['mod_id']));
                    $mod_name = str_replace(" - "," ",$mod['name']);
                    $mod_price = 0;
                    if($trans_charge_cart){

                        foreach ($trans_charge_cart as $charge_id => $opt) {
                            $charge_amount = $opt['amount'];
                            if($opt['absolute'] == 0){ 
                                $charge_amount = ($opt['amount'] / 100) * ($result[0]->cost/1.12);
                            }
                            $mod_price = ($result[0]->cost + $charge_amount) * $ar['qty'];
                        }


                    }else{
                        $mod_price = $result[0]->cost * $ar['qty'];
                    }


                    if($mod['trans_id'] == $id){
                        $res_mod[] = array(
                            'user_id'=>$log_user['id'],
                            'manager_id'=>$man_id,
                            'type'=>'mod',
                            'ref_id'=>$mod['mod_id'],
                            'ref_name'=>"menu:".$ar['menu_id']." line:".$mod['trans_id']." - ".$mod_name." - qty:".$ar['qty']." - ".$mod_price,
                            "reason"=>$reason,
                            "trans_id"=>$sales_id,
                            "datetime"=>date2Sql($time)
                        );                        
                    }
                }
            }
            else if($type == 'mod'){
                $res = array(
                    'user_id'=>$log_user['id'],
                    'manager_id'=>$man_id,
                    'type'=>$type,
                    'ref_id'=>$ar['mod_id'],
                    'ref_name'=>"menu:".$ar['menu_id']." line:".$ar['trans_id']." - ".$menu_name." - qty:".$ar['qty'],
                    "reason"=>$reason,
                    "trans_id"=>$sales_id,
                    "datetime"=>date2Sql($time)
                );
            }else if($type == 'submod'){
                $res = array(
                    'user_id'=>$log_user['id'],
                    'manager_id'=>$man_id,
                    'type'=>$type,
                    'ref_id'=>$ar['sales_submod_id'],
                    'ref_name'=>"menu:".$ar['menu_id']." line:".$ar['trans_id']." - ".$menu_name." - qty:".$ar['qty'],
                    "reason"=>$reason,
                    "trans_id"=>$sales_id,
                    "datetime"=>date2Sql($time)
                );
            }
            if(!empty($res)){
                sess_add('reasons',$res);
                if(count($res_mod) > 0){
                    foreach ($res_mod as $rmctr => $md) {
                        sess_add('reasons',$md);
                    }
                }
                // $this->cashier_model->add_reasons($res);
            }
        }
        public function get_branch_details($asJson=true){
           $this->load->model('dine/setup_model');
           $details = $this->setup_model->get_branch_details();
           $det = array();
           foreach ($details as $res) {
               $det = array(
                        "id"=>$res->branch_id,
                        "code"=>$res->branch_code,
                        "name"=>$res->branch_name,
                        "desc"=>$res->branch_desc,
                        "contact_no"=>$res->contact_no,
                        "delivery_no"=>$res->delivery_no,
                        "address"=>$res->address,
                        "base_location"=>$res->base_location,
                        "currency"=>$res->currency,
                        "tin"=>$res->tin,
                        "machine_no"=>$res->machine_no,
                        "bir"=>$res->bir,
                        "permit_no"=>$res->permit_no,
                        "serial"=>$res->serial,
                        "accrdn"=>$res->accrdn,
                        "email"=>$res->email,
                        "website"=>$res->website,
                        "pos_footer"=>$res->pos_footer,
                        "rec_footer"=>$res->rec_footer,
                        "brand"=>$res->brand,
                        "is_multibrand"=>$res->is_multibrand,
                        "layout"=>base_url().'uploads/'.$res->image
                      );
           }
           if($asJson)
                echo json_encode($det);
            else
                return $det;
        }
        public function tables($type='dinein'){
            $this->load->model('site/site_model');
            $this->load->model('dine/cashier_model');
            $this->load->helper('dine/cashier_helper');
            $this->load->helper('core/on_screen_key_helper');
            
            $to_dec = str_replace('~~','%',$type);
            $txts = rawurldecode($to_dec);
            $type = $this->encrypt->decode($txts);


            $data = $this->syter->spawn(null);
            sess_clear('trans_type_cart');
            $data['code'] = tablesPage($type);

            $data['add_css'] = array('css/cashier.css','css/onscrkeys.css','css/rtag.css');
            $data['add_js'] = array('js/on_screen_keys.js');
            $data['load_js'] = 'dine/cashier.php';
            $data['use_js'] = 'tablesJs';
            $data['noNavbar'] = true;
            $this->load->view('cashier',$data);
        }
        function transfer_tables($sales_id=null){
            $this->load->helper('dine/cashier_helper');
            $this->load->helper('core/on_screen_key_helper');
            $data = $this->syter->spawn(null,false);
            $tables = $this->get_tables_other(false,null,'dinein');
            $tbl_id = null;
            if($sales_id != null){
                $where = array('sales_id'=>$sales_id);
                $details = $this->site_model->get_details($where,'trans_sales');
                $tbl_id = $details[0]->table_id;
            }

            $data['code'] = tableTransfer($tables,$tbl_id);
            $data['add_css'] = array('css/pos.css','css/onscrkeys.css', 'css/cashier.css');
            $data['add_js'] = array('js/on_screen_keys.js');
            $data['load_js'] = 'dine/cashier';
            $data['use_js'] = 'tableTransferJs';
            $this->load->view('load',$data);
        }
        function go_transfer_table($sales_id=null,$table_id=null,$manager=""){
            $this->load->model('dine/cashier_model');
            $error = "";

            $margs['trans_sales_menus.sales_id'] = $sales_id;
            $mjoin = null;
            $resultm = $this->site_model->get_tbl('trans_sales_menus',$margs,array(),$mjoin,true,'trans_sales_menus.*');

            $menus = "";
            foreach ($resultm as $value) {
                $menus .= "|".$value->menu_id."-".$value->qty;
            }


            $args['trans_sales.sales_id'] = $sales_id;
            $join['tables'] = array('content'=>'trans_sales.table_id = tables.tbl_id','mode'=>'left');
            $result = $this->site_model->get_tbl('trans_sales',$args,array(),$join,true,'trans_sales.*, tables.name as tbl_name');

            $items = array('table_id'=>$table_id);
            $this->cashier_model->update_trans_sales($items,$sales_id);
            $where = array('tbl_id'=>$table_id);
            $new_tbl = $this->site_model->get_details($where,'tables');
            $log_user = $this->session->userdata('user');
            if($manager == ""){
                $this->logs_model->add_logs('Transfer',$log_user['id'],$log_user['full_name']." Transfer Order #".$sales_id." from ".$result[0]->tbl_name." to ".$new_tbl[0]->name,$sales_id);
            }else{
                $this->logs_model->add_logs('Transfer',$log_user['id'],$log_user['full_name']." Transfer Order #".$sales_id." from ".$result[0]->tbl_name." to ".$new_tbl[0]->name.". Aprroved by ".$manager ,$sales_id);
            }

            // echo "<pre>",print_r($log_user),"</pre>";die();
            // $time = $this->site_model->get_db_now();
            $transfer = array(
                'details'=>"Transfer Order #".$sales_id." from ".$result[0]->tbl_name." to ".$new_tbl[0]->name,
                'type'=>'Transfer',
                // 'datetime'=>$time,
                'menus'=>$menus,
                'sales_id'=>$sales_id
            );
            $this->cashier_model->add_transfer_split($transfer);

            //
            $where = array('main_tbl_id'=>$result[0]->table_id,'main_sales_id'=>$sales_id);
            $main_tbl = $this->cashier_model->get_combined_tables($where);

            if($main_tbl){
                $itms = array('main_tbl_id'=>$table_id);
                $this->cashier_model->update_combine_tables($itms,$where);
            }

            site_alert('Order #'.$sales_id." successfully transfered",'success');
        }
        public function get_tables($asJson=true,$tbl_id=null){
            $this->load->model('dine/cashier_model');
            $tbl = array();
            $occ = array();
            $comb = array();
            $set_date = date("Y-m-d");
            // echo $set_date;die();
            // date('Y-m-d H:i:s', strtotime(date
            if($tbl_id == 'null'){
                $tbl_id = null;
            }
            // $tbl_id = 1;
            // $_POST['type']='dinein';
            // if($this->input->post('type')=='dinein'){
            //     $occ_tbls = $this->cashier_model->get_occupied_tables();   
            // }else{
                $occ_tbls = $this->cashier_model->get_occupied_rtables($tbl_id,$set_date);
                // echo $this->cashier_model->db->last_query();die();
            // }
            // $this->input->post('type')=='dinein';
            $billed = array();
            foreach ($occ_tbls as $det) {
              $occ[] = $det->table_id;
            }
            foreach ($occ_tbls as $det) {
              if($det->billed == 1)
                $billed[] = $det->table_id;
            }
            $occ_com = $this->cashier_model->get_combined_tables(null);
            foreach ($occ_com as $detc) {
              $comb[] = $detc->combined_tbl_id;
            }
            $tables = $this->cashier_model->get_tables();
            // $tables = $this->cashier_model->get_tables_other($tbl_id,$type);
            foreach ($tables as $res) {
                $status = 'green';
                if(in_array($res->tbl_id, $occ)){
                    if(in_array($res->tbl_id, $billed)){
                        $status = 'orange';
                    }
                    else
                        $status = 'red';
                }
                if(in_array($res->tbl_id, $comb)){
                    $status = 'red';
                }
                $tbl[$res->tbl_id] = array(
                    "name"=> $res->name,
                    "top"=> $res->top,
                    "left"=> $res->left,
                    "stat"=> $status
                );
            }
            if($asJson)
                echo json_encode($tbl);
            else
                return $tbl;
        }
        public function get_tbl_status($asJson=true){
            $tbls = $this->get_tables(false);
            if($asJson)
                echo json_encode($tbls);
            else
                return $tbl;
        }    
        public function check_occupied_tables($asJson=true){
            $this->load->model('dine/cashier_model');
            $tbls = $this->get_tables(false);
            $occ = array();
            $ucc = array();
            foreach ($tbls as $tbl_id => $val) {
                if($val['stat']=='red'){
                    $occ[] = array('id'=>$tbl_id,'name'=>$val['name']);
                }
                else{
                    $ucc[] = array('id'=>$tbl_id,'name'=>$val['name']);
                }
            }
            
            // $tbl = array();
            // $occ = array();
            // $occ_tbls = $this->cashier_model->get_occupied_tables();
            // foreach ($occ_tbls as $det) {
            //   $occ[] = array('id'=>$det->table_id,'name'=>$det->name);
            // }

            if($asJson)
                echo json_encode(array('occ'=>$occ,'ucc'=>$ucc));
            else
                return array('occ'=>$occ,'ucc'=>$ucc);
        }
        function get_table_orders($asJson=true,$tbl_id=null){
            $this->load->model('dine/cashier_model');
            $this->load->model('site/site_model');
            $user = $this->session->userdata('user');
            $role_id = $user['role_id'];
            $set_date = date("Y-m-d");
            $from = $set_date. " 00:00:01";
            $to = $set_date. " 23:59:59";
            $args = array();
            $args["trans_sales.trans_ref  IS NULL"] = array('use'=>'where','val'=>null,'third'=>false);
            $args["trans_sales.inactive"] = 0;
            $args["trans_sales.datetime  BETWEEN '".$from."' AND '".$to."'"] = array('use'=>'where','val'=>null,'third'=>false);
            $args["trans_sales.table_id"] = $tbl_id;
            $orders = $this->cashier_model->get_trans_sales(null,$args);
            $time = $this->site_model->get_db_now();
            $this->make->sDivRow();
            $ord=array();
            foreach ($orders as $res) {
                $status = "open";
                if($res->trans_ref != "")
                    $status = "settled";
                $ord[$res->sales_id] = array(
                    "type"=>$res->type,
                    "status"=>$status,
                    "user_id"=>$res->user_id,
                    "name"=>$res->username,
                    "terminal_id"=>$res->terminal_id,
                    "terminal_name"=>$res->terminal_name,
                    "shift_id"=>$res->shift_id,
                    "datetime"=>$res->datetime,
                    "amount"=>$res->total_amount
                );
                $this->make->sDivCol(4,'left',0);
                        $this->make->sDiv(array('class'=>'order-btn','id'=>'order-btn-'.$res->sales_id,'ref'=>$res->sales_id));
                            if($res->trans_ref == null){
                                $this->make->sBox('default',array('class'=>'box-solid'));
                            }else{
                                $this->make->sBox('default',array('class'=>'box-solid bg-green'));
                            }
                                $this->make->sBoxBody();
                                    $this->make->sDivRow();
                                        $this->make->sDivCol(6);
                                            $this->make->sDiv(array('style'=>'margin-left:20px;'));
                                                $this->make->H(5,strtoupper($res->type)." #".$res->sales_id,array("style"=>'font-weight:700;'));
                                                if($res->trans_ref == null){
                                                    $this->make->H(5,strtoupper($res->username),array("style"=>'color:#888'));
                                                    $this->make->H(5,strtoupper($res->terminal_name),array("style"=>'color:#888'));
                                                }else{
                                                    $this->make->H(5,strtoupper($res->username),array("style"=>'color:#fff'));
                                                    $this->make->H(5,strtoupper($res->terminal_name),array("style"=>'color:#fff'));
                                                }
                                                $this->make->H(5,tagWord(strtoupper(ago($res->datetime,$time) ) ) );
                                            $this->make->eDiv();
                                        $this->make->eDivCol();
                                        $this->make->sDivCol(6);
                                            $this->make->H(4,'Order Total',array('class'=>'text-center'));
                                            $this->make->H(3,num($res->total_amount),array('class'=>'text-center'));
                                        $this->make->eDivCol();
                                    $this->make->eDivRow();
                                    $this->make->sDivRow();
                                        if(ORDER_SLIP_PRINTER_SETUP){
                                            if(LOCAVORE || KERMIT){
                                                $this->make->sDivCol(3);
                                                    $this->make->button(fa('fa-print fa-lg fa-fw').' RePrint Order Slip',array('id'=>'btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-teal disabled'));
                                                $this->make->eDivCol();
                                            }
                                            elseif($res->type == 'reservation'){
                                                $this->make->sDivCol(6);
                                                    $this->make->button(fa('fa-print fa-lg fa-fw').' RePrint Order Slip',array('id'=>'print-os-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-teal'));
                                                $this->make->eDivCol();
                                            }else{
                                                $this->make->sDivCol(3);
                                                    $this->make->button(fa('fa-print fa-lg fa-fw').' RePrint Order Slip',array('id'=>'print-os-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-teal'));
                                                $this->make->eDivCol();
                                            }
                                            if(ORDERING_STATION){
                                                if(LOCAVORE){
                                                    $this->make->sDivCol(4);
                                                        $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange disabled'));
                                                    $this->make->eDivCol();
                                                }else{
                                                    $this->make->sDivCol(3);
                                                        $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange','locavore'=>'no'));
                                                    $this->make->eDivCol();
                                                    $this->make->sDivCol(3);
                                                        $this->make->button(fa('fa-exchange fa-lg fa-fw').' Combine Table',array('id'=>'combine-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'combine-btns btn-block tables-btn-orange','locavore'=>'no'));
                                                    $this->make->eDivCol();

                                                }
                                            }else{
                                                if($role_id == SERVER_ID){
                                                    if(LOCAVORE){
                                                        $this->make->sDivCol(4);
                                                            $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange disabled'));
                                                        $this->make->eDivCol();
                                                    }else{
                                                        $this->make->sDivCol(3);
                                                            $this->make->button('Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange','locavore'=>'no'));
                                                        $this->make->eDivCol();

                                                        $this->make->sDivCol(3);
                                                            $this->make->button('Combine Table',array('id'=>'combine-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'combine-btns btn-block tables-btn-orange','locavore'=>'no'));
                                                        $this->make->eDivCol();
                                                    }
                                                }else{
                                                    if(LOCAVORE){
                                                        $this->make->sDivCol(4);
                                                            $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange','locavore'=>'yes'));
                                                        $this->make->eDivCol();
                                                    }
                                                    elseif($res->type == 'reservation'){
                                                        $this->make->sDivCol(6);
                                                            $this->make->button(fa('fa-check fa-lg fa-fw').' SUBMIT',array('id'=>'rhold-all-btn','class'=>'btn-block counter-btn-green double hidden','style'=>'height:62px!important;'));
                                                        $this->make->eDivCol();
                                                    }
                                                    else{
                                                        $this->make->sDivCol(3);
                                                            $this->make->button('Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange','locavore'=>'no'));
                                                        $this->make->eDivCol();

                                                        $this->make->sDivCol(3);
                                                            $this->make->button('Combine Table',array('id'=>'combine-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'combine-btns btn-block tables-btn-orange','locavore'=>'no'));
                                                        $this->make->eDivCol();
                                                    }
                                                }
                                            }
                                            if($res->type == 'reservation'){
                                                $this->make->sDivCol(6);
                                                    $this->make->button(fa('fa-print fa-lg fa-fw').' Print Billing',array('id'=>'print-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-green'));
                                                $this->make->eDivCol();
                                            }else{
                                                $this->make->sDivCol(3);
                                                    $this->make->button(fa('fa-print fa-lg fa-fw').' Print Billing',array('id'=>'print-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-green'));
                                                $this->make->eDivCol();
                                            }
                                        }
                                        else{
                                            if(ORDERING_STATION){
                                                if(LOCAVORE){
                                                    $this->make->sDivCol(6);
                                                        $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange disabled'));
                                                    $this->make->eDivCol();
                                                }else{
                                                    $this->make->sDivCol(6);
                                                        $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange','locavore'=>'no'));
                                                    $this->make->eDivCol();
                                                }
                                            }else{
                                                if($role_id == SERVER_ID){
                                                    if(LOCAVORE){
                                                        $this->make->sDivCol(6);
                                                            $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange disabled'));
                                                        $this->make->eDivCol();
                                                    }else{
                                                        $this->make->sDivCol(6);
                                                            $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange','locavore'=>'no'));
                                                        $this->make->eDivCol();
                                                    }
                                                }else{
                                                    if(LOCAVORE){
                                                        $this->make->sDivCol(6);
                                                            $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange','locavore'=>'yes'));
                                                        $this->make->eDivCol();
                                                    }else{
                                                        $this->make->sDivCol(6);
                                                            $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange','locavore'=>'no'));
                                                        $this->make->eDivCol();
                                                    }
                                                }
                                            }
                                            $this->make->sDivCol(6);
                                                $this->make->button(fa('fa-print fa-lg fa-fw').' Print Billing',array('id'=>'print-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-green'));
                                            $this->make->eDivCol();
                                        }
                                    $this->make->eDivRow();
                                $this->make->eBoxBody();
                            $this->make->eBox();
                        $this->make->eDiv();
                $this->make->eDivCol();
            }
            $this->make->eDivRow();
            $code = $this->make->code();
            echo json_encode(array('code'=>$code,'ids'=>$ord));
        }
        function get_charges($asJson=true){
            $this->load->model('dine/cashier_model');
            $this->load->model('dine/settings_model');
            $charges = $this->settings_model->get_charges();
            $discs = array();
            $this->make->sDivRow();
                foreach ($charges as $res) {
                    if($res->inactive != 1){
                        $text = num($res->charge_amount);
                        if($res->absolute == 0){
                            $text .= " %";
                        }
                        $this->make->sDivCol(12);
                            $this->make->button("[".strtoupper($res->charge_code)."] ".strtoupper($res->charge_name)." <br> ".$text,
                                                array('id'=>'charges-btn-'.$res->charge_id,'class'=>'disc-btn-row btn-block counter-btn-orange double'));
                        $this->make->eDivCol();
                        $ids[$res->charge_id] = array(
                            "charge_code"=>$res->charge_code,
                            "charge_name"=>$res->charge_name,
                            "charge_amount"=>$res->charge_amount,
                            "no_tax"=>$res->no_tax,
                            "absolute"=>$res->absolute
                        );
                    }
                }

                 $this->make->sDivCol(12,'left');
                                    $this->make->button(fa('fa-times fa-lg fa-fw').' CLOSE',array('id'=>'','class'=>'btn-block counter-btn-green double transactions-close-btn'));
                                $this->make->eDivCol();
            $this->make->eDivRow();
            $code = $this->make->code();
            echo json_encode(array('code'=>$code,'ids'=>$ids));
        }
        public function get_discounts($asJson=true){
            $this->load->model('dine/cashier_model');
            $this->load->model('dine/settings_model');
            $trans_disc_cart = sess('trans_disc_cart');
            $typeCN = sess('trans_type_cart');
            $discounts = $this->settings_model->get_receipt_discounts();
            $discs = array();
            $this->make->sDivRow();
                foreach ($discounts as $res) {
                    if($res->inactive != 1){
                        $this->make->sDivCol(12);
                            $this->make->button("[".strtoupper($res->disc_code)."] ".strtoupper($res->disc_name),array('id'=>'item-disc-btn-'.$res->disc_code,'class'=>'disc-btn-row btn-block counter-btn-green'));
                        $this->make->eDivCol();
                        $ids[$res->disc_code] = array(
                            "disc_code"=>$res->disc_code,
                            "disc_id"=>$res->disc_id,
                            "disc_name"=>$res->disc_name,
                            "disc_rate"=>$res->disc_rate,
                            "fix"=>$res->fix,
                            "no_tax"=>$res->no_tax
                        );
                        $guest = null;
                        if(isset($typeCN[0]['guest'])){
                            $ids[$res->disc_code]['guest'] = $typeCN[0]['guest'];
                        }else{
                             $ids[$res->disc_code]['guest'] = 1;
                        }
                        if(isset($trans_disc_cart[$res->disc_code])){
                            $row = $trans_disc_cart[$res->disc_code];
                            $ids[$res->disc_code]['guest'] = $row['guest'];
                            $ids[$res->disc_code]['disc_type'] = $row['disc_type'];
                            foreach ($row['persons'] as $code => $per) {
                                $ids[$res->disc_code]['persons'][$code] = array(
                                    'name' => $per['name'],
                                    'code' => $per['code'],
                                    'bday' => $per['bday']
                                );
                            }
                        }
                    }
                }
            $this->make->eDivRow();
            $code = $this->make->code();

            echo json_encode(array('code'=>$code,'ids'=>$ids));
        }
        public function remove_person_disc($disc=null,$code=null){
            $trans_disc_cart = sess('trans_disc_cart');
            $persons = array();
            if(isset($trans_disc_cart[$disc]['persons'])){
             $persons = $trans_disc_cart[$disc]['persons'];
            }
            unset($persons[$code]);
            $trans_disc_cart[$disc]['persons'] = $persons;
            sess_initialize('trans_disc_cart',$trans_disc_cart);
            echo json_encode($trans_disc_cart[$disc]);
        }
        public function remove_person_disc_line($disc=null,$code=null){
            $person_disc_cart = sess('person_disc_cart');
            $item_discount = sess('item_discount');
            $trans_cart = sess('trans_cart');
            $affeted_row = array();
            if($item_discount){
                foreach($item_discount as $line_id => $vv){
                    if($vv['code'] == $code){
                        unset($item_discount[$line_id]);
                        sess_initialize('item_discount',$item_discount);

                        $affeted_row[$line_id] = array('def_amt'=>$trans_cart[$line_id]['qty'] * $trans_cart[$line_id]['cost']);
                    }
                }
            }

            // echo $affeted_row; die();
            // $this->session->set_userData('item_discount',$disc);
            // $persons = array();
            // if(isset($person_disc_cart[$code])){
            //     $persons = $person_disc_cart[$code];
            // }
            unset($person_disc_cart[$code]);
            // $person_disc_cart = $persons;
            sess_initialize('person_disc_cart',$person_disc_cart);
            echo json_encode(array('affeted_row'=>$affeted_row));
        }
        public function load_disc_persons($disc=null){
            $trans_disc_cart = sess('trans_disc_cart');
                $persons = array();
            if(isset($trans_disc_cart[$disc]['persons'])){
                $persons = $trans_disc_cart[$disc]['persons'];
            }
            $this->make->sUl();
            $items = array();
            foreach ($persons as $res) {
                $this->make->sLi(array('id'=>'disc-person-'.$res['code'],'class'=>'disc-person','style'=>'padding:5px;padding-bottom:10px;padding-top:10px;border-bottom:1px solid #ddd;'));
                    $link = $this->make->A(fa('fa-times fa-lg'),'#',array('id'=>'disc-person-rem-'.$res['code'],'class'=>'pull-right','return'=>true));            
                    $this->make->H(4,fa('fa-credit-card')." ".$res['code']." - ".fa('fa-user')." ".$res['name']." ".$res['bday']." ".$link,array('style'=>'margin:0;padding:0;margin-left:10px;'));
                $this->make->eLi();    
                $items[$res['code']] = array(
                    "name"=> $res['code'],
                    "bday"=> $res['bday'],
                    "disc"=> $disc
                );
            }
            $this->make->eUl();
            $code = $this->make->code();
            echo json_encode(array('code'=>$code,'items'=>$items));
        }
        public function load_disc_line_persons($disc=null){
            // $trans_disc_cart = sess('trans_disc_cart');
            $person_disc_cart = sess('person_disc_cart');
            $persons = array();
            if(isset($person_disc_cart)){
                // $persons = $trans_disc_cart[$disc]['persons'];
                foreach ($person_disc_cart as $key => $value) {
                    if($value['disc_code'] == $disc){
                        $persons[$key] = array(
                            "code"=> $value['code'],
                            "name"=> $value['name'],
                            "bday"=> null,
                        );
                    }
                }

            }
            // echo "<pre>",print_r($persons),"</pre>";die();
            $this->make->sUl();
            $items = array();
            foreach ($persons as $res) {
                // if($disc == $res['disc_code']){
                    $this->make->sLi(array('id'=>'disc-person-'.$res['code'],'class'=>'disc-person','style'=>'padding:5px;padding-bottom:10px;padding-top:10px;border-bottom:1px solid #ddd;','code'=>$res['code'],'sname'=>$res['name'],'bday'=>$res['bday']));
                        $link = $this->make->A(fa('fa-times fa-lg'),'#',array('id'=>'disc-person-rem-'.$res['code'],'class'=>'pull-right','return'=>true));            
                        $this->make->H(4,fa('fa-credit-card')." ".$res['code']." - ".fa('fa-user')." ".$res['name']." ".$res['bday']." ".$link,array('style'=>'margin:0;padding:0;margin-left:10px;'));
                    $this->make->eLi();    
                    $items[$res['code']] = array(
                        "name"=> $res['code'],
                        "bday"=> $res['bday'],
                        "disc"=> $disc
                    );
                // }
            }
            $this->make->eUl();
            $code = $this->make->code();
            echo json_encode(array('code'=>$code,'items'=>$items));
        }
        public function add_person_disc(){
           $trans_disc_cart = sess('trans_disc_cart');
           $okay = true;
           if($trans_disc_cart){
                foreach ($trans_disc_cart as $key => $value) {
                    if($key == 'PWDISC' || $key == 'SNDISC'){
                        // echo 'aaa'.$this->input->post('disc-disc-code');
                        if($this->input->post('disc-disc-code') == 'PWDISC' || $this->input->post('disc-disc-code') == 'SNDISC'){
                            // echo 'aaaaaa2222';
                            // $okay = true;
                        }else{
                            // echo 'bbb3333';
                            $okay = false;
                        }
                    }else{
                        // echo 'sss';
                        if($this->input->post('disc-disc-code') == 'PWDISC' || $this->input->post('disc-disc-code') == 'SNDISC'){
                            $okay = false;
                        }
                    }
                }
           }

            $persons = array();
            if(isset($trans_disc_cart[$this->input->post('disc-disc-code')]['persons'])){
                $persons = $trans_disc_cart[$this->input->post('disc-disc-code')]['persons'];
                $trans_disc_cart[$this->input->post('disc-disc-code')]['guest'] = $this->input->post('guests');
            }
           // var_dump($okay);
            if(!$okay){
                $error = "Cannot Add Double Discounts.";
            }else{

               $error = "";
               $items = array();
               $bday = null;
               // var_dump($persons);

                if($this->input->post('disc-cust-bday'))
                    $bday = $this->input->post('disc-cust-bday');
               
                if(!isset($persons[$this->input->post('disc-cust-code')])){
                    if(count($persons) >= $this->input->post('guests')){
                        $error = "Person is in limit with the no of guest.";
                    }
                    else{
                        // echo $this->input->post('disc-disc-code');
                        // if($this->input->post('disc-disc-code') != 'PWDISC' && $this->input->post('disc-disc-code') != 'SNDISC'){
                    
                        //     if(count($persons) > 0){
                        //         $error = "Cannot Add More Discounts.";
                        //     }else{
                        //         $persons[$this->input->post('disc-cust-code')] = array(
                        //             "name"  => $this->input->post('disc-cust-name'),
                        //             "code"  => $this->input->post('disc-cust-code'),
                        //             "bday"  => $bday
                        //         );
                        //     }
                        // }else{
                            $persons[$this->input->post('disc-cust-code')] = array(
                                "name"  => $this->input->post('disc-cust-name'),
                                "code"  => $this->input->post('disc-cust-code'),
                                "bday"  => $bday
                            );                    
                            
                        // }
                    }
                }
                else{
                    $error = "Person is Already added.";
                }

                $trans_disc_cart[$this->input->post('disc-disc-code')]['persons'] = $persons;
                sess_initialize('trans_disc_cart',$trans_disc_cart);
            }

            $this->make->sUl(array());
            $items = array();
            foreach ($persons as $res) {
                $this->make->sLi(array('id'=>'disc-person-'.$res['code'],'class'=>'disc-person','style'=>'padding:5px;padding-bottom:10px;padding-top:10px;border-bottom:1px solid #ddd;'));
                    $link = $this->make->A(fa('fa-times fa-lg'),'#',array('id'=>'disc-person-rem-'.$res['code'],'class'=>'pull-right','return'=>true));            
                    $this->make->H(4,fa('fa-credit-card')." ".$res['code']." - ".fa('fa-user')." ".$res['name']." ".$res['bday']." ".$link,array('style'=>'margin:0;padding:0;margin-left:10px;'));
                $this->make->eLi();   
                $items[$res['code']] = array(
                    "name"=> $res['code'],
                    "bday"=> $res['bday'],
                    "disc"=> $this->input->post('disc-disc-code')
                );
            }
            $this->make->eUl();
            $code = $this->make->code();
            echo json_encode(array('code'=>$code,'items'=>$items,'error'=>$error));
        }
        public function add_person_disc_line(){
           $trans_disc_cart = sess('trans_disc_cart');
           $okay = true;
           if($trans_disc_cart){
                foreach ($trans_disc_cart as $key => $value) {
                    if($key == 'PWDISC' || $key == 'SNDISC'){
                        // echo 'aaa'.$this->input->post('disc-disc-code');
                        if($this->input->post('disc-disc-code') == 'PWDISC' || $this->input->post('disc-disc-code') == 'SNDISC'){
                            // echo 'aaaaaa2222';
                            // $okay = true;
                        }else{
                            // echo 'bbb3333';
                            $okay = false;
                        }
                    }else{
                        // echo 'sss';
                        if($this->input->post('disc-disc-code') == 'PWDISC' || $this->input->post('disc-disc-code') == 'SNDISC'){
                            $okay = false;
                        }
                    }
                }
           }

            $persons = array();
            if($this->session->userData('person_disc_cart')){
                $persons = $this->session->userData('person_disc_cart');
            }
           // var_dump($okay);

            // $default_guest = $this->input->post('guests');
            // $person_count = count($persons);

            // if($person_count == $default_guest){
            //     $error = "Cannot Add More Guest";
            // }else{
                if(!$okay){
                    $error = "Cannot Add Double Discounts.";
                }else{

                   $error = "";
                   $items = array();
                   $bday = null;
                   $remarks = null;
                   // var_dump($persons);

                    if($this->input->post('disc-cust-bday'))
                        $bday = $this->input->post('disc-cust-bday');

                    if($this->input->post('disc-cust-remarks'))
                        $remarks = $this->input->post('disc-cust-remarks');
                   
                    if(!isset($persons[$this->input->post('disc-cust-code')])){
                        // if(count($persons) >= $this->input->post('guests')){
                        //     $error = "Person is in limit with the no of guest.";
                        // }
                        // else{
                            // echo $this->input->post('disc-disc-code');
                            // if($this->input->post('disc-disc-code') != 'PWDISC' && $this->input->post('disc-disc-code') != 'SNDISC'){
                        
                            //     if(count($persons) > 0){
                            //         $error = "Cannot Add More Discounts.";
                            //     }else{
                            //         $persons[$this->input->post('disc-cust-code')] = array(
                            //             "name"  => $this->input->post('disc-cust-name'),
                            //             "code"  => $this->input->post('disc-cust-code'),
                            //             "bday"  => $bday
                            //         );
                            //     }
                            // }else{
                                $persons[$this->input->post('disc-cust-code')] = array(
                                    "name"  => $this->input->post('disc-cust-name'),
                                    "code"  => $this->input->post('disc-cust-code'),
                                    "disc_code"  => $this->input->post('type'),
                                    "remarks"  => $remarks,
                                    "bday"  => null
                                );                    
                                
                            // }
                        // }
                    }
                    else{
                        $error = "Person is Already added.";
                    }

                    // $trans_disc_cart[$this->input->post('disc-disc-code')]['persons'] = $persons;
                    // sess_initialize('trans_disc_cart',$trans_disc_cart);
                    
                    sess_initialize('person_disc_cart',$persons);
                    // echo "<pre>",print_r($persons),"</pre>";
                }
            // }



            $this->make->sUl(array());
            $items = array();
            foreach ($persons as $res) {
                if($res['disc_code'] == $this->input->post('type')){
                    $this->make->sLi(array('id'=>'disc-person-'.$res['code'],'class'=>'disc-person','style'=>'padding:5px;padding-bottom:10px;padding-top:10px;border-bottom:1px solid #ddd;','code'=>$res['code'],'sname'=>$res['name'],'bday'=>$res['bday'],'remarks'=>$res['remarks']));
                        $link = $this->make->A(fa('fa-times fa-lg'),'#',array('id'=>'disc-person-rem-'.$res['code'],'class'=>'pull-right','return'=>true));            
                        $this->make->H(4,fa('fa-credit-card')." ".$res['code']." - ".fa('fa-user')." ".$res['name']." ".$res['bday']." ".$link,array('style'=>'margin:0;padding:0;margin-left:10px;'));
                    $this->make->eLi();   
                    $items[$res['code']] = array(
                        "name"=> $res['code'],
                        "bday"=> $res['bday'],
                        "disc"=> $this->input->post('disc-disc-code'),
                        "remarks"=> $remarks
                    );
                }
            }
            $this->make->eUl();
            $code = $this->make->code();
            echo json_encode(array('code'=>$code,'items'=>$items,'error'=>$error));
        }
        public function add_trans_disc(){
           $trans_disc_cart = sess('trans_disc_cart');
           $disc_cart = array();
           $error = "";
           if(isset($trans_disc_cart[$this->input->post('disc-disc-code')])){
            $disc_cart = $trans_disc_cart[$this->input->post('disc-disc-code')];
           }
           if($this->input->post('guests') > 0){
            if(isset($disc_cart['persons']) && count($disc_cart['persons']) <= $this->input->post('guests')){
                $disc_cart['guest'] =  $this->input->post('guests'); 
                $disc_cart['disc_rate'] =  $this->input->post('disc-disc-rate'); 
                $disc_cart['disc_code'] =  $this->input->post('disc-disc-code'); 
                $disc_cart['disc_id'] =  $this->input->post('disc-disc-id'); 
                $disc_cart['disc_type'] =  $this->input->post('type'); 
                $disc_cart['no_tax'] =  $this->input->post('disc-no-tax'); 
                $disc_cart['fix'] =  $this->input->post('disc-fix'); 
                $trans_disc_cart[$this->input->post('disc-disc-code')] = $disc_cart;
                sess_initialize('trans_disc_cart',$trans_disc_cart);
                // echo var_dump($trans_disc_cart);
            }
            else{
                $error = "Invalid No. of Persons";
            }
           }
           else{
            $error = "Invalid total No. Of Guests";
           }
           echo json_encode(array('error'=>$error));
        }
        public function del_trans_disc($disc_code=null){
           $trans_disc_cart = sess('trans_disc_cart');
           unset($trans_disc_cart[$disc_code]);
           sess_initialize('trans_disc_cart',$trans_disc_cart);
        }
        public function update_tbl_activity($tbl_id=null,$remove=false){
             //  if(LOCALSYNC){
             //    $this->load->model('core/sync_model');
             // }
            $active = $this->site_model->get_db_now();
            if(!$remove){
                $items = array(
                    'tbl_id'=>$tbl_id,
                    'pc_id'=>PC_ID,
                    'last_activity'=>date2SqlDateTime($active)
                );
                $res = $this->site_model->get_tbl('table_activity',array('tbl_id'=>$tbl_id,'pc_id'=>PC_ID));
                if(count($res)>0){
                    $this->site_model->update_tbl('table_activity','id',$items,$res[0]->id);     
                    // if(LOCALSYNC){
                    //     $this->sync_model->update_table_activity($res[0]->id);
                    // }          
                }
                else{
                    $log_id = $this->site_model->add_tbl('table_activity',$items); 
                    // if(LOCALSYNC){
                    //     $this->sync_model->update_table_activity($log_id);
                    // }   

                }        
            }
            else{
                $this->site_model->delete_tbl('table_activity',array('pc_id'=>PC_ID));

                   // if(LOCALSYNC){
                   //      $this->sync_model->delete_table_activity(PC_ID);
                   //  }  
            }
        }
        public function check_tbl_activity($tbl_id=null,$asJson=true){
            $error = "";
            $res = $this->site_model->get_tbl('table_activity',array('tbl_id'=>$tbl_id));
            if(count($res)>0){
                $error = "TERMINAL ".$res[0]->pc_id." is currently editing this table";            
            }
            else{
                $error = "";
            }
            if($asJson){
                echo json_encode(array('error'=>$error));
            }
            else{
                return $error;
            }
        }
        public function check_ifcombined($tbl_id=null){
            $data = "";
            $main_tbl_id = "";
            $main_tbl_name = "";
            $res = $this->site_model->get_tbl('combine_tables',array('combined_tbl_id'=>$tbl_id));
            if(count($res)>0){
                $data = "combined";  
                $main_tbl_id = $res[0]->main_tbl_id;
                $where = array('tbl_id'=>$main_tbl_id);
                $gdet = $this->site_model->get_details($where,'tables');
                $main_tbl_name = $gdet[0]->name;       
            }
            
            echo json_encode(array('data'=>$data,'main_tbl_id'=>$main_tbl_id,'main_tbl_name'=>$main_tbl_name));
            
        }
        public function combine($type=null,$sales_id=null){
            $this->load->model('site/site_model');
            $this->load->model('dine/cashier_model');
            $this->load->helper('dine/cashier_helper');

            $to_dec = str_replace('~~','%',$sales_id);
            $txts = rawurldecode($to_dec);
            $sales_id = $this->encrypt->decode($txts);

            sess_clear('trans_combine_cart');
            $data = $this->syter->spawn(null);
            $order = $this->get_order(false,$sales_id);
            $trans = $this->load_trans(false,$order,false,true);
            $time = $trans['datetime'];
            $type = $type." #".$order['order']['sales_id'];
            sess_add('trans_combine_cart',array('sales_id'=>$order['order']['sales_id'],'balance'=>$order['order']['balance']));

            $data['code'] = combinePage($type,$time,$order['order']);
            $data['add_css'] = 'css/cashier.css';
            $data['load_js'] = 'dine/cashier.php';
            $data['use_js'] = 'combineJs';
            $data['noNavbar'] = true;
            $this->load->view('cashier',$data);
        }
        public function save_combine($manager=""){
            $trans_combine_cart = sess('trans_combine_cart');
            // echo "<pre>",print_r($trans_combine_cart),"</pre>";die();
            $main_sales_id = null;
            $main_tbl_id = null;
            $trans_cart = array();
            $trans_mod_cart = array();
            $trans_submod_cart = array();
            $ctr = 1;
            $liner = 0;
            $new_guest_count = 0;
            foreach ($trans_combine_cart as $key => $co) {
                $sales_id = $co['sales_id'];
                $order = $this->get_order(false,$sales_id);
                $header = $order['order'];
                // echo $header['guest'].'----';
                $new_guest_count += $header['guest'];
                $trans_type = $header['type'];
                // echo $trans_type;
                // $no_charge = 0;
                // if($trans_type == 'takeout'){
                //     $no_charge = 1;
                // }
                $details = $order['details'];
                $com = "";
                if($ctr == 1){
                    $main_sales_id = $sales_id;
                    $main_tbl_id = $header['table_id'];
                    foreach ($details as $line_id => $menu){
                        $trans_cart[$line_id] = array(
                            "menu_id"=> $menu['menu_id'],
                            "name"=> $menu['name'],
                            "cost"=> $menu['price'],
                            "qty"=> $menu['qty'],
                            "remarks"=> $menu['remarks'],
                            "nocharge"=> $menu['nocharge'],
                            "is_takeout"=> $menu['is_takeout'],
                            "no_tax"=> $menu['no_tax'],
                            "kitchen_slip_printed"=> $menu['kitchen_slip_printed'],
                        );
                        if(count($menu['modifiers']) > 0){
                            foreach ($menu['modifiers'] as $mod) {
                                if($mod['line_id'] == $line_id){
                                    $trans_mod_cart[] = array(
                                        "trans_id"=>$mod['line_id'],
                                        "mod_id"=>$mod['id'],
                                        "menu_id"=>$menu['menu_id'],
                                        "menu_name"=>$menu['name'],
                                        "mod_group_id"=>$mod['mod_group_id'],
                                        "name"=>$mod['name'],
                                        "cost"=>$mod['price'],
                                        "qty"=>$mod['qty'],
                                        "kitchen_slip_printed"=>$mod['kitchen_slip_printed'],
                                    );

                                    $mod_line_id = max(array_keys($trans_mod_cart));

                                    if(count($mod['submodifiers']) > 0){
                                        // $submods = array();
                                        foreach ($mod['submodifiers'] as $submod) {
                                            if($submod['mod_line_id'] == $mod['mod_line_id']){
                                                $trans_submod_cart[$submod['sales_submod_id']] = array(
                                                    "trans_id"=>$mod['line_id'],
                                                    "mod_id"=>$submod['mod_id'],
                                                    "sales_submod_id"=>$submod['sales_submod_id'],
                                                    // "mod_group_id"=>$mod->mod_group_id,
                                                    "line_id"=>$submod['line_id'],
                                                    "name"=>$submod['name'],
                                                    "price"=>$submod['price'],
                                                    "qty"=>$submod['qty'],
                                                    // "discount"=>$mod->discount,
                                                    "mod_line_id"=>$mod_line_id,
                                                    "sales_mod_id"=>$mod['sales_mod_id'],
                                                    "kitchen_slip_printed"=>$submod['kitchen_slip_printed']
                                                );
                                            }
                                        }

                                        // $mods[$mod->sales_mod_id]['submodifiers'] = $submods;
                                    }

                                    


                                }
                            }#END FOR EACH
                        }#END IF
                        $liner = $line_id;
                    }#END MAIN FOR EACH
                }
                else{
                    $com_tbl_id = $header['table_id'];
                    foreach ($details as $line_id => $menu){
                        $liner++;
                        $trans_cart[$liner] = array(
                            "menu_id"=> $menu['menu_id'],
                            "name"=> $menu['name'],
                            "cost"=> $menu['price'],
                            "qty"=> $menu['qty'],
                            "remarks"=> $menu['remarks'],
                            "nocharge"=> $menu['nocharge'],
                            "is_takeout"=> $menu['is_takeout'],
                            "no_tax"=> $menu['no_tax'],
                            "kitchen_slip_printed"=> $menu['kitchen_slip_printed'],
                        );
                        if(count($menu['modifiers']) > 0){
                            foreach ($menu['modifiers'] as $mod) {
                                if($mod['line_id'] == $line_id){
                                    $trans_mod_cart[] = array(
                                        "trans_id"=>$liner,
                                        "mod_id"=>$mod['id'],
                                        "menu_id"=>$menu['menu_id'],
                                        "menu_name"=>$menu['name'],
                                        "mod_group_id"=>$mod['mod_group_id'],
                                        "name"=>$mod['name'],
                                        "cost"=>$mod['price'],
                                        "qty"=>$mod['qty'],
                                        "kitchen_slip_printed"=>$mod['kitchen_slip_printed'],
                                    );

                                    $mod_line_id = max(array_keys($trans_mod_cart));

                                    if(count($mod['submodifiers']) > 0){
                                        // $submods = array();
                                        foreach ($mod['submodifiers'] as $submod) {
                                            if($submod['mod_line_id'] == $mod['mod_line_id']){
                                                $trans_submod_cart[$submod['sales_submod_id']] = array(
                                                    "trans_id"=>$mod['line_id'],
                                                    "mod_id"=>$submod['mod_id'],
                                                    "sales_submod_id"=>$submod['sales_submod_id'],
                                                    // "mod_group_id"=>$mod->mod_group_id,
                                                    "line_id"=>$submod['line_id'],
                                                    "name"=>$submod['name'],
                                                    "price"=>$submod['price'],
                                                    "qty"=>$submod['qty'],
                                                    // "discount"=>$mod->discount,
                                                    "mod_line_id"=>$mod_line_id,
                                                    "sales_mod_id"=>$mod['sales_mod_id'],
                                                    "kitchen_slip_printed"=>$submod['kitchen_slip_printed']
                                                );
                                            }
                                        }

                                        // $mods[$mod->sales_mod_id]['submodifiers'] = $submods;
                                    }


                                }
                            }#END FOR EACH
                        }#END IF
                    }#END MAIN FOR EACH
                    $this->cashier_model->update_trans_sales(array('inactive'=>2,'reason'=>'combined to receipt# '.$main_sales_id),$sales_id);
                    $com .= $sales_id.",";

                    $combines = array(
                        'main_sales_id'=>$main_sales_id,
                        'main_tbl_id'=>$main_tbl_id,
                        'combined_sales_id'=>$sales_id,
                        'combined_tbl_id'=>$com_tbl_id
                    );
                    $this->cashier_model->add_combine_tables($combines);


                }#END IF
                $ctr++;
            }
            // echo "<pre>",print_r($trans_submod_cart),"</pre>";die();

            $trans_type_cart = sess('trans_type_cart');
            $trans_type_cart[0]['guest'] = $new_guest_count;
            sess_initialize('trans_type_cart',$trans_type_cart);

            $sale = $this->submit_trans(false,null,false,null,$trans_cart,$trans_mod_cart,false,null,false,$trans_submod_cart);
            $com = substr($com, 0,-1);
            site_alert('Success! Reciept #'.$com.' combined to reciept#'.$sale['id'],'success');

            //for menu record of combine
            $menus = "";
            foreach ($trans_cart as $kk =>$value) {
                $menus .= "|".$value['menu_id']."-".$value['qty'];
            }
            $details = "Combined Reciept #".$com.' to reciept#'.$sale['id'];
           
            $transfer = array(
                'details'=>$details,
                'type'=>'Combine',
                // 'datetime'=>$time,
                'menus'=>$menus,
                'sales_id'=>$sale['id']
            );
            $this->cashier_model->add_transfer_split($transfer);

            $log_user = $this->session->userdata('user');
            if($manager == ""){
                $this->logs_model->add_logs('Combine',$log_user['id'],$log_user['full_name']." combined Reciept #".$com.' to reciept#'.$sale['id'].'.');
            }else{
                $this->logs_model->add_logs('Combine',$log_user['id'],$log_user['full_name']." combined Reciept #".$com.' to reciept#'.$sale['id'].'. Approved by '.$manager);
            }
        }
        public function split($type=null,$sales_id=null){
            $this->load->model('site/site_model');
            $this->load->model('dine/cashier_model');
            $this->load->helper('dine/cashier_helper');

            $to_dec = str_replace('~~','%',$sales_id);
            $txts = rawurldecode($to_dec);
            $sales_id = $this->encrypt->decode($txts);

            sess_clear('trans_split_cart');
            $data = $this->syter->spawn(null);
            $order = $this->get_order(false,$sales_id);
            $trans = $this->load_trans(false,$order,false,true);
            $time = $trans['datetime'];
            $type = $type." #".$order['order']['sales_id'];
            $data['code'] = splitPage($type,$time,$sales_id,$order['order']);
            $data['add_css'] = 'css/cashier.css';
            $data['load_js'] = 'dine/cashier.php';
            $data['use_js'] = 'splitJs';
            $data['noNavbar'] = true;
            $this->load->view('cashier',$data);
        }
        public function save_split($id=null,$manager=""){
            $trans_split_cart = sess('trans_split_cart');
            $trans_cart = sess('trans_cart');
            $trans_mod_cart = sess('trans_mod_cart');


            $ctr = 1;
            $error = "";
            foreach ($trans_cart as $trans_id => $tr) {
                if($tr['qty'] > 0){
                    $error = "Please Assign All Items";
                    break;
                }
            }

            if($error == ""){
                $split_into = "";

                foreach ($trans_split_cart as $num => $row) {
                    
                    if($ctr > 1){
                        $counter = sess('counter');
                        unset($counter['sales_id']);
                        $this->session->set_userData('counter',$counter);
                    }
                    $sale = $this->submit_trans(false,null,false,null,$row,null,false,$id);
                    //remove auto print of billing on split
                    // $this->print_sales_receipt($sale['id'],false);

                    // echo "<pre>",print_r($row),"</pre>";die();
                    $menus = "";
                    foreach ($row as $kk =>$value) {
                        $menus .= "|".$value['menu_id']."-".$value['qty'];
                    }
                    if($ctr == 1){
                        $details = "Split into Order #".$sale['id'];
                    }else{
                        $details = "Split into Order #".$sale['id']." from Order #".$id;
                    }
                    $transfer = array(
                        'details'=>$details,
                        'type'=>'Split',
                        // 'datetime'=>$time,
                        'menus'=>$menus,
                        'sales_id'=>$id
                    );
                    $this->cashier_model->add_transfer_split($transfer);

                    $ctr++;
                    $split_into .= " #".$sale['id'].", ";

                }
                site_alert('Success! Transaction split into '.substr($split_into,0,-1),'success');
            }

            $log_user = $this->session->userdata('user');
            if($manager == ""){
                $this->logs_model->add_logs('Split',$log_user['id'],$log_user['full_name']." Split Transaction into ".substr($split_into,0,-1).'.',$id);
            }else{
                $this->logs_model->add_logs('Split',$log_user['id'],$log_user['full_name']." Split Transaction into ".substr($split_into,0,-1).'. Approved by '.$manager,$id);
            }
            if(MIGRATION_VERSION == '2'){
                    // run_main_exec();
                    // run_master_exec();
                 
            }
            echo json_encode(array('error'=>$error));
        }
        public function even_split($num=null,$sales_id=null){
            sess_clear('trans_split_cart');
            $trans_cart = sess('trans_cart');
            $trans_mod_cart = sess('trans_mod_cart');
            $ctr = 1;
            $error = "";
            $split_into = "";
            foreach ($trans_cart as $trans_id => $opt) {
                $opt['cost'] = $opt['cost']/$num;
                $trans_cart[$trans_id] = $opt;
            }
            foreach ($trans_mod_cart as $trans_mod_id => $mod) {
                $mod['cost'] = $mod['cost']/$num;
                $trans_mod_cart[$trans_mod_id] = $mod;
            }
            // for ($i=1; $i <= $num; $i++) {
            //     if($ctr > 1){
            //         $counter = sess('counter');
            //         unset($counter['sales_id']);
            //         $this->session->set_userData('counter',$counter);
            //     }
            //     // $sale = $this->submit_trans(false,null,false,null,$trans_cart,$trans_mod_cart);
            //     $ctr++;
            //     $split_into .= " #".$sale['id'].", ";
            // }

            //update trans_sales
            $item=array();
            $item['guest'] = $num;
            // if($num>1){
            //     $item['split']=1;
            // }

            $this->cashier_model->update_trans_sales($item,$sales_id);

            sess_initialize("trans_cart",$trans_cart);
            sess_initialize("trans_mod_cart",$trans_mod_cart);
            $totals = $this->total_trans(false);
            $split_total = $totals['total'];
            $splits = array('total'=>$split_total,'by'=>$num);
            
            if($num > 1){
                $sales_ids = $this->submit_trans_even(true,null,$void=false,null,true,$sales_id,false);

                foreach($sales_ids as $id){
                    $this->print_sales_receipt($id,false,false,false,null);
                }
                // for($i=1;$i<=$num;$i++){
                //     $this->print_sales_receipt($sales_id,false,false,false,$splits);
                // }
            }else{
                $this->print_sales_receipt($sales_id,false,false,false,$splits);
            }
            // site_alert('Success! Transaction split into '.substr($split_into,0,-1),'success');
            echo json_encode(array('error'=>$error));
        }
        public function new_split_block($num=0){
            $code = "";
            $trans_split_cart = sess('trans_split_cart');
            // if(count($trans_split_cart) > 0){
            //     $num = max(array_keys($trans_split_cart)) + 1;
            // }
            // else{
            //     if($num > 0){
            //         $num += 1;
            //     }
            // }
            $this->make->sDivCol(4);
                $this->make->sDiv(array('class'=>'sel-div','id'=>'sel-div-'.$num));
                    $this->make->sDiv(array('class'=>'sel-trans-list'));
                        $this->make->sUl(array("style"=>'padding-top:10px;'));
                            // $this->make->li('<span class="qty">100</span><span class="name">100</span><span class="cost">100</span>');
                        $this->make->eUl();
                    $this->make->eDiv();
                    $this->make->sDivRow();
                        $this->make->sDivCol(4);
                            $this->make->button(fa('fa-plus fa-lg fa-fw'),array('class'=>'add-btn btn-block counter-btn-green'));
                        $this->make->eDivCol();
                        $this->make->sDivCol(4);
                            $this->make->button(fa('fa-minus fa-lg fa-fw'),array('class'=>'del-btn btn-block counter-btn-red'));
                        $this->make->eDivCol();
                        $this->make->sDivCol(4);
                            $this->make->button(fa('fa-trash-o fa-lg fa-fw'),array('class'=>'remove-btn btn-block counter-btn-orange'));
                        $this->make->eDivCol();
                    $this->make->eDivRow();
                $this->make->eDiv();
            $this->make->eDivCol();

            $code = $this->make->code();
            echo json_encode(array('code'=>$code,'num'=>$num));
        }
        public function clear_split(){
            $code = "";
            $trans_split_cart = sess('trans_split_cart');
            $trans_cart = sess('trans_cart');
            $trans_mod_cart = sess('trans_mod_cart');
            $upds = array();
            if(count($trans_split_cart) > 0){
                foreach ($trans_split_cart as $num => $trans) {
                    foreach ($trans as $line_id => $row) {
                        $tr_cart = $trans_cart[$line_id];
                        $tr_cart['qty'] += $row['qty'];

                        $trans_cart[$line_id] = $tr_cart;
                        sess_update('trans_cart',$line_id,$trans_cart[$line_id]);
                        $upds[$line_id] = $tr_cart['qty'];
                    }
                }
            }
            sess_clear('trans_split_cart');
            echo json_encode(array('content'=>$upds));
        }
        public function add_split_block($num=1,$line_id=null){
            $code = "";
            $trans_split_cart = sess('trans_split_cart');
            $trans_cart = sess('trans_cart');
            $trans_mod_cart = sess('trans_mod_cart');
            $from_qty = $split_qty = 0;
            if(isset($trans_cart[$line_id])){
               if(!isset($trans_split_cart[$num][$line_id])){
                   $trans_split_cart[$num][$line_id] = $trans_cart[$line_id];
                   $trans_split_cart[$num][$line_id]['qty'] = 0;
               }
               $tr_cart = $trans_cart[$line_id];
               $tr_cart['qty'] -= 1;
               $from_qty = $tr_cart['qty'];
               $trans_cart[$line_id] = $tr_cart;

               $tr_spl_cart = $trans_split_cart[$num][$line_id];

                $tr_spl_cart['qty'] += 1;
               // if($tr_spl_cart['qty'] == 1){
               //    $split_qty = 1;
               // }else{
               //    $split_qty = $tr_spl_cart['qty'];
               // }
               $split_qty = $tr_spl_cart['qty'];
               $trans_split_cart[$num][$line_id] = $tr_spl_cart;

               sess_update('trans_split_cart',$num,$trans_split_cart[$num]);
               sess_update('trans_cart',$line_id,$trans_cart[$line_id]);
               // echo var_dump(sess('trans_split_cart'));
            }
            // $code = $this->make->code();
            echo json_encode(array('from_qty'=>$from_qty,'split_qty'=>$split_qty));
        }
        public function minus_split_block($num=1,$line_id=null){
            $code = "";
            $trans_split_cart = sess('trans_split_cart');
            $trans_cart = sess('trans_cart');
            $trans_mod_cart = sess('trans_mod_cart');
            $from_qty = $split_qty = 0;
            if(isset($trans_cart[$line_id])){
               if(!isset($trans_split_cart[$num][$line_id])){
                   $trans_split_cart[$num][$line_id] = $trans_cart[$line_id];
               }
               $tr_cart = $trans_cart[$line_id];
               $tr_cart['qty'] += 1;
               $from_qty = $tr_cart['qty'];
               $trans_cart[$line_id] = $tr_cart;

               $tr_spl_cart = $trans_split_cart[$num][$line_id];
                $tr_spl_cart['qty'] -= 1;
               // if($tr_spl_cart['qty'] > 1){
               //  $split_qty = $tr_spl_cart['qty'];
               // }else{   
               //   $tr_spl_cart['qty'] = 1;
               //   $split_qty = 0;

               // }
               $split_qty = $tr_spl_cart['qty'];
               $trans_split_cart[$num][$line_id] = $tr_spl_cart;
               sess_update('trans_split_cart',$num,$trans_split_cart[$num]);
               sess_update('trans_cart',$line_id,$trans_cart[$line_id]);
               // echo var_dump(sess('trans_split_cart'));
            }
            // $code = $this->make->code();
            echo json_encode(array('from_qty'=>$from_qty,'split_qty'=>$split_qty));
        }
        public function remove_split_block($num=null){
            $code = "";
            $trans_split_cart = sess('trans_split_cart');
            $trans_cart = sess('trans_cart');
            $trans_mod_cart = sess('trans_mod_cart');
            $upds = array();
            if(isset($trans_split_cart[$num]) ){
                foreach ($trans_split_cart[$num] as $line_id => $row) {
                    $tr_cart = $trans_cart[$line_id];
                    $tr_cart['qty'] += $row['qty'];

                    $trans_cart[$line_id] = $tr_cart;
                    sess_update('trans_cart',$line_id,$trans_cart[$line_id]);
                    $upds[$line_id] = $tr_cart['qty'];
                }
            }

            if(isset($trans_split_cart[$num]))
                sess_delete('trans_split_cart',$num);
            echo json_encode(array('content'=>$upds));
        }
        #Delivery
        public function delivery(){
            $this->load->model('site/site_model');
            $this->load->model('dine/cashier_model');
            $this->load->helper('dine/cashier_helper');
            sess_clear('trans_type_cart');
            $data = $this->syter->spawn(null);
            $data['code'] = deliveryPage();
            $data['add_css'] = array('css/cashier.css','css/virtual_keyboard.css');
            $data['add_js'] = array('js/jquery.keyboard.extension-navigation.min.js','js/jquery.keyboard.min.js');
            $data['load_js'] = 'dine/cashier.php';
            $data['use_js'] = 'deliveryJs';
            $data['noNavbar'] = true;
            $this->load->view('cashier',$data);
        }
        public function pickup(){
            $this->load->model('site/site_model');
            $this->load->model('dine/cashier_model');
            $this->load->helper('dine/cashier_helper');
            $data = $this->syter->spawn(null);
            $data['code'] = deliveryPage(array(),'pickup');
            $data['add_css'] = array('css/cashier.css','css/virtual_keyboard.css');
            $data['add_js'] = array('js/jquery.keyboard.extension-navigation.min.js','js/jquery.keyboard.min.js');
            $data['load_js'] = 'dine/cashier.php';
            $data['use_js'] = 'deliveryJs';
            $data['noNavbar'] = true;
            $this->load->view('cashier',$data);
        }
        public function search_customers($search=null){
            $this->load->model('dine/customers_model');
            $found = array();
            if($search != ""){
                $found = $this->customers_model->search_customers($search);
            }
            $results = array();
            if(count($found) > 0 ){
                foreach ($found as $res) {
                    $results[$res->cust_id] = array('name'=>ucwords(strtolower($res->fname." ".$res->mname." ".$res->lname." ".$res->suffix)),'phone'=>$res->phone,'email'=>$res->email);
                }
            }
            echo json_encode($results);
        }
        public function search_gift_card(){
            $this->load->model('dine/gift_cards_model');

            $search = $this->input->post('code_from');
            $search_to = $this->input->post('code_to');
            $description_id = $this->input->post('description_id');

            if (is_null($search)) {
                echo json_encode(array('error'=>'Please enter gift cheque code'));
                return false;
            }

            if(is_null($search_to)){

            }

            $search = str_replace("-", "", $search);
            $search_to = str_replace("-", "", $search_to);
            $return = $this->gift_cards_model->get_gift_card_info($search,true,$description_id);
            $series = $search;

            if (empty($return)) {
                echo json_encode(array('error'=>'Gift cheque(s) does not exist'));
            } else {
                $gc_id = '';
                $card_no = '';
                $gc_id_to = '';
                $card_no_to = '';
                $error = ''; 
                $ctr = 0;
                $amount = 0;

               if($search_to != null){  
                    if ($search >= $search_to){
                        echo json_encode(array('error'=>'Invalid series'));  

                        return false;           
                    }
                                 

                    while($series <= $search_to){
                        // echo $series;

                        $return = $this->gift_cards_model->get_gift_card_info($series,true,$description_id);
                        // print_r($return).'<br />';                   
                        
                        if ($return[0]->inactive == 1){
                            $error = 'Gift cheque(s) has already been used';
                            break;
                        }
                        // echo $series;

                        // if($series != $search_to){
                             // $ctr++;
                        // }

                        $amount += $return[0]->amount;

                        if($series==$search){
                            $gc_id = $return[0]->gc_id;
                            $card_no = $return[0]->card_no;
                        }

                        if($series==$search_to){
                            $gc_id_to = $return[0]->gc_id;
                            $card_no_to = $return[0]->card_no;
                        }

                         $series = str_replace("-", "", $this->get_series($series));
                       
                    }

                    if($error != ''){
                        echo json_encode(array('error'=>$error));
                        return false;
                    }
               }else{

                if ($return[0]->inactive == 1){
                    echo json_encode(array('error'=>'Gift cheque has already been used'));

                    exit;
                }                   


                    $gc_id = $return[0]->gc_id;
                    $card_no = $return[0]->card_no;
                    $amount = $return[0]->amount;
               }

                echo json_encode(array('gc_id'=>$gc_id,'gc_id_to'=>$gc_id_to,'card_no'=>$card_no,'card_no_to'=>$card_no_to,'amount'=>number_format($amount,2)));
                
                // if ($return[0]->inactive == 1)
                //     echo json_encode(array('error'=>'Gift card has already been used'));
                // else
                //     echo json_encode(array('gc_id'=>$return[0]->gc_id,'card_no'=>$return[0]->card_no,'amount'=>number_format($return[0]->amount,2)));
            }
            return false;
        }
        public function search_coupon($search = null){
            if (is_null($search)) {
                echo json_encode(array('error'=>'Please enter coupon card code'));
                return false;
            }

            $search = str_replace("-", "", $search);
            $today = date2Sql($this->site_model->get_db_now('sql'));
            $args['card_no'] = $search;
            $return = $this->site_model->get_tbl('coupons',$args);

            if (empty($return)) {
                echo json_encode(array('error'=>'Coupon does not exist'));
            } else {
                if ($return[0]->inactive == 1)
                    echo json_encode(array('error'=>'Coupon has already been used.'));
                else if( strtotime($today) > strtotime($return[0]->expiration)  ){
                    echo json_encode(array('error'=>'Coupon has expired.'));
                }
                else
                    echo json_encode(array('coupon_id'=>$return[0]->coupon_id,'card_no'=>$return[0]->card_no,'amount'=>number_format($return[0]->amount,2)));
            }
            return false;
        }
        public function get_customers($id=null){
            $this->load->model('dine/customers_model');
            $found = $this->customers_model->get_customer($id);
            $results = array();
            if(count($found) > 0 ){
                foreach ($found as $res) {
                    $results[$res->cust_id] = array(
                        'cust_id'=>ucwords(strtolower($res->cust_id)),
                        'fname'=>ucwords(strtolower($res->fname)),
                        'lname'=>ucwords(strtolower($res->lname)),
                        'mname'=>ucwords(strtolower($res->mname)),
                        'suffix'=>ucwords(strtolower($res->suffix)),
                        'email'=>$res->email,
                        'phone'=>ucwords(strtolower($res->phone)),
                        'street_no'=>ucwords(strtolower($res->street_no)),
                        'street_address'=>ucwords(strtolower($res->street_address)),
                        'city'=>ucwords(strtolower($res->city)),
                        'region'=>ucwords(strtolower($res->region)),
                        'zip'=>$res->zip
                    );
                }
            }
            echo json_encode($results);
        }
        public function get_waiters($id=null){
            $this->load->model('core/user_model');
            $found = $this->user_model->get_users($id);
            $results = array();
            if(count($found) > 0 ){
                $this->make->sDivRow();
                    foreach ($found as $res) {
                        // ucwords(strtolower($res->fname." ".$res->mname." ".$res->lname." ".$res->suffix))
                        if($res->inactive == 0){
                            $this->make->sDivCol(4);
                                $this->make->sDiv(array('style'=>'margin:2px'));
                                $this->make->button(ucwords(strtolower($res->username)),
                                                    array('id'=>'waiters-btn-'.$res->id,'class'=>'btn-block counter-btn-silver'));
                                $this->make->eDiv();
                            $this->make->eDivCol();
                            $results[$res->id] = array(
                                'user_id'=>ucwords(strtolower($res->id)),
                                'fname'=>ucwords(strtolower($res->fname)),
                                'uname'=>ucwords(strtolower($res->username)),
                                'lname'=>ucwords(strtolower($res->lname)),
                                'mname'=>ucwords(strtolower($res->mname)),
                                'suffix'=>ucwords(strtolower($res->suffix)),
                                'full_name'=>ucwords(strtolower($res->fname." ".$res->mname." ".$res->lname." ".$res->suffix))
                            );
                        }
                    }
                $this->make->eDivRow();
            }
            $code = $this->make->code();
            echo json_encode(array('code'=>$code,'ids'=>$results));
        }
        public function new_trans($asJson=true,$type=null){
            $this->load->model('site/site_model');
            $this->load->model('dine/clock_model');
            sess_clear('trans_mod_cart');
            sess_clear('trans_submod_cart');
            sess_clear('trans_cart');
            // sess_clear('trans_items_cart');
            sess_clear('counter');
            sess_clear('trans_disc_cart');
            sess_clear('trans_charge_cart');
            sess_clear('reasons');
            sess_clear('trans_multi_disc_cart');
            sess_clear('item_discount');
            sess_clear('selected_person');
            sess_clear('person_disc_cart');
            sess_clear('payment_change');
            // sess_clear('brand_session');

            $time = $this->site_model->get_db_now();
            $user = $this->session->userdata('user');
            // $get_shift = $this->clock_model->get_shift_id(date2Sql($time),$user['id']);
            $get_shift = $this->clock_model->get_shift_id(null,$user['id']);
            $shift_id = 0;
            if(count($get_shift) > 0){
                $shift_id = $get_shift[0]->shift_id;
            }
            $counter = array(
                "datetime"=> $time,
                "sales_id"=> null,
                "shift_id"=> $shift_id,
                "terminal_id"=> TERMINAL_ID,
                "user_id"=> $user['id'],
                "type"=> $type
            );
            // if($type != 'dinein' && $type != 'delivery' && $type != 'eatigo' && $type != 'bigdish')
            //     sess_clear('trans_type_cart');

            $this->session->set_userData('counter',$counter);
            if($asJson)
                echo json_encode($counter);
            else
                return $counter;
        }
        public function retrack_trans($asJson=true,$type=null){
            $this->load->model('site/site_model');
            $this->load->model('dine/clock_model');
            sess_clear('trans_mod_cart');
            sess_clear('trans_submod_cart');
            sess_clear('trans_cart');
            // sess_clear('trans_items_cart');
            sess_clear('counter');
            sess_clear('trans_disc_cart');
            sess_clear('trans_charge_cart');
            sess_clear('reasons');
            // sess_clear('brand_session');
            $time = $this->site_model->get_db_now();
            $user = $this->session->userdata('user');
            // $get_shift = $this->clock_model->get_shift_id(date2Sql($time),$user['id']);
            $get_shift = $this->clock_model->get_shift_id(null,$user['id']);
            $shift_id = 0;
            if(count($get_shift) > 0){
                $shift_id = $get_shift[0]->shift_id;
            }
            $counter = array(
                "datetime"=> $time,
                "sales_id"=> null,
                "shift_id"=> $shift_id,
                "terminal_id"=> TERMINAL_ID,
                "user_id"=> $user['id'],
                "type"=> $type
            );

            $this->session->set_userData('counter',$counter);
            if($asJson)
                echo json_encode($counter);
            else
                return $counter;
        }
        public function update_trans_customer($customer_id=null){
            $trans_type_cart = sess('trans_type_cart');
            $trans_type_cart[0]['customer_id'] = $customer_id;
            sess_initialize('trans_type_cart',$trans_type_cart);
        }    
        public function update_trans($update=null,$value=null,$unset=false){
            $counter = sess('counter');
            if($unset){
                if(isset($counter[$update])){
                    unset($counter[$update]);
                }
            }
            else{
                $counter[$update] = $value;
                // $counter['zero_name'] = $this->input->post('zero-cust-name');
                // $counter['zero_card_no'] = $this->input->post('zero-cust-code');
                if($update == 'zero_rated'){
                    $trans_cart = sess('trans_cart');
                    foreach ($trans_cart as $line_id => $opt) {
                        $opt['no_tax'] = $value;
                        $trans_cart[$line_id] = $opt;
                    }
                    sess_initialize('trans_cart',$trans_cart);
                }
            }
            sess_initialize('counter',$counter);
            echo json_encode($counter);
        }
        public function load_trans($asJson=true,$trans=null,$noSalesId=false,$combineSplit=false){
            $this->load->model('site/site_model');
            $this->load->model('dine/clock_model');
            sess_clear('trans_mod_cart');
            sess_clear('trans_submod_cart');
            sess_clear('trans_cart');
            sess_clear('counter');
            sess_clear('trans_disc_cart');
            sess_clear('trans_charge_cart');
            sess_clear('trans_type_cart');
            sess_clear('reasons');
            sess_clear('trans_multi_disc_cart');
            sess_clear('item_discount');
            sess_clear('selected_person');
            sess_clear('person_disc_cart');
            sess_clear('payment_change');
            // sess_clear('brand_session');
            $time = $this->site_model->get_db_now();
            $user = $this->session->userdata('user');
            $get_shift = $this->clock_model->get_shift_id(null,$user['id']);
            // $get_shift = $this->clock_model->get_shift_id(date2Sql($time),$user['id']);
            $shift_id = 0;
            if(count($get_shift) > 0){
                $shift_id = $get_shift[0]->shift_id;
            }
            $order=$trans['order'];
            $details=$trans['details'];
            $discounts = $trans['discounts'];
            $charges = $trans['charges'];
            $zero_rated=$trans['zero_rated'];
            // echo "<pre>",print_r($zero_rated),"</pre>";die();
            $sales_id = $order['sales_id'];
            $zname = $zcard_no = "";
            // foreach ($zero_rated as $key => $value) {
            //     $zname = $value['name'];
            //     $zcard_no = $value['card_no'];
            // }

            if($noSalesId)
                $sales_id = "";
            $counter = array(
                "datetime"=> sql2DateTime($order['datetime']),
                "shift_id"=> $shift_id,
                "sales_id"=> $sales_id,
                "terminal_id"=> TERMINAL_ID,
                "user_id"=> $user['id'],
                "type"=> $order['type'],
                "zero_name"=>$zname,
                "zero_card_no"=>$zcard_no
            );
            // if(count($zero_rated) > 0){
            //     foreach ($zero_rated as $zid => $opt) {
            //         if($opt['amount'] > 0){
            //           $counter['zero_rated'] = 1;
            //           break;
            //         }
            //     }
            // }
            // if(!ORDERING_STATION){
            if($user['role_id'] != SERVER_ID){
                if(isset($order['waiter_id'])){
                    $counter['waiter_id'] = $order['waiter_id'];
                }
            }else{
                if($combineSplit == true){
                    if(isset($order['waiter_id'])){
                        $counter['waiter_id'] = $order['waiter_id'];
                    }
                }
            }
            $trans_type_cart = array();
            if($order['type'] == 'dinein' || $order['type'] == 'App Order'){
                $trans_type_cart[0]['type']='dinein';
                $trans_type_cart[0]['table']=$order['table_id'];
                $trans_type_cart[0]['guest']=$order['guest'];
            }
            if($order['type'] == 'delivery'){
                $trans_type_cart[0]['type']='delivery';
                $trans_type_cart[0]['customer_id']=$order['customer_id'];
            }
            if($order['type'] == 'retail'){
                $trans_type_cart[0]['type']='retail';
                $trans_type_cart[0]['customer_id']=$order['customer_id'];
            }
            if($order['type'] == 'counter'){
                $trans_type_cart[0]['type']='counter';
                $trans_type_cart[0]['serve_no']=$order['serve_no'];
            }
            if($order['type'] == 'takeout'){
                $trans_type_cart[0]['type']='takeout';
                $trans_type_cart[0]['serve_no']=$order['serve_no'];
            }
            if($order['type'] == 'reservation'){
                $trans_type_cart[0]['type']='reservation';
                $trans_type_cart[0]['table']=$order['table_id'];
                $trans_type_cart[0]['guest']=$order['guest'];
            }

            $trans_cart = array();
            $trans_mod_cart = array();
            $trans_submod_cart = array();
            $trans_disc_cart = array();
            $trans_charge_cart = array();
            $person_disc_cart = array();
            foreach ($details as $line_id => $menu) {
                $fuid = "";
                $kspr = "";
                if(isset($menu['free_user_id']))
                    $fuid = $menu['free_user_id'];
                if(isset($menu['kitchen_slip_printed']))
                    $kspr = $menu['kitchen_slip_printed'];
                $trans_cart[$line_id] = array(
                    "menu_id"=> $menu['menu_id'],
                    "name"=> $menu['name'],
                    "cost"=> $menu['price'],
                    "qty"=> $menu['qty'],
                    "no_tax"=> $menu['no_tax'],
                    "remarks"=> $menu['remarks'],
                    "nocharge"=> $menu['nocharge'],
                    "is_takeout"=> $menu['is_takeout'],
                    "free_user_id"=> $fuid,
                    "kitchen_slip_printed"=>$kspr,
                    'ref_trans_id'=>$menu['ref_line_id'],
                    'is_promo'=>$menu['is_promo'],
                    'promo_type'=>$menu['promo_type'],
                    'free_promo_amount'=>$menu['free_promo_amount'],
                    'menu_category_id'=>$menu['menu_category_id'],
                    'pf_id'=>$menu['pf_id'],
                    // "memo"=>$order['memo'],
                    // "type"=>$order['type']
                );
                if(isset($menu['retail']))
                  $trans_cart[$line_id]['retail'] = $menu['retail'];
                if(isset($menu['modifiers']) && count($menu['modifiers']) > 0){
                    foreach ($menu['modifiers'] as $mod) {
                        if($mod['line_id'] == $line_id){
                            $trans_mod_cart[] = array(
                                "trans_id"=>$mod['line_id'],
                                "mod_id"=>$mod['id'],
                                "mod_group_id"=>$mod['mod_group_id'],
                                "menu_id"=>$menu['menu_id'],
                                "menu_name"=>$menu['name'],
                                "name"=>$mod['name'],
                                "cost"=>$mod['price'],
                                "qty"=>$mod['qty'],
                                "mod_line_id"=>$mod['mod_line_id'],
                                "sales_mod_id"=>$mod['sales_mod_id'],
                                "kitchen_slip_printed"=>$menu['kitchen_slip_printed']
                            );

                            if(isset($mod['submodifiers']) && count($mod['submodifiers']) > 0){
                                // $submods = array();
                                foreach ($mod['submodifiers'] as $submod) {
                                    if($submod['mod_line_id'] == $mod['mod_line_id']){
                                        $trans_submod_cart[$submod['sales_submod_id']] = array(
                                            "trans_id"=>$mod['line_id'],
                                            "mod_id"=>$submod['mod_id'],
                                            "sales_submod_id"=>$submod['sales_submod_id'],
                                            // "mod_group_id"=>$mod->mod_group_id,
                                            "line_id"=>$submod['line_id'],
                                            "name"=>$submod['name'],
                                            "price"=>$submod['price'],
                                            "qty"=>$submod['qty'],
                                            "group"=>$submod['group'],
                                            // "discount"=>$mod->discount,
                                            "mod_line_id"=>$submod['mod_line_id'],
                                            "sales_mod_id"=>$mod['sales_mod_id'],
                                            "kitchen_slip_printed"=>$submod['kitchen_slip_printed']
                                        );
                                    }
                                }

                                // $mods[$mod->sales_mod_id]['submodifiers'] = $submods;
                            }
                        }
                    }#END FOR EACH
                    // echo "<pre>",print_r($trans_submod_cart),"</pre>";die();
                }#END IF
            }
            // echo "<pre>",print_r($trans_cart),"</pre>";die();
            $per_item_disc = false;
            foreach ($discounts as $disc_code => $dc) {
                if($dc['items'] != ""){
                    $per_item_disc = true;
                }
            }

            if($per_item_disc){
                if(count($discounts) > 0){
                    foreach ($discounts as $disc_code => $dc) {
                        $trans_disc_cart[$disc_code] = array(
                            // "name"  => $dc['name'],
                            // "code"  => $dc['code'],
                            "no_tax"  => $dc['no_tax'],
                            "guest" => $dc['guest'],
                            "disc_rate" => $dc['disc_rate'],
                            "disc_id" => $dc['disc_id'],
                            "disc_code" => $dc['disc_code'],
                            "disc_type" => $dc['disc_type'],
                            "type" => $dc['disc_type'],
                            "fix" => $dc['fix'],
                            "name" => $dc['name'],
                            "code" => $dc['code'],
                            "bday" => $dc['bday'],
                            "remarks" => isset($dc['remarks']) ? $dc['remarks'] : '',
                            "amount" => $dc['amount'],
                            "items" => $dc['items'],
                            "openamt" => 0,
                            // "items" => $dc['items']
                        );

                        $person_disc_cart[$dc['code']] = array(
                            "name" => $dc['name'],
                            "code" => $dc['code'],
                            "disc_code" => $dc['disc_code'],
                            "bday" => $dc['bday'],
                            "remarks" => isset($dc['remarks']) ? $dc['remarks'] : '',
                        );
                    }
                }
            }else{
                if(count($discounts) > 0){
                    foreach ($discounts as $disc_code => $dc) {
                        // $openamt = 0;
                        // if($dc['fix'] == 1 && $dc['disc_rate'] == 0){
                        //     $openamt = $dc['amount'];
                        // }
                        $trans_disc_cart[$disc_code] = array(
                            // "name"  => $dc['name'],
                            // "code"  => $dc['code'],
                            "no_tax"  => $dc['no_tax'],
                            "guest" => $dc['guest'],
                            "disc_rate" => $dc['disc_rate'],
                            "disc_id" => $dc['disc_id'],
                            "disc_code" => $dc['disc_code'],
                            "disc_type" => $dc['disc_type'],
                            "persons" => $dc['persons'],
                            "fix" => $dc['fix'],
                            "openamt" => $dc['openamt'],
                            // "items" => $dc['items']
                        );
                    }
                }
            }


            if(count($charges) > 0){
                foreach ($charges as $charge_id => $dc) {
                    $trans_charge_cart[$charge_id] = array(
                        "name"  => $dc['name'],
                        "code"  => $dc['code'],
                        "amount"  => $dc['amount'],
                        "absolute" => $dc['absolute']
                    );
                }
            }

            if(isset($counter['zero_rated']) && $counter['zero_rated'] > 0){
                foreach ($trans_cart as $line_id => $opt) {
                    $opt['no_tax'] = 1;
                    $trans_cart[$line_id] = $opt;
                }
            }

            // echo print_r($trans_submod_cart);die();


            $this->session->set_userData('trans_cart',$trans_cart);
            $this->session->set_userData('trans_mod_cart',$trans_mod_cart);
            $this->session->set_userData('trans_submod_cart',$trans_submod_cart);
            if(count($trans_type_cart) > 0){
                $this->session->set_userData('trans_type_cart',$trans_type_cart);
            }
            if(count($trans_disc_cart) > 0){
                if($per_item_disc){
                    $this->session->set_userData('item_discount',$trans_disc_cart);
                }else{
                    $this->session->set_userData('trans_disc_cart',$trans_disc_cart);
                    $this->session->set_userData('trans_multi_disc_cart',$trans_disc_cart);
                }
            }
            if(count($person_disc_cart) > 0){
                // $this->session->set_userData('trans_disc_cart',$trans_disc_cart);
                $this->session->set_userData('person_disc_cart',$person_disc_cart);
            }
            if(count($trans_charge_cart) > 0){
                $this->session->set_userData('trans_charge_cart',$trans_charge_cart);
            }
            $this->session->set_userData('counter',$counter);
            if($asJson)
                echo json_encode($counter);
            else
                return $counter;
        }
        public function get_trans_cart($asJson=true){
            $trans_cart = sess('trans_cart');
            $trans_mod_cart = sess('trans_mod_cart');
            $trans_submod_cart = sess('trans_submod_cart');
            $item_discount = sess('item_discount');
            $order = null;
            // echo count($trans_submod_cart); die();
            // echo print_r($trans_submod_cart);die();
            foreach ($trans_cart as $trans_id => $menu) {
                
                $total_disc = 0;
                foreach ($item_discount as $items => $value) {
                    if($items == $trans_id){
                        $discount = $value['amount'];
                        $total_line = $menu['cost'] * $menu['qty'];
                        if($value['fix'] == 1){
                            $total_disc = $discount;
                        }else{
                            if($value['no_tax'] == 1){
                                $less_vat = ($total_line/1.12)*0.12;
                                $total_disc = $discount + $less_vat;
                            }else{
                                $total_disc = $discount;
                            }
                        }
                    }
                }


                $free_user_id = "";
                if(isset($menu['free_user_id'])){
                    $free_user_id = $menu['free_user_id'];
                }
                if(!isset($menu['retail'])){
                    $charge_code = '';
                    if($menu['nocharge']){
                        $char_res = $this->site_model->get_tbl('charges',array('charge_id'=>$menu['nocharge']),array(),null,true);
                        $charge_code = $char_res[0]->charge_code;
                    }

                    $order[$trans_id] =  array(
                        "menu_id"=> $menu['menu_id'],
                        "name"=> $menu['name'],
                        "cost"=> $menu['cost'],
                        "qty"=> $menu['qty'],
                        "remarks"=> $menu['remarks'],
                        "nocharge"=> $menu['nocharge'],
                        "is_takeout"=> $menu['is_takeout'],
                        "free_user_id"=> $free_user_id,
                        "kitchen_slip_printed"=> $menu["kitchen_slip_printed"],
                        "charge_code"=> $charge_code,
                        "total_disc"=>$total_disc,
                        "is_promo"=>$menu["is_promo"],
                        // "memo"=>$menu['memo'],
                        // "type"=>$menu['type']
                    );
                    $mods = array();
                    if(count($trans_mod_cart) > 0){
                        foreach ($trans_mod_cart as $id => $mod) {
                            if($mod['trans_id'] == $trans_id){
                                $mods[$id] = array(
                                    "trans_id"=>$mod['trans_id'],
                                    "mod_id"=>$mod['mod_id'],
                                    "mod_group_id"=>$mod['mod_group_id'],
                                    "menu_id"=>$mod['menu_id'],
                                    "menu_name"=>$mod['menu_name'],
                                    "name"=>$mod['name'],
                                    "cost"=>$mod['cost'],
                                    "qty"=>$mod['qty'],
                                    "mod_line_id"=>$mod['mod_line_id'],
                                    "sales_mod_id"=>$mod['sales_mod_id'],
                                    "kitchen_slip_printed"=>$mod["kitchen_slip_printed"]
                                );

                                $submods = array();
                                if(count($trans_submod_cart) > 0){

                                    foreach ($trans_submod_cart as $submod) {
                                        if($submod['mod_line_id'] == $mod['mod_line_id']){
                                            // echo 'asdf';
                                            $submods[$submod['sales_submod_id']] = array(
                                                "mod_id"=>$submod['mod_id'],
                                                "sales_submod_id"=>$submod['sales_submod_id'],
                                                // "mod_group_id"=>$mod->mod_group_id,
                                                "line_id"=>$submod['line_id'],
                                                "name"=>$submod['name'],
                                                "price"=>$submod['price'],
                                                "qty"=>$submod['qty'],
                                                "group"=>$submod['group'],
                                                // "discount"=>$mod->discount,
                                                "mod_line_id"=>$submod['mod_line_id'],
                                                "sales_mod_id"=>$mod['sales_mod_id'],
                                                "kitchen_slip_printed"=>$submod['kitchen_slip_printed']
                                            );
                                        }
                                    }

                                    $mods[$id]['submodifiers'] = $submods;

                                }



                            }#IF
                        }#FOREACH
                    }#IF
                    $order[$trans_id]['modifiers'] = $mods;
                }
                else{
                    $order[$trans_id] =  array(
                        "menu_id"=> $menu['menu_id'],
                        "name"=> $menu['name'],
                        "cost"=> $menu['cost'],
                        "qty"=> $menu['qty'],
                        "remarks"=> $menu['remarks'],
                        "nocharge"=> $menu['nocharge'],
                        "is_takeout"=> $menu['is_takeout'],
                        "charge_code"=> $charge_code,
                        "retail"=>$menu['retail'],
                        "total_disc"=>$total_disc,
                        "is_promo"=>$menu["is_promo"],
                    );
                }

            }

            // echo print_r($order);die();
            if($asJson)
                echo json_encode($order);
            else
                return $order;
        }
        public function get_trans_charges($asJson=true){
            $this->load->model('dine/settings_model');
            $trans_charge_cart = sess('trans_charge_cart');
            $counter = sess('counter');
            
            $charge = null;
            foreach ($trans_charge_cart as $charge_id => $dc) {
                $charge[$charge_id] = array(
                    "name"  => $dc['name'],
                    "code"  => $dc['code'],
                    "amount"  => $dc['amount'],
                    "absolute" => $dc['absolute']
                );
            }
            if(AUTO_ADD_SERVICE_CHARGE){
                if($counter['type'] == 'dinein' || $counter['type'] == 'eatigo' || $counter['type'] == 'bigdish' || $counter['type'] == 'reservation'){
                    if(!isset($charge[SERVICE_CHARGE_ID])){
                        $serc = $this->settings_model->get_charges(SERVICE_CHARGE_ID);
                        $sc = $serc[0];
                        $charge[$sc->charge_id] = array(
                            "name"  => $sc->charge_name,
                            "code"  => $sc->charge_code,
                            "amount"  => $sc->charge_amount,
                            "absolute" => $sc->absolute
                        );
                        sess_add("trans_charge_cart",$charge[$sc->charge_id],$sc->charge_id);
                    }
                }
            }
            if(AUTO_ADD_SERVICE_CHARGE_DELIVERY){
                if($counter['type'] == 'delivery'){
                    if(!isset($charge[SERVICE_CHARGE_DELIVERY_ID])){
                        $serc = $this->settings_model->get_charges(SERVICE_CHARGE_DELIVERY_ID);
                        $sc = $serc[0];
                        $charge[$sc->charge_id] = array(
                            "name"  => $sc->charge_name,
                            "code"  => $sc->charge_code,
                            "amount"  => $sc->charge_amount,
                            "absolute" => $sc->absolute
                        );
                        sess_add("trans_charge_cart",$charge[$sc->charge_id],$sc->charge_id);
                    }
                }
            }
            if(AUTO_ADD_SERVICE_CHARGE_TAKEOUT){
                if($counter['type'] == 'takeout'){
                    if(!isset($charge[SERVICE_CHARGE_TAKEOUT_ID])){
                        $serc = $this->settings_model->get_charges(SERVICE_CHARGE_TAKEOUT_ID);
                        $sc = $serc[0];
                        $charge[$sc->charge_id] = array(
                            "name"  => $sc->charge_name,
                            "code"  => $sc->charge_code,
                            "amount"  => $sc->charge_amount,
                            "absolute" => $sc->absolute
                        );
                        sess_add("trans_charge_cart",$charge[$sc->charge_id],$sc->charge_id);
                    }
                }
            }
            if(AUTO_ADD_HANDLING_CHARGE_PANDA){
                if($counter['type'] == 'foodpanda' || $counter['type'] == 'honestbee'){
                    if(!isset($charge[SERVICE_CHARGE_PANDA_ID])){
                        $serc = $this->settings_model->get_charges(SERVICE_CHARGE_PANDA_ID);
                        $sc = $serc[0];
                        $charge[$sc->charge_id] = array(
                            "name"  => $sc->charge_name,
                            "code"  => $sc->charge_code,
                            "amount"  => $sc->charge_amount,
                            "absolute" => $sc->absolute
                        );
                        sess_add("trans_charge_cart",$charge[$sc->charge_id],$sc->charge_id);
                    }
                }
            }
            if($asJson)
                echo json_encode($charge);
            else
                return $charge;
        }
        public function get_order($asJson=true,$sales_id=null){
            /*
             * -------------------------------------------
             *   Load receipt data
             * -------------------------------------------
            */
            $this->load->model('dine/cashier_model');
            $orders = $this->cashier_model->get_trans_sales($sales_id);
            // echo $sales_id; 
            // echo "<pre>",print_r($orders),"</pre>";die();
            $order = array();
            $details = array();
            $details2 = array();
            $details_to = array();
            foreach ($orders as $res) {
                $order = array(
                    "sales_id"=>$res->sales_id,
                    'ref'=>$res->trans_ref,
                    "type"=>$res->type,
                    "table_id"=>$res->table_id,
                    "table_name"=>$res->table_name,
                    "guest"=>$res->guest,
                    "serve_no"=>$res->serve_no,
                    "user_id"=>$res->user_id,
                    "customer_id"=>$res->customer_id,
                    "customer_name"=>$res->customer_name,
                    "name"=>$res->username,
                    "terminal_id"=>$res->terminal_id,
                    "terminal_name"=>$res->terminal_name,
                    "terminal_code"=>$res->terminal_code,
                    "shift_id"=>$res->shift_id,
                    "datetime"=>$res->datetime,
                    "update_date"=>$res->update_date,
                    "amount"=>$res->total_amount,
                    "balance"=>round($res->total_amount,2) - round($res->total_paid,2),
                    "paid"=>$res->paid,
                    "printed"=>$res->printed,
                    "inactive"=>$res->inactive,
                    "waiter_id"=>$res->waiter_id,
                    "void_ref"=>$res->void_ref,
                    "reason"=>$res->reason,
                    "ref_no"=>$res->ref_no,
                    "depo_amount"=>$res->depo_amount,
                    "cname"=>$res->fname,
                    "waiter_name"=>ucwords(strtolower($res->waiterfname." ".$res->waitermname." ".$res->waiterlname." ".$res->waitersuffix)),
                    "waiter_username"=>ucwords(strtolower($res->waiterusername)),
                    "kitchen_display_status" => $res->kitchen_display_status,
                    "dispatch_display_status" => $res->dispatch_display_status,
                    "completed_display_status" => $res->completed_display_status,
                    "c_fname"=>$res->fname,
                    "c_lname"=>$res->lname,
                    "c_mname"=>$res->mname,
                    "pf_id"=> isset($res->pf_id) ? $res->pf_id:'',
                    "value"=> isset($res->value) ? $res->value:'',
                    "queue_id"=>$res->queue_id,
                    "queue_print"=>$res->queue_print,
                    // "memo"=>ucwords(strtolower($res->memo))
                    // "pay_type"=>$res->pay_type,
                    // "pay_amount"=>$res->pay_amount,
                    // "pay_ref"=>$res->pay_ref,
                    // "pay_card"=>$res->pay_card,
                );
            }
            $order_menus = $this->cashier_model->get_trans_sales_menus(null,array("trans_sales_menus.sales_id"=>$sales_id));
            // echo "<pre>",print_r($order_menus),"</pre>";die();
            $order_items = $this->cashier_model->get_trans_sales_items(null,array("trans_sales_items.sales_id"=>$sales_id));
            $order_mods = $this->cashier_model->get_trans_sales_menu_modifiers(null,array("trans_sales_menu_modifiers.sales_id"=>$sales_id));
            $order_submods = $this->cashier_model->get_trans_sales_menu_submodifiers(null,array("trans_sales_menu_submodifiers.sales_id"=>$sales_id));
            $sales_discs = $this->cashier_model->get_trans_sales_discounts(null,array("trans_sales_discounts.sales_id"=>$sales_id));
            $sales_tax = $this->cashier_model->get_trans_sales_tax(null,array("trans_sales_tax.sales_id"=>$sales_id));
            $sales_payments = $this->cashier_model->get_trans_sales_payments(null,array("trans_sales_payments.sales_id"=>$sales_id));
            $sales_no_tax = $this->cashier_model->get_trans_sales_no_tax(null,array("trans_sales_no_tax.sales_id"=>$sales_id));
            $sales_zero_rated = $this->cashier_model->get_trans_sales_zero_rated(null,array("trans_sales_zero_rated.sales_id"=>$sales_id));
            $sales_charges = $this->cashier_model->get_trans_sales_charges(null,array("trans_sales_charges.sales_id"=>$sales_id));
            $sales_local_tax = $this->cashier_model->get_trans_sales_local_tax(null,array("trans_sales_local_tax.sales_id"=>$sales_id));
            $payment_fields = $this->cashier_model->get_trans_sales_payment_fields(null,array("trans_sales_payment_fields.sales_id"=>$sales_id));
            $pays = array();
            foreach ($sales_payments as $py) {
                $pays[$py->payment_id] = array(
                        "sales_id"      => $py->sales_id,
                        "payment_type"  => $py->payment_type,
                        "amount"        => $py->amount,
                        "to_pay"        => $py->to_pay,
                        "reference"     => $py->reference,
                        "card_type"     => $py->card_type,
                        "card_number"   => $py->card_number,
                        "approval_code"   => $py->approval_code,
                        "user_id"       => $py->user_id,
                        "datetime"      => $py->datetime,
                    );
            }
            foreach ($order_menus as $men) {
                $details[$men->line_id] = array(
                    "id"=>$men->sales_menu_id,
                    "menu_id"=>$men->menu_id,
                    "name"=>$men->menu_name,
                    "code"=>$men->menu_code,
                    "price"=>$men->price,
                    "qty"=>$men->qty,
                    "no_tax"=>$men->no_tax,
                    "discount"=>$men->discount,
                    "remarks"=>$men->remarks,
                    "free_user_id"=>$men->free_user_id,
                    "nocharge"=>$men->nocharge,
                    "is_takeout"=>$men->is_takeout,
                    "kitchen_slip_printed"=>$men->kitchen_slip_printed,
                    "ref_line_id"=>$men->ref_line_id,
                    "is_promo"=>$men->is_promo,
                    "promo_type"=>$men->promo_type,
                    "free_promo_amount"=>$men->free_promo_amount,
                    "menu_category_id"=>$men->menu_category_id,
                    "pf_id"=>$men->pf_id,
                    "is_checked" => $men->is_checked,
                );
                $mods = array();
                foreach ($order_mods as $mod) {
                    if($mod->line_id == $men->line_id){
                        $mods[$mod->sales_mod_id] = array(
                            "id"=>$mod->mod_id,
                            "sales_mod_id"=>$mod->sales_mod_id,
                            "mod_group_id"=>$mod->mod_group_id,
                            "line_id"=>$mod->line_id,
                            "name"=>$mod->mod_name,
                            "price"=>$mod->price,
                            "qty"=>$mod->qty,
                            "discount"=>$mod->discount,
                            "mod_line_id"=>$mod->mod_line_id,
                            "kitchen_slip_printed"=>$mod->kitchen_slip_printed
                        );
                        $submods = array();
                        foreach ($order_submods as $submod) {
                            if($submod->mod_line_id == $mod->mod_line_id){

                                $where = array('mod_id'=>$submod->mod_id,'name'=>$submod->submod_name);
                                $gdet = $this->site_model->get_details($where,'modifier_sub');

                                $submods[$submod->sales_submod_id] = array(
                                    "mod_id"=>$submod->mod_id,
                                    "sales_submod_id"=>$submod->sales_submod_id,
                                    // "mod_group_id"=>$mod->mod_group_id,
                                    "line_id"=>$submod->line_id,
                                    "name"=>$submod->submod_name,
                                    "price"=>$submod->price,
                                    "qty"=>$submod->qty,
                                    "group"=>$gdet[0]->group,
                                    // "discount"=>$mod->discount,
                                    "mod_line_id"=>$submod->mod_line_id,
                                    "kitchen_slip_printed"=>$submod->kitchen_slip_printed
                                );

                                $mods[$mod->sales_mod_id]['submodifiers'] = $submods;
                            }
                        }


                    }
                }
                $details[$men->line_id]['modifiers'] = $mods;
            }
            // echo "<pre>",print_r($details),"</pre>";die();
            //for new os print
            foreach ($order_menus as $men) {
                if($men->is_takeout == 0){

                    if(isset($details2[$men->menu_id])){
                    // $details2[$men->menu_id]['qty'] += $men->qty;
                    // if($details2[$men->menu_id]['remarks'] != ""){
                    //     $details2[$men->menu_id]['remarks'] .= ', '.$men->remarks;
                    // }else{
                    //     $details2[$men->menu_id]['remarks'] = $men->remarks;   
                    // }
                        $dets = $details2[$men->menu_id]['dets'];
                        $dets[$men->line_id] = array(
                            "qty"=>$men->qty,
                            "remarks"=>$men->remarks,
                            "line_id"=>$men->line_id,
                            "id"=>$men->sales_menu_id,
                            "kitchen_slip_printed"=>$men->kitchen_slip_printed 
                        );
                        $details2[$men->menu_id]['dets'] = $dets;

                    }else{
                        $details2[$men->menu_id] = array(
                            "menu_id"=>$men->menu_id,
                            "name"=>$men->menu_name,
                            "code"=>$men->menu_code,
                            "price"=>$men->price
                        );
                        $dets = array();
                        $dets[$men->line_id] = array(
                            "qty"=>$men->qty,
                            "remarks"=>$men->remarks,
                            "line_id"=>$men->line_id,
                            "id"=>$men->sales_menu_id,
                            "kitchen_slip_printed"=>$men->kitchen_slip_printed 
                        );
                        $details2[$men->menu_id]['dets'] = $dets;
                    }

                    $mods = array();
                    foreach ($order_mods as $mod) {
                        if($mod->line_id == $men->line_id){
                            $mods[$mod->sales_mod_id] = array(
                                "id"=>$mod->mod_id,
                                "sales_mod_id"=>$mod->sales_mod_id,
                                "mod_group_id"=>$mod->mod_group_id,
                                "line_id"=>$mod->line_id,
                                "name"=>$mod->mod_name,
                                "price"=>$mod->price,
                                "qty"=>$mod->qty,
                                "discount"=>$mod->discount,
                                "mod_line_id"=>$mod->mod_line_id,
                                "kitchen_slip_printed"=>$mod->kitchen_slip_printed
                            );

                            $submods = array();
                            foreach ($order_submods as $submod) {
                                if($submod->mod_line_id == $mod->mod_line_id){

                                    $where = array('mod_id'=>$submod->mod_id,'name'=>$submod->submod_name);
                                    $gdet = $this->site_model->get_details($where,'modifier_sub');

                                    $submods[$submod->sales_submod_id] = array(
                                        "mod_id"=>$submod->mod_id,
                                        "sales_submod_id"=>$submod->sales_submod_id,
                                        // "mod_group_id"=>$mod->mod_group_id,
                                        "line_id"=>$submod->line_id,
                                        "name"=>$submod->submod_name,
                                        "price"=>$submod->price,
                                        "qty"=>$submod->qty,
                                        "group"=>$gdet[0]->group,
                                        // "discount"=>$mod->discount,
                                        "mod_line_id"=>$submod->mod_line_id,
                                        "kitchen_slip_printed"=>$submod->kitchen_slip_printed
                                    );

                                    $mods[$mod->sales_mod_id]['submodifiers'] = $submods;
                                }
                            }


                        }
                    }
                    // $details[$men->line_id]['modifiers'] = $mods;
                    $details2[$men->menu_id]['dets'][$men->line_id]['modifiers'] = $mods;


                }else{
                    //takeout sa dinein
                    if(isset($details_to[$men->menu_id])){
                    // $details2[$men->menu_id]['qty'] += $men->qty;
                    // if($details2[$men->menu_id]['remarks'] != ""){
                    //     $details2[$men->menu_id]['remarks'] .= ', '.$men->remarks;
                    // }else{
                    //     $details2[$men->menu_id]['remarks'] = $men->remarks;   
                    // }
                        $dets = $details_to[$men->menu_id]['dets'];
                        $dets[$men->line_id] = array(
                            "qty"=>$men->qty,
                            "remarks"=>$men->remarks,
                            "line_id"=>$men->line_id,
                            "id"=>$men->sales_menu_id,
                            "kitchen_slip_printed"=>$men->kitchen_slip_printed 
                        );
                        $details_to[$men->menu_id]['dets'] = $dets;

                    }else{
                        $details_to[$men->menu_id] = array(
                            "menu_id"=>$men->menu_id,
                            "name"=>$men->menu_name,
                            "code"=>$men->menu_code,
                            "price"=>$men->price
                        );
                        $dets = array();
                        $dets[$men->line_id] = array(
                            "qty"=>$men->qty,
                            "remarks"=>$men->remarks,
                            "line_id"=>$men->line_id,
                            "id"=>$men->sales_menu_id,
                            "kitchen_slip_printed"=>$men->kitchen_slip_printed 
                        );
                        $details_to[$men->menu_id]['dets'] = $dets;
                    }

                    $mods = array();
                    foreach ($order_mods as $mod) {
                        if($mod->line_id == $men->line_id){
                            $mods[$mod->sales_mod_id] = array(
                                "id"=>$mod->mod_id,
                                "sales_mod_id"=>$mod->sales_mod_id,
                                "mod_group_id"=>$mod->mod_group_id,
                                "line_id"=>$mod->line_id,
                                "name"=>$mod->mod_name,
                                "price"=>$mod->price,
                                "qty"=>$mod->qty,
                                "discount"=>$mod->discount,
                                "mod_line_id"=>$mod->mod_line_id,
                                "kitchen_slip_printed"=>$mod->kitchen_slip_printed
                            );

                            $submods = array();
                            foreach ($order_submods as $submod) {
                                if($submod->mod_line_id == $mod->mod_line_id){

                                    $where = array('mod_id'=>$submod->mod_id,'name'=>$submod->submod_name);
                                    $gdet = $this->site_model->get_details($where,'modifier_sub');

                                    $submods[$submod->sales_submod_id] = array(
                                        "mod_id"=>$submod->mod_id,
                                        "sales_submod_id"=>$submod->sales_submod_id,
                                        // "mod_group_id"=>$mod->mod_group_id,
                                        "line_id"=>$submod->line_id,
                                        "name"=>$submod->submod_name,
                                        "price"=>$submod->price,
                                        "qty"=>$submod->qty,
                                        "group"=>$gdet[0]->group,
                                        // "discount"=>$mod->discount,
                                        "mod_line_id"=>$submod->mod_line_id,
                                        "kitchen_slip_printed"=>$submod->kitchen_slip_printed
                                    );

                                    $mods[$mod->sales_mod_id]['submodifiers'] = $submods;
                                }
                            }


                        }
                    }
                    // $details[$men->line_id]['modifiers'] = $mods;
                    $details_to[$men->menu_id]['dets'][$men->line_id]['modifiers'] = $mods;

                }
                
            }


            // echo "<pre>",print_r($details2),"</pre>";die();


            foreach ($order_items as $men){
                $details[$men->line_id] = array(
                    "id"=>$men->sales_item_id,
                    "menu_id"=>$men->item_id,
                    "name"=>$men->name,
                    "code"=>$men->code,
                    "price"=>$men->price,
                    "qty"=>$men->qty,
                    "no_tax"=>$men->no_tax,
                    "discount"=>$men->discount,
                    "remarks"=>$men->remarks,
                    "nocharge"=>$men->nocharge,
                    "is_takeout"=>$men->is_takeout,
                    "retail"=>1
                );
            }
            ### CHANGED #############
            $per_item_disc = false;
            foreach ($sales_discs as $dc) {
                if($dc->items != ""){
                    $per_item_disc = true;
                }
            }
            // var_dump($per_item_disc); die();
            if($per_item_disc){
                $discounts = array();
                $persons = array();
                foreach ($sales_discs as $dc) {
                    $discounts[$dc->items] = array(
                            "no_tax"  => $dc->no_tax,
                            "guest" => $dc->guest,
                            "disc_rate" => $dc->disc_rate,
                            "disc_id" => $dc->disc_id,
                            "disc_code" => $dc->disc_code,
                            "disc_type" => $dc->type,
                            "amount" => $dc->amount,
                            "fix" => $dc->fix,
                            "name" => $dc->name,
                            "code" => $dc->code,
                            "bday" => $dc->bday,
                            "items" => $dc->items,
                            "openamt" => 0,
                            // "persons" => array()
                    );
                }
            }else{
                $discounts = array();
                $persons = array();
                foreach ($sales_discs as $dc) {
                    $openamt = 0;
                    if($dc->fix == 1 && $dc->disc_rate == 0){
                        $openamt = $dc->amount;
                    }

                    $discounts[$dc->disc_code] = array(
                            "no_tax"  => $dc->no_tax,
                            "guest" => $dc->guest,
                            "disc_rate" => $dc->disc_rate,
                            "disc_id" => $dc->disc_id,
                            "disc_code" => $dc->disc_code,
                            "disc_type" => $dc->type,
                            "fix" => $dc->fix,
                            "items" => $dc->items,
                            "openamt" => $openamt,
                            "persons" => array()
                    );
                }
                foreach ($sales_discs as $dc) {
                    $pcode = $dc->code;
                    $bday = "";
                    if($dc->bday != "")
                        $bday = sql2Date($dc->bday);
                    $person = array(
                        "name"  => $dc->name,
                        "code"  => $dc->code,
                        "bday"  => $bday,
                        "amount" => $dc->amount,
                        "disc_rate" => $dc->disc_rate,
                    );
                    if(isset($discounts[$dc->disc_code])){
                        $dscp =  $discounts[$dc->disc_code]['persons'];
                        $dscp[$pcode] = $person;
                        $discounts[$dc->disc_code]['persons'] = $dscp;
                    }
                }
            }
            ### CHANGED #############
            $tax = array();
            foreach ($sales_tax as $tx) {
                $tax[$tx->sales_tax_id] = array(
                        "sales_id"  => $tx->sales_id,
                        "name"  => $tx->name,
                        "rate" => $tx->rate,
                        "amount" => $tx->amount
                    );
            }
            $no_tax = array();
            foreach ($sales_no_tax as $nt) {
                $no_tax[$nt->sales_no_tax_id] = array(
                    "sales_id" => $nt->sales_id,
                    "amount" => $nt->amount,
                );
            }
            $zero_rated = array();
            foreach ($sales_zero_rated as $zt) {
                $zero_rated[$zt->sales_zero_rated_id] = array(
                    "sales_id" => $zt->sales_id,
                    "amount" => $zt->amount,
                    "name" => $zt->name,
                    "card_no" => $zt->card_no
                );
            }
            $local_tax = array();
            foreach ($sales_local_tax as $lt) {
                $local_tax[$lt->sales_local_tax_id] = array(
                    "sales_id" => $lt->sales_id,
                    "amount" => $lt->amount,
                );
            }
            $charges = array();
            foreach ($sales_charges as $ch) {
                $charges[$ch->charge_id] = array(
                        "name"  => $ch->charge_name,
                        "code"  => $ch->charge_code,
                        "amount"  => $ch->rate,
                        "absolute" => $ch->absolute,
                        "total_amount" => $ch->amount,
                        "rate"=>$ch->rate
                    );
            }
            $pfields = array();
            foreach ($payment_fields as $pf) {
                $pfields[$pf->field_id] = array(
                        "field_name"  => $pf->field_name,
                        "value"  => $pf->value,
                    );
            }
            if($asJson)
                echo json_encode(array('order'=>$order,"details"=>$details,"discounts"=>$discounts,"taxes"=>$tax,"no_tax"=>$no_tax,"zero_rated"=>$zero_rated,"payments"=>$pays,"charges"=>$charges,"local_tax"=>$local_tax,"details2"=>$details2,"details_to"=>$details_to,"pfields"=>$pfields));
            else
                return array('order'=>$order,"details"=>$details,"discounts"=>$discounts,"taxes"=>$tax,"no_tax"=>$no_tax,"zero_rated"=>$zero_rated,"payments"=>$pays,"charges"=>$charges,"local_tax"=>$local_tax,"details2"=>$details2,"details_to"=>$details_to,"pfields"=>$pfields);
        }
        public function get_order_header($asJson=true,$sales_id=null,$args=array()){
            $this->load->model('dine/cashier_model');
            $this->load->model('dine/clock_model');
            $this->load->model('site/site_model');
            $orders = $this->cashier_model->get_trans_sales($sales_id,$args);
            $time = $this->site_model->get_db_now();
            foreach ($orders as $res) {
                $get_shift = $this->clock_model->get_shift_id(date2Sql($time),$res->user_id);
                $shift_id = $res->shift_id;
                if(count($get_shift) > 0){
                    $shift_id = $get_shift[0]->shift_id;
                }
                $order = array(
                    "sales_id"=>$res->sales_id,
                    "type"=>$res->type,
                    "user_id"=>$res->user_id,
                    "name"=>$res->username,
                    "terminal_id"=>$res->terminal_id,
                    "terminal_name"=>$res->terminal_name,
                    "shift_id"=>$shift_id,
                    "datetime"=>$res->datetime,
                    "amount"=>numInt($res->total_amount),
                    "balance"=>numInt($res->total_amount) - numInt($res->total_paid),
                    "paid"=>numInt($res->paid)
                );
            }
            if($asJson)
                echo json_encode($order);
            else
                return $order;
        }
        public function get_menu_categories($asJson=true){
            $this->load->model('dine/menu_model');
            $categories = $this->menu_model->get_menu_categories(null,true);
            $json = array();
            foreach ($categories as $cat) {
                $json[$cat->menu_cat_id] = array(
                    'name'=>$cat->menu_cat_name
                );
            }
            echo json_encode($json);
        }
        public function get_menu_cats($asJson=true){
            $this->load->model('dine/menu_model');

            $cat_page = $this->input->post('cat_page');
            $ttype = $this->input->post('ttype');

            $branch = $this->get_branch_details(false);
            $def_brand = $branch['brand'];

            if($this->session->userData('brand_session')){
                $def_brand = $this->session->userData('brand_session');
            }

            $menucats = null;
            if($ttype != 'dinein' && $ttype != 'reservation'){
                $where = array('trans_name'=>$ttype);
                $t_det = $this->site_model->get_details($where,'transaction_types');
                $ttype_id = $t_det[0]->trans_id;

                $where = array('trans_id'=>$ttype_id);
                $tcat_det = $this->site_model->get_details($where,'transaction_type_categories');

                if($tcat_det){
                    foreach ($tcat_det as $key => $value) {
                        $menucats[] = $value->menu_cat_id;
                    }
                }
                
            }



            // echo $def_brand;
            // if($cat_page == 1){
            //     $limit=0;
            // }else{
            //     $limit = ($cat_page - 1) * 28;
            // }
            // echo $limit.'aw';
            $all_categories = $this->menu_model->get_menu_categories($menucats,true,$def_brand,0);
            $allcat = count($all_categories);
            $must_count = MENU_COUNT_BUTTONS * $cat_page;
            $categories = $this->menu_model->get_menu_categories($menucats,true,$def_brand,$cat_page);
            // $tot_curr_count = $curr_page_count + (MENU_COUNT_BUTTONS * ($cat_page - 1));
            $next = 'no';
            if($allcat > $must_count){
                $next = 'yes';
            }

            // echo $this->db->last_query();die();
            $branch_color = $this->menu_model->get_branch_color(null);
            $json = array();
            $json1 = array();
            $b_color = "";
            foreach ($branch_color as $bc => $bc_val) {
                $b_color = $bc_val->branch_color;
                $branch_text_color = $bc_val->branch_text_color;
                
            }
            foreach ($categories as $cat) {
                if($cat->arrangement > 0){
                    $json1[$cat->menu_cat_id] = array(
                        'name'=>$cat->menu_cat_name,
                        'id'=>$cat->menu_cat_id,
                        'arrangement'=>$cat->arrangement,
                        'bcolor'=>$b_color,
                        'branch_text_color'=>$branch_text_color,
                    );
                }else{
                    $json[$cat->menu_cat_id] = array(
                        'name'=>$cat->menu_cat_name,
                        'id'=>$cat->menu_cat_id,
                        'arrangement'=>$cat->arrangement,
                        'bcolor'=>$b_color,
                        'branch_text_color'=>$branch_text_color
                    );
                }

            }

                    // echo "<pre>",print_r($bc_val->branch_color),"</pre>";die();
            usort($json1, function($a, $b) {
                return strcmp($a["arrangement"], $b["arrangement"]);
            });

            usort($json, function($a, $b) {
                return strcmp($a["name"], $b["name"]);
            });

            $json = array_merge($json1, $json);

            // echo "<pre>",print_r($json),"</pre>";die();

            echo json_encode(array('json'=>$json,'next'=>$next));
        }
        public function get_menu_cats_mcb($asJson=true){
            $this->load->model('dine/menu_model');
            $cat_id = MCB_CAT_ID;
            $categories = $this->menu_model->get_menu_categories($cat_id,true);
            $branch_color = $this->menu_model->get_branch_color(null);
            $json = array();
            $json1 = array();
            $b_color = "";
            foreach ($branch_color as $bc => $bc_val) {
                $b_color = $bc_val->branch_color;
                $branch_text_color = $bc_val->branch_text_color;
                
            }
            foreach ($categories as $cat) {
                if($cat->arrangement > 0){
                    $json1[$cat->menu_cat_id] = array(
                        'name'=>$cat->menu_cat_name,
                        'id'=>$cat->menu_cat_id,
                        'arrangement'=>$cat->arrangement,
                        'bcolor'=>$b_color,
                        'branch_text_color'=>$branch_text_color,
                    );
                }else{
                    $json[$cat->menu_cat_id] = array(
                        'name'=>$cat->menu_cat_name,
                        'id'=>$cat->menu_cat_id,
                        'arrangement'=>$cat->arrangement,
                        'bcolor'=>$b_color,
                        'branch_text_color'=>$branch_text_color
                    );
                }

            }

                    // echo "<pre>",print_r($bc_val->branch_color),"</pre>";die();
            usort($json1, function($a, $b) {
                return strcmp($a["arrangement"], $b["arrangement"]);
            });

            usort($json, function($a, $b) {
                return strcmp($a["name"], $b["name"]);
            });

            $json = array_merge($json1, $json);

            // echo "<pre>",print_r($json),"</pre>";die();


            echo json_encode($json);
        }
        public function get_menu_cats_unli($asJson=true){
            $this->load->model('dine/menu_model');

            $branch = $this->get_branch_details(false);
            $def_brand = $branch['brand'];

            if($this->session->userData('brand_session')){
                $def_brand = $this->session->userData('brand_session');
            }

            // echo $def_brand;

            $categories = $this->menu_model->get_menu_categories_unli(null,true,$def_brand);
            $branch_color = $this->menu_model->get_branch_color(null);
            $json = array();
            $json1 = array();
            $b_color = "";
            foreach ($branch_color as $bc => $bc_val) {
                $b_color = $bc_val->branch_color;
                $branch_text_color = $bc_val->branch_text_color;
                
            }
            foreach ($categories as $cat) {
                if($cat->arrangement > 0){
                    $json1[$cat->menu_cat_id] = array(
                        'name'=>$cat->menu_cat_name,
                        'id'=>$cat->menu_cat_id,
                        'arrangement'=>$cat->arrangement,
                        'bcolor'=>$b_color,
                        'branch_text_color'=>$branch_text_color,
                    );
                }else{
                    $json[$cat->menu_cat_id] = array(
                        'name'=>$cat->menu_cat_name,
                        'id'=>$cat->menu_cat_id,
                        'arrangement'=>$cat->arrangement,
                        'bcolor'=>$b_color,
                        'branch_text_color'=>$branch_text_color
                    );
                }

            }

                    // echo "<pre>",print_r($bc_val->branch_color),"</pre>";die();
            usort($json1, function($a, $b) {
                return strcmp($a["arrangement"], $b["arrangement"]);
            });

            usort($json, function($a, $b) {
                return strcmp($a["name"], $b["name"]);
            });

            $json = array_merge($json1, $json);

            // echo "<pre>",print_r($json),"</pre>";die();


            echo json_encode($json);
        }
        public function get_item_categories($asJson=true){
            $this->load->model('dine/settings_model');
            $categories = $this->settings_model->get_category(null,true);
            $json = array();
            foreach ($categories as $cat) {
                $json[$cat->cat_id] = array(
                    'name'=>$cat->name
                );
            }
            // echo $this->db->last_query();die();
            echo json_encode($json);
        }
        public function get_item_scanned(){
            $this->load->model('dine/items_model');
            $this->load->model('dine/menu_model');
            $barcode = $this->input->post('barcode');
            $ttype = $this->input->post('ttype');

            $where = array('menu_barcode'=>$barcode);
            $dets = $this->site_model->get_details($where,'menus');
            if($dets){
                $menus = $this->menu_model->get_menus($dets[0]->menu_id,null,true,null,0);
                $now = $this->site_model->get_db_now();
                $day = strtolower(date('D',strtotime($now)));
                $time = strtolower(date('H:i:s',strtotime($now)));
                if(count($menus) > 0){
                    $ids = array();
                    $mnschds = array();
                    foreach ($menus as $res) {
                        $check_reorder = 0;
                        if(CHECK_REORDER){
                            $check_reorder = 1;
                        }

                        $menu_oh = 0;
                        //get settings if allow negative inv
                        $set = $this->cashier_model->get_pos_settings();

                        // $this->site_model->db = $this->load->database('default', TRUE);
                        if($res->img_path){
                            $img_path = $res->img_path;
                        }else{
                            $img_path = 'uploads/menus/noimage.png';
                        }

                        $price = $res->cost;
                        if($ttype != 'dinein' && $ttype != 'reservation'){
                            $where = array('menu_id'=>$res->menu_id,'trans_type'=>$ttype);
                            $cost_det = $this->site_model->get_details($where,'menu_prices');

                            if(count($cost_det) > 0){
                                $price = $cost_det[0]->price;
                            }
                        }

                        $cart_menu_qty = $this->count_trans_menu($res->menu_id,false);

                        $json[$res->menu_id] = array(
                            "id"=>$res->menu_id,
                            "name"=>$res->menu_name,
                            "category"=>$res->menu_cat_id,
                            "category_name"=>$res->category_name,
                            // "cost"=>$res->cost,
                            "cost"=>$price,
                            "no_tax"=>$res->no_tax,
                            "free"=>$res->free,
                            "sched"=>$res->menu_sched_id,
                            "menu_oh"=>$menu_oh,
                            "neg_inv"=>$set->neg_inv,
                            "reorder_qty"=>$res->reorder_qty,
                            "check_reorder"=>$check_reorder,
                            "img_path"=>$img_path,
                            // "bcolor"=>$b_color,
                            // 'branch_text_color'=>$branch_text_color,
                            'unavailable'=>$res->unavailable,
                            'qty'=>$res->menu_qty != '' ? $res->menu_qty : '',
                            'cart_menu_qty'=>$cart_menu_qty,
                        );

                        // echo "<pre>",print_r($json),"</pre>";

                        $ids[] = $res->menu_id;
                        if($res->menu_sched_id != 0 || $res->menu_sched_id != "")
                            $mnschds[] = $res->menu_sched_id;
                    }
                    #########################
                    ### SCHEDULE
                    #########################
                        $ntfnd = array();
                        if(count($mnschds) > 0){
                            $args['menu_schedule_details.menu_sched_id'] = $mnschds;
                            $args['menu_schedule_details.day'] = $day;
                            $sched = $this->site_model->get_tbl('menu_schedule_details',$args);
                            $mn_sched = array();
                            foreach ($json as $menu_id => $mn) {
                                foreach ($sched as $res) {
                                    if($mn['sched'] == $res->menu_sched_id){
                                        $mn_sched[$menu_id] = array('time_on'=>$res->time_on,'time_off'=>$res->time_off);
                                    }
                                }                           
                            }
                            $found = array();
                            if(count($mn_sched) > 0){
                                foreach ($mn_sched as $menu_id => $mnsc) {
                                    $tm  = strtotime($time);
                                    $stm = strtotime($mnsc['time_on']);
                                    $etm = strtotime($mnsc['time_off']);
                                    if($etm > $stm ){
                                        if($tm <= $stm){
                                            unset($json[$menu_id]);
                                            
                                        }   
                                        if($tm >= $etm){
                                            unset($json[$menu_id]);
                                                                                     
                                        }
                                    }
                                    $found[] = $menu_id;
                                }
                            }
                            if(count($mn_sched) > 0){
                                foreach ($json as $menu_id => $mn) {
                                    if($mn['sched'] != "" && $mn['sched'] != 0){
                                       if(!in_array($menu_id,$found)){
                                        unset($json[$menu_id]);
                                       }
                                    }
                                }
                            }
                        }                    
                    #########################
                    ### PROMO
                    #########################
                        $promos = $this->cashier_model->get_menu_promos($ids,$ttype);
                        $prs = array();
                        $prm = array();
                        foreach ($promos as $pr) {
                            $prs[] = $pr->promo_id;
                            $prm[$pr->item_id][] = array('id'=>$pr->promo_id,'val'=>$pr->value,'abs'=>(int)$pr->absolute);
                        }
                        $time = $this->site_model->get_db_now();
                        $day = strtolower(date('D',strtotime($time)));
                        $sched = $this->cashier_model->get_menu_promo_schedule($prs,$day,date2SqlDateTime($time));
                        $schs = array();
                        foreach ($sched as $sc) {
                            $schs[] = $sc->promo_id;
                        }
                        foreach ($json as $menu_id => $opt) {
                            if(isset($prm[$menu_id])){
                                foreach ($prm[$menu_id] as $p) {
                                    if(in_array($p['id'], $schs)){
                                        if($pr->promo_qty == $pr->disc_qty){
                                            if($p['abs'] == 1){
                                                $opt['cost'] -= $pr->value;
                                            }
                                            else{
                                                $opt['cost'] -=  ($pr->value / 100) * $opt['cost'];
                                            }
                                        }
                                        

                                        $opt['promo_id'] = $pr->promo_id;
                                        $opt['promo_id'] = $pr->promo_code;
                                        $opt['disc_rate'] = $pr->value;
                                        $opt['promo_qty'] = $pr->promo_qty;
                                        $opt['disc_qty'] = $pr->disc_qty;

                                        $json[$menu_id] = $opt;
                                        break;
                                    }
                                }####
                            }
                        }
                }
                usort($json, function($a, $b) {
                    return strcmp($a["name"], $b["name"]);
                });

                echo json_encode(array('json'=>$json,'error'=>"","menu_id"=>$dets[0]->menu_id));
            }else{
                echo json_encode(array('json'=>$json,'error'=>"Item Not Found.","menu_id"=>''));
            }

            // $args['items.barcode'] = array('use'=>'where','val'=>$barcode);
            // $item_list = $this->items_model->get_item(null,$args);
            // if($item_list){
            //     $opt = array('cost'=>$item_list[0]->cost,'name'=>$item_list[0]->name);
            //     echo json_encode(array('error'=>"",'item_id'=>$item_list[0]->item_id,'opt'=>$opt));
            // }
            // else{
            //     echo json_encode(array('error'=>"Item Not Found.",'item_id'=>'','opt'=>''));
            // }
        }
        public function get_item_lists(){
            $this->load->model('dine/items_model');
            $args = array();
            $search = "";
            $code = "";
            $title = "";
            $args['items.type'] = array(2,3);
            if($this->input->post('search')){
                $search = $this->input->post('search');
                $title = "Search Results for \"".$search."\"";
                $args['items.barcode'] = array('use'=>'like','val'=>$search);
                $args['items.code'] = array('use'=>'or_like','val'=>$search);
                $args['items.name'] = array('use'=>'or_like','val'=>$search);
                $args['items.desc'] = array('use'=>'or_like','val'=>$search);
            }
            if($this->input->post('cat_id')){
                $title = $this->input->post('cat_name');
                $args['items.cat_id'] = $this->input->post('cat_id');
            }

            $item_list = $this->items_model->get_item(null,$args);
            $this->make->sUl(array('class'=>'ul-hover-blue'));
            $items = array();
            foreach ($item_list as $res) {
                if($res->inactive == 0){
                    // $this->make->sLi(array('id'=>'retail-itemx-'.$res->item_id,'class'=>'retail-item','style'=>'padding:5px;padding-bottom:10px;padding-top:10px;border-bottom:1px solid #ddd;'));
                    //     $cost = $this->make->span($res->cost,array('class'=>'pull-right','return'=>true));            
                    //     $this->make->H(4,$res->name." ".$cost,array('style'=>'margin:0;padding:0;margin-left:10px;color:red;'));            
                    //     $this->make->H(5,$res->desc,array('style'=>'margin:0;padding:0;margin-left:10px;color:red;'));            
                    // $this->make->eLi();   
                    // $items[$res->item_id] = array(
                    //     "name"=> $res->name,
                    //     "cost"=> $res->cost
                    // );

                    $this->make->sLi(array('id'=>'retail-item-'.$res->item_id,'class'=>'retail-item','style'=>'padding:5px;padding-bottom:10px;padding-top:10px;border-bottom:1px solid #ddd;'));
                        $cost = $this->make->span($res->cost,array('class'=>'pull-right','return'=>true));            
                        $this->make->H(4,$res->name." ".$cost,array('style'=>'margin:0;padding:0;margin-left:10px;'));            
                        $this->make->H(5,$res->desc,array('style'=>'margin:0;padding:0;margin-left:10px;'));            
                    $this->make->eLi();   
                    $items[$res->item_id] = array(
                        "name"=> $res->name,
                        "cost"=> $res->cost
                    );
                }
            }
            $this->make->eUl();
            $code = $this->make->code();
            echo json_encode(array('code'=>$code,'title'=>$title,'items'=>$items));
        }
        public function get_customers_lists(){
            $this->load->model('dine/items_model');
            $args = array();
            $search = "";
            $code = "";
            $title = "";
            if($this->input->post('search')){
                $search = $this->input->post('search');
                $title = "Search Results for \"".$search."\"";
                $args['customers.fname'] = array('use'=>'like','val'=>$search);
                $args['customers.mname'] = array('use'=>'or_like','val'=>$search);
                $args['customers.lname'] = array('use'=>'or_like','val'=>$search);
            }
            $item_list = $this->items_model->get_customers(null,$args);
            $this->make->sUl(array('class'=>'ul-hover-blue'));
            $items = array();
            foreach ($item_list as $res) {
                $this->make->sLi(array('id'=>'customer-item-'.$res->cust_id,'class'=>'customer-item','style'=>'padding:5px;padding-bottom:10px;padding-top:10px;border-bottom:1px solid #ddd;'));
                    $this->make->H(4,$res->fname." ".$res->mname." ".$res->lname,array('style'=>'margin:0;padding:0;margin-left:10px;'));            
                $this->make->eLi();   
                $items[$res->cust_id] = array(
                    "name"=> $res->fname." ".$res->mname." ".$res->lname,
                );
            }
            $this->make->eUl();
            $code = $this->make->code();
            echo json_encode(array('code'=>$code,'title'=>$title,'items'=>$items));
        }
        public function scan_code($code=null){
            $this->load->model('dine/items_model');
            $args['items.type'] = array(2,3);
            $args['items.barcode'] = $code;
            $item_list = $this->items_model->get_item(null,$args);
            // echo $this->items_model->db->last_query();
            $error = "";
            $item = array();
            if(count($item_list) > 0){
                foreach ($item_list as $res) {
                    $item =  array(
                        "item_id" => $res->item_id,
                        "name"=> $res->name,
                        "cost"=> $res->cost
                    );
                    break;
                }    
            }
            else{
                $error = "Item not found.";
            }
            echo json_encode(array('error'=>$error,'item'=>$item));
        }
        ### NOT USED IN GETTING MENUS
        public function get_menus($cat_id=null,$item_id=null,$asJson=true){
            $this->load->model('dine/menu_model');
            $this->load->model('dine/cashier_model');
            $this->load->model('site/site_model');
            $menus = $this->menu_model->get_menus($item_id,$cat_id,true);
            $json = array();

            if(count($menus) > 0){
                $ids = array();
                foreach ($menus as $res) {
                    $json[$res->menu_id] = array(
                        "name"=>$res->menu_name,
                        "category"=>$res->menu_cat_id,
                        "category_name"=>$res->category_name,
                        "cost"=>$res->cost,
                        "no_tax"=>$res->no_tax,
                        "free"=>$res->free,
                    );
                    $ids[] = $res->menu_id;
                }
                $promos = $this->cashier_model->get_menu_promos($ids);
                $prs = array();
                $prm = array();
                foreach ($promos as $pr) {
                    $prs[] = $pr->promo_id;
                    $prm[$pr->item_id][] = array('id'=>$pr->promo_id,'val'=>$pr->value,'abs'=>$pr->absolute);
                }

                $time = $this->site_model->get_db_now();
                $day = strtolower(date('D',strtotime($time)));
                $sched = $this->cashier_model->get_menu_promo_schedule($prs,$day,date2SqlDateTime($time));

                $schs = array();
                foreach ($sched as $sc) {
                    $schs[] = $sc->promo_id;
                }

                foreach ($json as $menu_id => $opt) {
                    if(isset($prm[$menu_id])){
                        foreach ($prm[$menu_id] as $p) {
                            if(in_array($p['id'], $schs)){
                                if($p['abs'] == 0){
                                    $opt['cost'] -= $pr->value;

                                }
                                else{
                                    $opt['cost'] -=  ($pr->value / 100) * $opt['cost'];
                                }
                                $json[$menu_id] = $opt;
                                break;
                            }
                        }####
                    }
                }

            }
            echo json_encode($json);
        }
        public function get_menus_search_sorted($cat_id=null,$item_id=null,$asJson=true){
            $this->load->model('dine/menu_model');
            $this->load->model('dine/cashier_model');
            $this->load->model('site/site_model');
            $search = $this->input->post('search');
            $ttype = $this->input->post('ttype');

            $branch = $this->get_branch_details(false);
            $def_brand = $branch['brand'];

            if($this->session->userData('brand_session')){
                $def_brand = $this->session->userData('brand_session');
            }

            $menus = $this->menu_model->get_menus($item_id,$cat_id,true,$search);

            $branch_color = $this->menu_model->get_branch_color(null);
            $b_color = "";
            foreach ($branch_color as $bc => $bc_val) {
                $b_color = $bc_val->branch_color;
                if(empty($bc_val->branch_color)){
                    $branch_text_color = '#333';
                }else{
                    $branch_text_color = $bc_val->branch_text_color;
                }
            }

            // echo $this->db->last_query(); die();
            $json = array();
            $now = $this->site_model->get_db_now();
            $day = strtolower(date('D',strtotime($now)));
            $time = strtolower(date('H:i:s',strtotime($now)));
            if(count($menus) > 0){
                $ids = array();
                $mnschds = array();
                foreach ($menus as $res) {
                    if($res->inactive == 0 && $res->brand == $def_brand){
                        $check_reorder = 0;
                        if(CHECK_REORDER){
                            $check_reorder = 1;
                        }

                        $menu_oh = 0;
                        //get total qty sales
                        // if($check_reorder == 1){
                        //     $joinm = array();
                        //     $tablem = "trans_sales_menus";
                        //     $selectm = "sum(trans_sales_menus.qty) as total_qty";
                        //     // $selectm_s = "sum(qty) as menu_sales_qty";
                        //     $joinm["trans_sales"] = array('content'=>"trans_sales.sales_id = trans_sales_menus.sales_id");

                        //     $ordermm = null;
                        //     $groupmm = null;
                        //     $to = date('Y-m-d');
                        //     $args4['trans_sales.type_id'] = 10;
                        //     $args4['trans_sales.inactive'] = '0';
                        //     // $args4['trans_sales.trans_ref is not null'] = null;
                        //     $args4["DATE(trans_sales.datetime) = '".$to."'"] = array('use'=>'where','val'=>null,'third'=>false);
                        //     $args4['trans_sales_menus.menu_id'] = $res->menu_id;
                        //     // $this->site_model->db = $this->load->database('main', TRUE);
                        //     $get_menus_sales = $this->site_model->get_tbl($tablem,$args4,$ordermm,$joinm,true,$selectm,$groupmm); 
                        //     $qty_sales = 0;
                        //     if($get_menus_sales){
                        //         $qty_sales = $get_menus_sales[0]->total_qty;
                        //     }

                        //     // echo $qty_sales;
                        //     // for menu move total qty
                        //     $argst = array();
                        //     $join = array();
                        //     $table  = "menu_moves";
                        //     $select = "sum(menu_moves.qty) as total_qty_moves";
                        //     $argst["DATE(menu_moves.reg_date) = '".$to."'"] = array('use'=>'where','val'=>null,'third'=>false);
                        //     $argst['menu_moves.item_id'] = $res->menu_id;

                        //     $argst['menu_moves.inactive'] = 0;
                        //     $order = null;
                        //     $group = null;
                            
                        //     $this->site_model->db = $this->load->database('default', TRUE);
                        //     $items = $this->site_model->get_tbl($table,$argst,$order,$join,true,$select,$group);
                        //     $qty_moves = 0;
                        //     if($items){
                        //         $qty_moves = $items[0]->total_qty_moves;
                        //     }

                        //     $menu_oh = $qty_moves - $qty_sales;
                        // }
                        //get settings if allow negative inv
                        $set = $this->cashier_model->get_pos_settings();

                        $price = $res->cost;
                        if($ttype != 'dinein' && $ttype != 'reservation'){
                            $where = array('menu_id'=>$res->menu_id,'trans_type'=>$ttype);
                            $cost_det = $this->site_model->get_details($where,'menu_prices');

                            if(count($cost_det) > 0){
                                $price = $cost_det[0]->price;
                            }
                        }

                        $cart_menu_qty = $this->count_trans_menu($res->menu_id,false);
                        
                        $json[$res->menu_id] = array(
                            "id"=>$res->menu_id,
                            "name"=>$res->menu_name,
                            "category"=>$res->menu_cat_id,
                            // "cost"=>$res->cost,
                            "orig_cost"=>$price,
                            "cost"=>$price,
                            "no_tax"=>$res->no_tax,
                            "free"=>$res->free,
                            "sched"=>$res->menu_sched_id,
                            "menu_oh"=>$menu_oh,
                            "neg_inv"=>$set->neg_inv,
                            "reorder_qty"=>$res->reorder_qty,
                            "check_reorder"=>$check_reorder,
                            "bcolor"=>$b_color,
                            'branch_text_color'=>$branch_text_color,
                            'unavailable'=>$res->unavailable,
                            'qty'=>$res->menu_qty != '' ? $res->menu_qty : '',
                            'cart_menu_qty'=>$cart_menu_qty,
                        );
                        $ids[] = $res->menu_id;
                        if($res->menu_sched_id != 0 || $res->menu_sched_id != "")
                            $mnschds[] = $res->menu_sched_id;
                    }
                }
                $ntfnd = array();
                if(count($mnschds) > 0){
                    $args['menu_schedule_details.menu_sched_id'] = $mnschds;
                    $args['menu_schedule_details.day'] = $day;
                    $sched = $this->site_model->get_tbl('menu_schedule_details',$args);
                    $mn_sched = array();
                    foreach ($json as $menu_id => $mn) {
                        foreach ($sched as $res) {
                            if($mn['sched'] == $res->menu_sched_id){
                                $mn_sched[$menu_id] = array('time_on'=>$res->time_on,'time_off'=>$res->time_off);
                            }
                        }                           
                    }
                    $found = array();
                    if(count($mn_sched) > 0){
                        foreach ($mn_sched as $menu_id => $mnsc) {
                            $tm  = strtotime($time);
                            $stm = strtotime($mnsc['time_on']);
                            $etm = strtotime($mnsc['time_off']);
                            if($etm > $stm ){
                                if($tm <= $stm){
                                    unset($json[$menu_id]);
                                    
                                }   
                                if($tm >= $etm){
                                    unset($json[$menu_id]);
                                                                             
                                }
                            }
                            $found[] = $menu_id;
                        }
                    }
                    if(count($mn_sched) > 0){
                        foreach ($json as $menu_id => $mn) {
                            if($mn['sched'] != "" && $mn['sched'] != 0){
                               if(!in_array($menu_id,$found)){
                                unset($json[$menu_id]);
                               }
                            }
                        }
                    }
                }  
                $promos = $this->cashier_model->get_menu_promos($ids,$ttype);
                $prs = array();
                $prm = array();
                foreach ($promos as $pr) {
                    $prs[] = $pr->promo_id;
                    $prm[$pr->item_id][] = array('id'=>$pr->promo_id,'val'=>$pr->value,'abs'=>(int)$pr->absolute);
                }
                $time = $this->site_model->get_db_now();
                $day = strtolower(date('D',strtotime($time)));
                $sched = $this->cashier_model->get_menu_promo_schedule($prs,$day,date2SqlDateTime($time));
                $schs = array();
                foreach ($sched as $sc) {
                    $schs[] = $sc->promo_id;
                }
                foreach ($json as $menu_id => $opt) {
                    if(isset($prm[$menu_id])){
                        foreach ($prm[$menu_id] as $p) {
                            if(in_array($p['id'], $schs)){
                                if($pr->promo_qty == $pr->disc_qty){
                                    if($p['abs'] == 1){
                                        $opt['cost'] -= $pr->value;
                                    }
                                    else{
                                        $opt['cost'] -=  ($pr->value / 100) * $opt['cost'];
                                    }
                                }
                                

                                $opt['promo_id'] = $pr->promo_id;
                                $opt['promo_id'] = $pr->promo_code;
                                $opt['disc_rate'] = $pr->value;
                                $opt['promo_qty'] = $pr->promo_qty;
                                $opt['disc_qty'] = $pr->disc_qty;
                                
                                $json[$menu_id] = $opt;
                                break;
                            }
                        }####
                    }
                }
            }
            usort($json, function($a, $b) {
                return strcmp($a["name"], $b["name"]);
            });
            echo json_encode($json);
        }
        public function get_menus_sorted($cat_id=null,$item_id=null,$asJson=true){
            $this->load->model('dine/menu_model');
            $this->load->model('dine/cashier_model');
            $this->load->model('site/site_model');
            $ttype = $this->input->post('ttype');
            $page = $this->input->post('page');
            $branch_color = $this->menu_model->get_branch_color(null);
            $b_color = "";
            foreach ($branch_color as $bc => $bc_val) {
                $b_color = $bc_val->branch_color;
                if(empty($bc_val->branch_color)){
                    $branch_text_color = '#333';
                }else{
                    $branch_text_color = $bc_val->branch_text_color;
                }
            }
            // echo $ttype; die();
            if(SHOW_NEW_SUBCATEGORY){

                $menus_sub = $this->menu_model->get_subcategory($item_id,$cat_id,true,null,$page);

                $menus = $this->menu_model->get_menus_new($item_id,$cat_id,true,null,$page);
            }else{
                $menus = $this->menu_model->get_menus($item_id,$cat_id,true,null,$page);
            }
            $now = $this->site_model->get_db_now();
            $day = strtolower(date('D',strtotime($now)));
            $time = strtolower(date('H:i:s',strtotime($now)));
            $json = array();
            $jsons = array();

            if(count($menus_sub) > 0){
                $ids_sub = array();
                $mnschds = array();
                foreach ($menus_sub as $res) {
                    $jsons[$res->menu_sub_id] = array(
                        "id"=>$res->menu_sub_id,
                        "name"=>$res->menu_sub_name,
                        "category"=>$res->category_id,
                        "bcolor"=>$b_color,
                            "branch_text_color"=>$branch_text_color,
                        // "cost"=>$res->cost,
                        // "no_tax"=>$res->no_tax,
                        // "free"=>$res->free,
                        // "sched"=>$res->menu_sched_id,
                    );
                    $ids_sub[] = $res->menu_sub_id;
                    // if($res->menu_sched_id != 0 || $res->menu_sched_id != "")
                    //     $mnschds[] = $res->menu_sched_id;
                }
                
            }
            usort($jsons, function($a, $b) {
                return strcmp($a["name"], $b["name"]);
            });


            if(count($menus) > 0){
                $ids = array();
                $mnschds = array();
                foreach ($menus as $res) {
                    $check_reorder = 0;
                    if(CHECK_REORDER){
                        $check_reorder = 1;
                    }

                    $menu_oh = 0;
                    if($check_reorder == 1){
                        //get total qty sales
                        $joinm = array();
                        $tablem = "trans_sales_menus";
                        $selectm = "sum(trans_sales_menus.qty) as total_qty";
                        // $selectm_s = "sum(qty) as menu_sales_qty";
                        $joinm["trans_sales"] = array('content'=>"trans_sales.sales_id = trans_sales_menus.sales_id");

                        $ordermm = null;
                        $groupmm = null;
                        $to = date('Y-m-d');
                        $args4['trans_sales.type_id'] = 10;
                        $args4['trans_sales.inactive'] = '0';
                        // $args4['trans_sales.trans_ref is not null'] = null;
                        $args4["DATE(trans_sales.datetime) = '".$to."'"] = array('use'=>'where','val'=>null,'third'=>false);
                        $args4['trans_sales_menus.menu_id'] = $res->menu_id;
                        // $this->site_model->db = $this->load->database('main', TRUE);
                        $get_menus_sales = $this->site_model->get_tbl($tablem,$args4,$ordermm,$joinm,true,$selectm,$groupmm); 
                        $qty_sales = 0;
                        if($get_menus_sales){
                            $qty_sales = $get_menus_sales[0]->total_qty;
                        }

                        // echo $qty_sales;
                        // for menu move total qty
                        $argst = array();
                        $join = array();
                        $table  = "menu_moves";
                        $select = "sum(menu_moves.qty) as total_qty_moves";
                        $argst["DATE(menu_moves.reg_date) = '".$to."'"] = array('use'=>'where','val'=>null,'third'=>false);
                        $argst['menu_moves.item_id'] = $res->menu_id;

                        $argst['menu_moves.inactive'] = 0;
                        $order = null;
                        $group = null;
                        
                        $this->site_model->db = $this->load->database('default', TRUE);
                        $items = $this->site_model->get_tbl($table,$argst,$order,$join,true,$select,$group);
                        $qty_moves = 0;
                        if($items){
                            $qty_moves = $items[0]->total_qty_moves;
                        }

                        $menu_oh = $qty_moves - $qty_sales;
                    }

                    //get settings if allow negative inv
                    $set = $this->cashier_model->get_pos_settings();

                    // $this->site_model->db = $this->load->database('default', TRUE);
                    if($res->img_path){
                        $img_path = $res->img_path;
                    }else{
                        $img_path = 'uploads/menus/noimage.png';
                    }

                    $price = $res->cost;
                    if($ttype != 'dinein' && $ttype != 'reservation'){
                        $where = array('menu_id'=>$res->menu_id,'trans_type'=>$ttype);
                        $cost_det = $this->site_model->get_details($where,'menu_prices');

                        if(count($cost_det) > 0){
                            $price = $cost_det[0]->price;
                        }
                    }

                    $cart_menu_qty = $this->count_trans_menu($res->menu_id,false);

                    $json[$res->menu_id] = array(
                        "id"=>$res->menu_id,
                        "name"=>$res->menu_name,
                        "category"=>$res->menu_cat_id,
                        "category_name"=>$res->category_name,
                        // "cost"=>$res->cost,
                        "cost"=>$price,
                        "no_tax"=>$res->no_tax,
                        "free"=>$res->free,
                        "sched"=>$res->menu_sched_id,
                        "menu_oh"=>$menu_oh,
                        "neg_inv"=>$set->neg_inv,
                        "reorder_qty"=>$res->reorder_qty,
                        "check_reorder"=>$check_reorder,
                        "img_path"=>$img_path,
                        "bcolor"=>$b_color,
                        'branch_text_color'=>$branch_text_color,
                        'unavailable'=>$res->unavailable,
                        'qty'=>$res->menu_qty != '' ? $res->menu_qty : '',
                        'cart_menu_qty'=>$cart_menu_qty,
                    );

                    // echo "<pre>",print_r($json),"</pre>";

                    $ids[] = $res->menu_id;
                    if($res->menu_sched_id != 0 || $res->menu_sched_id != "")
                        $mnschds[] = $res->menu_sched_id;
                }
                #########################
                ### SCHEDULE
                #########################
                    $ntfnd = array();
                    if(count($mnschds) > 0){
                        $args['menu_schedule_details.menu_sched_id'] = $mnschds;
                        $args['menu_schedule_details.day'] = $day;
                        $sched = $this->site_model->get_tbl('menu_schedule_details',$args);
                        $mn_sched = array();
                        foreach ($json as $menu_id => $mn) {
                            foreach ($sched as $res) {
                                if($mn['sched'] == $res->menu_sched_id){
                                    $mn_sched[$menu_id] = array('time_on'=>$res->time_on,'time_off'=>$res->time_off);
                                }
                            }                           
                        }
                        $found = array();
                        if(count($mn_sched) > 0){
                            foreach ($mn_sched as $menu_id => $mnsc) {
                                $tm  = strtotime($time);
                                $stm = strtotime($mnsc['time_on']);
                                $etm = strtotime($mnsc['time_off']);
                                if($etm > $stm ){
                                    if($tm <= $stm){
                                        unset($json[$menu_id]);
                                        
                                    }   
                                    if($tm >= $etm){
                                        unset($json[$menu_id]);
                                                                                 
                                    }
                                }
                                $found[] = $menu_id;
                            }
                        }
                        if(count($mn_sched) > 0){
                            foreach ($json as $menu_id => $mn) {
                                if($mn['sched'] != "" && $mn['sched'] != 0){
                                   if(!in_array($menu_id,$found)){
                                    unset($json[$menu_id]);
                                   }
                                }
                            }
                        }
                    }                    
                #########################
                ### PROMO
                #########################
                    $promos = $this->cashier_model->get_menu_promos($ids,$ttype);
                    $prs = array();
                    $prm = array();
                    foreach ($promos as $pr) {
                        $prs[] = $pr->promo_id;
                        $prm[$pr->item_id][] = array('id'=>$pr->promo_id,'val'=>$pr->value,'abs'=>(int)$pr->absolute);
                    }
                    $time = $this->site_model->get_db_now();
                    $day = strtolower(date('D',strtotime($time)));
                    $sched = $this->cashier_model->get_menu_promo_schedule($prs,$day,date2SqlDateTime($time));
                    $schs = array();
                    foreach ($sched as $sc) {
                        $schs[] = $sc->promo_id;
                    }
                    foreach ($json as $menu_id => $opt) {
                        if(isset($prm[$menu_id])){
                            foreach ($prm[$menu_id] as $p) {
                                if(in_array($p['id'], $schs)){
                                    if($pr->promo_qty == $pr->disc_qty){
                                        if($p['abs'] == 1){
                                            $opt['cost'] -= $pr->value;
                                        }
                                        else{
                                            $opt['cost'] -=  ($pr->value / 100) * $opt['cost'];
                                        }
                                    }
                                    

                                    $opt['promo_id'] = $pr->promo_id;
                                    $opt['promo_id'] = $pr->promo_code;
                                    $opt['disc_rate'] = $pr->value;
                                    $opt['promo_qty'] = $pr->promo_qty;
                                    $opt['disc_qty'] = $pr->disc_qty;

                                    $json[$menu_id] = $opt;
                                    break;
                                }
                            }####
                        }
                    }
            }
            usort($json, function($a, $b) {
                return strcmp($a["name"], $b["name"]);
            });

            $setting = $this->cashier_model->get_pos_settings();
            // echo "<pre>",print_r($json),"</pre>";die();
            echo json_encode(array('json'=>$json,'show_img'=>$setting->show_image,'jsons'=>$jsons));
        }
        public function get_menus_sorted_orig($cat_id=null,$item_id=null,$asJson=true){
            $this->load->model('dine/menu_model');
            $this->load->model('dine/cashier_model');
            $this->load->model('site/site_model');
            $menus = $this->menu_model->get_menus($item_id,$cat_id,true);
            $now = $this->site_model->get_db_now();
            $day = strtolower(date('D',strtotime($now)));
            $time = strtolower(date('H:i:s',strtotime($now)));
            $json = array();
            if(count($menus) > 0){
                $ids = array();
                $mnschds = array();
                foreach ($menus as $res) {
                    $json[$res->menu_id] = array(
                        "id"=>$res->menu_id,
                        "name"=>$res->menu_name,
                        "category"=>$res->menu_cat_id,
                        "cost"=>$res->cost,
                        "no_tax"=>$res->no_tax,
                        "free"=>$res->free,
                        "sched"=>$res->menu_sched_id,
                    );
                    $ids[] = $res->menu_id;
                    if($res->menu_sched_id != 0 || $res->menu_sched_id != "")
                        $mnschds[] = $res->menu_sched_id;
                }
                #########################
                ### SCHEDULE
                #########################
                    $ntfnd = array();
                    if(count($mnschds) > 0){
                        $args['menu_schedule_details.menu_sched_id'] = $mnschds;
                        $args['menu_schedule_details.day'] = $day;
                        $sched = $this->site_model->get_tbl('menu_schedule_details',$args);
                        $mn_sched = array();
                        foreach ($json as $menu_id => $mn) {
                            foreach ($sched as $res) {
                                if($mn['sched'] == $res->menu_sched_id){
                                    $mn_sched[$menu_id] = array('time_on'=>$res->time_on,'time_off'=>$res->time_off);
                                }
                            }                           
                        }
                        $found = array();
                        if(count($mn_sched) > 0){
                            foreach ($mn_sched as $menu_id => $mnsc) {
                                $tm  = strtotime($time);
                                $stm = strtotime($mnsc['time_on']);
                                $etm = strtotime($mnsc['time_off']);
                                if($etm > $stm ){
                                    if($tm <= $stm){
                                        unset($json[$menu_id]);
                                        
                                    }   
                                    if($tm >= $etm){
                                        unset($json[$menu_id]);
                                                                                 
                                    }
                                }
                                $found[] = $menu_id;
                            }
                        }
                        if(count($mn_sched) > 0){
                            foreach ($json as $menu_id => $mn) {
                                if($mn['sched'] != "" && $mn['sched'] != 0){
                                   if(!in_array($menu_id,$found)){
                                    unset($json[$menu_id]);
                                   }
                                }
                            }
                        }
                    }                    
                #########################
                ### PROMO
                #########################
                    $promos = $this->cashier_model->get_menu_promos($ids);
                    $prs = array();
                    $prm = array();
                    foreach ($promos as $pr) {
                        $prs[] = $pr->promo_id;
                        $prm[$pr->item_id][] = array('id'=>$pr->promo_id,'val'=>$pr->value,'abs'=>(int)$pr->absolute);
                    }
                    $time = $this->site_model->get_db_now();
                    $day = strtolower(date('D',strtotime($time)));
                    $sched = $this->cashier_model->get_menu_promo_schedule($prs,$day,date2SqlDateTime($time));
                    $schs = array();
                    foreach ($sched as $sc) {
                        $schs[] = $sc->promo_id;
                    }
                    foreach ($json as $menu_id => $opt) {
                        if(isset($prm[$menu_id])){
                            foreach ($prm[$menu_id] as $p) {
                                if(in_array($p['id'], $schs)){
                                    if($p['abs'] == 1){
                                        $opt['cost'] -= $pr->value;
                                    }
                                    else{
                                        $opt['cost'] -=  ($pr->value / 100) * $opt['cost'];
                                    }
                                    $json[$menu_id] = $opt;
                                    break;
                                }
                            }####
                        }
                    }
            }
            usort($json, function($a, $b) {
                return strcmp($a["name"], $b["name"]);
            });
            echo json_encode($json);
        }

        public function get_subcategory_sorted($cat_id=null,$item_id=null,$asJson=true){
            $this->load->model('dine/menu_model');
            $this->load->model('dine/cashier_model');
            $this->load->model('site/site_model');
            
            $page = $this->input->post('page');
            $json = array();
            $subcount = 0;
            if(SHOW_NEW_SUBCATEGORY){
                $menus = $this->menu_model->get_subcategory($item_id,$cat_id,true,null,$page);
                // var_dump($menus);
                $now = $this->site_model->get_db_now();
                $day = strtolower(date('D',strtotime($now)));
                $time = strtolower(date('H:i:s',strtotime($now)));
                if(count($menus) > 0){
                    $ids = array();
                    $mnschds = array();
                    foreach ($menus as $res) {
                        $json[$res->menu_sub_id] = array(
                            "id"=>$res->menu_sub_id,
                            "name"=>$res->menu_sub_name,
                            "category"=>$res->category_id,
                            // "cost"=>$res->cost,
                            // "no_tax"=>$res->no_tax,
                            // "free"=>$res->free,
                            // "sched"=>$res->menu_sched_id,
                        );
                        $ids[] = $res->menu_sub_id;
                        // if($res->menu_sched_id != 0 || $res->menu_sched_id != "")
                        //     $mnschds[] = $res->menu_sched_id;
                    }
                    
                }
                usort($json, function($a, $b) {
                    return strcmp($a["name"], $b["name"]);
                });
                $subcount = count($json);
            }
            echo json_encode(array('json'=>$json,'subcount'=>$subcount));
        }
        public function get_menus_subcat_sorted($subcat_id=null,$item_id=null,$asJson=true){
            $this->load->model('dine/menu_model');
            $this->load->model('dine/cashier_model');
            $this->load->model('site/site_model');
            
            $page = $this->input->post('page');

            $menus = $this->menu_model->get_menu_subcat($item_id,$subcat_id,true,null,$page);
            $now = $this->site_model->get_db_now();
            $day = strtolower(date('D',strtotime($now)));
            $time = strtolower(date('H:i:s',strtotime($now)));
            $branch_color = $this->menu_model->get_branch_color(null);
            $b_color = "";
            foreach ($branch_color as $bc => $bc_val) {
                $b_color = $bc_val->branch_color;
                if(empty($bc_val->branch_color)){
                    $branch_text_color = '#333';
                }else{
                    $branch_text_color = $bc_val->branch_text_color;
                }
            }
            $json = array();
            if(count($menus) > 0){
                $ids = array();
                $mnschds = array();
                foreach ($menus as $res) {

                    $check_reorder = 0;
                    if(CHECK_REORDER){
                        $check_reorder = 1;
                    }

                    $menu_oh = 0;
                    if($check_reorder == 1){
                        //get total qty sales
                        $joinm = array();
                        $tablem = "trans_sales_menus";
                        $selectm = "sum(trans_sales_menus.qty) as total_qty";
                        // $selectm_s = "sum(qty) as menu_sales_qty";
                        $joinm["trans_sales"] = array('content'=>"trans_sales.sales_id = trans_sales_menus.sales_id");

                        $ordermm = null;
                        $groupmm = null;
                        // $to = date('Y-m-d');
                        $args4['trans_sales.type_id'] = 10;
                        $args4['trans_sales.inactive'] = '0';
                        // $args4['trans_sales.trans_ref is not null'] = null;
                        // $args4["DATE(trans_sales.datetime) = '".$to."'"] = array('use'=>'where','val'=>null,'third'=>false);
                        $args4['trans_sales_menus.menu_id'] = $res->menu_id;
                        // $this->site_model->db = $this->load->database('main', TRUE);
                        $get_menus_sales = $this->site_model->get_tbl($tablem,$args4,$ordermm,$joinm,true,$selectm,$groupmm); 
                        $qty_sales = 0;
                        if($get_menus_sales){
                            $qty_sales = $get_menus_sales[0]->total_qty;
                        }

                        // echo $qty_sales;
                        // for menu move total qty
                        $argst = array();
                        $join = array();
                        $table  = "menu_moves";
                        $select = "sum(menu_moves.qty) as total_qty_moves";
                        $argst['menu_moves.item_id'] = $res->menu_id;

                        $argst['menu_moves.inactive'] = 0;
                        $order = null;
                        $group = null;
                        
                        $this->site_model->db = $this->load->database('default', TRUE);
                        $items = $this->site_model->get_tbl($table,$argst,$order,$join,true,$select,$group);
                        $qty_moves = 0;
                        if($items){
                            $qty_moves = $items[0]->total_qty_moves;
                        }

                        $menu_oh = $qty_moves - $qty_sales;
                    }

                    //get settings if allow negative inv
                    $set = $this->cashier_model->get_pos_settings();

                    if($res->img_path){
                        $img_path = $res->img_path;
                    }else{
                        $img_path = 'uploads/menus/noimage.png';
                    }

                    $ttype = $this->input->post('ttype');
                    $price = $res->cost;
                    if($ttype != 'dinein' && $ttype != 'reservation'){
                        $where = array('menu_id'=>$res->menu_id,'trans_type'=>$ttype);
                        $cost_det = $this->site_model->get_details($where,'menu_prices');

                        if(count($cost_det) > 0){
                            $price = $cost_det[0]->price;
                        }
                    }

                    $json[$res->menu_id] = array(
                        "id"=>$res->menu_id,
                        "name"=>$res->menu_name,
                        "category"=>$res->menu_cat_id,
                        "category_name"=>$res->category_name,
                        "cost"=>$price,
                        "no_tax"=>$res->no_tax,
                        "free"=>$res->free,
                        "sched"=>$res->menu_sched_id,
                        "menu_oh"=>$menu_oh,
                        "neg_inv"=>$set->neg_inv,
                        "reorder_qty"=>$res->reorder_qty,
                        "check_reorder"=>$check_reorder,
                        "img_path"=>$img_path,
                        "bcolor"=>$b_color,
                        "branch_text_color"=>$branch_text_color,
                        // "show_img"=>$set->show_image,
                    );

                    // $json[$res->menu_id] = array(
                    //     "id"=>$res->menu_id,
                    //     "name"=>$res->menu_name,
                    //     "category"=>$res->menu_cat_id,
                    //     "cost"=>$res->cost,
                    //     "no_tax"=>$res->no_tax,
                    //     "free"=>$res->free,
                    //     "sched"=>$res->menu_sched_id,
                    // );
                    $ids[] = $res->menu_id;
                    if($res->menu_sched_id != 0 || $res->menu_sched_id != "")
                        $mnschds[] = $res->menu_sched_id;
                }
                #########################
                ### SCHEDULE
                #########################
                    $ntfnd = array();
                    if(count($mnschds) > 0){
                        $args['menu_schedule_details.menu_sched_id'] = $mnschds;
                        $args['menu_schedule_details.day'] = $day;
                        $sched = $this->site_model->get_tbl('menu_schedule_details',$args);
                        $mn_sched = array();
                        foreach ($json as $menu_id => $mn) {
                            foreach ($sched as $res) {
                                if($mn['sched'] == $res->menu_sched_id){
                                    $mn_sched[$menu_id] = array('time_on'=>$res->time_on,'time_off'=>$res->time_off);
                                }
                            }                           
                        }
                        $found = array();
                        if(count($mn_sched) > 0){
                            foreach ($mn_sched as $menu_id => $mnsc) {
                                $tm  = strtotime($time);
                                $stm = strtotime($mnsc['time_on']);
                                $etm = strtotime($mnsc['time_off']);
                                if($etm > $stm ){
                                    if($tm <= $stm){
                                        unset($json[$menu_id]);
                                        
                                    }   
                                    if($tm >= $etm){
                                        unset($json[$menu_id]);
                                                                                 
                                    }
                                }
                                $found[] = $menu_id;
                            }
                        }
                        if(count($mn_sched) > 0){
                            foreach ($json as $menu_id => $mn) {
                                if($mn['sched'] != "" && $mn['sched'] != 0){
                                   if(!in_array($menu_id,$found)){
                                    unset($json[$menu_id]);
                                   }
                                }
                            }
                        }
                    }                    
                #########################
                ### PROMO
                #########################
                    $promos = $this->cashier_model->get_menu_promos($ids);
                    $prs = array();
                    $prm = array();
                    foreach ($promos as $pr) {
                        $prs[] = $pr->promo_id;
                        $prm[$pr->item_id][] = array('id'=>$pr->promo_id,'val'=>$pr->value,'abs'=>(int)$pr->absolute);
                    }
                    $time = $this->site_model->get_db_now();
                    $day = strtolower(date('D',strtotime($time)));
                    $sched = $this->cashier_model->get_menu_promo_schedule($prs,$day,date2SqlDateTime($time));
                    $schs = array();
                    foreach ($sched as $sc) {
                        $schs[] = $sc->promo_id;
                    }
                    foreach ($json as $menu_id => $opt) {
                        if(isset($prm[$menu_id])){
                            foreach ($prm[$menu_id] as $p) {
                                if(in_array($p['id'], $schs)){
                                    if($p['abs'] == 1){
                                        $opt['cost'] -= $pr->value;
                                    }
                                    else{
                                        $opt['cost'] -=  ($pr->value / 100) * $opt['cost'];
                                    }
                                    $json[$menu_id] = $opt;
                                    break;
                                }
                            }####
                        }
                    }
            }
            usort($json, function($a, $b) {
                return strcmp($a["name"], $b["name"]);
            });

            $setting = $this->cashier_model->get_pos_settings();

            echo json_encode(array('json'=>$json,'show_img'=>$setting->show_image));
        }

        public function get_menu_modifiers_wth_dflt($menu_id=null,$trans_id=null){
            $this->load->model('dine/menu_model');
            $this->load->model('dine/mods_model');
            $menu_mods = $this->menu_model->get_menu_modifiers($menu_id);
            $ttype = $this->input->post('ttype');
            $branch_color = $this->menu_model->get_branch_color(null);
            $b_color = "";
            foreach ($branch_color as $bc => $bc_val) {
                $b_color = $bc_val->branch_color;
                if(empty($bc_val->branch_color)){
                    $branch_text_color = '#333';
                }else{
                    $branch_text_color = $bc_val->branch_text_color;
                }
            }
            $group = array();
            $grp = array();
            $dflts = array();
            $dflts2 = array();

            // $mod_check_sess = array();
            if(count($menu_mods) > 0){
                foreach ($menu_mods as $res) {
                    $group[$res->mod_group_id] = array(
                        "name"=>$res->mod_group_name,
                        "mandatory"=>$res->mandatory,
                        "multiple"=>$res->multiple,
                        "bcolor"=>$b_color,
                        "branch_text_color"=>$branch_text_color,
                        "min_no"=>$res->min_no
                    );

                    // $mod_check_sess[$res->mod_group_id] = array('trans_id'=>$trans_id,'mod_group_id'=>$res->mod_group_id);

                    $grp[] = $res->mod_group_id;
                }
                $details = $this->mods_model->get_modifier_group_details(null,$grp);
                $dets = array();
                foreach ($details as $det) {
                    if($det->mod_inactive == 0){

                        $price = $det->mod_cost;
                        if($ttype != 'dinein' && $ttype != 'reservation'){
                            $where = array('mod_id'=>$det->mod_id,'trans_type'=>$ttype);
                            $cost_det = $this->site_model->get_details($where,'modifier_prices');

                            if(count($cost_det) > 0){
                                $price = $cost_det[0]->price;
                            }
                        }


                        $dets=array(
                            "name"=>$det->mod_name,
                            "cost"=>$price,
                            // "bcolor"=>$b_color,
                            "default"=>$det->default
                        );
                        
                        $group[$det->mod_group_id]['details'][$det->mod_id] = $dets;
                    }
                }

                $tcart = $this->session->userData('trans_cart');
                // echo "<pre>",print_r($tcart[$trans_id]['qty']),"</pre>";die();
                
                if($this->input->post('add_defaults')){
                    $name  = 'trans_mod_cart';
                    $wagon = array();
                    if($this->session->userData($name)){
                        $wagon = $this->session->userData($name);
                    }
                    foreach ($group as $mod_group_id => $mod_grp) {
                        foreach ($mod_grp['details'] as $mod_id => $mod) {
                            if($mod['default'] == 1){
                                $defaults = array(
                                    'trans_id'=>$trans_id,
                                    'mod_group_id'=>$mod_group_id,
                                    'mod_id'=>$mod_id,
                                    'menu_id'=>$menu_id,
                                    'menu_name'=>$this->input->post('menu_name'),
                                    'mandatory'=>$mod_grp['mandatory'],
                                    'multiple'=>$mod_grp['multiple'],
                                    'name'=>$mod['name'],
                                    'cost'=>$mod['cost'],
                                    // 'bcolor'=>$b_color,
                                    'qty'=>$tcart[$trans_id]['qty']
                                ); 
                                $wagon[] = $defaults;
                                $dflts[] = $defaults;

                                $maxid_mod = max(array_keys($wagon));


                                $menu_submods = $this->menu_model->get_menu_submodifiers(null,$mod_id);


                                if(count($menu_submods) > 0){
                                    foreach ($menu_submods as $res) {

                                        $price2 = $res->cost;
                                        if($ttype != 'dinein' && $ttype != 'reservation'){
                                            $where = array('mod_sub_id'=>$res->mod_sub_id,'trans_type'=>$ttype);
                                            $cost_det = $this->site_model->get_details($where,'modifier_sub_prices');

                                            if(count($cost_det) > 0){
                                                $price2 = $cost_det[0]->price;
                                            }
                                        }

                                    }
                                    
                                    
                                    if($res->is_auto == 1){
                                        $name2  = 'trans_submod_cart';
                                        $wagon2 = array();
                                        if($this->session->userData($name2)){
                                            $wagon2 = $this->session->userData($name2);
                                        }

                                        $err = null;

                                        $defaults2 = array(
                                            'trans_id'=>$trans_id,
                                            'mod_sub_id'=>$res->mod_sub_id,
                                            'mod_id'=>$mod_id,
                                            'mod_line_id'=>$maxid_mod,
                                            // 'menu_id'=>$menu_id,
                                            'name'=>$res->name,
                                            // 'mandatory'=>$mod_grp['mandatory'],
                                            // 'multiple'=>$mod_grp['multiple'],
                                            // 'name'=>$mod['name'],
                                            'price'=>$price2,
                                            'group'=>$res->group,
                                            'qty'=>$tcart[$trans_id]['qty']
                                        ); 

                                        if(count($wagon2) > 0){
                                            foreach ($wagon2 as $key => $det) {
                                            # code...
                                                // if($defaults2['group'] == $det['group'] && $det['mod_line_id'] == $defaults2['mod_line_id']){
                                                //     $err = 'You can select 1 item per group';
                                                //     break;
                                                // }
                                            }


                                            if($err == null){
                                                $wagon2[] = $defaults2;
                                                $dflts2[] = $defaults;
                                            }

                                        }else{
                                            $wagon2[] = $defaults2;
                                            $dflts2[] = $defaults2;
                                        }

                                        $maxid = max(array_keys($wagon2));
                                        $this->session->set_userData($name2,$wagon2);
                                    }


                                }

                                unset($group[$mod_group_id]);
                                // unset($mod_check_sess[$mod_group_id]);

                            }
                        }
                    }    
                    $this->session->set_userData($name,$wagon);
                }


            }
            // $this->session->set_userData('mod_check_sess',$mod_check_sess);
            // echo "<pre>",print_r($dflts),"</pre>";die();
            echo json_encode(array('group'=>$group,'dflts'=>$dflts,'dflts2'=>$dflts2));
        }
        public function get_menu_modifiers($menu_id=null,$trans_id=null){
            $this->load->model('dine/menu_model');
            $this->load->model('dine/mods_model');
            $menu_mods = $this->menu_model->get_menu_modifiers($menu_id);
            $group = array();
            $grp = array();
            $dflts = array();
            if(count($menu_mods) > 0){
                foreach ($menu_mods as $res) {
                    $group[$res->mod_group_id] = array(
                        "name"=>$res->mod_group_name,
                        "mandatory"=>$res->mandatory,
                        "multiple"=>$res->multiple
                    );

                    $grp[] = $res->mod_group_id;
                }
                $details = $this->mods_model->get_modifier_group_details(null,$grp);
                $dets = array();
                foreach ($details as $det) {
                    if($det->mod_inactive == 0){
                        $dets=array(
                            "name"=>$det->mod_name,
                            "cost"=>$det->mod_cost,
                            "default"=>$det->default
                        );
                        
                        $group[$det->mod_group_id]['details'][$det->mod_id] = $dets;
                    }
                }
                
                if($this->input->post('add_defaults')){
                    $name  = 'trans_mod_cart';
                    $wagon = array();
                    if($this->session->userData($name)){
                        $wagon = $this->session->userData($name);
                    }
                    foreach ($group as $mod_group_id => $mod_grp) {
                        foreach ($mod_grp['details'] as $mod_id => $mod) {
                            if($det->default == 1){
                                $defaults = array(
                                    'trans_id'=>$trans_id,
                                    'mod_id'=>$mod_id,
                                    'menu_id'=>$mod_group_id,
                                    'menu_name'=>$this->input->post('menu_name'),
                                    'mandatory'=>$mod_grp['mandatory'],
                                    'multiple'=>$mod_grp['multiple'],
                                    'name'=>$mod['name'],
                                    'cost'=>$mod['cost'],
                                    'qty'=>1
                                ); 
                                $wagon[] = $defaults;
                                $dflts[] = $defaults;
                            }
                        }
                    }    
                    $this->session->set_userData($name,$wagon);
                }


            }
            echo json_encode($group);
        }
        public function add_trans_modifier(){
            $wagon = array();
            $error = null;
            $name  = 'trans_mod_cart';
            $id = null;
            $row = null;
            if($this->session->userData($name)){
                $wagon = $this->session->userData($name);
            }
            $row = $this->input->post();

            if(count($wagon) > 0){
                // foreach($wagon as $key => $det) {
                //     // echo $det['mod_id'].' == '.$row['mod_id'].' && '.$det['trans_id'].' == '.$row['trans_id'];
                    // if($row['multiple'] == 0){
                //         // if($det['mod_id'] == $row['mod_id'] && $det['trans_id'] == $row['trans_id']){
                //         if($det['trans_id'] == $row['trans_id']){
                //             $error = 'You can only choose 1 on this modifier.';
                //             break;
                //         }
                //         else{
                //             $error = null;
                //         }
                //     }
                //     else{
                //        $error = null;
                //     }
                // }
                // if($row['multiple'] < 1){
                //     $row['multiple'] = 1;
                // }    
                // $ctr=1;
                // foreach ($wagon as $key => $det) {
                //     if($det['trans_id'] == $row['trans_id'] && $det['mod_group_id'] == $row['mod_group_id']){
                //         $ctr++;
                //     }
                // }
                // if($ctr > $row['multiple'] *$row['qty']){
                //     $error = 'You can only choose up '.$row['multiple']*$row['qty'].' on this modifier.';
                // }


                if($error == null)
                        $wagon[] = $row;
            }
            else{
                $wagon[] = $row;
            }
            $id = max(array_keys($wagon));
            $this->session->set_userData($name,$wagon);
            echo json_encode(array("items"=>$row,"id"=>$id,"error"=>$error));
        }
        public function delete_trans_menu_modifier($trans_id=null){
            $wagon = array();
            $error = null;
            $name  = 'trans_mod_cart';
            $id = null;
            $row = null;
            $wagon = $this->session->userData($name);
            if($wagon){
                foreach ($wagon as $key => $det) {
                    if($det['trans_id'] == $trans_id){
                        unset($wagon[$key]);
                    }
                }
                $this->session->set_userData($name,$wagon);
            }


            $wagon = array();
            $error = null;
            $name  = 'trans_submod_cart';
            $id = null;
            $row = null;
            $wagon = $this->session->userData($name);
            if($wagon){
                foreach ($wagon as $key => $det) {
                    if($det['trans_id'] == $trans_id){
                        unset($wagon[$key]);
                    }
                }
                $this->session->set_userData($name,$wagon);
            }

            // echo $trans_id; die();

            echo json_encode(array("items"=>$row,"id"=>$id));
        }
        public function delete_trans_menu_submodifier($trans_mod_id=null){
            // echo $trans_mod_id;
            //remove submo
            $wagon = array();
            $error = null;
            $name  = 'trans_submod_cart';
            $id = null;
            $row = null;
            $wagon = $this->session->userData($name);
            // echo "<pre>",print_r($wagon),"</pre>";
            foreach ($wagon as $key => $det) {
                if($det['sales_mod_id'] == $trans_mod_id){
                    unset($wagon[$key]);
                }
            }
            $this->session->set_userData($name,$wagon);
            // echo "<pre>",print_r($wagon),"</pre>";die();
            echo json_encode(array("items"=>$row,"id"=>$id));
        }
        public function delete_trans_menu_submodifier2($id=null){
            // echo $trans_mod_id;
            //remove submo
            $wagon = array();
            $error = null;
            $name  = 'trans_submod_cart';
            // $id = null;
            $row = null;
            $wagon = $this->session->userData($name);
            // echo "<pre>",print_r($wagon),"</pre>";
            foreach ($wagon as $key => $det) {
                if($det['mod_line_id'] == $id){
                    unset($wagon[$key]);
                }
            }
            $this->session->set_userData($name,$wagon);
            // echo "<pre>",print_r($wagon),"</pre>";die();
            echo json_encode(array("items"=>$row,"id"=>$id));
        }
        public function add_trans_submodifier(){
            $wagon = array();
            $error = null;
            $name  = 'trans_submod_cart';
            $id = null;
            $row = null;
            if($this->session->userData($name)){
                $wagon = $this->session->userData($name);
            }
            $row = $this->input->post();

            // echo "<pre>",print_r($wagon),"</pre>";die();

            if(count($wagon) > 0){
                // foreach($wagon as $key => $det) {
                //     // echo $det['mod_id'].' == '.$row['mod_id'].' && '.$det['trans_id'].' == '.$row['trans_id'];
                    // if($row['multiple'] == 0){
                //         // if($det['mod_id'] == $row['mod_id'] && $det['trans_id'] == $row['trans_id']){
                //         if($det['trans_id'] == $row['trans_id']){
                //             $error = 'You can only choose 1 on this modifier.';
                //             break;
                //         }
                //         else{
                //             $error = null;
                //         }
                //     }
                //     else{
                //        $error = null;
                //     }
                // }
                // if($row['multiple'] < 1){
                //     $row['multiple'] = 1;
                // }    
                // $ctr=0;
                // foreach ($wagon as $key => $det) {
                //     if($det['trans_id'] == $row['trans_id'] && $det['mod_id'] == $row['mod_id']){
                //         $ctr++;
                //     }
                // }
                // if($ctr > 0){
                //     $error = 'You can only choose up 1 on this sub modifier.';
                // }

                // foreach ($wagon as $key => $det) {
                //     # code...
                //     if($row['group'] == $det['group'] && $det['mod_line_id'] == $row['mod_line_id']){
                //         $error = 'You can select 1 item per group';
                //         break;
                //     }
                // }



                if($error == null)
                        $wagon[] = $row;
            }
            else{
                $wagon[] = $row;
            }
            $id = max(array_keys($wagon));
            $this->session->set_userData($name,$wagon);
            echo json_encode(array("items"=>$row,"id"=>$id,"error"=>$error));
        }
        public function update_trans_qty($trans_id=null){
            $wagon = array();
            $error = null;
            $name  = 'trans_cart';
            $wagon = $this->session->userData($name);
            $row = $wagon[$trans_id];
            $char = $this->input->post('operator');
            $val = $this->input->post('value');
            switch($char){
                case "times":
                    $row['qty'] *= $val;
                    break;
                case "equal":
                    $row['qty'] = $val;
                    break;
                case "plus";
                    $row['qty'] += $val;
                    break;
                case "minus";
                    $row['qty'] -= $val;
                    if($row['qty'] <= 0)
                        $row['qty'] = 1;
                    break;
            }
            $wagon[$trans_id] = $row;
            $this->session->set_userData($name,$wagon);
            echo json_encode(array("error"=>null,"qty"=>$row['qty'],'cost'=>$row['cost']));
        }
        public function update_free_menu($trans_id=null){
            $wagon = array();
            $error = null;
            $name  = 'trans_cart';
            $wagon = $this->session->userData($name);
            $row = $wagon[$trans_id];
            $approver = $this->input->post('free_user_id');
            $free_reason = $this->input->post('free_reason');
            // echo "<pre>",print_r($this->input->post()),"</pre>";die();

            $row['cost'] = 0;
            $row['free_user_id'] = $approver;
            $row['free_reason'] = $free_reason;
            $wagon[$trans_id] = $row;
            $this->session->set_userData($name,$wagon);
        }
        public function add_trans_remark($trans_id=null){
            $wagon = array();
            $error = null;
            $name  = 'trans_cart';
            $wagon = $this->session->userData($name);
            $raw = $row = $wagon[$trans_id];
            $line_remarks = trim($this->input->post('line-remarks'));
            $sugar_array = array('100% Sugar','80% Sugar','50% Sugar','30% Sugar');
            $ice_array = array('100% Ice','80% Ice','50% Ice','30% Ice');
            $remarks ="";// $row['remarks'];

            $pos = false;
            if(isset( $row['remarks'])){
                if(strpos(strtolower($row['remarks']), strtolower($line_remarks)) === FALSE){
                    if(in_array($line_remarks,$sugar_array)){
                        foreach ($sugar_array as $key => $value) {
                            # code...
                            $row['remarks'] = str_replace($value, "",$row['remarks'] );
                        }
                        // in_array(needle, haystack)
                    }

                     if(in_array($line_remarks,$ice_array)){
                        foreach ($ice_array as $key => $value) {
                            # code...
                            $row['remarks'] = str_replace($value, "",$row['remarks'] );
                        }
                        // in_array(needle, haystack)
                    }
                    $remarks = $row['remarks']." / ".$line_remarks;
                    $pos = true;
                }

            }else{
                $remarks = $line_remarks;
 
            }

            $remarks = str_replace("/  /", "/",$remarks );
            $row['remarks'] = $remarks;
            $wagon[$trans_id] = $row;
            $this->session->set_userData($name,$wagon);
            echo json_encode(array("error"=>null,"remarks"=>$row['remarks'],"line_remarks"=>$line_remarks,"row"=>$raw,"pos"=>$pos));
        }
        public function remove_trans_remark($trans_id=null){
            $wagon = array();
            $error = null;
            $name  = 'trans_cart';
            $wagon = $this->session->userData($name);
            $row = $wagon[$trans_id];
            if(isset($row['remarks']))
                unset($row['remarks']);
            $this->session->set_userData($name,$wagon);
            echo json_encode(array("error"=>null));
        }
        public function trans_exempt_to_tax(){
            $trans_cart = sess('trans_cart');
            $error = "";
            $tax = $this->get_tax_rates(false);
            if(count($tax) > 0){
                foreach ($trans_cart as $trans_id => $v) {
                    $v['no_tax'] = 1;
                    $trans_cart[$trans_id] = $v;
                }
            }
            sess_initialize('trans_cart',$trans_cart);
            echo json_encode(array("error"=>$error));
        }
        public function buy2take1_qty(){
            $trans_cart = array();
            if($this->session->userData('trans_cart')){
                $trans_cart = $this->session->userData('trans_cart');
            }
            $cart_total_qty = 0;
            foreach ($trans_cart as $trans_id => $trans){
                $cart_total_qty += $trans['qty'];
            }    
            $qty = floor($cart_total_qty/2);
            echo json_encode(array('qty'=>$qty));
        }
        public function total_trans($asJson=true,$cart=null,$disc_cart=null,$charge_cart=null,$zero_rated=null){
            $counter = sess('counter');
            $zero_r = 0;
            // if(is_array($zero_rated)){
            //      // && isset($zero_rated['amount']) && $zero_rated['amount'] > 0
            //      foreach ($zero_rated as $zid => $opt) {
            //          if($opt['amount'] > 0){
            //             $counter['zero_rated'] = 1;
            //             break;
            //          }
            //      }            
            // }
            $trans_cart = array();
            if($this->session->userData('trans_cart')){
                $trans_cart = $this->session->userData('trans_cart');
            }
            $trans_mod_cart = array();
            if($this->session->userData('trans_mod_cart')){
                $trans_mod_cart = $this->session->userData('trans_mod_cart');
                // echo var_dump($trans_mod_cart);
                // return false;
            }
            $trans_submod_cart = array();
            if($this->session->userData('trans_submod_cart')){
                $trans_submod_cart = $this->session->userData('trans_submod_cart');
                
            }
            if(is_array($cart)){
                $trans_cart = $cart;
            }

            // echo '<pre>',print_r($trans_cart),'</pre>';

            $total = 0;
            $gross = 0;
            $discount = 0;
            $zero_rated = 0;
            $vat_sales = 0;
            $non_vat_sales = 0;
            $cart_total_qty = 0;
            $total_no_charge = 0;
            $charge_used = array();
            $alcohol = 0;
            if(count($trans_cart) > 0){
                foreach ($trans_cart as $trans_id => $trans){
                    $mod_cost = 0;
                    $submod_cost = 0;

                    if(isset($trans['cost']))
                        $cost = $trans['cost'];
                    if(isset($trans['price']))
                        $cost = $trans['price'];

                    if(isset($trans['modifiers'])){
                        foreach ($trans['modifiers'] as $trans_mod_id => $mod) {
                            if($trans_id == $mod['line_id']){
                                // $cost += $mod['price'];
                                $mod_cost += $mod['qty']*$mod['price'];
                                
                                if(isset($mod['submodifiers'])){
                                    foreach($mod['submodifiers'] as $sub_id => $smod){
                                        if($smod['mod_line_id'] == $mod['mod_line_id']){
                                            $submod_cost += $smod['qty']*$smod['price'];
                                        }
                                    }
                                }
                            }


                        }
                        // echo '1';
                    }else{
                        if(count($trans_mod_cart) > 0){
                            // echo '2';
                            foreach ($trans_mod_cart as $trans_mod_id => $mod) {
                                if($trans_id == $mod['trans_id']){
                                    // $cost += $mod['cost'];
                                    $mod_cost += $mod['qty']*$mod['cost'];
                                
                                    if(isset($trans_submod_cart)){
                                        foreach ($trans_submod_cart as $trans_submod_id => $submod) {
                                            if($trans_mod_id == $submod['mod_line_id'])
                                                // $cost += $submod['price'];
                                                $submod_cost += $submod['qty']*$submod['price'];
                                        }
                                    }

                                }
                            }
                        }
                    }


                    if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
                        $rate = 1.12;
                        // $cost = num(($cost / $rate),2);
                        $cost = ($cost / $rate);
                        // $zr = ($cost * $rate);
                        // $cost = $cost-$zr;
                        $zero_rated += $trans['qty'] * $cost + $mod_cost + $submod_cost;
                        $zero_r = 1;
                    }
                    $total += $trans['qty'] * $cost + $mod_cost + $submod_cost;
                    if(isset($trans['nocharge']) && $trans['nocharge'] != 0){
                        // $total_no_charge += $trans['qty'] * $cost;
                        // echo 'pumasok';
                        $charge_used[$trans['nocharge']] = array('charge_id'=>$trans['nocharge']);
                    }
                    // echo $trans['nocharge'].'BRBR';
                    $cart_total_qty += $trans['qty'];

                    $where = array('menu_id'=>$trans['menu_id']);
                    $men = $this->site_model->get_details($where,'menus');

                    if(isset($men[0]->alcohol) &&$men[0]->alcohol == 1){
                        $alcohol += $trans['qty'] * $cost+ $mod_cost + $submod_cost;
                    }


                }
            }
            // echo $total; die();


            $gross = $total;
            $trans_disc_cart = sess('trans_disc_cart');
            if(is_array($disc_cart)){
                $trans_disc_cart = $disc_cart;
            }
            // echo '<pre>',print_r(sess('item_discount')),'</pre>'; die();
            $discs = array();
            $less_vat = 0;
            $vatss = 0;
            $ps_counter = 0;

            $item_discount_cart = sess('item_discount');
            // if(is_array($disc_cart)){
            //     $item_discount_cart = $disc_cart;
            // }
            $per_item_disc = false;
            if(is_array($disc_cart)){
                foreach ($disc_cart as $key => $value) {
                    if($value['items'] != ""){
                        $per_item_disc = true;
                    }
                }
            }else{
                if($item_discount_cart){
                    $per_item_disc = true;
                }
            }

            $taxable_amount1 = $gross;
            $total_disc = 0;
            if($per_item_disc){

                //for line discount
                if(is_array($disc_cart)){
                    $item_discount_cart = $disc_cart;
                }
                // echo '<pre>',print_r($item_discount_cart),'</pre>';
                if(count($item_discount_cart) > 0){

                    foreach($item_discount_cart as $id => $val){
                        $total_disc += $val['amount'];
                    }


                }

            }else{

                //for lahatan disocunt
                $total_disc = 0;
                if(count($trans_disc_cart) > 0 ){
                    $error_disc = 0;
                    foreach ($trans_disc_cart as $disc_id => $row) {
                        if(!isset($row['disc_type'])){
                            $error_disc = 1;
                        }
                        else{
                            if($row['disc_type'] == "")
                                $error_disc = 1;
                        }
                    }
                    if($error_disc == 0){
                        foreach ($trans_disc_cart as $disc_id => $row) {
                            $rate = $row['disc_rate'];
                            $guests = $row['guest'];

                            if($row['disc_type'] == 'equal'){
                                $no_persons = count($row['persons']);
                                $ps_counter += $no_persons;
                            }
                        }
                    }
                }
     
                // echo $ps_counter.'ssss';
                // echo '<pre>',print_r($trans_disc_cart),'</pre>';
     
                if(count($trans_disc_cart) > 0 ){
                    $error_disc = 0;
                    foreach ($trans_disc_cart as $disc_id => $row) {
                        if(!isset($row['disc_type'])){
                            $error_disc = 1;
                        }
                        else{
                            if($row['disc_type'] == "")
                                $error_disc = 1;
                        }
                    }
                    if($error_disc == 0){
                        foreach ($trans_disc_cart as $disc_id => $row) {
                            // echo $total." ==== ";
                            // echo '<pre>',print_r($row['persons']),'</pre>';
                            if(count($row['persons']) > 0){
                                $rate = $row['disc_rate'];
                                $guests = $row['guest'];
                                switch ($row['disc_type']) {
                                    case "equal":
                                            if($row['disc_code'] == 'SNDISC'){
                                                $divi = ($total-$alcohol)/$row['guest'];
                                            }else{
                                                $divi = $total/$row['guest'];
                                            }
                                            $divi_less = $divi;
                                            $lv = 0;

                                            $where = array('id'=>1);
                                            $set_det = $this->site_model->get_details($where,'settings');
                                            if($counter['type'] != 'dinein' && $counter['type'] != 'mcb' && $row['disc_code'] == 'SNDISC' && $divi > $set_det[0]->ceiling_amount && $set_det[0]->ceiling_amount != 0){
                                                $divi = $set_det[0]->ceiling_amount;
                                                $divi_less = $set_det[0]->ceiling_amount;
                                            }

                                            if($counter['type'] == 'mcb' && $row['disc_code'] == 'SNDISC' && $divi > $set_det[0]->ceiling_mcb && $set_det[0]->ceiling_mcb != 0){
                                                $divi = $set_det[0]->ceiling_mcb;
                                                $divi_less = $set_det[0]->ceiling_mcb;
                                            }


                                            if($row['disc_code'] == ATHLETE_CODE){
                                                $divi_less = ($divi / 1.12);
                                                $lv = $divi - $divi_less;

                                                $no_persons = count($row['persons']);
                                                foreach ($row['persons'] as $code => $per) {
                                                    $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $divi_less);
                                                    $discount += ($rate / 100) * $divi_less;
                                                    // $less_vat += $lv;
                                                }

                                            }else{
                                                if($row['no_tax'] == 1){
                                                    $divi_less = ($divi / 1.12);
                                                    $lv = $divi - $divi_less;
                                                    // echo $lv.'ssssss';
                                                }
                                                $no_persons = count($row['persons']);
                                                foreach ($row['persons'] as $code => $per) {
                                                    $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $divi_less);
                                                    $discount += ($rate / 100) * $divi_less;
                                                    $less_vat += $lv;
                                                }
                                                $tl = $divi * ( abs($row['guest'] - $no_persons) );
                                                $tdl = ($divi_less * $no_persons) - $discount;
                                                $tl2 = $divi * ( abs($row['guest'] - $ps_counter) );
                                                $vat1 = $tl2 / 1.12;
                                                $vatss = ($vat1 * 0.12);
                                                // echo $vatss.'eeeee-';
                                            }
                                            // echo $discount;
                                            $taxable_amount1 -= $discount;
                                            // $taxable_amount1 -= $divi;
                                            // $total = $tl + $tdl;
                                            // $total = ($divi * $row['guest']) - $discount;
                                            break;
                                    default:
                                        if($row['fix'] == 0){
                                            if(DISCOUNT_NET_OF_VAT && $row['disc_code'] != DISCOUNT_NET_OF_VAT_EX){
                                                $no_citizens = count($row['persons']);
                                                $total_net_vat = ($total / 1.12);                     
                                                foreach ($row['persons'] as $code => $per) {
                                                    $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $total_net_vat);
                                                    $discount += ($rate / 100) * $total_net_vat;
                                                }
                                                // $total -= $discount;
                                            }
                                            else{

                                                if($row['disc_code'] == ATHLETE_CODE){
                                                    $no_citizens = count($row['persons']);
                                                    // if($row['no_tax'] == 1)
                                                    $total = ($total / 1.12);                     
                                                    
                                                    foreach ($row['persons'] as $code => $per) {
                                                        $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $total);
                                                        $discount += ($rate / 100) * $total;
                                                    }
                                                }else{
                                                    $no_citizens = count($row['persons']);
                                                    if($row['no_tax'] == 1)
                                                        $total = ($total / 1.12);                     
                                                    
                                                    foreach ($row['persons'] as $code => $per) {
                                                        $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $total);
                                                        $discount += ($rate / 100) * $total;
                                                    }
                                                    // $total -= $discount;
                                                }

                                                // $taxable_amount1 -= $discount;    
                                            }
                                        }
                                        else{
                                            if($row['openamt'] != 0){
                                                $discs[] = array('type'=>$row['disc_code'],'amount'=>$row['openamt']);
                                                $discount += $row['openamt'];
                                            }else{
                                                $discs[] = array('type'=>$row['disc_code'],'amount'=>$rate);
                                                $discount += $rate;
                                            }
                                            // $total -= $discount;
                                            // $taxable_amount1 -= $discount;
                                        }

                                }
                            }
                            // foreach ($row['persons'] as $pcode => $oper) {
                                
                            // }
                            // echo $discount."<br>";
                        }
                        $total_disc += $discount;
                    }
                }

            }

            // echo $total_disc; die();

            // $vat_txt = ($taxable_amount1 / 1.12) * 0.12;
            // // $vat_sales_txt = $taxable_amount1 / 1.12;
            // $vat_sales_txt = $gross - $vat_txt;
            
            // echo $total."<br>";
            // echo $less_vat."<br>";
            // echo $discount."<br>";
            $total -= $total_disc + $less_vat;
            $total_for_charge = $total - $less_vat;
            // echo $total;    
            $trans_charge_cart = sess('trans_charge_cart');
            if(is_array($charge_cart)){
                $trans_charge_cart = $charge_cart;
            } 
            #CHARGES
            $charges = array();
            $total_charges = 0;
            $net_total = $total;

            if(ADD_CHARGES_NET_OF_VAT){
                $amount_cmpt = ($gross / 1.12);              
            }
            else{
                $amount_cmpt = $net_total;                
            }
            #
            #GET VATABLE AMOUNT (FOR SM)
            #
                if(MALL_ENABLED && MALL == 'megamall'){
                    $discountt = 0;
                    $taxable_amount = 0;
                    $not_taxable_amount = 0;
                    $discss = array();
                    $item_count = count($trans_cart);
                    foreach ($trans_cart as $trans_id => $v) {
                        if(isset($v['cost']))
                            $cost = $v['cost'];
                        if(isset($v['price']))
                            $cost = $v['price'];
                        ####################
                        if(isset($v['modifiers'])){
                            foreach ($v['modifiers'] as $trans_mod_id => $m) {
                                if($trans_id == $m['line_id']){
                                    $cost += $m['price'];
                                }
                            }
                        }
                        else{
                            if(count($trans_mod_cart) > 0){
                                foreach ($trans_mod_cart as $trans_mod_id => $m) {
                                    if($trans_id == $m['trans_id']){
                                        $cost += $m['cost'];
                                    }
                                }
                            }
                        }
                        ####################
                        foreach ($trans_disc_cart as $disc_id => $row) {
                            $rate = $row['disc_rate'];
                            switch ($row['disc_type']) {
                                case "equal":
                                        // $divi = $cost/$row['guest'];
                                        // $discount = ($rate / 100) * $divi;
                                        // $cost -= $discount;

                                        $divi = $cost/$row['guest'];
                                        $divi_less = $divi;
                                        if($row['no_tax'] == 1){
                                            $divi_less = ($divi / 1.12);
                                        }
                                        $no_persons = count($row['persons']);
                                        foreach ($row['persons'] as $code => $per) {
                                            $discss[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $divi_less);
                                            $discountt += ($rate / 100) * $divi_less;
                                        }
                                        $tl = $divi * ( abs($row['guest'] - $no_persons) );
                                        $tdl = ($divi_less * $no_persons) - $discountt;
                                        $cost = $tl - $tdl;
                                        // $cost = ($divi * $row['guest']) - $discount;
                                        break;
                                default:
                                    if($row['fix'] == 0){
                                        $no_citizens = count($row['persons']);
                                        if($row['no_tax'] == 1)
                                            $cost = ($cost / 1.12);                     
                                        foreach ($row['persons'] as $code => $per) {
                                            $discss[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $cost);
                                            $discountt += ($rate / 100) * $cost;
                                        }
                                        $cost -= $discountt;
                                    }
                                    else{
                                        $rate = $rate/$item_count;
                                        $discss[] = array('type'=>$row['disc_code'],'amount'=>$rate);
                                        $discountt = $rate; 
                                        $cost -= $discountt;

                                    }
                                    // $discount = ($rate / 100) * $cost;
                                    // $cost -= $discount;
                            }
                        }

                        if($v['no_tax'] == 0){
                            $taxable_amount += $cost * $v['qty'];
                        }
                        else{
                            $not_taxable_amount += $cost * $v['qty'];
                        }
                    }
                    if($not_taxable_amount > 0){
                        $has_no_tax_disc = false;
                        foreach ($trans_disc_cart as $disc_id => $row) {
                            if($row['no_tax'] == 1){
                                $has_no_tax_disc = true;
                                break;
                            }    
                        }    
                        if($has_no_tax_disc){
                            $amount_cmpt = $net_total;                       
                        }
                        else{
                            $amount_cmpt = ($taxable_amount/1.12) + $not_taxable_amount;
                        }
                    }
                    else{
                        if($taxable_amount > 0){
                            $amount_cmpt = ($taxable_amount/1.12);
                        }
                        else{
                            $amount_cmpt = $net_total;                                    
                        }
                    }
                }
            #
            # END GET VATABLE AMOUNT (FOR SM)
            # 
            // echo $total_no_charge;

            // if(count($charge_used) > 0 ){
            //     foreach ($charge_used as $charge_id => $opt) {
            //         $char_res = $this->site_model->get_tbl('charges',array('charge_id'=>$charge_id),array(),null,true);
            //         $char_no_tax = $char_res[0]->no_tax;
            //         $charge_amount = $char_res[0]->amount;
            //         $is_absolute = $char_res[0]->absolute;

            //         if($is_absolute == 0){

            //         }
            //     }
            // }
            // echo '<pre>',print_r($trans_cart),'</pre>';
            $is_absolute = 0;
            //######NEW CHARGES####################
            // if(count($trans_cart) > 0){
            //     foreach ($trans_cart as $trans_id => $trans){
            //         if(isset($trans['cost']))
            //             $cost = $trans['cost'];
            //         if(isset($trans['price']))
            //             $cost = $trans['price'];

            //         if(isset($trans['modifiers'])){
            //             foreach ($trans['modifiers'] as $trans_mod_id => $mod) {
            //                 if($trans_id == $mod['line_id'])
            //                     $cost += $mod['price'];
            //             }
            //         }

            //         else{
            //             if(count($trans_mod_cart) > 0){
            //                 foreach ($trans_mod_cart as $trans_mod_id => $mod) {
            //                     if($trans_id == $mod['trans_id'])
            //                         $cost += $mod['cost'];
            //                 }
            //             }
            //         }
            //         if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
            //             // $rate = 0.12;
            //             $rate = 1.12;
            //             // $cost = num(($cost / $rate),2);
            //             $cost = ($cost / $rate);
            //             // $zr = ($cost * $rate);
            //             // $cost = $cost-$zr;
            //             $zero_rated += $trans['qty'] * $cost;
            //             $zero_r = 1;
            //         }
            //         $total_per_menu = $trans['qty'] * $cost;
            //         if(isset($trans['nocharge']) && $trans['nocharge'] != 0){
            //             // echo 'sssaaaa';
            //             $char_res = $this->site_model->get_tbl('charges',array('charge_id'=>$trans['nocharge']),array(),null,true);
            //             $char_no_tax = $char_res[0]->no_tax;
            //             $charge_amount = $char_res[0]->charge_amount;
            //             $is_absolute = $char_res[0]->absolute;

            //             if($is_absolute == 0){

            //                 if($char_no_tax == 1){
            //                                 // echo 'dddd';
            //                     //taxable
            //                     $to_check = array();
            //                     if($per_item_disc){
            //                         $to_check = $item_discount_cart;
            //                     }else{
            //                         $to_check = $trans_disc_cart;
            //                     }


            //                     if(count($to_check) > 0 ){
            //                         $error_disc = 0;
            //                         foreach ($trans_disc_cart as $disc_id => $row) {
            //                             if(!isset($row['disc_type'])){
            //                                 $error_disc = 1;
            //                             }
            //                             else{
            //                                 if($row['disc_type'] == "")
            //                                     $error_disc = 1;
            //                             }
            //                         }

            //                         if($error_disc == 0){
            //                             $has_no_tax_disc = false;
            //                             $disc_per_menu = 0;
            //                             $lv_per_menu = 0;
            //                             $vatss_per_menu = 0;
            //                             if($per_item_disc){
            //                                 if(count($item_discount_cart) > 0){

            //                                     foreach($item_discount_cart as $id => $val){
            //                                         // echo $val['amount'];
            //                                         if($trans_id == $id){
            //                                             $disc_per_menu = $val['amount'];
            //                                             // $row = $trans_cart[$id];
                                                        
            //                                             // if(isset($row['cost']))
            //                                             //     $cost = $row['cost'];
            //                                             // if(isset($row['price']))
            //                                             //     $cost = $row['price'];

            //                                             // $total_amt = $row['qty'] * $cost;

            //                                             if($val['no_tax'] == 1){
            //                                                 $to_disc = $total_per_menu / 1.12;
            //                                                 $less_v = $to_disc * 0.12;
            //                                                 $has_no_tax_disc = true;
            //                                                 // $rate = $val->disc_rate / 100;
            //                                                 // $discount = $to_disc * $rate;
            //                                                 // $total_disc = $less_v + $discount;
            //                                             }else{
            //                                                 $less_v = 0;
            //                                             }

            //                                             $lv_per_menu = $less_v;
            //                                         }

            //                                     }

            //                                 }

            //                             }else{
            //                                 foreach ($trans_disc_cart as $disc_id => $row) {
            //                                     if($row['no_tax'] == 1){
            //                                         $has_no_tax_disc = true;
            //                                         // break;
            //                                     }


            //                                     if(count($row['persons']) > 0){
            //                                         $rate = $row['disc_rate'];
            //                                         $guests = $row['guest'];
            //                                         switch ($row['disc_type']) {
            //                                             case "equal":
            //                                                     $divi = $total_per_menu/$row['guest'];
            //                                                     $divi_less = $divi;
            //                                                     $lv = 0;
            //                                                     if($row['no_tax'] == 1){
            //                                                         $divi_less = ($divi / 1.12);
            //                                                         $lv = $divi - $divi_less;
            //                                                     }
            //                                                     $no_persons = count($row['persons']);
            //                                                     foreach ($row['persons'] as $code => $per) {
            //                                                         $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $divi_less);
            //                                                         $disc_per_menu += ($rate / 100) * $divi_less;
            //                                                         $lv_per_menu += $lv;
            //                                                     }
            //                                                     $tl = $divi * ( abs($row['guest'] - $no_persons) );
            //                                                     $tdl = ($divi_less * $no_persons) - $disc_per_menu;
            //                                                     $tl2 = $divi * ( abs($row['guest'] - $ps_counter) );
            //                                                     $vat1 = $tl2 / 1.12;
            //                                                     $vatss_per_menu = ($vat1 * 0.12);

            //                                                     // echo $vatss.'eeeee-';
            //                                                     // $total = $tl + $tdl;
            //                                                     // $total = ($divi * $row['guest']) - $discount;
            //                                                     break;
            //                                             default:
            //                                                 if($row['fix'] == 0){
            //                                                     if(DISCOUNT_NET_OF_VAT && $row['disc_code'] != DISCOUNT_NET_OF_VAT_EX){
            //                                                         $no_citizens = count($row['persons']);
            //                                                         $total_net_vat = ($total_per_menu / 1.12);                     
            //                                                         foreach ($row['persons'] as $code => $per) {
            //                                                             $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $total_net_vat);
            //                                                             $disc_per_menu += ($rate / 100) * $total_net_vat;
            //                                                         }
            //                                                         // $total -= $discount;
            //                                                     }
            //                                                     else{
            //                                                         $no_citizens = count($row['persons']);
            //                                                         if($row['no_tax'] == 1)
            //                                                             $total_per_menu = ($total_per_menu / 1.12);                     
                                                                    
            //                                                         foreach ($row['persons'] as $code => $per) {
            //                                                             $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $total_per_menu);
            //                                                             $disc_per_menu += ($rate / 100) * $total_per_menu;
            //                                                         }
            //                                                         // $total -= $discount;
            //                                                     }
            //                                                 }
            //                                                 else{
            //                                                     $discs[] = array('type'=>$row['disc_code'],'amount'=>$rate);
            //                                                     $disc_per_menu += $rate;
            //                                                     // $total -= $discount;
            //                                                 }

            //                                         }
            //                                     }    


            //                                 }
            //                             }
            //                             // var_dump($has_no_tax_disc);
            //                             $total_per_menu -= $disc_per_menu + $lv_per_menu;
            //                             if($has_no_tax_disc){
            //                                 $charge_amount = ($charge_amount / 100) * ($total_per_menu - $vatss_per_menu);         
            //                                 // echo $charge_amount." -- ".$lv_per_menu.'AAAAA';
            //                             }
            //                             else{
            //                                 $charge_amount = ($charge_amount / 100) * (($total_per_menu)/1.12);
            //                                 // echo 'ssss';
            //                             }
                                        
            //                         }else{
            //                             $charge_amount = ($charge_amount / 100) * (($total_per_menu)/1.12);
            //                         }

            //                     }else{
            //                         if($zero_r == 1){
            //                             // echo $total." - ".$total_no_charge." - ".$total_zero_lv; die();
            //                             $charge_amount = ($charge_amount / 100) * ($total_per_menu);
            //                         }else{
            //                             // $charge_amount = ($opt['amount'] / 100) * ($total/1.12);
            //                             $charge_amount = ($charge_amount / 100) * (($total_per_menu)/1.12);
            //                         }
            //                     }

            //                 }else{

            //                     if(count($trans_disc_cart) > 0 ){
            //                         $error_disc = 0;
            //                         foreach ($trans_disc_cart as $disc_id => $row) {
            //                             if(!isset($row['disc_type'])){
            //                                 $error_disc = 1;
            //                             }
            //                             else{
            //                                 if($row['disc_type'] == "")
            //                                     $error_disc = 1;
            //                             }
            //                         }

            //                         if($error_disc == 0){
            //                             $has_no_tax_disc = false;
            //                             foreach ($trans_disc_cart as $disc_id => $row) {
            //                                 if($row['no_tax'] == 1){
            //                                     $has_no_tax_disc = true;
            //                                     break;
            //                                 }    
            //                             }
            //                             // var_dump($has_no_tax_disc);
            //                             if($has_no_tax_disc){
            //                                 // echo $total." -- ".$vatss.'AAAAA';
            //                                 $charge_amount = ($charge_amount / 100) * ($total_per_menu);         
            //                             }
            //                             else{
            //                                 //discount na di senior or pwd
            //                                 $charge_amount = ($charge_amount / 100) * ($total_per_menu);
            //                             }
                                        
            //                         }else{
            //                             $charge_amount = ($charge_amount / 100) * (($total_per_menu));
            //                         }

            //                     }else{
            //                         if($zero_r == 1){
            //                             $charge_amount = ($charge_amount / 100) * ($total_per_menu);
            //                         }else{
            //                             // $charge_amount = ($opt['amount'] / 100) * ($total/1.12);
            //                             $charge_amount = ($charge_amount / 100) * ($total_per_menu);
            //                         }
            //                     }

            //                 }


            //             }

            //             if(isset($charges[$trans['nocharge']])){
            //                 $row = $charges[$trans['nocharge']];
            //                 $row['amount'] += $charge_amount;
            //                 $charges[$trans['nocharge']] = $row;
            //             }else{
            //                 $charges[$trans['nocharge']] = array(
            //                     'code'=>$char_res[0]->charge_code,
            //                     'name'=>$char_res[0]->charge_name,
            //                     'amount'=>$charge_amount,
            //                     'rate'=>$char_res[0]->charge_amount,
            //                     'absolute'=>$char_res[0]->absolute,
            //                 );
            //             }

            //             if($is_absolute == 1){
            //                 $charges[$trans['nocharge']] = array(
            //                     'code'=>$char_res[0]->charge_code,
            //                     'name'=>$char_res[0]->charge_name,
            //                     'amount'=>$charge_amount,
            //                     'rate'=>$char_res[0]->charge_amount,
            //                     'absolute'=>$char_res[0]->absolute,
            //                 );
            //             }
            //             $total_charges += $charge_amount;
            //         }
            //     }
            //     $total += $total_charges;

            //     // $total_charges += $charge_amount;
            // }
            // echo '<pre>',print_r($charges),'</pre>';
            //######NEW CHARGES END####################
            // echo $total;
            //total tranns charges
            $withtakeout = 0;
            $total_for_takeout = 0;
            $total_for_dinein = 0;
            $ps_counter = 0;
            foreach ($trans_cart as $trans_id => $v) {
                if($v['is_takeout'] == 1){
                    $withtakeout = 1;
                    if(isset($v['cost']))
                        $cost = $v['cost'];
                    if(isset($v['price']))
                        $cost = $v['price'];
                    $total_per = $v['qty'] * $cost;
                    $total_for_takeout += $total_per;
                }else{
                    if(isset($v['cost']))
                        $cost = $v['cost'];
                    if(isset($v['price']))
                        $cost = $v['price'];
                    $total_per = $v['qty'] * $cost;
                    $total_for_dinein += $total_per;
                }

            }

            $total_for_dinein -= $discount + $less_vat;
            // $total_for_charge = $total - $less_vat;
            
            //to get the discount and less vat of for dinein

            // echo $withtakeout.'aaaaa';
            // if($withtakeout == 0){
            // die('sss');
                if(count($trans_charge_cart) > 0 ){
                    // echo $am."<br>";
                    foreach ($trans_charge_cart as $charge_id => $opt) {
                        $char_res = $this->site_model->get_tbl('charges',array('charge_id'=>$charge_id),array(),null,true);
                        $char_no_tax = $char_res[0]->no_tax;
                        $charge_amount = $opt['amount'];
                        if($opt['absolute'] == 0){

                            if($char_no_tax == 1){

                                // $charge_amount = ($opt['amount'] / 100) * $am;
                                // echo '<pre>',print_r($trans_disc_cart),'</pre>';
                                //Modified by Jed 11/28/2017
                                //wrong charges pag may discounts
                                if($per_item_disc){
                                    $charge_total = 0;
                                    foreach ($trans_cart as $trans_id => $v) {
                                        
                                        if($v['is_takeout'] != 1){

                                            if(isset($v['cost']))
                                                $cost = $v['cost'];
                                            if(isset($v['price']))
                                                $cost = $v['price'];
                                            $total_per = $v['qty'] * $cost;

                                            if(isset($item_discount_cart[$trans_id])){
                                                
                                                if($item_discount_cart[$trans_id]['disc_code'] == 'DIPLOMAT'){

                                                    // if($item_discount_cart[$trans_id]['no_tax'] == 1){
                                                        $to_disc = $total_per / 1.12;
                                                        $lessv = $to_disc * 0.12;
                                                        // $rate = $val->disc_rate / 100;
                                                        // $discount = $to_disc * $rate;
                                                        // $total_disc = $less_v + $discount;
                                                    // }else{
                                                    //     $less_v = 0;
                                                    // }

                                                        // echo $total.' --- '.$lessv;
                                                    $charge_total += ($opt['amount'] / 100) * ($total_per - $lessv);
                                                }else{
                                                    $no_tx =  $item_discount_cart[$trans_id]['no_tax'];
                                                    if($no_tx == 1){
                                                        $to_disc = $total_per / 1.12;
                                                        $lessv = $to_disc * 0.12;
                                                        $charge_total += ($opt['amount'] / 100) * ($total_per - $total_no_charge - $lessv);
                                                        // die('ss');
                                                    }else{
                                                        $charge_total += ($opt['amount'] / 100) * (($total_per - $item_discount_cart[$trans_id]['amount'])/1.12);
                                                    }
                                                }

                                            }else{
                                                $charge_total += ($opt['amount'] / 100) * (($total_per - $total_no_charge)/1.12);
                                            }

                                        }
                                    }

                                    $charge_amount = $charge_total;

                                }else{

                                    // $charge_amount = ($opt['amount'] / 100) * $am;
                                    // echo '<pre>',print_r($trans_disc_cart),'</pre>';
                                    //Modified by Jed 11/28/2017
                                    //wrong charges pag may discounts
                                    if(count($trans_disc_cart) > 0 ){
                                        $error_disc = 0;
                                        foreach ($trans_disc_cart as $disc_id => $row) {
                                            if(!isset($row['disc_type'])){
                                                $error_disc = 1;
                                            }
                                            else{
                                                if($row['disc_type'] == "")
                                                    $error_disc = 1;
                                            }
                                        }

                                        if($error_disc == 0){
                                            $has_no_tax_disc = false;
                                            foreach ($trans_disc_cart as $disc_id => $row) {
                                                if($row['no_tax'] == 1){
                                                    $has_no_tax_disc = true;
                                                    break;
                                                }    
                                            }
                                            // var_dump($has_no_tax_disc);
                                            if($has_no_tax_disc){
                                                // echo $total_for_dinein." -- ".$vatss.'AAAAA';
                                                // $charge_amount = ($opt['amount'] / 100) * ($total - $total_no_charge - $vatss);         
                                                $charge_amount = ($opt['amount'] / 100) * ($total_for_dinein - $vatss);         
                                            }
                                            else{
                                                // $charge_amount = ($opt['amount'] / 100) * (($total - $total_no_charge)/1.12);
                                                $charge_amount = ($opt['amount'] / 100) * ($total_for_dinein/1.12);
                                            }
                                            
                                        }else{
                                            // $charge_amount = ($opt['amount'] / 100) * (($total - $total_no_charge)/1.12);
                                            $charge_amount = ($opt['amount'] / 100) * ($total_for_dinein/1.12);
                                        }

                                    }else{
                                        if($zero_r == 1){
                                            // echo $total." - ".$total_no_charge." - ".$total_zero_lv; die();
                                            $charge_amount = ($opt['amount'] / 100) * ($total_for_dinein);
                                        }else{
                                            // $charge_amount = ($opt['amount'] / 100) * ($total/1.12);
                                            $charge_amount = ($opt['amount'] / 100) * ($total_for_dinein/1.12);
                                        }
                                    }
                                }

                            }else{


                                // if(count($trans_disc_cart) > 0 ){
                                //     $error_disc = 0;
                                //     foreach ($trans_disc_cart as $disc_id => $row) {
                                //         if(!isset($row['disc_type'])){
                                //             $error_disc = 1;
                                //         }
                                //         else{
                                //             if($row['disc_type'] == "")
                                //                 $error_disc = 1;
                                //         }
                                //     }

                                //     if($error_disc == 0){
                                //         $has_no_tax_disc = false;
                                //         foreach ($trans_disc_cart as $disc_id => $row) {
                                //             if($row['no_tax'] == 1){
                                //                 $has_no_tax_disc = true;
                                //                 break;
                                //             }    
                                //         }
                                //         // var_dump($has_no_tax_disc);
                                //         if($has_no_tax_disc){
                                //             // echo $total." -- ".$vatss.'AAAAA';
                                //             $charge_amount = ($opt['amount'] / 100) * ($total - $total_no_charge + $discount);         
                                //         }
                                //         else{
                                //             //discount na di senior or pwd
                                //             $charge_amount = ($opt['amount'] / 100) * ($total - $total_no_charge + $discount);
                                //         }
                                        
                                //     }else{
                                //         $charge_amount = ($opt['amount'] / 100) * (($total - $total_no_charge) + $discount);
                                //     }

                                // }else{
                                //     if($zero_r == 1){
                                //         $charge_amount = ($opt['amount'] / 100) * ($total - $total_no_charge);
                                //     }else{
                                //         // $charge_amount = ($opt['amount'] / 100) * ($total/1.12);
                                //         $charge_amount = ($opt['amount'] / 100) * (($total - $total_no_charge));
                                //     }
                                // }

                                if($total != 0){
                                    $charge_amount = ($opt['amount'] / 100) * $gross;

                                }else{
                                     $charge_amount = 0;
                                }


                            }


                        }
                        $charges[$charge_id] = array('code'=>$opt['code'],
                                           'name'=>$opt['name'],
                                           'amount'=>$charge_amount,
                                           );
                        $total_charges += $charge_amount;
                    }
                    $total += $total_charges;
                }

            // }else{

            //     $dinein_disc = 0;
            //     $dinein_lessv = 0;
            //     $dinein_vatss = 0;

            //     if($per_item_disc){

            //         //to get the discount and less vat of for dinein
            //         //for line discount
            //         if(is_array($disc_cart)){
            //             $item_discount_cart = $disc_cart;
            //         }
            //         // echo '<pre>',print_r($item_discount_cart),'</pre>';
            //         if(count($item_discount_cart) > 0){

            //             foreach($item_discount_cart as $id => $val){

            //                 $row = $trans_cart[$id];
            //                 if($row['is_takeout'] == 0){
            //                     $dinein_disc += $val['amount'];
                                
            //                     if(isset($row['cost']))
            //                         $cost = $row['cost'];
            //                     if(isset($row['price']))
            //                         $cost = $row['price'];

            //                     $total_amt = $row['qty'] * $cost;

            //                     if($val['disc_code'] == ATHLETE_CODE){
            //                         $to_disc = $total_amt / 1.12;
            //                         $less_v = 0;
            //                     }else{
            //                         if($val['no_tax'] == 1){
            //                             $to_disc = $total_amt / 1.12;
            //                             $less_v = $to_disc * 0.12;
            //                             // $rate = $val->disc_rate / 100;
            //                             // $discount = $to_disc * $rate;
            //                             // $total_disc = $less_v + $discount;
            //                         }else{
            //                             $less_v = 0;
            //                         }
            //                     }

            //                     $dinein_lessv += $less_v;
            //                     $dinein_vatss += $less_v;

            //                 }


            //             }


            //         }

            //     }else{

            //         //for lahatan disocunt
            //         if(count($trans_disc_cart) > 0 ){
            //             $error_disc = 0;
            //             foreach ($trans_disc_cart as $disc_id => $row) {
            //                 if(!isset($row['disc_type'])){
            //                     $error_disc = 1;
            //                 }
            //                 else{
            //                     if($row['disc_type'] == "")
            //                         $error_disc = 1;
            //                 }
            //             }
            //             if($error_disc == 0){
            //                 foreach ($trans_disc_cart as $disc_id => $row) {
            //                     $rate = $row['disc_rate'];
            //                     $guests = $row['guest'];

            //                     if($row['disc_type'] == 'equal'){
            //                         $no_persons = count($row['persons']);
            //                         $ps_counter += $no_persons;
            //                     }
            //                 }
            //             }
            //         }
         
            //         // echo $ps_counter.'ssss';
         
            //         if(count($trans_disc_cart) > 0 ){
            //             $error_disc = 0;
            //             foreach ($trans_disc_cart as $disc_id => $row) {
            //                 if(!isset($row['disc_type'])){
            //                     $error_disc = 1;
            //                 }
            //                 else{
            //                     if($row['disc_type'] == "")
            //                         $error_disc = 1;
            //                 }
            //             }
            //             if($error_disc == 0){
            //                 foreach ($trans_disc_cart as $disc_id => $row) {
            //                     // echo $total." ==== ";
            //                     // echo '<pre>',print_r($row['persons']),'</pre>';
            //                     if(count($row['persons']) > 0){
            //                         $rate = $row['disc_rate'];
            //                         $guests = $row['guest'];
            //                         switch ($row['disc_type']) {
            //                             case "equal":
            //                                     $divi = $total_for_dinein/$row['guest'];
            //                                     $divi_less = $divi;
            //                                     $lv = 0;

            //                                     if($row['disc_code'] == ATHLETE_CODE){
            //                                         $divi_less = ($divi / 1.12);
            //                                         $lv = $divi - $divi_less;

            //                                         $no_persons = count($row['persons']);
            //                                         foreach ($row['persons'] as $code => $per) {
            //                                             $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $divi_less);
            //                                             $dinein_disc += ($rate / 100) * $divi_less;
            //                                             // $less_vat += $lv;
            //                                         }

            //                                     }else{
            //                                         if($row['no_tax'] == 1){
            //                                             $divi_less = ($divi / 1.12);
            //                                             $lv = $divi - $divi_less;
            //                                         }
            //                                         $no_persons = count($row['persons']);
            //                                         foreach ($row['persons'] as $code => $per) {
            //                                             $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $divi_less);
            //                                             $dinein_disc += ($rate / 100) * $divi_less;
            //                                             // $less_vat += $lv;
            //                                             $dinein_lessv += $lv;
            //                                         }
            //                                         $tl = $divi * ( abs($row['guest'] - $no_persons) );
            //                                         $tdl = ($divi_less * $no_persons) - $dinein_disc;
            //                                         $tl2 = $divi * ( abs($row['guest'] - $ps_counter) );
            //                                         $vat1 = $tl2 / 1.12;
            //                                         $dinein_vatss = ($vat1 * 0.12);
            //                                     }


            //                                     // echo $vatss.'eeeee-';
            //                                     // $total = $tl + $tdl;
            //                                     // $total = ($divi * $row['guest']) - $discount;
            //                                     break;
            //                             default:
            //                                 if($row['fix'] == 0){
            //                                     if(DISCOUNT_NET_OF_VAT && $row['disc_code'] != DISCOUNT_NET_OF_VAT_EX){
            //                                         $no_citizens = count($row['persons']);
            //                                         $total_net_vat = ($total_for_dinein / 1.12);                     
            //                                         foreach ($row['persons'] as $code => $per) {
            //                                             $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $total_net_vat);
            //                                             $dinein_disc += ($rate / 100) * $total_net_vat;
            //                                         }
            //                                         // $total -= $discount;
            //                                     }
            //                                     else{

            //                                         if($row['disc_code'] == ATHLETE_CODE){
            //                                             $no_citizens = count($row['persons']);
            //                                             // if($row['no_tax'] == 1)
            //                                             $total_for_dinein = ($total_for_dinein / 1.12);                     
                                                        
            //                                             foreach ($row['persons'] as $code => $per) {
            //                                                 $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $total_for_dinein);
            //                                                 $dinein_disc += ($rate / 100) * $total_for_dinein;
            //                                             }
            //                                         }else{
            //                                             $no_citizens = count($row['persons']);
            //                                             if($row['no_tax'] == 1)
            //                                                 $total_for_dinein = ($total_for_dinein / 1.12);                     
                                                        
            //                                             foreach ($row['persons'] as $code => $per) {
            //                                                 $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $total_for_dinein);
            //                                                 $dinein_disc += ($rate / 100) * $total_for_dinein;
            //                                             }
            //                                             // $total -= $discount;
            //                                         }    
            //                                     }
            //                                 }
            //                                 else{
            //                                     $discs[] = array('type'=>$row['disc_code'],'amount'=>$rate);
            //                                     $dinein_disc += $rate;
            //                                     // $total -= $discount;
            //                                 }

            //                         }
            //                     }
            //                     // echo $discount."<br>";
            //                 }
            //             }
            //         }

            //     }

            //     $total_for_dinein -= $dinein_disc + $dinein_lessv;


            //             //compute for charges
            //     // if(count($trans_charge_cart) > 0 ){
            //         // echo $am."<br>";
            //         // foreach ($trans_charge_cart as $charge_id => $opt) {
            //     $char_res = $this->site_model->get_tbl('charges',array('charge_id'=>1),array(),null,true);
            //     $char_no_tax = $char_res[0]->no_tax;
            //     $char_abs = $char_res[0]->absolute;
            //     $charge_amount = $char_res[0]->charge_amount;

            //     if($char_abs == 0){

            //         if($char_no_tax == 1){

            //             // $charge_amount = ($opt['amount'] / 100) * $am;
            //             // echo '<pre>',print_r($trans_disc_cart),'</pre>';
            //             //Modified by Jed 11/28/2017
            //             //wrong charges pag may discounts
            //             if($per_item_disc){
            //                 $charge_total = 0;
            //                 foreach ($trans_cart as $trans_id => $v) {
            //                     if($v['is_takeout'] == 0){

            //                         if(isset($v['cost']))
            //                             $cost = $v['cost'];
            //                         if(isset($v['price']))
            //                             $cost = $v['price'];
            //                         $total_per = $v['qty'] * $cost;

            //                         if(isset($item_discount_cart[$trans_id])){
                                        
            //                             if($item_discount_cart[$trans_id]['disc_code'] == 'DIPLOMAT'){

            //                                 // if($item_discount_cart[$trans_id]['no_tax'] == 1){
            //                                     $to_disc = $total_per / 1.12;
            //                                     $lessv = $to_disc * 0.12;
            //                                     // $rate = $val->disc_rate / 100;
            //                                     // $discount = $to_disc * $rate;
            //                                     // $total_disc = $less_v + $discount;
            //                                 // }else{
            //                                 //     $less_v = 0;
            //                                 // }

            //                                     // echo $total.' --- '.$lessv;
            //                                 $charge_total += ($charge_amount / 100) * ($total_per - $lessv);
            //                             }else{
            //                                 $no_tx =  $item_discount_cart[$trans_id]['no_tax'];
            //                                 if($no_tx == 1){
            //                                     $to_disc = $total_per / 1.12;
            //                                     $lessv = $to_disc * 0.12;
            //                                     $charge_total += ($charge_amount / 100) * ($total_per - $total_no_charge - $lessv);
            //                                     // die('ss');
            //                                 }else{
            //                                     $charge_total += ($charge_amount / 100) * (($total_per - $item_discount_cart[$trans_id]['amount'])/1.12);
            //                                 }
            //                             }

            //                         }else{
            //                             $charge_total += ($charge_amount / 100) * (($total_per - $total_no_charge)/1.12);
            //                         }
            //                     }
            //                 }

            //                 $charge_amount = $charge_total;

            //             }else{



            //                 // $charge_amount = ($opt['amount'] / 100) * $am;
            //                 // echo '<pre>',print_r($trans_disc_cart),'</pre>';
            //                 //Modified by Jed 11/28/2017
            //                 //wrong charges pag may discounts
            //                 if(count($trans_disc_cart) > 0 ){
            //                     $error_disc = 0;
            //                     foreach ($trans_disc_cart as $disc_id => $row) {
            //                         if(!isset($row['disc_type'])){
            //                             $error_disc = 1;
            //                         }
            //                         else{
            //                             if($row['disc_type'] == "")
            //                                 $error_disc = 1;
            //                         }
            //                     }

            //                     if($error_disc == 0){
            //                         $has_no_tax_disc = false;
            //                         foreach ($trans_disc_cart as $disc_id => $row) {
            //                             if($row['no_tax'] == 1){
            //                                 $has_no_tax_disc = true;
            //                                 break;
            //                             }    
            //                         }
            //                         // var_dump($has_no_tax_disc);
            //                         if($has_no_tax_disc){
            //                             // echo $total_for_dinein." -- ".$vatss.'AAAAA'; 
            //                             $charge_amount = ($charge_amount / 100) * ($total_for_dinein - $total_no_charge - $dinein_vatss);         
            //                         }
            //                         else{
            //                             $charge_amount = ($charge_amount / 100) * (($total_for_dinein - $total_no_charge)/1.12);
            //                         }
                                    
            //                     }else{
            //                         $charge_amount = ($charge_amount / 100) * (($total_for_dinein - $total_no_charge)/1.12);
            //                     }

            //                 }else{
            //                     if($zero_r == 1){
            //                         // echo $total." - ".$total_no_charge." - ".$total_zero_lv; die();
            //                         $charge_amount = ($charge_amount / 100) * ($total_for_dinein - $total_no_charge);
            //                     }else{
            //                         // $charge_amount = ($opt['amount'] / 100) * ($total/1.12);
            //                         $charge_amount = ($charge_amount / 100) * (($total_for_dinein - $total_no_charge)/1.12);
            //                     }
            //                 }
            //             }

            //         }else{


            //             $charge_amount = ($charge_amount / 100) * $total_for_dinein;

            //         }


            //     }
            //     $charges[1] = array('code'=>$char_res[0]->charge_code,
            //                        'name'=>$char_res[0]->charge_name,
            //                        'amount'=>$charge_amount,
            //                        );

            //     $total_charges += $charge_amount;


            //     //for takeout
            //     $char_res = $this->site_model->get_tbl('charges',array('charge_id'=>3),array(),null,true);
            //     $char_no_tax = $char_res[0]->no_tax;
            //     $char_abs = $char_res[0]->absolute;
            //     $charge_amount = $char_res[0]->charge_amount;

            //     if($char_abs == 0){

            //         if($char_no_tax == 1){

            //             // $charge_amount = ($opt['amount'] / 100) * $am;
            //             // echo '<pre>',print_r($trans_disc_cart),'</pre>';
            //             //Modified by Jed 11/28/2017
            //             //wrong charges pag may discounts
            //             if($per_item_disc){
            //                 $charge_total = 0;
            //                 foreach ($trans_cart as $trans_id => $v) {
            //                     if($v['is_takeout'] == 1){

            //                         if(isset($v['cost']))
            //                             $cost = $v['cost'];
            //                         if(isset($v['price']))
            //                             $cost = $v['price'];
            //                         $total_per = $v['qty'] * $cost;

            //                         if(isset($item_discount_cart[$trans_id])){
                                        
            //                             if($item_discount_cart[$trans_id]['disc_code'] == 'DIPLOMAT'){

            //                                 // if($item_discount_cart[$trans_id]['no_tax'] == 1){
            //                                     $to_disc = $total_per / 1.12;
            //                                     $lessv = $to_disc * 0.12;
            //                                     // $rate = $val->disc_rate / 100;
            //                                     // $discount = $to_disc * $rate;
            //                                     // $total_disc = $less_v + $discount;
            //                                 // }else{
            //                                 //     $less_v = 0;
            //                                 // }

            //                                     // echo $total.' --- '.$lessv;
            //                                 $charge_total += ($opt['amount'] / 100) * ($total_per - $lessv);
            //                             }else{
            //                                 $no_tx =  $item_discount_cart[$trans_id]['no_tax'];
            //                                 if($no_tx == 1){
            //                                     $to_disc = $total_per / 1.12;
            //                                     $lessv = $to_disc * 0.12;
            //                                     $charge_total += ($charge_amount / 100) * ($total_per - $total_no_charge - $lessv);
            //                                     // die('ss');
            //                                 }else{
            //                                     $charge_total += ($charge_amount / 100) * (($total_per - $item_discount_cart[$trans_id]['amount'])/1.12);
            //                                 }
            //                             }

            //                         }else{
            //                             $charge_total += ($charge_amount / 100) * (($total_per - $total_no_charge)/1.12);
            //                         }
            //                     }
            //                 }

            //                 $charge_amount = $charge_total;

            //             }else{

            //                 // $charge_amount = ($opt['amount'] / 100) * $am;
            //                 // echo '<pre>',print_r($trans_disc_cart),'</pre>';
            //                 //Modified by Jed 11/28/2017
            //                 //wrong charges pag may discounts
            //                 if(count($trans_disc_cart) > 0 ){
            //                     $error_disc = 0;
            //                     foreach ($trans_disc_cart as $disc_id => $row) {
            //                         if(!isset($row['disc_type'])){
            //                             $error_disc = 1;
            //                         }
            //                         else{
            //                             if($row['disc_type'] == "")
            //                                 $error_disc = 1;
            //                         }
            //                     }

            //                     if($error_disc == 0){
            //                         $has_no_tax_disc = false;
            //                         foreach ($trans_disc_cart as $disc_id => $row) {
            //                             if($row['no_tax'] == 1){
            //                                 $has_no_tax_disc = true;
            //                                 break;
            //                             }    
            //                         }
            //                         // var_dump($has_no_tax_disc);
            //                         if($has_no_tax_disc){
            //                             // echo $total." -- ".$vatss.'AAAAA';
            //                             $charge_amount = ($charge_amount / 100) * ($total_for_takeout - $total_no_charge - $vatss);         
            //                         }
            //                         else{
            //                             $charge_amount = ($charge_amount / 100) * (($total_for_takeout - $total_no_charge)/1.12);
            //                         }
                                    
            //                     }else{
            //                         $charge_amount = ($charge_amount / 100) * (($total_for_takeout - $total_no_charge)/1.12);
            //                     }

            //                 }else{
            //                     if($zero_r == 1){
            //                         // echo $total." - ".$total_no_charge." - ".$total_zero_lv; die();
            //                         $charge_amount = ($charge_amount / 100) * ($total_for_takeout - $total_no_charge);
            //                     }else{
            //                         // $charge_amount = ($opt['amount'] / 100) * ($total/1.12);
            //                         $charge_amount = ($charge_amount / 100) * (($total_for_takeout - $total_no_charge)/1.12);
            //                     }
            //                 }
            //             }

            //         }else{


            //             $charge_amount = ($charge_amount / 100) * $total_for_takeout;

            //         }


            //     }
            //     $charges[3] = array('code'=>$char_res[0]->charge_code,
            //                        'name'=>$char_res[0]->charge_name,
            //                        'amount'=>$charge_amount,
            //                        );

            //     $total_charges += $charge_amount;


            //         // }
            //     $total += $total_charges;
            //     // }
            // }

            $tax = $this->get_tax_rates(false);
                $taxable_amount = $gross;
                $not_taxable_amount = 0;
                $zero_rated = 0;
                $diplomat_count = 0;
                $g_count = 0;
                if(count($tax) > 0){

                    if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
                        $rate = 1.12;
                        // $cost = ($cost / $rate);
                        // $rate = 0.12;
                        $zero_rated += $gross / $rate;
                        $taxable_amount -= $gross;
                        $not_taxable_amount += $gross / $rate;
                    }else{
                        
                        if(count($item_discount_cart)>0){
                            foreach ($trans_cart as $trans_id => $v) {
                                if(isset($v['cost']))
                                    $cost = $v['cost'];
                                if(isset($v['price']))
                                    $cost = $v['price'];

                                // $cost = $v['cost'];
                                $total = $v['qty'] * $cost;

                                if(isset($item_discount_cart[$trans_id])){
                                    
                                    if($item_discount_cart[$trans_id]['disc_code'] == 'DIPLOMAT'){
                                        $zero_rated += $total / 1.12;
                                        $not_taxable_amount += $total / 1.12;
                                        $taxable_amount -= $total;
                                    }else{
                                        $no_tx =  $item_discount_cart[$trans_id]['no_tax'];
                                        if($no_tx == 1){
                                            $not_taxable_amount += $total / 1.12;
                                            $taxable_amount -= $total;
                                            // die('ss');
                                        }else{
                                            // $with_disc = $total - $item_discount[$trans_id]['amount'];
                                            // echo $with_disc; die();
                                            $taxable_amount -= $item_discount_cart[$trans_id]['amount'];
                                        }
                                    }

                                }
                            }
                        }else{
                            foreach ($trans_disc_cart as $disc_id => $dc) {
                                $discount = 0;
                                $rate = $dc['disc_rate'];

                                $divi = $gross/$dc['guest'];
                                $no_tax_persons = count($dc['persons']);
                                $g_count = $dc['guest'];
                                foreach($dc['persons'] as $name => $val){
                                    if($dc['fix'] == 0){

                                        $where = array('id'=>1);
                                        $set_det = $this->site_model->get_details($where,'settings');
                                        if($counter['type'] != 'dinein' && $counter['type'] != 'mcb' && $dc['disc_code'] == 'SNDISC' && $divi > $set_det[0]->ceiling_amount && $set_det[0]->ceiling_amount > 0){
                                            $divi = $set_det[0]->ceiling_amount;
                                            $divi_less = $set_det[0]->ceiling_amount;
                                        }

                                        if($counter['type'] == 'mcb' && $dc['disc_code'] == 'SNDISC' && $divi > $set_det[0]->ceiling_mcb && $set_det[0]->ceiling_mcb > 0){
                                            $divi = $set_det[0]->ceiling_mcb;
                                            $divi_less = $set_det[0]->ceiling_mcb;
                                        }

                                        
                                        if($dc['disc_code'] == 'DIPLOMAT'){
                                            $divi_less = ($divi / 1.12);

                                            $zero_rated += $divi_less;
                                            $not_taxable_amount += $divi_less;
                                            $taxable_amount -= $divi;
                                            $diplomat_count++;
                                        }elseif($dc['disc_code'] == ATHLETE_CODE){
                                            $divi_less = ($divi / 1.12);
                                            $disc_per_person = ($rate / 100) * $divi_less;

                                            $taxable_amount -= $disc_per_person;

                                        }else{
                                            if($dc['no_tax'] == 1){
                                                $divi_less = ($divi / 1.12);
                                                $less_vat = $divi - $divi_less;
                                                // $not_taxable_amount += $divi_less * $no_tax_persons;
                                                // $taxable_amount -= $divi + $less_vat;
                                                $disc_per_person = ($rate / 100) * $divi_less;

                                                $no_tax = $divi_less * $no_tax_persons;
                                                $taxable_amount -= $divi;
                                                // echo $not_taxable_amount.'aa';
                                                $not_taxable_amount += $divi - $less_vat;
                                                // echo $not_taxable_amount.'bb';
                                            }else{
                                                $disc_per_person = ($rate / 100) * $divi; 
                                                // $not_taxable_amount = 0;
                                                // $disc_persons = $disc_per_person * $no_tax_persons;
                                                $taxable_amount -= $disc_per_person;
                                            }
                                        }


                                    }else{
                                        // $disc_per_person = $divi - $rate;
                                        $disc_per_person = $rate;
                                        $taxable_amount -= $disc_per_person;
                                        // $taxable_amount -= $discount;
                                        // $not_taxable_amount = 0; 
                                    }
                                }

                                
                            }
                        }


                    }

                    // echo $taxable_amount; die();
                    //remove charges 
                   
                        if($g_count == $diplomat_count){
                            $zero_rated -= $total_disc;
                               
                        }

                    
                        if($g_count == $diplomat_count){
                            $not_taxable_amount -= $total_disc;
                            
                        }



                    // if(LOCALSYNC){
                    //     if(count($trans_sales_zero_rated) > 0)
                    //         $this->sync_model->add_trans_sales_zero_rated($sales_id);

                    //     if(count($trans_sales_no_tax) > 0)
                    //         $this->sync_model->add_trans_sales_no_tax($sales_id);
                    // }
                    if($zero_rated != 0 && $total_disc != 0){
                        if($g_count == $diplomat_count){
                            $taxable_amount = 0;
                        }
                    }

                    $am = $taxable_amount;
                    $trans_tax = 0;
                    foreach ($tax as $tax_id => $tx) {
                        $rate = ($tx['rate'] / 100);
                        $tax_value = ($am / ($rate + 1) ) * $rate;
                        // ($am / 1.12) * .12
                        $trans_tax += $tax_value;
                    }
                    
                    $vat_sales_txt = $taxable_amount / 1.12;


                }

            $loc_res = $this->site_model->get_tbl('settings',array(),array(),null,true,'local_tax',null,1);
            $local_tax = $loc_res[0]->local_tax;
            $lt_amt = 0;
            if($local_tax > 0){
                // $lt_amt = ($local_tax / 100) * $net_total;
                $lt_amt = ($local_tax / 100) * $amount_cmpt;
                $total += $lt_amt;
            }
            if($asJson)
                echo json_encode(array('total'=>$total,'discount'=>$total_disc,'discs'=>$discs,'charge'=>$total_charges,'charges'=>$charges,'zero_rated'=>$zero_rated,'local_tax'=>$lt_amt,'cart_total_qty'=>$cart_total_qty,'gross'=>$gross,'vat_txt'=>$trans_tax,
                    'vat_sales_txt'=>$vat_sales_txt
                    // 'vat_sales_txt'=>$gross-$trans_tax
                    ));
            else
                return array('total'=>$total,'discount'=>$total_disc,'discs'=>$discs,'charge'=>$total_charges,'charges'=>$charges,'zero_rated'=>$zero_rated,'local_tax'=>$lt_amt,'cart_total_qty'=>$cart_total_qty,'gross'=>$gross,'vat_txt'=>$trans_tax,
                    'vat_sales_txt'=>$vat_sales_txt
                    // 'vat_sales_txt'=>$gross-$trans_tax
            );
        }
        public function get_tax_rates($asJson=true,$tax_id=null){
            $this->load->model('dine/settings_model');
            $taxes = $this->settings_model->get_tax_rates($tax_id);
            $tax = array();
            foreach ($taxes as $res) {
                $tax[$res->tax_id] = array(
                    "name"=>$res->name,
                    "rate"=>$res->rate
                );
            }
            if($asJson)
                echo json_encode($tax);
            else
                return $tax;
        }
        public function submit_trans($asJson=true,$submit=null,$void=false,$void_ref=null,$cart=null,$mod_cart=null,$print=false,$split_id=null,$printKitSlip=false,$submod_cart=null){
            // if(LOCALSYNC){
            //     $this->load->model('core/sync_model');
            //  }
            // echo "<pre>",print_r(sess('customer_name')),"</pre>";die();
            $this->load->model('dine/cashier_model');
            $counter = sess('counter');
            $trans_cart = sess('trans_cart');
            $trans_mod_cart = sess('trans_mod_cart');
            $trans_submod_cart = sess('trans_submod_cart');
            $trans_type_cart = sess('trans_type_cart');
            $trans_disc_cart = sess('trans_disc_cart');
            $trans_charge_cart = sess('trans_charge_cart');
            $loyalty_card = sess('loyalty_card');
            $reasons = sess('reasons');
            $item_discount = sess('item_discount');
            $trans_customer_name = (!empty(sess('customer_name'))) ? sess('customer_name') : '';
            $totals  = $this->total_trans(false,$cart);
            $total_amount = $totals['total'];
            $total_gross = $totals['gross'];
            $charges = $totals['charges'];
            $local_tax = $totals['local_tax'];
            $error = null;
            $act = null;
            $sales_id = null;
            $type = null;
            $type_id = SALES_TRANS;
            $print_echo = array();

            $js_rcps = '';

            if($void === true){
                $type_id = SALES_VOID_TRANS;
            }

            if($void_ref == null || $void_ref == 0)
                $void_ref = null;

            $serve_no = 0;
            if(isset($trans_type_cart[0]['serve_no'])){
                $serve_no = $trans_type_cart[0]['serve_no'];
            }

            if(count($trans_cart) <= 0){
                $error = "Error! There are no items.";
            }
            else if(count($counter) <= 0){
                $error = "Error! Shift or User is invalid.";
            }
            // else if(NEED_FOOD_SERVER && !isset($counter['waiter_id']) && $counter['type'] != 'counter' && $counter['type'] != 'takeout'){
            else if(NEED_FOOD_SERVER && !isset($counter['waiter_id']) && $counter['type'] == 'dinein'){
                $error = "Select Food Server";
            }
            else if(SERVER_NO_SETUP && $serve_no == 0 && $counter['type'] == 'counter' ){
                $error = "Please Select Serve No.";
            }
            else if(SERVER_NO_SETUP && $serve_no == 0 && $counter['type'] == 'takeout' ){
                $error = "Please Select Serve No.";
            }
            else{
                if(count($trans_disc_cart) > 0){
                    foreach ($trans_disc_cart as $disc_id => $row) {
                        if(!isset($row['disc_type'])){
                            $error = "Select Discount Type. If equally Divided or All Items.";
                        }
                        else{
                            if($row['disc_type'] == "")
                                $error = "Select Discount Type. If equally Divided or All Items.";
                        }
                    }
                    if($error != null){
                        if($asJson){
                            echo json_encode(array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type));
                            return false;
                        }
                        else{
                            return array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type);
                        }
                    }
                }


                if(is_array($cart)){
                    $trans_cart = $cart;
                }
                if(is_array($mod_cart)){
                    $trans_mod_cart = $mod_cart;
                }
                if(is_array($submod_cart)){
                    $trans_submod_cart = $submod_cart;
                }
                $type = $counter['type'];
                #save sa trans_sales
                $table = null;
                $guest = 0;
                
                $customer = null;
                if(isset($trans_type_cart[0]['table'])){
                    $table = $trans_type_cart[0]['table'];
                }
                if(isset($trans_type_cart[0]['guest'])){
                    $guest = $trans_type_cart[0]['guest'];
                }
                
                if(count($trans_disc_cart) > 0){
                    foreach ($trans_disc_cart as $disc_code => $dc) {
                        $guest = $dc['guest'];
                    }
                } 
                if(isset($trans_type_cart[0]['customer_id'])){
                    $customer = $trans_type_cart[0]['customer_id'];
                }
                if(count($loyalty_card) > 0){
                    foreach ($loyalty_card as $code => $row) {
                        $customer = $row['cust_id'];
                        // $loyalty = array(
                        //     "cust_id" => $row['cust_id'],
                        //     "code" => $row['code']
                        // );
                    }

                }
                $waiter = null;
                if(isset($counter['waiter_id'])){
                    $waiter = $counter['waiter_id'];
                }

                $splid = 0;
                if($split_id != null)
                    $splid = $split_id;
                 // $total_amount = number_format($total_amount, 2, '.', '');
                 $total_amount = $total_amount;
                 $trans_sales = array(
                    "user_id"       => $counter['user_id'],
                    "type_id"       => $type_id,
                    "shift_id"      => $counter['shift_id'],
                    "terminal_id"   => $counter['terminal_id'],
                    "type"          => $counter['type'],
                    "datetime"      => date2SqlDateTime($counter['datetime']),
                    "total_amount"  => $total_amount,
                    "void_ref"      => $void_ref,
                    "memo"          => null,
                    "table_id"      => $table,
                    "guest"         => $guest,
                    "serve_no"      => $serve_no,
                    "customer_id"   => $customer,
                    "customer_name" => $trans_customer_name,
                    "waiter_id"     => $waiter,
                    "split"         => $splid
                );

                 if(isset($counter['pf_id'])){
                    $trans_sales['pf_id'] = $counter['pf_id'];
                 }

                 if(isset($counter['value'])){
                    $trans_sales['value'] = $counter['value'];
                 }

                $user = $this->session->userdata('user');
                if(isset($counter['sales_id']) && $counter['sales_id'] != null){
                    $sales_id = $counter['sales_id'];
                    $this->cashier_model->update_trans_sales($trans_sales,$sales_id);

                    $log_id = $this->logs_model->add_logs('Sales Order',$user['id'],$user['full_name']." Updated Sales Order #".$sales_id,$sales_id);
                    // if(LOCALSYNC){
                    //     $this->sync_model->update_trans_sales($sales_id);
                    //     // $this->sync_model->add_logs($log_id);

                    //     //delete items
                    //     $this->sync_model->delete_trans_sales_menus($sales_id);
                    //     $this->sync_model->delete_trans_sales_items($sales_id);
                    //     $this->sync_model->delete_trans_sales_menu_modifiers($sales_id);
                    //     $this->sync_model->delete_trans_sales_discounts($sales_id);
                    //     $this->sync_model->delete_trans_sales_charges($sales_id);
                    //     $this->sync_model->delete_trans_sales_tax($sales_id);
                    //     $this->sync_model->delete_trans_sales_no_tax($sales_id);
                    //     $this->sync_model->delete_trans_sales_zero_rated($sales_id);
                    //     $this->sync_model->delete_trans_sales_local_tax($sales_id);
                    // }


                    $this->cashier_model->delete_trans_sales_menus($sales_id);
                    $this->cashier_model->delete_trans_sales_items($sales_id);
                    $this->cashier_model->delete_trans_sales_menu_modifiers($sales_id);
                    $this->cashier_model->delete_trans_sales_menu_submodifiers($sales_id);
                    $this->cashier_model->delete_trans_sales_discounts($sales_id);
                    $this->cashier_model->delete_trans_sales_charges($sales_id);
                    $this->cashier_model->delete_trans_sales_tax($sales_id);
                    $this->cashier_model->delete_trans_sales_no_tax($sales_id);
                    $this->cashier_model->delete_trans_sales_zero_rated($sales_id);
                    $this->cashier_model->delete_trans_sales_local_tax($sales_id);
                    $act="update";


                    if($submit === null || $submit == 0 || $submit == null)
                        site_alert('Transaction Updated.','success');
                }
                else{
                    $queue = $this->cashier_model->get_last_queue_id();

                    $trans_sales['queue_id'] = $queue ? $queue[0]->queue_id + 1 : 1;
                    $sales_id = $this->cashier_model->add_trans_sales($trans_sales);
                    $log_id = $this->logs_model->add_logs('Sales Order',$user['id'],$user['full_name']." Added New Sales Order #".$sales_id,$sales_id);
                    $act="add";

                    // if(LOCALSYNC){
                    //     $this->sync_model->add_trans_sales($sales_id);
                    //     // $this->sync_model->add_logs($log_id);
                    // }
                }
                #save sa trans_sales_menus
                $trans_sales_menu = array();
                $trans_sales_items = array();
                $total_gross = 0;
                $alcohol = 0;

                // echo "<pre>",print_r($trans_cart),"</pre>";die();

                foreach ($trans_cart as $trans_id => $v) {

                    if($v['qty'] == 0){ //if qty is zero skip the item to resolve the splitting 0 issue @jx10292019
                        continue;
                    }
                    $remarks = $serial_key = null;
                    $nocharge = 0;
                    $rate = (isset($trans_disc_cart[$trans_id]['disc_percent'])) ?  $trans_disc_cart[$trans_id]['disc_percent'] : 0 ;
                    $percent_disc = ($v['cost'] * $v['qty']) * ($rate / 100);
                    $percent_abs = (isset($trans_disc_cart[$trans_id]['disc_absolute'])) ? $trans_disc_cart[$trans_id]['disc_absolute'] : 0;
                    $total_disc = $percent_disc + $percent_abs;

                    // $is_takeout = 0;
                    // if($counter['type'] == 'takeout'){
                    //     $is_takeout = 1;
                    // }else{
                    //     if(isset($v['is_takeout'])){
                            $is_takeout = $v['is_takeout'];
                    //     }
                    // }
                    if(isset($v['nocharge']) && $v['nocharge'] != 0){
                        $nocharge = $v['nocharge'];
                    }
                    if(isset($v['remarks']) && $v['remarks'] != ""){
                        $remarks = $v['remarks'];
                    }
                    $kitchen_slip_printed=0;
                    if(isset($v['kitchen_slip_printed']) && $v['kitchen_slip_printed'] != ""){
                        $kitchen_slip_printed = $v['kitchen_slip_printed'];
                    }
                    $free = $free_reason = null;
                    if(isset($v['free_user_id'])){
                        $free = $v['free_user_id'];
                    }

                     if(isset($v['free_reason'])){
                        $free_reason = $v['free_reason'];
                    }
                    

                    if(!isset($v['retail'])){
                        $where = array('menu_id'=>$v['menu_id']);
                        $m_det = $this->site_model->get_details($where,'menus');

                        $trans_sales_menu[] = array(
                            "sales_id" => $sales_id,
                            "line_id" => $trans_id,
                            "menu_id" => $v['menu_id'],
                            "menu_name" => $m_det[0]->menu_name,
                            "price" => $v['cost'],
                            "qty" => $v['qty'],
                            "no_tax" => $v['no_tax'],
                            "discount"=> 0,
                            "remarks"=>$remarks,
                            "kitchen_slip_printed"=>$kitchen_slip_printed,
                            "free_user_id" => $free,
                            "free_reason" => $free_reason,
                            "nocharge" => $nocharge,
                            "is_takeout" => $is_takeout,
                            "ref_line_id" => isset($v['ref_trans_id']) ? $v['ref_trans_id'] : null,
                            "is_promo" => isset($v['is_promo']) ? $v['is_promo'] : 0,
                            "promo_type" => isset($v['promo_type']) ? $v['promo_type'] : null,
                            "free_promo_amount" => isset($v['free_promo_amount']) ? $v['free_promo_amount'] : 0,
                            "menu_category_id" => isset($v['menu_category_id']) ? $v['menu_category_id'] : 0,
                            "pf_id" => isset($v['pf_id']) ? $v['pf_id'] : 0,
                        );
                    }
                    else{
                        $where = array('item_id'=>$v['menu_id']);
                        $i_det = $this->site_model->get_details($where,'items');

                        $trans_sales_items[] = array(
                            "sales_id" => $sales_id,
                            "line_id" => $trans_id,
                            "item_id" => $v['menu_id'],
                            "item_name" => $i_det[0]->name,
                            "price" => $v['cost'],
                            "qty" => $v['qty'],
                            "no_tax" => $v['no_tax'],
                            "discount"=> 0,
                            "remarks"=>$remarks,
                            "nocharge" => $nocharge,
                            "is_takeout" => $is_takeout,
                        );
                    }
                    $total_gross += $v['qty'] *$v['cost'];

                    $where = array('menu_id'=>$v['menu_id']);
                    $men = $this->site_model->get_details($where,'menus');

                    if($men[0]->alcohol == 1){
                        $alcohol += $v['qty'] *$v['cost'];
                    }

                }
                if(count($trans_sales_menu) > 0)
                {
                    $trans_id = $this->cashier_model->add_trans_sales_menus($trans_sales_menu);
                    //  if(LOCALSYNC){
                    //     $this->sync_model->add_trans_sales_menus($sales_id);
                    // }
                }
                
                if(count($trans_sales_items) > 0)
                {
                    $this->cashier_model->add_trans_sales_items($trans_sales_items);
                    // if(LOCALSYNC){
                    //     $this->sync_model->add_trans_sales_items($sales_id);
                    // }
                }
                #save sa trans_sales_menu_modifiers
                if(count($trans_mod_cart) > 0){
                    $trans_sales_menu_modifiers = array();
                    foreach ($trans_mod_cart as $trans_mod_id => $m) {
                        $kitchen_slip_printed=0;
                        if(isset($m['kitchen_slip_printed']) && $m['kitchen_slip_printed'] != ""){
                            $kitchen_slip_printed = $m['kitchen_slip_printed'];
                        }
                        if(isset($trans_cart[$m['trans_id']])){
                            //menu
                            $where = array('menu_id'=>$m['menu_id']);
                            $m_det = $this->site_model->get_details($where,'menus');

                            //mod group
                            $where = array('mod_group_id'=>$m['mod_group_id']);
                            $mg_det = $this->site_model->get_details($where,'modifier_groups');

                            //mod
                            $where = array('mod_id'=>$m['mod_id']);
                            $mod_det = $this->site_model->get_details($where,'modifiers');


                            $trans_sales_menu_modifiers[] = array(
                                "sales_id" => $sales_id,
                                "line_id" => $m['trans_id'],
                                "menu_id" => $m['menu_id'],
                                "mod_group_id" => $m['mod_group_id'],
                                "mod_id" => $m['mod_id'],
                                "price" => $m['cost'],
                                "qty" => $m['qty'],
                                "discount"=> 0,
                                "menu_name" => $m_det[0]->menu_name,
                                "mod_group_name" => $mg_det[0]->name,
                                "mod_name" => $mod_det[0]->name,
                                "mod_line_id" => $trans_mod_id,
                                "kitchen_slip_printed"=>$kitchen_slip_printed
                            );
                            $total_gross += $m['qty'] *$m['cost'];

                            // $where = array('menu_id'=>$v['menu_id']);
                            // $men = $this->site_model->get_details($where,'menus');

                            if($m_det[0]->alcohol == 1){
                                $alcohol += $m['qty'] *$m['cost'];
                            }

                        }
                    }
                    if(count($trans_sales_menu_modifiers) > 0)
                    {
                        $trans_id = $this->cashier_model->add_trans_sales_menu_modifiers($trans_sales_menu_modifiers);
                        // if(LOCALSYNC){
                        //     $this->sync_model->add_trans_sales_menu_modifiers($sales_id);
                        // }
                    }
                }

                #save sa trans_sales_menu_submodifiers
                if(count($trans_submod_cart) > 0){
                    $trans_sales_menu_submodifiers = array();
                    foreach ($trans_submod_cart as $trans_submod_id => $m) {
                        $kitchen_slip_printed=0;
                        if(isset($m['kitchen_slip_printed']) && $m['kitchen_slip_printed'] != ""){
                            $kitchen_slip_printed = $m['kitchen_slip_printed'];
                        }
                        if(isset($trans_cart[$m['trans_id']])){
                            //menu
                            $where = array('menu_id'=>$trans_cart[$m['trans_id']]['menu_id']);
                            $m_det = $this->site_model->get_details($where,'menus');

                            // //mod group
                            // $where = array('mod_group_id'=>$m['mod_group_id']);
                            // $mg_det = $this->site_model->get_details($where,'modifier_groups');

                            //mod
                            // $where = array('mod_id'=>$m['mod_id']);
                            // $submod_det = $this->site_model->get_details($where,'modifiers');


                            $trans_sales_menu_submodifiers[] = array(
                                "sales_id" => $sales_id,
                                "line_id" => $m['trans_id'],
                                // "menu_id" => $m['menu_id'],
                                // "mod_group_id" => $m['mod_group_id'],
                                "mod_id" => $m['mod_id'],
                                "price" => $m['price'],
                                "qty" => $m['qty'],
                                // "discount"=> 0,
                                // "menu_name" => $m_det[0]->menu_name,
                                // "mod_group_name" => $mg_det[0]->name,
                                "submod_name" => $m['name'],
                                "mod_line_id" => $m['mod_line_id'],
                                "kitchen_slip_printed"=>$kitchen_slip_printed
                            );
                            $total_gross += $m['qty'] *$m['price'];

                            if($m_det[0]->alcohol == 1){
                                $alcohol += $m['qty'] *$m['cost'];
                            }
                        }
                    }
                    if(count($trans_sales_menu_modifiers) > 0)
                    {
                        $trans_id = $this->cashier_model->add_trans_sales_menu_submodifiers($trans_sales_menu_submodifiers);
                        // if(LOCALSYNC){
                        //     $this->sync_model->add_trans_sales_menu_modifiers($sales_id);
                        // }
                    }
                }

                if(count($item_discount) > 0){
                    //for save sa trans_sales_discounts pero per item
                    $trans_sales_disc_items = array();
                    foreach($item_discount as $id => $dc){
                        $trans_sales_disc_items[] = array(
                            "sales_id"=>$sales_id,
                            "disc_id"=>$dc['disc_id'],
                            "type"=>$dc['type'],
                            "guest"=>$dc['guest'],
                            "disc_code"=>$dc['disc_code'],
                            "disc_rate"=>$dc['disc_rate'],
                            "items"=>$dc['items'],
                            "no_tax"=>$dc['no_tax'],
                            "name"=>$dc['name'],
                            "bday"=>date('Y-m-d H:i:s'),
                            "code"=>$dc['code'],
                            "remarks"=>$dc['remarks'],
                            "amount"=>$dc['amount']
                        );

                    }
                    if(count($trans_sales_disc_items) > 0)
                    {
                        $this->cashier_model->add_trans_sales_discounts($trans_sales_disc_items);
                        //   if(LOCALSYNC){
                        //     $this->sync_model->add_trans_sales_discounts($sales_id);
                        // }
                    }
                }else{
                    #save sa trans_sales_discounts
                    $mod_cost = 0;
                    $submod_cost = 0;

                    if(isset($trans['modifiers'])){
                        foreach ($trans['modifiers'] as $trans_mod_id => $mod) {
                            if($trans_id == $mod['line_id']){
                                // $cost += $mod['price'];
                                $mod_cost += $mod['qty']*$mod['price'];
                                
                                if(isset($mod['submodifiers'])){
                                    foreach($mod['submodifiers'] as $sub_id => $smod){
                                        if($smod['mod_line_id'] == $mod['mod_line_id']){
                                            $submod_cost += $smod['qty']*$smod['price'];
                                        }
                                    }
                                }
                            }


                        }
                        // echo '1';
                    }else{
                        if(count($trans_mod_cart) > 0){
                            // echo '2';
                            foreach ($trans_mod_cart as $trans_mod_id => $mod) {
                                if($trans_id == $mod['trans_id']){
                                    // $cost += $mod['cost'];
                                    $mod_cost += $mod['qty']*$mod['cost'];
                                
                                    if(isset($trans_submod_cart)){
                                        foreach ($trans_submod_cart as $trans_submod_id => $submod) {
                                            if($trans_mod_id == $submod['mod_line_id'])
                                                // $cost += $submod['price'];
                                                $submod_cost += $submod['qty']*$submod['price'];
                                        }
                                    }

                                }
                            }
                        }
                    }





                    $total_disc = 0;
                    if(count($trans_disc_cart) > 0){
                        $trans_sales_disc_cart = array();
                        $total = 0;
                        foreach ($trans_cart as $trans_id => $trans){
                            if(isset($trans['cost']))
                                $cost = $trans['cost'];
                            if(isset($trans['price']))
                                $cost = $trans['price'];

                            if(isset($trans['modifiers'])){
                                foreach ($trans['modifiers'] as $trans_mod_id => $mod) {
                                    if($trans_id == $mod['line_id'])
                                        $cost += $mod['price'];


                                    if(isset($mod['submodifiers'])){
                                        foreach($mod['submodifiers'] as $sub_id => $smod){
                                            if($smod['mod_line_id'] == $mod['mod_line_id']){
                                                $cost += $smod['price'];
                                            }
                                        }
                                    }

                                }
                            }

                            else{
                                if(count($trans_mod_cart) > 0){
                                    foreach ($trans_mod_cart as $trans_mod_id => $mod) {
                                        if($trans_id == $mod['trans_id'])
                                            $cost += $mod['cost'];

                                        if(isset($trans_submod_cart)){
                                            foreach ($trans_submod_cart as $trans_submod_id => $submod) {
                                                if($trans_mod_id == $submod['mod_line_id'])
                                                    // $cost += $submod['price'];
                                                    $cost += $submod['price'];
                                            }
                                        }


                                    }
                                }
                            }
                            if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
                                $rate = 1.12;
                                $cost = ($cost / $rate);
                                if(isset($zero_rated)){
                                    $zero_rated += $v['qty'] * $cost;
                                }else{
                                    $zero_rated = $v['qty'] * $cost;
                                }
                            }
                            $total += $trans['qty'] * $cost;
                        }

                        foreach ($trans_disc_cart as $disc_id => $dc) {
                            $dit = "";
                            if(isset($dc['items'])){
                                foreach ($dc['items'] as $lines) {
                                    $dit .= $lines.",";
                                }
                                if($dit != "")
                                    $dit = substr($dit,0,-1);                        
                            }
                            

                            $discount = 0;
                            $rate = $dc['disc_rate'];
                            switch ($dc['disc_type']) {
                                case "equal":
                                    
                                    if($dc['disc_code'] == 'SNDISC'){
                                        $divi = ($total-$alcohol)/$dc['guest'];
                                    }else{
                                        $divi = $total/$dc['guest'];
                                    }
                                    $divi_less = $divi;

                                    $where = array('id'=>1);
                                    $set_det = $this->site_model->get_details($where,'settings');

                                    if($counter['type'] != 'dinein' && $counter['type'] != 'mcb' && $dc['disc_code'] == 'SNDISC' && $divi > $set_det[0]->ceiling_amount && $set_det[0]->ceiling_amount > 0){
                                        $divi = $set_det[0]->ceiling_amount;
                                        $divi_less = $set_det[0]->ceiling_amount;
                                    }

                                    if($counter['type'] == 'mcb' && $dc['disc_code'] == 'SNDISC' && $divi > $set_det[0]->ceiling_mcb && $set_det[0]->ceiling_mcb > 0){
                                        $divi = $set_det[0]->ceiling_mcb;
                                        $divi_less = $set_det[0]->ceiling_mcb;
                                    }

                                    if($dc['disc_code'] == ATHLETE_CODE){
                                        // if($dc['no_tax'] == 1){
                                            $divi_less = ($divi / 1.12);
                                        // }
                                        $no_persons = count($dc['persons']);
                                        // foreach ($row['persons'] as $code => $per) {
                                        $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $divi_less);
                                        $discount = ($rate / 100) * $divi_less;
                                    }else{
                                        if($dc['no_tax'] == 1){
                                            $divi_less = ($divi / 1.12);
                                        }
                                        $no_persons = count($dc['persons']);
                                        // foreach ($row['persons'] as $code => $per) {
                                        $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $divi_less);
                                        $discount = ($rate / 100) * $divi_less;
                                    }

                                    // }
                                    // $total = ($divi * $row['guest']) - $discount;

                                    break;
                                default:
                                    // $no_citizens = count($dc['persons']);
                                    // if($dc['no_tax'] == 1)
                                    //     $total = ($total / 1.12);                     
                                    // $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total);
                                    // $discount = ($rate / 100) * $total;
                                    if($dc['fix'] == 0){
                                        if(DISCOUNT_NET_OF_VAT && $row['disc_code'] != DISCOUNT_NET_OF_VAT_EX){
                                            $no_citizens = count($dc['persons']);
                                            $total_net_vat = ($total / 1.12);                     
                                            foreach ($dc['persons'] as $code => $per) {
                                                $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total_net_vat);
                                                $discount += ($rate / 100) * $total_net_vat;
                                            }
                                            $total -= $discount; 
                                        }
                                        else{
                                            $no_citizens = count($dc['persons']);

                                            // echo $no_citizens; die();
                                            if($dc['disc_code'] == ATHLETE_CODE){
                                                // if($dc['no_tax'] == 1)
                                                    $total = ($total / 1.12);                     
                                                foreach ($dc['persons'] as $code => $per) {
                                                    $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total);
                                                    $discount += ($rate / 100) * $total;
                                                }
                                            }else{
                                                if($dc['no_tax'] == 1)
                                                    $total = ($total / 1.12);                     
                                                foreach ($dc['persons'] as $code => $per) {
                                                    $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total);
                                                    $discount += ($rate / 100) * $total;
                                                }
                                            }

                                            $total -= $discount;                                        
                                        }    
                                    }
                                    else{
                                        if($dc['openamt'] != 0){
                                            $discs[] = array('type'=>$dc['disc_code'],'amount'=>$dc['openamt']);
                                            $discount += $dc['openamt'];
                                            $total -= $discount;
                                        }else{
                                            $discs[] = array('type'=>$dc['disc_code'],'amount'=>$rate);
                                            $discount += $rate;
                                            $total -= $discount;
                                        }

                                    }
                                    // }    
                            }
                            foreach ($dc['persons'] as $pcode => $oper) {
                                $dcBday = null;
                                $dcremark = null;
                                if(isset($oper['bday']) && $oper['bday'] != "")
                                    $dcBday = $oper['bday'];

                                if(isset($oper['remarks']) && $oper['remarks'] != "")
                                    $dcremark = $oper['remarks'];

                                $trans_sales_disc_cart[] = array(
                                    "sales_id"=>$sales_id,
                                    "disc_id"=>$dc['disc_id'],
                                    "disc_code"=>$dc['disc_code'],
                                    "disc_rate"=>$dc['disc_rate'],
                                    "no_tax"=>$dc['no_tax'],
                                    "type"=>$dc['disc_type'],
                                    "name"=>$oper['name'],
                                    "bday"=>$dcBday,
                                    "code"=>$oper['code'],
                                    "remarks"=>$dcremark,
                                    "items"=>$dit,
                                    "guest"=>$dc['guest'],
                                    "amount"=>$discount
                                );
                                $total_disc += $discount;
                            }
                        }
                        if(count($trans_sales_disc_cart) > 0)
                        {
                            $this->cashier_model->add_trans_sales_discounts($trans_sales_disc_cart);
                            //   if(LOCALSYNC){
                            //     $this->sync_model->add_trans_sales_discounts($sales_id);
                            // }
                        }
                    }

                }


                
                // save sa trans_sales_charges
                $total_charge = 0;
                if(count($trans_charge_cart) > 0){
                    $trans_sales_charge_cart = array();
                    foreach ($trans_charge_cart as $charge_id => $ch) {
                        $trans_sales_charge_cart[] = array(
                            "sales_id"=>$sales_id,
                            "charge_id"=>$charge_id,
                            "charge_code"=>$ch['code'],
                            "charge_name"=>$ch['name'],
                            "rate"=>$ch['amount'],
                            "absolute"=>$ch['absolute'],
                            "amount"=>$charges[$charge_id]['amount']
                        );
                        $total_charge += $charges[$charge_id]['amount'];
                    }
                    if(count($trans_sales_charge_cart) > 0)
                    {
                        $this->cashier_model->add_trans_sales_charges($trans_sales_charge_cart);

                        //  if(LOCALSYNC){
                        //     $this->sync_model->add_trans_sales_charges($sales_id);
                        // }
                    }
                }

                //####NEW CHARGES#######
                // $total_charge = 0;
                // $trans_sales_charge_cart = array();
                // foreach ($charges as $charge_id => $ch) {
                //     $trans_sales_charge_cart[] = array(
                //         "sales_id"=>$sales_id,
                //         "charge_id"=>$charge_id,
                //         "charge_code"=>$ch['code'],
                //         "charge_name"=>$ch['name'],
                //         "rate"=>$ch['rate'],
                //         "absolute"=>$ch['absolute'],
                //         "amount"=>$ch['amount']
                //     );
                //     $total_charge += $charges[$charge_id]['amount'];
                // }
                // if(count($trans_sales_charge_cart) > 0)
                // {
                //     $this->cashier_model->add_trans_sales_charges($trans_sales_charge_cart);

                //     //  if(LOCALSYNC){
                //     //     $this->sync_model->add_trans_sales_charges($sales_id);
                //     // }
                // }
                //####NEW CHARGES END#######

                
                #SAVE SA TRANS_SALES_TAX
                // $total_amount
                // $tax = $this->get_tax_rates(false);
                // $zero_rated = 0;
                // $total = 0;
                // if(count($tax) > 0){
                //     $taxable_amount = 0;
                //     $not_taxable_amount = 0;
                //     foreach ($trans_cart as $trans_id => $v) {
                //         $cost = $v['cost'];
                //         if(count($trans_mod_cart) > 0){
                //             foreach ($trans_mod_cart as $trans_mod_id => $m) {
                //                 if($trans_id == $m['trans_id']){
                //                     $cost += $m['cost'];
                //                 }
                //             }
                //         }
                //         if($v['no_tax'] == 0){
                //             if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
                //                 // $rate = 1.12;
                //                 // $cost = ($cost / $rate);
                //                 $rate = 0.12;
                //                 $zr = ($cost * $rate);
                //                 $cost = $cost-$zr;
                //                 $zero_rated += $v['qty'] * $cost;
                //             }
                //             $total = $v['qty'] * $cost;
                //             $taxable_amount += $total;
                //             // echo $total."<br>";
                //             foreach ($trans_disc_cart as $disc_id => $dc) {
                //                 $discount = 0;
                //                 $rate = $dc['disc_rate'];
                //                 switch ($dc['disc_type']) {
                //                     case "equal":
                //                         $divi = $total/$dc['guest'];
                //                         $no_tax_persons = count($dc['persons']);
                //                         if($dc['no_tax'] == 1){
                //                             $divi_less = ($divi / 1.12);
                //                             $less_vat = $divi - $divi_less;
                //                             // $not_taxable_amount += $divi_less * $no_tax_persons;
                //                             // $taxable_amount -= $divi + $less_vat;
                //                             $no_tax = $divi_less * $no_tax_persons;
                //                             $not_taxable_amount += $no_tax;
                //                             $taxable_amount -= ($no_tax + ($less_vat * $no_tax_persons));
                //                         }else{
                //                             $disc_per_person = ($rate / 100) * $divi; 
                //                             $not_taxable_amount = 0;
                //                             $disc_persons = $disc_per_person * $no_tax_persons;
                //                             $taxable_amount -= $disc_persons;
                //                         }                             
                //                         break;
                //                     default:
                //                         $no_citizens = count($dc['persons']);
                //                         $no_cost_total = $total;
                //                         if($dc['no_tax'] == 1){
                //                             $no_cost_total = $total / 1.12;
                //                             $taxable_amount = 0;
                //                             $not_taxable_amount = $no_cost_total;
                //                         }
                //                         else{
                //                             if($dc['fix'] == 0){
                //                                 if(DISCOUNT_NET_OF_VAT && $row['disc_code'] != DISCOUNT_NET_OF_VAT_EX){
                //                                     $total_net_vat = $total / 1.12;
                //                                     $discount = ($rate / 100) * $total_net_vat;                                                    
                //                                     $taxable_amount -= $discount;
                //                                     // $taxable_amount = $total - $discount;
                //                                     $not_taxable_amount = 0;
                //                                 }
                //                                 else{
                //                                     $discount = ($rate / 100) * $total;                                                    
                //                                     $total_discount = $discount * $no_citizens;
                //                                     // $taxable_amount = $total - $discount;
                //                                     $taxable_amount -= $discount;
                //                                     $not_taxable_amount = 0;
                //                                     // echo $discount.'--'.$total_discount.'--'.$taxable_amount.'-<br><br><br>';
                //                                 }
                //                             }
                //                             else{
                //                                 $discount = $rate;
                //                                 $total_discount = $discount;
                //                                 $taxable_amount = $total_gross - $discount;
                //                                 // $taxable_amount -= $discount;
                //                                 $not_taxable_amount = 0;                                                
                //                             }
                //                         }###
                //                 }
                //             }
                //         }
                //         else{
                //           if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
                //                 // $rate = 1.12;
                //                 // $cost = ($cost / $rate);

                //                 $rate = 0.12;
                //                 $zr = ($cost * $rate);
                //                 $cost = $cost-$zr;

                //                 $zero_rated += $v['qty'] * $cost;
                //                 $not_taxable_amount += $v['qty'] * $cost;
                //           }
                //           else{
                //                 $not_taxable_amount += $cost * $v['qty'];
                //           }  
                //         }
                //     }
                //     //remove charges 
                //     $trans_sales_zero_rated[] = array(
                //         "sales_id"=>$sales_id,
                //         "amount"=>$zero_rated,
                //         // "name"=>$counter['zero_name'],
                //         // "card_no"=>$counter['zero_card_no']
                //     );

                //     if($zero_rated != 0){
                //         $trans_sales_zero_rated[0]['name'] = $counter['zero_name'];
                //         $trans_sales_zero_rated[0]['card_no'] = $counter['zero_card_no'];
                //     }

                //     if(count($trans_sales_zero_rated) > 0)
                //         $this->cashier_model->add_trans_sales_zero_rated($trans_sales_zero_rated);


                //     $trans_sales_no_tax[] = array(
                //         "sales_id"=>$sales_id,
                //         "amount"=>$not_taxable_amount
                //     );
                //     if(count($trans_sales_no_tax) > 0)
                //         $this->cashier_model->add_trans_sales_no_tax($trans_sales_no_tax);


                //     // if(LOCALSYNC){
                //     //     if(count($trans_sales_zero_rated) > 0)
                //     //         $this->sync_model->add_trans_sales_zero_rated($sales_id);

                //     //     if(count($trans_sales_no_tax) > 0)
                //     //         $this->sync_model->add_trans_sales_no_tax($sales_id);
                //     // }

                //     $am = $taxable_amount;
                //     $trans_sales_tax = array();
                //     $trans_tax = 0;
                //     foreach ($tax as $tax_id => $tx) {
                //         $rate = ($tx['rate'] / 100);
                //         $tax_value = ($am / ($rate + 1) ) * $rate;
                //         // ($am / 1.12) * .12
                //         $trans_sales_tax[] = array(
                //             "sales_id"=>$sales_id,
                //             "name"=>$tx['name'],
                //             "rate"=>$tx['rate'],
                //             "amount"=>$tax_value,
                //         );
                //         $trans_tax += $tax_value;
                //         $am -= $tax_value;
                //     }
                    
                //     if(count($trans_sales_tax) > 0)
                //     {
                //         $this->cashier_model->add_trans_sales_tax($trans_sales_tax);
                //         // if(LOCALSYNC){
                //         //     $this->sync_model->add_trans_sales_tax($sales_id);
                //         // }
                //     }



                    
                // }

                // echo "<pre>",print_r($trans_disc_cart),"</pre>";die();
                $tax = $this->get_tax_rates(false);
                $taxable_amount = $total_gross;
                $not_taxable_amount = 0;
                $zero_rated = 0;
                $diplomat_count = 0;
                $g_count = 0;
                if(count($tax) > 0){

                    if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
                        $rate = 1.12;
                        // $cost = ($cost / $rate);
                        // $rate = 0.12;
                        $zero_rated += $total_gross / $rate;
                        $taxable_amount -= $total_gross;
                        $not_taxable_amount += $total_gross / $rate;
                    }else{
                        
                        if(count($item_discount)>0){
                            foreach ($trans_cart as $trans_id => $v) {
                                $cost = $v['cost'];
                                $total = $v['qty'] * $cost;

                                if(isset($item_discount[$trans_id])){
                                    
                                    if($item_discount[$trans_id]['disc_code'] == 'DIPLOMAT'){
                                        $zero_rated += $total / 1.12;
                                        $not_taxable_amount += $total / 1.12;
                                        $taxable_amount -= $total;
                                    }else{
                                        $no_tx =  $item_discount[$trans_id]['no_tax'];
                                        if($no_tx == 1){
                                            $not_taxable_amount += $total / 1.12;
                                            $taxable_amount -= $total;
                                            // die('ss');
                                        }else{
                                            // $with_disc = $total - $item_discount[$trans_id]['amount'];
                                            // echo $with_disc; die();
                                            $taxable_amount -= $item_discount[$trans_id]['amount'];
                                        }
                                    }

                                }
                            }
                        }else{
                            foreach ($trans_disc_cart as $disc_id => $dc) {
                                $discount = 0;
                                $rate = $dc['disc_rate'];

                                $divi = $total_gross/$dc['guest'];
                                $no_tax_persons = count($dc['persons']);
                                $g_count = $dc['guest'];
                                foreach($dc['persons'] as $name => $val){
                                    if($dc['fix'] == 0){

                                        $where = array('id'=>1);
                                        $set_det = $this->site_model->get_details($where,'settings');
                                        if($counter['type'] != 'dinein' && $counter['type'] != 'mcb' && $dc['disc_code'] == 'SNDISC' && $divi > $set_det[0]->ceiling_amount && $set_det[0]->ceiling_amount > 0){
                                            $divi = $set_det[0]->ceiling_amount;
                                            $divi_less = $set_det[0]->ceiling_amount;
                                        }

                                        if($counter['type'] == 'mcb' && $dc['disc_code'] == 'SNDISC' && $divi > $set_det[0]->ceiling_mcb && $set_det[0]->ceiling_mcb > 0){
                                            $divi = $set_det[0]->ceiling_mcb;
                                            $divi_less = $set_det[0]->ceiling_mcb;
                                        }

                                        
                                        if($dc['disc_code'] == 'DIPLOMAT'){
                                            $divi_less = ($divi / 1.12);

                                            $zero_rated += $divi_less;
                                            $not_taxable_amount += $divi_less;
                                            $taxable_amount -= $divi;
                                            $diplomat_count++;
                                        }elseif($dc['disc_code'] == ATHLETE_CODE){
                                            $divi_less = ($divi / 1.12);
                                            $disc_per_person = ($rate / 100) * $divi_less;

                                            $taxable_amount -= $disc_per_person;

                                        }else{
                                            if($dc['no_tax'] == 1){
                                                $divi_less = ($divi / 1.12);
                                                $less_vat = $divi - $divi_less;
                                                // $not_taxable_amount += $divi_less * $no_tax_persons;
                                                // $taxable_amount -= $divi + $less_vat;
                                                $disc_per_person = ($rate / 100) * $divi_less;

                                                $no_tax = $divi_less * $no_tax_persons;
                                                $taxable_amount -= $divi;
                                                // echo $not_taxable_amount.'aa';
                                                $not_taxable_amount += $divi - $less_vat;
                                                // echo $not_taxable_amount.'bb';
                                            }else{
                                                $disc_per_person = ($rate / 100) * $divi; 
                                                // $not_taxable_amount = 0;
                                                // $disc_persons = $disc_per_person * $no_tax_persons;
                                                $taxable_amount -= $disc_per_person;
                                            }
                                        }


                                    }else{
                                        // $disc_per_person = $divi - $rate;
                                        $disc_per_person = $rate;
                                        $taxable_amount -= $disc_per_person;
                                        // $taxable_amount -= $discount;
                                        // $not_taxable_amount = 0; 
                                    }
                                }

                                
                            }
                        }


                    }

                    // echo $not_taxable_amount; die();
                    //remove charges 
                    if($zero_rated == 0){
                        $trans_sales_zero_rated[] = array(
                            "sales_id"=>$sales_id,
                            "amount"=>$zero_rated,
                            // "name"=>$counter['zero_name'],
                            // "card_no"=>$counter['zero_card_no']
                        );
                    }else{
                        if($g_count == $diplomat_count){
                            $trans_sales_zero_rated[] = array(
                                "sales_id"=>$sales_id,
                                "amount"=>$zero_rated - $total_disc,
                                // "name"=>$counter['zero_name'],
                                // "card_no"=>$counter['zero_card_no']
                            );
                        }else{
                            $trans_sales_zero_rated[] = array(
                                "sales_id"=>$sales_id,
                                "amount"=>$zero_rated,
                                // "name"=>$counter['zero_name'],
                                // "card_no"=>$counter['zero_card_no']
                            );
                        }

                    }

                    // if($zero_rated != 0){
                    //     $trans_sales_zero_rated[0]['name'] = $counter['zero_name'];
                    //     $trans_sales_zero_rated[0]['card_no'] = $counter['zero_card_no'];
                    // }

                    if(count($trans_sales_zero_rated) > 0)
                        $this->cashier_model->add_trans_sales_zero_rated($trans_sales_zero_rated);


                    if($zero_rated == 0){
                        $trans_sales_no_tax[] = array(
                            "sales_id"=>$sales_id,
                            "amount"=>$not_taxable_amount
                        );
                    }else{
                        if($g_count == $diplomat_count){
                            $trans_sales_no_tax[] = array(
                                "sales_id"=>$sales_id,
                                "amount"=>$not_taxable_amount - $total_disc
                            );
                        }else{
                            $trans_sales_no_tax[] = array(
                                "sales_id"=>$sales_id,
                                "amount"=>$not_taxable_amount,
                            );
                        }
                    }

                    if(count($trans_sales_no_tax) > 0)
                        $this->cashier_model->add_trans_sales_no_tax($trans_sales_no_tax);


                    // if(LOCALSYNC){
                    //     if(count($trans_sales_zero_rated) > 0)
                    //         $this->sync_model->add_trans_sales_zero_rated($sales_id);

                    //     if(count($trans_sales_no_tax) > 0)
                    //         $this->sync_model->add_trans_sales_no_tax($sales_id);
                    // }
                    if($zero_rated != 0 && $total_disc != 0){
                        if($g_count == $diplomat_count){
                            $taxable_amount = 0;
                        }
                    }
                    $am = $taxable_amount;
                    $trans_sales_tax = array();
                    $trans_tax = 0;
                    foreach ($tax as $tax_id => $tx) {
                        $rate = ($tx['rate'] / 100);
                        $tax_value = ($am / ($rate + 1) ) * $rate;
                        // ($am / 1.12) * .12
                        $trans_sales_tax[] = array(
                            "sales_id"=>$sales_id,
                            "name"=>$tx['name'],
                            "rate"=>$tx['rate'],
                            "amount"=>$tax_value,
                        );
                        $trans_tax += $tax_value;
                        $am -= $tax_value;
                    }
                    
                    if(count($trans_sales_tax) > 0)
                    {
                        $this->cashier_model->add_trans_sales_tax($trans_sales_tax);
                        // if(LOCALSYNC){
                        //     $this->sync_model->add_trans_sales_tax($sales_id);
                        // }
                    }


                }
                ### LOCAL TAX 
                if($local_tax > 0){
                    $trans_sales_local_tax[] = array(
                        "sales_id"=>$sales_id,
                        "amount"=>$local_tax
                    );
                    if(count($trans_sales_local_tax) > 0)
                    {
                        $this->cashier_model->add_trans_sales_local_tax($trans_sales_local_tax);
                        //  if(LOCALSYNC){
                        //     $this->sync_model->add_trans_sales_local_tax($sales_id);
                        // }
                        
                    } 
                }


                //for update sa trans_Sales ng iba pang details
                $trans_sales_update = array(
                    "total_gross"       => $total_gross,
                    "total_discount" => $total_disc,
                    "total_charges" => $total_charge,
                    "zero_rated" => $zero_rated,
                    "no_tax" => $not_taxable_amount,
                    "tax" => $trans_tax,
                    "local_tax" => $local_tax,
                );
                $this->cashier_model->update_trans_sales($trans_sales_update,$sales_id);
                $date_schedule = $this->session->userdata('date_schedule');
                $time_schedule = $this->session->userdata('time_schedule');
                $cust_id = $this->session->userdata('cust_id');

                if($cust_id){
                    $customers_bank_update = array(
                    "sales_id"       => $sales_id
                        );
                    $ds            = date_create($date_schedule);
                    $set_date      = date_format($ds,"Y-m-d");
                    $time          = date('H:i', strtotime($time_schedule));
                    // echo $sales_id. ' -' .$time_schedule. '-'.$cust_id. '-'.$set_date. '- <pre>',print_r($customers_bank_update),'</pre>';die();
                    $this->cashier_model->update_customer_bank($customers_bank_update,$cust_id,$set_date,$time);

                    $this->session->unset_userdata('cust_id');
                }
                


                if(defined('ENABLE_CHECKLIST') && ENABLE_CHECKLIST){

                    #print
                    $this->print_checklist($sales_id);  
                }
                
                
                if ($print == "true" || $print === true){
                    // $set = $this->cashier_model->get_pos_settings();
                    // $return_print_str=false,$add_reprinted=true,$splits=null,$include_footer=true
                    // $no_prints = $set->no_of_receipt_print;
                    // $print_echo = $this->print_sales_receipt($sales_id,false,false,true,null,true,$no_prints);

                    if(PRINT_VERSION && PRINT_VERSION=='V3'){
                        $print_ord_no = $this->print_order_no($sales_id);

                        $print_echo = $this->print_sales_receipt($sales_id,false);
                        $js_rcps[] = array('printer'=>BILLING_PRINTER,'value'=>$print_echo['js_rcp']);
                        
                        $js_rcps[] = array('printer'=>BILLING_PRINTER,'value'=>$print_ord_no['js_rcp']);
                    }else{
                        $print_ord_no = $this->print_order_no($sales_id);
                        $print_echo = $this->print_sales_receipt($sales_id,false);
                    }
                    
                }
                if ($printKitSlip == "true" || $printKitSlip === true){

                    $pet = $this->cashier_model->get_pos_settings();
                    $kitchen_printer = $pet->kitchen_printer_name;
                    if(KITCHEN_PRINTER){
                        $kitchen_printer = KITCHEN_PRINTER;
                    }
                    if(count($reasons) > 0){
                        
                        $os_rem = $this->print_os_removes($sales_id,$reasons);

                        if(PRINT_VERSION && PRINT_VERSION=='V3'){
                            $js_rcps[] = array('printer'=>BILLING_PRINTER,'value'=>$os_rem['js_rcp']);
                        }
                        
                    }
                    if($kitchen_printer != ""){                                    
                        $print_ord_no = $this->print_order_no($sales_id);

                        $print_echo_qr = $this->print_os_qr($sales_id);
                        $print_echo = $this->print_os($sales_id);

                        if(PRINT_VERSION && PRINT_VERSION=='V3'){
                            foreach($print_echo['js_rcps'] as $i=>$pe){
                                $js_rcps[] = array('printer'=>$pe['printer'],'value'=>$pe['value']);
                            }

                            foreach($print_echo_qr['js_rcps'] as $i=>$pe){
                                $js_rcps[] = array('printer'=>BILLING_PRINTER,'value'=>$pe['value']);
                            }
                            
                            $js_rcps[] = array('printer'=>BILLING_PRINTER,'value'=>$print_ord_no['js_rcp']);
                        }
                        // else{
                        //     foreach($print_echo_qr['js_rcps'] as $i=>$pe){
                        //         $js_rcps[] = array('printer'=>BILLING_PRINTER,'value'=>$pe['value']);
                        //     }
                        // }
                    }
                }


                //linabas ko para magsave padin kahit di naka true yun printKitSlip
                foreach ($reasons as $ctrr => $re) {
                    $reason_id = $this->cashier_model->add_reasons($re);
                    // if(LOCALSYNC){
                    //  $this->sync_model->add_reasons($reason_id);
                    // }
                }
            }

            if(MIGRATION_VERSION == '2'){
                    // run_main_exec();
                    // run_master_exec();
                 
            }
            // echo var_dump($kitchen_printer);
            // return false;

            
            $this->update_tbl_activity(null,true);
            if($asJson)
                echo json_encode(array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type,'js_rcps'=>$js_rcps));
            else
                return array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type,'js_rcps'=>$js_rcps);
        }
    #SETTLEMENT SECTION
        public function settle($sales_id=null){
            $this->load->model('site/site_model');
            $this->load->model('dine/cashier_model');
            $this->load->model('dine/settings_model');
            $this->load->helper('dine/cashier_helper');
            $this->load->helper('core/on_screen_key_helper');

            $to_dec = str_replace('~~','%',$sales_id);
            $txts = rawurldecode($to_dec);
            $sales_id = $this->encrypt->decode($txts);

            sess_clear('payment_session');
            $loyalty_card = array(); 
            sess_initialize('loyalty_card',$loyalty_card);            
            $data = $this->syter->spawn(null);
            $order = $this->get_order(false,$sales_id);
            // echo "<pre>",print_r($order),"</pre>";die();
            if(isset($order['order']['table_id']) && $order['order']['table_id'] != ""){
                if(isset($order['order']['table_id'])){
                    $error = $this->check_tbl_activity($order['order']['table_id'],false);
                    if($error == ""){
                        $this->update_tbl_activity($order['order']['table_id']);
                    }
                    else{
                        site_alert($error,'error');
                        header("Location:".base_url()."cashier");
                    }
                }
            }

            $order = $this->get_order(false,$sales_id);
            $trans = $this->load_trans(false,$order);
            // $time = $trans['datetime'];
            // $type = $type." #".$order['order']['sales_id'];
            // $loaded = "loaded";

            $trans_retake = false;
            if($this->input->get('trans_retake')){
                $trans_retake = true;
            }
            // $discounts = $this->settings_model->get_receipt_discounts();
            $totals = $this->total_trans(false,$order['details'],$order['discounts'],$order['charges'],$order['zero_rated']);

            //get sa database yun mga payment types
            $payment_types = $this->settings_model->get_payment_types(null,null,true);
            $payment_groups = $this->settings_model->get_payment_group(null,true);

            $gc_types = $this->settings_model->get_gift_card_types();
            
            // echo "<pre>",print_r($order['discounts']),"</pre>";die();
            $data['code'] = settlePage($order['order'],$order['details'],$order['discounts'],$totals,$order['charges'],$trans_retake,$payment_types,$gc_types,$payment_groups);
            $data['add_css'] = array('css/cashier.css','css/onscrkeys.css','css/virtual_keyboard.css','js/typeaheadmap/typeaheadmap.css','js/typeaheadmap/typeaheadmap.css');
            $data['add_js'] = array('js/on_screen_keys.js','js/jquery.keyboard.extension-navigation.min.js','js/jquery.keyboard.min.js','js/typeaheadmap/typeaheadmap.js');

            $data['load_js'] = 'dine/cashier.php';
            $data['use_js'] = 'settleJs';
            // $data['noNavbar'] = true;
            $this->load->view('cashier',$data);
        }
        public function loyalty(){
            $this->load->helper('core/on_screen_key_helper');
            $data = $this->syter->spawn(null,false);
            $data['code'] = onScrNumPwdPadOnly('loyalty-code');
            $data['add_css'] = array('css/pos.css','css/onscrkeys.css');
            $data['add_js'] = array('js/on_screen_keys.js');
            $this->load->view('load',$data);
        }
        public function loyalty_remove(){
            sess_clear('loyalty_card');
        }    
        public function loyalty_add(){
            $code = $this->input->post('pin');
            $card = array();
            $join['customers'] = array('content'=>'loyalty_cards.cust_id = customers.cust_id');
            $select = "loyalty_cards.*,customers.cust_id,customers.fname,customers.mname,customers.lname,customers.suffix";
            $details = $this->site_model->get_tbl('loyalty_cards',array('code'=>$code),array(),$join,true,$select);
            $error = 0;
            if(Count($details) > 0){
                $loyalty_card = array(); 
                sess_initialize('loyalty_card',$loyalty_card);
                $det = $details[0];
                $name = $det->fname." ".$det->mname." ".$det->lname." ".$det->suffix;
                $loyalty_card = array('name'=>$name,'cust_id'=>$det->cust_id,'code'=>$det->code,'card_id'=>$det->card_id);
                sess_add('loyalty_card',$loyalty_card,$det->code);
                $card = sess('loyalty_card');
                $msg = "Loyalty Card Added on transaction.";
            }
            else{
                $error = 1;
                $msg = "Card not Found.";
            }
            echo json_encode(array('error'=>$error,'msg'=>$msg,'card'=>$card));
        }
        public function get_order_payments($asJson=true,$sales_id=null,$payment_id=null){
            $this->load->model('dine/cashier_model');
            $payments = $this->cashier_model->get_trans_sales_payments($payment_id,array('trans_sales_payments.sales_id'=>$sales_id));
            $pays = array();
            foreach ($payments as $res) {
                $pays[$res->payment_id] = array(
                    "sales_id"=>$res->sales_id,
                    "type"=>$res->payment_type,
                    "amount"=>$res->amount,
                    "reference"=>$res->reference,
                    "datetime"=>$res->datetime,
                    "user_id"=>$res->user_id,
                    "username"=>$res->username,
                    "to_pay"=>$res->to_pay,
                    "card_type"=>$res->card_type
                );
            }
            if($asJson)
                echo json_encode($pays);
            else
                return $pays;
        }
        public function add_payment($sales_id=null,$amount=null,$type=null,$new_payment=0){
            // if(LOCALSYNC){
            //     $this->load->model('core/sync_model');
            // }
            $this->load->model('dine/cashier_model');
            $this->load->model('dine/settings_model');
            $this->load->model('site/site_model');
            $loyalty_card = sess('loyalty_card');

            $order = $this->get_order_header(false,$sales_id);
            $error = "";
            $payments = $this->get_order_payments(false,$sales_id);
            $total_to_pay = $order['amount'];
            $paid = $order['paid'];
            $total_paid = 0;
            $balance = $order['balance'];
            if(count($payments) > 0){
                foreach ($payments as $pay_id => $pay) {
                    $total_paid += $pay['amount'];
                }
            }
            if($total_to_pay >= $total_paid)
                $total_to_pay -= $total_paid;
            else
                $total_to_pay = 0;
            $change = 0;
            
            // echo "<pre>",print_r($payments),"</pre>";die();

            $log_user = $this->session->userdata('user');
            if($total_to_pay >= 0){
                $payment = array(
                    'sales_id'      =>  $sales_id,
                    'payment_type'  =>  $type,
                    'amount'        =>  $amount,
                    'to_pay'        =>  $total_to_pay,
                    "user_id"       =>  $log_user['id'],
                    // 'reference'     =>  null,
                    // 'card_type'     =>  null
                );

                $update_tr = array();
                if ($type=="credit") {
                    $payment['card_type'] = $this->input->post('card_type');
                    $ma = $this->input->post('card_number');
                    for ($i=0,$x=strlen($ma); $i < $x-4; $i++) { $ma[$i] = "*"; }
                    $payment['card_number'] = $ma;
                    $payment['approval_code'] = $this->input->post('approval_code');
                } elseif ($type=="debit") {
                    $payment['card_type'] = $this->input->post('card_type');
                    $payment['card_number'] = $this->input->post('card_number');
                    $payment['approval_code'] = $this->input->post('approval_code');
                } elseif ($type=="smac") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="eplus") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="online") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="gc") {
                    $this->load->model('dine/gift_cards_model');
                    $gc_id = $this->input->post('gc_id');
                    $gc_code = $this->input->post('gc_code');

                    $gc_code_to = $this->input->post('gc_code_to');
                    $description_id = $this->input->post('description_id');

                    $gc_amount = 0;
                    // if(GIFTCHEQUE_VALIDATION){
                        $result = $this->gift_cards_model->get_gift_cards($gc_id,true);
                        if (empty($result)) {
                            echo json_encode(array('error'=>'Gift cheque is invalid'));
                            return false;
                        }
                        // $this->gift_cards_model->update_gift_cards(array('inactive'=>1),$gc_id);

                        if($gc_code_to != null){

                            if ($gc_code >= $gc_code_to){
                                echo json_encode(array('error'=>'Invalid series'));  

                                return false;           
                            }
                    
                            $gc_codes=array();

                            $search = str_replace("-", "", $gc_code);
                            $search_to = str_replace("-", "", $gc_code_to);
                            $return = $this->gift_cards_model->get_gift_card_info($search,true,$description_id);
                            $series = $search;

                            while($series <= $search_to){
                                // echo $series;

                                $return = $this->gift_cards_model->get_gift_card_info($series,true,$description_id);
                                // print_r($return).'<br />';                   
                                
                                if ($return[0]->inactive == 1){
                                    $error = 'Gift cheque(s) has already been used';
                                    break;
                                }
                                // echo $series;

                                // if($series != $search_to){
                                     // $ctr++;
                                // }
                                $gc_codes[] = $return[0]->card_no;
                                $gc_amount += $return[0]->amount;

                                $this->gift_cards_model->update_gift_cards(array('inactive'=>1),$return[0]->gc_id);

                                $series = str_replace("-", "", $this->get_series($series));
                               
                            }

                            if($error != ''){
                                echo json_encode(array('error'=>$error));
                                return false;
                            }

                            $payment['reference'] = implode(',', $gc_codes);
                            $payment['amount'] = $gc_amount;
                            $amount = $gc_amount;

                        }else{

                            if($result[0]->inactive==1){
                                echo json_encode(array('error'=>'Gift cheque(s) has already been used'));
                                return false;
                            }
                            $this->gift_cards_model->update_gift_cards(array('inactive'=>1),$gc_id);

                            $payment['reference'] = $gc_code;
                            $payment['amount'] = $result[0]->amount;
                            $amount = $result[0]->amount;
                        }

                       

                       
                        
                    // }
                    // else{
                    //     $payment['reference'] = $gc_code;
                    // }

                    // if(LOCALSYNC){
                    //     $this->sync_model->update_gift_cards($gc_id);
                    // }
                } elseif ($type=="loyalty") {
                    $card_code = $this->input->post('card_number');
                    $cards = $this->site_model->get_tbl('loyalty_cards',array('code'=>$card_code));
                    if(count($cards) > 0){
                        $card = $cards[0];
                        $payment['card_number'] = $card->code;
                        $points = $card->points;
                        if($points > $amount){
                            $litems = array(
                                "sales_id" => $sales_id,
                                "card_id" => $card->card_id,
                                "code" => $card->code,
                                "cust_id" => $card->cust_id,
                                "amount" => $amount,
                                "points" => $amount * -1,
                            );
                            $loyalty_id = $this->site_model->add_tbl('trans_sales_loyalty_points',$litems);
                            $this->cashier_model->update_loyalty_card_points($card->card_id,$amount * -1);

                            // if(LOCALSYNC){
                            //     $this->sync_model->add_trans_sales_loyalty_points($loyalty_id);
                            //     $this->sync_model->update_loyalty_card_points($card->card_id);
                            // }
                            $update_tr['customer_id']   = $card->cust_id;
                        }
                        else{
                            echo json_encode(array('error'=>'Loyalty Card points is insufficient'));
                            return false;                            
                        }
                    }
                    else{
                        echo json_encode(array('error'=>'Loyalty Card not found.'));
                        return false;
                    }
                } elseif ($type=="coupon") {
                    $coupon_id = $this->input->post('coupon_id');
                    $coupon_code = $this->input->post('coupon_code');

                    $today = date2Sql($this->site_model->get_db_now('sql'));
                    $cargs['card_no'] = $coupon_code;
                    $result = $this->site_model->get_tbl('coupons',$cargs);
                    if (empty($result)) {
                        echo json_encode(array('error'=>'Coupon is invalid'));
                        return false;
                    }

                    // if(LOCALSYNC){
                    //     $this->sync_model->update_coupons($coupon_id);
                    // }

                    $this->site_model->update_tbl('coupons','coupon_id',array('inactive'=>1),$coupon_id);
                    $payment['reference'] = $coupon_code;
                    $payment['amount'] = $result[0]->amount;
                    $amount = $result[0]->amount;

                } elseif ($type=="chit") {
                    $payment['user_id'] = $this->input->post('manager_id');
                } elseif ($type=="deposit") {
                    $payment['reference'] = $this->input->post('customer_id');
                    $update_tr['customer_id'] = $this->input->post('customer_id');
                    $cb = array(
                        'trans_ref'             => $sales_id,
                        'type_id'               => SALES_TRANS,
                        'payment'               => 1,
                        'cust_id'               => $this->input->post('customer_id'),
                        "amount"                => ($amount * -1),
                        "user_id"               => $log_user['id'],
                        "pos_id"                => TERMINAL_ID
                    );


                    $cb_id = $this->site_model->add_tbl('customers_bank',$cb,array('datetime'=>'NOW()'));

                        // if(LOCALSYNC){
                        //     $this->sync_model->add_customers_bank($cb_id);
                        // }

                } elseif ($type=="foodpanda") {
                    $payment['approval_code'] = $this->input->post('card_number');
                } elseif ($type=="check") {
                    $payment['card_number'] = $this->input->post('bank');
                    $payment['approval_code'] = $this->input->post('cdate');
                    $payment['reference'] = $this->input->post('check_no');
                } elseif ($type=="picc") {
                    $payment['card_type'] = $this->input->post('company');
                    $payment['card_number'] = $this->input->post('name');
                } elseif ($type=="gcash") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="paymaya") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="wechat") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="alipay") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="egift") {
                    $payment['approval_code'] = $this->input->post('approval');
                    $payment['card_number'] = $this->input->post('code');
                    $payment['card_type'] = $this->input->post('ref_amt');
                } elseif ($type=="paypal") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="grabfood") {
                    $payment['card_number'] = $this->input->post('card_number');
                    $payment['card_type'] = $this->input->post('card_type');
                    $payment['reference'] = $this->input->post('reference');
                } elseif ($type=="lalafood") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="grabmart") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="pickaroo") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="mofopaymongo") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="grabpaybdo") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="pmayaewallet") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="pmayacredcard") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="tmgbtransfer") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="fppickupcash") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="fppickonlne") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="gfselfpickup") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="receivables") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="hlmogobt") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="hlmogocash") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="hlmogogcash") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="mofopmaya") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="fasttrack") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="mofocash") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="dineinpmayacrd") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="dineoutpmayacrd") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="smmallonline") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="mofopmayadinein") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="mofocashdinein") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="bdocard") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="mofogcash") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="sendbill") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="bdopay") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="loyalty") {
                    $payment['card_number'] = $this->input->post('card_number');
                } elseif ($type=="arclearingbilling" || $type=="arclearingpromo") {
                    $payment['reference'] = $this->input->post('customer_id');
                    // $payment['card_number'] = $this->input->post('card_number');
                    $update_tr['customer_id'] = $this->input->post('customer_id');
                    $cb = array(
                        'trans_ref'             => $sales_id,
                        'type_id'               => SALES_TRANS,
                        'payment'               => 1,
                        'cust_id'               => $this->input->post('customer_id'),
                        "amount"                => ($amount * -1),
                        "user_id"               => $log_user['id'],
                        "pos_id"                => TERMINAL_ID
                    );


                    $cb_id = $this->site_model->add_tbl('customers_bank',$cb,array('datetime'=>'NOW()'));

                        // if(LOCALSYNC){
                        //     $this->sync_model->add_customers_bank($cb_id);
                        // }

                } 

                $field_items = $final_field_items = array();
                if($new_payment == 1){
                    $pay_types = $this->site_model->get_tbl('payment_types',array("payment_code"=>$type));
                    $pay = $pay_types[0];
                    $fields = $this->settings_model->get_payment_type_fields(null,$pay->payment_id,null,true);

                    foreach($fields as $id => $v){
                        if($this->input->post($pay->payment_code.'-'.$v->field_id)){
                            $field_items = array(
                                'field_name'=>$v->field_name,
                                'field_id'=>$v->field_id,
                                'payment_id'=>$pay->payment_id,
                                'sales_id'      =>  $sales_id,
                                'value'=>$this->input->post($pay->payment_code.'-'.$v->field_id)
                            );
                        }

                        $final_field_items[] = $field_items;

                    }

                }
                
                $curr_shift_id = $order['shift_id'];
                $time = $this->site_model->get_db_now();
                $get_curr_shift = $this->clock_model->get_shift_id(date2Sql($time),$log_user['id']);
                if(count($get_curr_shift) > 0){
                    $curr_shift_id = $get_curr_shift[0]->shift_id;
                }


                $payment_id = $this->cashier_model->add_trans_sales_payments($payment);
                if($final_field_items){
                    $this->cashier_model->add_trans_sales_payment_fields_batch($final_field_items);
                }
                // if(LOCALSYNC){
                //     $this->sync_model->add_trans_sales_payments($payment_id);
                // }

                $new_total_paid = 0;
                if($amount > $total_to_pay){
                    $new_total_paid = $order['amount'];
                    $balance = 0;
                }
                else{
                    $new_total_paid = $total_paid+$amount;
                    $balance = $balance - $amount;
                    // $balance = $total_to_pay - $amount;
                }
                $update_tr['total_paid'] = $new_total_paid; 
                $update_tr['user_id']    = $log_user['id']; 
                $update_tr['shift_id']   = $curr_shift_id; 
                if(numInt($balance) == 0) {
                    if(count($loyalty_card) > 0){
                        foreach ($loyalty_card as $code => $row) {
                            $update_tr['customer_id']   = $row['cust_id']; 
                        }
                    }
                }
                // var_dump($payment);

                $this->cashier_model->update_trans_sales($update_tr,$sales_id);
                $menus = $this->cashier_model->get_trans_sales_menus(null,array('sales_id'=>$sales_id));

                foreach($menus as $menu){
                    $this->db->set('menu_qty', 'menu_qty-' .$menu->qty,false);
                    $this->db->where('menu_id',$menu->menu_id);
                    $this->db->update('menus');
                }

                // if(LOCALSYNC){
                    // $this->sync_model->update_trans_sales($sales_id);

                // }

                $log_user = $this->session->userdata('user');
                $log_id = $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Added Payment ".$amount." on Sales Order #".$sales_id,$sales_id);

                // if(LOCALSYNC){
                //     $this->sync_model->update_trans_sales($sales_id);
                //     // $this->sync_model->add_logs($log_id);
                // }
                $js_rcps = array();
                if (numInt($balance) == 0) {
                //     // if ($paid == 0) {
                        // $this->finish_trans($sales_id,true);
                        // $this->finish_trans($sales_id,true);
                        $toMain = false;
                        if($this->input->post('trans_retake'))
                            $toMain = true;
                        $this->finish_trans($sales_id,true,false,$toMain);

                        // echo "<pre>",print_r($update_tr),"</pre>";die();
                        $set = $this->cashier_model->get_pos_settings();

                        ###############

                        ##for Combined
                        $wheres = array('main_sales_id'=>$sales_id);
                        $detc = $this->site_model->get_details($wheres,'combine_tables');

                        if(count($detc)>0){
                            //update inactive = 1 kasi naka 2 pag cinombine
                            $this->cashier_model->update_trans_sales(array('inactive'=>1),$detc[0]->combined_sales_id);
                            //delete na sa combone tables yun records na naka combine pa sila
                            $this->cashier_model->delete_combine_tables($detc[0]->main_sales_id);

                        }

                        ## FOR LOYALTY
                        if(count($loyalty_card) > 0){
                            $for_amt = $set->loyalty_for_amount;
                            $to_points = $set->loyalty_to_points;
                            $num_points = floor($new_total_paid / $for_amt);
                            $total_points = $to_points * $num_points;

                            $litems = array();
                            $card_id = array();
                            foreach ($loyalty_card as $code => $row) {
                                $litems = array(
                                    "sales_id" => $sales_id,
                                    "card_id" => $row['card_id'],
                                    "code" => $row['code'],
                                    "cust_id" => $row['cust_id'],
                                    "amount" => $new_total_paid,
                                    "points" => $total_points,
                                );

                                $card_id[$row['card_id']] = $total_points;
                            }
                            if(count($litems) > 0){
                                $this->site_model->add_tbl('trans_sales_loyalty_points',$litems);
                                foreach ($card_id as $cid => $pt) {
                                    $this->cashier_model->update_loyalty_card_points($cid,$pt);
                                     // if(LOCALSYNC){
                                     //    $this->sync_model->update_loyalty_card_points($cid);
                                     // }
                                }


                            }
                        }   
                        ###############

                        $no_prints = $set->no_of_receipt_print;
                        $order_slip_prints = $set->no_of_order_slip_print;
                        $approved_by = null;

                        if($type == 'chit'){
                            $approved_by = $payment['user_id'];
                            $app = $this->site_model->get_user_details($approved_by);
                            $log_id = $this->logs_model->add_logs('Sales Order',$app->id,$app->fname." ".$app->mname." ".$app->lname." ".$app->suffix." Approved CHIT Payment ".$amount." on Sales Order #".$sales_id,$sales_id);
                            //  if(LOCALSYNC){
                            //      // $this->sync_model->add_logs($log_id);
                            // }

                        }
                        $this->session->unset_userdata('online_payment_ref');
                        
                        if(PRINT_VERSION && PRINT_VERSION == 'V3'){
                            $print_ord_no = $this->print_order_no($sales_id);

                            $print_echo = $this->print_os($sales_id);

                            foreach($print_echo['js_rcps'] as $i=>$pe){
                                $js_rcps[] = array('printer'=>$pe['printer'],'value'=>$pe['value']);
                            }

                            $js_rcps[] = array('printer'=>BILLING_PRINTER,'value'=>$print_ord_no['js_rcp']);

                            $print_echo = $this->print_sales_receipt_justin($sales_id,false,false,true,null,true,$no_prints,$order_slip_prints,$approved_by,false,true);

                            foreach($print_echo['js_rcps'] as $i=>$pe){
                                $js_rcps[] = array('printer'=>$pe['printer'],'value'=>$pe['value']);
                            }                            

                        }else{
                            $this->print_os($sales_id);

                        // $sales_ord = $this->cashier_model->get_trans_sales($sales_id);

                        // if($sales_ord[0]->guest > 1 && $sales_ord[0]->split==1){
                        //     for($sro=1;$sro<=$sales_ord[0]->guest;$sro++){
                        //         $print_echo = $this->print_sales_receipt_justin($sales_id,false,false,true,null,true,$no_prints,$order_slip_prints,$approved_by,false,true);
                        //     }
                        // }else{
                            $print_echo = $this->print_sales_receipt_justin($sales_id,false,false,true,null,true,$no_prints,$order_slip_prints,$approved_by,false,true);

                            $print_ord_no = $this->print_order_no($sales_id);
                        // }
                        }
                        
                        
                        if(MALL_ENABLED){
                            if(MALL == 'megamall'){
                                $this->sm_file($order['datetime']);
                            }

                            if(MALL == 'cbmall'){
                                $ret = $this->get_order(false,$sales_id);
                                $ord = $ret['order'];
                                $this->cb_file($order['datetime'],null,$ord['ref'],$sales_id);
                            }

                            if(MALL == 'miaa'){
                                $ret = $this->get_order(false,$sales_id);
                                $ord = $ret['order'];
                                $this->miaa_file($order['datetime'],null,$ord['ref'],$sales_id);
                            }

                            if(MALL == 'araneta'){
                                $ret = $this->get_order(false,$sales_id);
                                $ord = $ret['order'];
                                $this->araneta_trans_file($order['datetime'],null,$ord['ref']);
                            }
                        }

                //     // }
                }
                // if($paid == 0){
                //     $move = true;
                // }
                // else
                //     $move = false;
                // if(in_array($type, array([0]=>'cash'))){
                if ($type == 'cash' || $type == 'cod') {
                    if($amount > $total_to_pay){
                        $change = $amount - $total_to_pay;
                    }
                }

                $p_change = array('change'=>$change,'tendered'=>$amount,'type'=>$type);
                $this->session->set_userData('payment_change',$p_change);
            }
            else{
                $error = 'Invalid Amount.';
            }
            echo json_encode(array('error'=>$error,'change'=>$change,'tendered'=>$amount,'balance'=>num($balance), 'print_v'=>PRINT_VERSION,'js_rcps'=>$js_rcps ));

        }
        public function delete_payment($payment_id=null,$sales_id=null){
            // if(LOCALSYNC){
            //     $this->load->model('core/sync_model');
            // }
            $this->load->model('dine/cashier_model');
            $order = $this->get_order_header(false,$sales_id);
            $error = "";
            if($order['paid'] == 1){
                $error = "paid";
                echo json_encode(array('error'=>$error));
            }else{
                // if(LOCALSYNC){
                //     $this->sync_model->delete_trans_sales_payments($payment_id); // delete in main before ot deletes on dine
                //     $this->sync_model->update_trans_sales($sales_id);
                // }                    
                $this->cashier_model->delete_trans_sales_payments($payment_id);
                $payment = $this->get_order_payments(false,$sales_id);
                $error = "";
                $balance = 0;
                $total_paid = 0;
                foreach ($payment as $payment_id => $pay) {
                    $total_paid += $pay['amount'];
                }
                $this->cashier_model->update_trans_sales(array('total_paid'=>$total_paid),$sales_id);
                echo json_encode(array('error'=>$error,'balance'=>$order['amount'] - $total_paid,'total_paid'=>$total_paid));
            }
        }
        public function finish_trans($sales_id=null,$move=false,$void=false,$toMain=false){
            // if(LOCALSYNC){
            //     $this->load->model('core/sync_model');
            // }
            $this->load->model('dine/cashier_model');
            $this->load->model('dine/items_model');
            $this->load->model('core/trans_model');
            $loc_id = 1;
            $trans_type = SALES_TRANS;
            if($void)
                $trans_type = SALES_VOID_TRANS;
            $ref = $this->trans_model->get_next_ref($trans_type);
            $this->trans_model->db->trans_start();
                $this->trans_model->save_ref($trans_type,$ref);
                $this->cashier_model->update_trans_sales(array('trans_ref'=>$ref,'paid'=>1),$sales_id);

                // if(LOCALSYNC){
                //     $this->sync_model->update_trans_sales($sales_id);
                // }

                $log_user = $this->session->userdata('user');
                $log_id = $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Settled Payment on Sales Order #".$sales_id." Reference #".$ref,$sales_id);
                

                // if(LOCALSYNC){
                //     // $this->sync_model->add_logs($log_id);
                // }

                if($move || $move == "true"){
                    $opts = array(
                        "type_id" => $trans_type,
                        "trans_id" => $sales_id,
                        "trans_ref" => $ref,
                    );
                    if($void)
                        $rrr = true;
                    else
                        $rrr = false;
                    $items = $this->order_items_used($sales_id,$rrr);
                    if(count($items) > 0 ){
                        $this->items_model->move_items($loc_id,$items,$opts);
                    }

                    $order = $this->get_order(false,$sales_id);
                    $details = $order['details'];
                    $menus = array();
                    $mods = array();
                    $items = array();
                    $batch = array();
                    foreach ($details as $det) {
                        $opts['item_id'] = $det['menu_id'];
                        if($void){
                            $opts['qty'] = $det['qty'];
                        }else{
                            $opts['qty'] = $det['qty'] * -1;
                        }
                        $opts['loc_id'] = $loc_id;
                        $now = $this->site_model->get_db_now();
                        $datetime = date2SqlDateTime($now);
                        $opts['reg_date'] = $datetime;
                        $opts['inactive'] = '0';

                        $batch[] = $opts;
                        // if(!isset($det['retail'])){
                        //     $menus[] = $det['menu_id'];
                        //     if(count($det['modifiers']) > 0){
                        //         foreach ($det['modifiers'] as $mod_id => $mod) {
                        //             $mods[] = $mod['id'];
                        //         }
                        //     }
                        // }
                        // else{
                        //     $items[] = $det['menu_id'];
                        // }
                    }
                    
                    $this->items_model->add_menu_moves_batch($batch);




                }
            //     var_dump($log_id);
            // echo $ref;die();
                $this->update_tbl_activity(0,true);   


                // if(LOCALSYNC){
                //     $this->sync_model->update_table_activityc($log_id);
                // }


                // tempory disable the transfer to main

                // if($toMain){
                //     $this->order_to_main($sales_id);
                // }

            $this->trans_model->db->trans_complete();
                if(MIGRATION_VERSION == '2'){
                    run_main_exec();
                    
                }
        }
        public function settle_transactions($sales_id=null){
            $payments = $this->get_order_payments(false,$sales_id);
            $this->make->sDiv(array('class'=>'pay-row-list','style'=>'padding:10px;'));
            $icons = array(
                "cash"=>'money',
                "credit"=>'credit-card',
                "debit"=>'credit-card',
                "gift"=>'gift',
                "check"=>'check-square-o',
            );
            $ids = array();
            foreach ($payments as $payment_id => $pay) {
                $this->make->sDiv(array('class'=>'pay-row-div bg-blue','id'=>'pay-row-div-'.$payment_id));
                    $this->make->sDivRow();
                        $this->make->sDivCol(2,'left',0,array('style'=>'margin-right:20px;'));
                            $this->make->H(3,fa('fa-'.$icons[$pay['type']].' fa-3x fa-fw'),array('class'=>'headline'));
                        $this->make->eDivCol();
                        $this->make->sDivCol(2);
                            $this->make->H(5,strtoupper($pay['type']));
                            $this->make->H(5,strtoupper(sql2DateTime($pay['datetime'])));
                        $this->make->eDivCol();
                        $this->make->sDivCol(5);
                            $this->make->H(5,'Tendered: PHP '.strtoupper(num($pay['amount'])));
                            $change = 0;
                            if($pay['amount'] > $pay['to_pay'])
                                $change = $pay['amount'] - $pay['to_pay'];
                            $this->make->H(5,'Change:   PHP '.strtoupper(num($change)));
                            $this->make->H(5,strtoupper($pay['username']));
                        $this->make->eDivCol();
                        $this->make->sDivCol(2,'right',0,array('style'=>'margin-top:10px;'));
                            $this->make->button(fa('fa-ban fa-lg fa-fw').' VOID',array('id'=>'void-payment-btn-'.$payment_id,'ref'=>$payment_id,'class'=>'btn-block settle-btn-red double'));
                        $this->make->eDivCol();
                    $this->make->eDivRow();
                $this->make->eDiv();
                $ids[] = $payment_id;
            }
            $this->make->eDiv();
            $code = $this->make->code();
            echo json_encode(array('code'=>$code,'ids'=>$ids));
        }
        public function manager_settle_transactions($sales_id=null){
            // echo "Sales ID : ".$sales_id."<br>";
            $payments = $this->get_order_payments(false,$sales_id);
            // echo $this->db->last_query();
            $this->make->sDiv(array('class'=>'pay-row-list','style'=>'padding:10px; background-color:#0073b7;'));
            $icons = array(
                "cash"=>'money',
                "credit"=>'credit-card',
                "debit"=>'credit-card',
                "gift"=>'gift',
                "check"=>'check-square-o',
            );
            $ids = array();
            foreach ($payments as $payment_id => $pay) {
                $this->make->sDiv(array('class'=>'pay-row-div bg-blue','id'=>'pay-row-div-'.$payment_id));
                    $this->make->sDivRow(array('class'=>'bg-blue'));
                        $this->make->sDivCol(2,'left',0,array('style'=>'margin-right:20px;', 'class'=>'bg-blue'));
                            $this->make->H(3,fa('fa-'.$icons[$pay['type']].' fa-3x fa-fw'),array('class'=>'headline'));
                        $this->make->eDivCol();
                        $this->make->sDivCol(2,'',0,array('class'=>'bg-blue'));
                            // $this->make->H(5,'Sales ID #'.$sales_id); // !!!
                            $this->make->H(5,strtoupper($pay['type']));
                            $this->make->H(5,strtoupper(sql2DateTime($pay['datetime'])));
                        $this->make->eDivCol();
                        $this->make->sDivCol(5,'',0,array('class'=>'bg-blue'));
                            $this->make->H(5,'Tendered: PHP '.strtoupper(num($pay['amount'])));
                            $change = 0;
                            if($pay['amount'] > $pay['to_pay'])
                                $change = $pay['amount'] - $pay['to_pay'];
                            $this->make->H(5,'Change:   PHP '.strtoupper(num($change)));
                            $this->make->H(5,strtoupper($pay['username']));
                        $this->make->eDivCol();
                        // $this->make->sDivCol(2,'right',0,array('style'=>'margin-top:10px;'));
                            // $this->make->button(fa('fa-ban fa-lg fa-fw').' VOID',array('id'=>'void-payment-btn-'.$payment_id,'ref'=>$payment_id,'class'=>'btn-block settle-btn-red double'));
                        // $this->make->eDivCol();
                        $this->make->sDivCol(2,'right',0,array('style'=>'margin-top:10px;', 'class'=>'bg-blue'));
                           $this->make->H(5,"Sales ID #".$sales_id);
                        $this->make->eDivCol();
                    $this->make->eDivRow();
                $this->make->eDiv();
                $ids[] = $payment_id;
            }
            $this->make->eDiv();
            $code = $this->make->code();
            echo json_encode(array('code'=>$code,'ids'=>$ids));
        }
        public function order_items_used($sales_id=null,$add=false){
            $this->load->model('dine/cashier_model');
            $this->load->model('dine/menu_model');
            $this->load->model('dine/mods_model');
            $this->load->model('dine/items_model');
            $order = $this->get_order(false,$sales_id);
            $details = $order['details'];
            $menus = array();
            $mods = array();
            $items = array();
            foreach ($details as $det) {
                if(!isset($det['retail'])){
                    $menus[] = $det['menu_id'];
                    if(count($det['modifiers']) > 0){
                        foreach ($det['modifiers'] as $mod_id => $mod) {
                            $mods[] = $mod['id'];
                        }
                    }
                }
                else{
                    $items[] = $det['menu_id'];
                }
            }
            $me = array();
            $itms = array();
            $menu_recipe = array();
            if(count($menus) > 0)
                $menu_recipe = $this->menu_model->get_recipe_items($menus);
            if(count($items) > 0){
                $menu_items = $this->items_model->get_item($items);  
                foreach ($menu_items as $itm) {
                    $itms[$itm->item_id] = array('item_uom'=>$itm->uom,'item_cost'=>$itm->costing);
                }      
            }
            
            foreach ($menu_recipe as $mn) {
                $me[$mn->menu_id][$mn->item_id] = array('item_uom'=>$mn->uom,'item_qty'=>$mn->qty,'item_cost'=>$mn->item_costing);
            }
            $mods_recipe = array();
            if(count($mods) > 0)
                $mods_recipe = $this->mods_model->get_modifier_recipe(null,$mods);
            $mo = array();
            foreach ($mods_recipe as $mn) {
                $mo[$mn->mod_id][$mn->item_id] = array('item_uom'=>$mn->uom,'item_qty'=>$mn->qty);
            }
            $items = array();
            foreach ($details as $line_id => $det) {
                $mul = $det['qty'];
                if(!isset($det['retail'])){
                    if(isset($me[$det['menu_id']])){
                       foreach ($me[$det['menu_id']] as $item_id => $opt) {
                         
                           if(isset($items[$item_id])){
                                if($add)
                                    $items[$item_id]['qty'] += ($mul * $opt['item_qty']);
                                else
                                    $items[$item_id]['qty'] += (($mul * $opt['item_qty']) * -1);

                                $items[$item_id]['uom'] = $opt['item_uom'];
                                $items[$item_id]['cost'] = $opt['item_cost'];
                           }
                           else{
                                if($add)
                                    $items[$item_id]['qty'] = ($mul * $opt['item_qty']);
                                else
                                    $items[$item_id]['qty'] = (($mul * $opt['item_qty']) * -1);
                                $items[$item_id]['uom'] = $opt['item_uom'];
                                $items[$item_id]['cost'] = $opt['item_cost'];
                           }

                       }
                    }
                    #
                    if(count($det['modifiers']) > 0){
                        foreach ($det['modifiers'] as $mod_id => $mod) {
                            if(isset($mo[$mod['id']])){
                                foreach ($mo[$mod['id']] as $mod_item_id => $mopt) {
                                   if(isset($items[$mod_item_id])){
                                        if($add)
                                            $items[$mod_item_id]['qty'] += ($mul * $mopt['item_qty']);
                                        else
                                            $items[$mod_item_id]['qty'] += (($mul * $mopt['item_qty']) * -1);
                                        $items[$mod_item_id]['uom'] = $mopt['item_uom'];
                                   }
                                   else{
                                        if($add)
                                            $items[$mod_item_id]['qty'] = ($mul * $mopt['item_qty']);
                                        else
                                            $items[$mod_item_id]['qty'] = (($mul * $mopt['item_qty']) * -1);
                                        $items[$mod_item_id]['uom'] = $mopt['item_uom'];
                                   }
                               }
                            }
                            #
                        }
                    }
                    #
                }
                else{
                   if(isset($itms[$det['menu_id']])){
                        if(isset($items[$det['menu_id']])){
                            if($add)
                                $items[$det['menu_id']]['qty'] += $det['qty'];
                            else
                                $items[$det['menu_id']]['qty'] += ($det['qty'] * -1);

                            $items[$det['menu_id']]['uom'] = $itms[$itm->item_id]['item_uom'];
                            $items[$det['menu_id']]['cost'] = $itms[$itm->item_id]['item_cost'];
                       }
                       else{
                            if($add)
                                $items[$det['menu_id']]['qty'] = $det['qty'];
                            else
                                $items[$det['menu_id']]['qty'] = ($det['qty'] * -1);
                            $items[$det['menu_id']]['uom'] = $itms[$itm->item_id]['item_uom'];
                            $items[$det['menu_id']]['cost'] = $itms[$itm->item_id]['item_cost'];
                       }
                   } 
                }
            }
            #
            return $items;
        }
        public function get_custs_deposit_amount($cust_id=null){
            $json = array();
            $args['customers.inactive'] = 0;
            $args['customers.cust_id'] = $cust_id;
            $args['customers_bank.inactive'] = 0;
            $select = " customers.cust_id,customers.fname,customers.mname,customers.lname,customers.suffix,
                        SUM(customers_bank.amount) AS cust_money,
                        MAX(customers_bank.datetime) AS last_deposit";
            $join["customers_bank"] = array('content'=>"customers.cust_id = customers_bank.cust_id");
            $order['last_deposit'] = 'desc';
            $group = 'customers_bank.cust_id';
            $items = $this->site_model->get_tbl('customers',$args,$order,$join,true,$select,$group);
            if(count($items) > 0){
                $res = $items[0];
                $json = array(
                    'cust_id'=>$res->cust_id,
                    'amount'=>$res->cust_money,
                    'full_name'=>$res->fname." ".$res->mname." ".$res->lname." ".$res->suffix
                );
            }
            echo json_encode(array('result'=>$json));
        }
    #PRINTING SECTION    
        public function reprint_receipt_previous($sales_id=null){
            $this->print_sales_receipt($sales_id,false,false,true,null,true,1,0,null,true);           
        }
        public function print_testing(){
            $print_str = "";
            $wrap = wordwrap('Hapchan Robinson Cebu Restaurant',25,"|#|");
            $exp = explode("|#|", $wrap);
            foreach ($exp as $v) {
                $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
            }
            $print_str .= $this->align_center('TIN: 888-8888-888-8888',PAPER_WIDTH," ")."\r\n";
            $print_str .= $this->align_center('ACCRDN: AC888888888888',PAPER_WIDTH," ")."\r\n";

            $filename = "sales.txt";
            $fp = fopen($filename, "w+");
            fwrite($fp,$print_str);
            fclose($fp);

            $batfile = "print.bat";
            $fh1 = fopen($batfile,'w+');
            $root = dirname(BASEPATH);
            $battxt ="NOTEPAD /P \"".realpath($root."/".$filename)."\"";
            fwrite($fh1, $battxt);
            fclose($fh1);
            session_write_close();
            // exec($filename);
            exec($batfile);
            session_start();
            unlink($filename);
            unlink($batfile);
        }    
        public function print_sales_receipt_justin($sales_id=null,$asJson=true,$return_print_str=false,$add_reprinted=true,$splits=null,$include_footer=true,$no_prints=1,$order_slip_prints=0,$approved_by=null,$main_db=false,$openDrawer=false){
            // if(LOCALSYNC){
            //     $this->load->model('core/sync_model');
            // }
            if($main_db){
                $this->db = $this->load->database('main', TRUE);
            }
            $branch = $this->get_branch_details(false);
            $return = $this->get_order(false,$sales_id);
            $order = $return['order'];
            $details = $return['details'];
            $payments = $return['payments'];
            $pfields = $return['pfields'];
            $discounts = $return['discounts'];
            $local_tax = $return['local_tax'];
            $charges = $return['charges'];
            $tax = $return['taxes'];
            $no_tax = $return['no_tax'];
            $zero_rated = $return['zero_rated'];
            $totalsss = $this->total_trans(false,$details,$discounts);
            $discs = $totalsss['discs'];
            $is_printed = $order['printed'];
            $print_str = $print_str_part1 = $print_str_part2 = $print_str_part3 = "\r\n";
            $is_billing = false;
            $open_drawer = false;
            // $wrap = wordwrap($branch['name'],PAPER_WIDTH,"|#|");
            // $exp = explode("|#|", $wrap);
            // foreach ($exp as $v) {
            //     $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
            // }
            if(defined('RECEIPT_ADDITIONAL_HEADER_BELOW_BRANCH') && !empty(RECEIPT_ADDITIONAL_HEADER_BELOW_BRANCH)){
                // $print_str .= $this->align_center(RECEIPT_ADDITIONAL_HEADER_BELOW_BRANCH,PAPER_WIDTH," ")."\r\n";                

                if(PRINT_VERSION && PRINT_VERSION=='V3' && file_exists('uploads/brands/mb.jpg')){
                    $print_str .= $this->align_center('<img src="'.base_url().'uploads/brands/mb.jpg" width="50px" height="45px" style="display: block;
                      margin-left: auto;
                      margin-right: auto;
                      width: 50%;">',PAPER_WIDTH," ")."\r\n";
                }else{
                    $print_str .= $this->align_center($branch['name'],PAPER_WIDTH," ")."\r\n";
                }
                
            }

            // $wrap = wordwrap($branch['desc'],PAPER_WIDTH,"|#|");
            // $exp = explode("|#|", $wrap);
            // foreach ($exp as $v) {
            //     $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
            // }
            $splt = 1;
            // if($order['guest'] > 1){
            //     $splt = $order['guest'];
            // }

            $wrap = wordwrap($branch['address'],PAPER_WIDTH,"|#|");
            $exp = explode("|#|", $wrap);
            foreach ($exp as $v) {
                $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
            }   
                // $print_str .= "\r\n";
            if($branch['tin'] != ""){
                // $print_str .= $this->append_chars('VAT REG TIN:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['tin'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
                $print_str .= $this->align_center('VAT REG TIN:'.$branch['tin'],PAPER_WIDTH," ")."\r\n";
            }
            // if($branch['accrdn'] != ""){
            //     $print_str .= $this->append_chars('ACCRDN:',"right",PAPER_DET_SUBCOL," ").$this->append_chars($branch['accrdn'],"right",PAPER_TOTAL_COL_1," ")."\r\n";
            // }
            if($branch['serial'] != ""){
                $print_str .= $this->align_center('S/N:'.$branch['serial'],PAPER_WIDTH," ")."\r\n";
                // $print_str .= $this->append_chars('SN:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['serial'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
            }
            if($branch['machine_no'] != ""){
                $print_str .= $this->append_chars('MIN:'.$branch['machine_no'],PAPER_WIDTH," ")."\r\n";
                // $print_str .= $this->append_chars('MIN:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['machine_no'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
            }
            // if($branch['permit_no'] != ""){
            //     $print_str .= $this->append_chars('PERMIT:'.$branch['permit_no'],"right",PAPER_WIDTH," ")."\r\n";
            //     // $print_str .= $this->append_chars('PERMIT:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['permit_no'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
            // }


            $print_str .= "\r\n";
              $print_str .= $this->append_chars(date('M d, Y h:i A',strtotime($order['datetime'])),"left",PAPER_WIDTH," ")."\r\n";

            // if (!empty($order['void_ref']) || $order['inactive'] == 1) {
            if ($order['ref'] != null && $order['inactive'] == 1) {
                $print_str .= $this->align_center("***** VOIDED TRANSACTION *****",PAPER_WIDTH," ")."\r\n";
                $print_str .= $order['reason']."\r\n\r\n";
            }
            $cancelled = 0;
            if ($order['ref'] == null && $order['inactive'] == 1) {
                $print_str .= $this->align_center("***** CANCELLED TRANSACTION *****",PAPER_WIDTH," ")."\r\n";
                $print_str .= $order['reason']."\r\n\r\n";
                $cancelled = 1;
            }
             // $print_str .= "\r\n".PAPER_LINE."\r\n";
            // $header_print_str = $print_str;
             // $header_print_str .= PAPER_LINE."\r\n";
                // if (!empty($payments)){
                //         $header_print_str = "Receipt # ".$order['ref']."\r\n";
                //         // $this->align_center("Receipt # ".$order['ref']." - ".strtoupper($order['type']),42," ")."\r\n";
                // }
                // else{
                //     $header_print_str = "Reference # ".$order['sales_id']."\r\n";
                //         // $this->align_center(strtoupper($order['type'])." # ".$order['sales_id'],42," ")."\r\n";
                // }
             // $header_print_str .= "\r\n".PAPER_LINE."\r\n";

           
            // $header_print_str .= PAPER_LINE."\r\n";

            // $print_str .= $this->align_center(date('Y-m-d H:i:s',strtotime($order['datetime']))." ".$order['terminal_name']." ".$order['name'],42," ")."\r\n";


            if($order['update_date']){
                // $print_str .= $this->append_chars(ucwords($order['name']),"right",PAPER_RD_COL_3_3," ").$this->append_chars(date('Y-m-d H:i:s',strtotime($order['update_date'])),"left",PAPER_TOTAL_COL_2," ")."\r\n"
                //       . $this->append_chars("Terminal ID : ".$order['terminal_code'],"right",PAPER_RD_COL_3," ").$this->append_chars("","left",PAPER_TOTAL_COL_2," ")."\r\n"
                //     ."\r\n";
                  // $print_str .= $this->append_chars("Terminal ID : ".$order['terminal_code'],"right",PAPER_RD_COL_3," ").$this->append_chars("","left",PAPER_TOTAL_COL_2," ")."\r\n";
                    // ."\r\n";
                    // .PAPER_LINE."\r\n";
            }else{
                // $print_str .= $this->append_chars(ucwords($order['name']),"right",PAPER_RD_COL_3_3," ").$this->append_chars(date('Y-m-d H:i:s',strtotime($order['datetime'])),"left",PAPER_TOTAL_COL_2," ")."\r\n"
                //       . $this->append_chars("Terminal ID : ".$order['terminal_code'],"right",PAPER_RD_COL_MID," ").$this->append_chars("","left",PAPER_TOTAL_COL_2," ")."\r\n"
                //     ."\r\n";
                // $print_str .=  $this->append_chars("Terminal ID : ".$order['terminal_code'],"right",PAPER_RD_COL_MID," ").$this->append_chars("","left",PAPER_TOTAL_COL_2," ")."\r\n"
                    // ."\r\n";
                    // .PAPER_LINE."\r\n";
                
            }
            $print_str .= "\r\n";

            if (!empty($payments)){
                 if(PRINT_VERSION=="V2"){
                    $print_str .=  $this->align_center("<bold>OFFICIAL RECEIPT</bold>",PAPER_RD_COL_MID,"  ")."\r\n";// "Receipt # ".$order['ref']." - ".strtoupper($order['type'])."\r\n";
                    $print_str .=  $this->align_center("<bold>OR #: ".$order['ref']."</bold>",PAPER_RD_COL_MID,"  ")."\r\n";// "Receipt # ".$order['ref']." - ".strtoupper($order['type'])."\r\n";

                     $print_str .=  $this->align_center("<bold>QUEUING #: ".$order['queue_id']."</bold>",PAPER_RD_COL_MID,"")."\r\n";


                  }else{
                    $print_str .=  $this->align_center("OFFICIAL  RECEIPT ",PAPER_RD_COL_MID,"  ")."\r\n";// "Receipt # ".$order['ref']." - ".strtoupper($order['type'])."\r\n";
                    $print_str .=  $this->align_center("OR #: ".$order['ref'],PAPER_RD_COL_MID,"  ")."\r\n";


                    $print_str .=  $this->align_center("QUEUING #: ".$order['queue_id'],PAPER_RD_COL_MID,"")."\r\n";
                  }
                    // $this->align_center("Receipt # ".$order['ref']." - ".strtoupper($order['type']),42," ")."\r\n";
            } else{
                $print_str .= $this->align_center("REFERENCE",PAPER_RD_COL_MID," ");//"Reference # ".$order['sales_id']." - ".strtoupper($order['type'])."\r\n";
                $print_str .=  $this->align_center(" #: ".$order['ref'],PAPER_RD_COL_MID,"  ")."\r\n";

                $print_str .=  $this->align_center("QUEUING",PAPER_RD_COL_MID," ");
                $print_str .=  $this->align_center("#: ".$order['queue_id'],PAPER_RD_COL_MID,"  ")."\r\n";

                    // $this->align_center(strtoupper($order['type'])." # ".$order['sales_id'],42," ")."\r\n";
            }
            if(PRINT_VERSION=="V2"){
             $print_str .=  $this->align_center("\r\n <bold>".strtoupper($order['type'])."</bold>",PAPER_RD_COL_MID," ")."\r\n";
            }else{
             $print_str .=  $this->align_center("\r\n ".strtoupper($order['type']),PAPER_RD_COL_MID," ")."\r\n";
            }
            $print_str .= $this->append_chars("Table No:  ".$order['table_name'],"left",PAPER_WIDTH," ")."\r\n";
            $print_str .= $this->append_chars("Serve No:  ".$order['serve_no'],"left",PAPER_WIDTH," ")."\r\n";
            $print_str .= $this->append_chars("Register No:  ".$order['terminal_id'],"left",PAPER_WIDTH," ")."\r\n";
            $print_str .= $this->append_chars("Cashier Name:  ".ucwords($order['name']),"left",PAPER_WIDTH," ")."\r\n";
            $print_str .= PAPER_LINE_SINGLE."\r\n";

            if($order['customer_id'] != ""){
                if($main_db){
                    $this->db = $this->load->database('default', TRUE);
                }
                $this->load->model('dine/customers_model');
                $customers = $this->customers_model->get_customer($order['customer_id']);
                if(count($customers) > 0){
                    $cust = $customers[0];
                    $name = strtolower($cust->fname." ".$cust->mname." ".$cust->lname." ".$cust->suffix);
                    $print_str .= "Customer : ".$this->append_chars(ucwords($name),"right",19," ")."\r\n";
                    if($order['type'] == 'delivery'){
                        $print_str .= "Contact  : ".$this->append_chars(ucwords($cust->phone),"right",19," ")."\r\n";
                        $address = strtolower($cust->street_no." ".$cust->street_address." ".$cust->city." ".$cust->region." ".$cust->zip);
                        $print_str .= "Address  : ".$this->append_chars(ucwords($address),"right",19," ")."\r\n";
                    }
                }

                if($main_db){
                    $this->db = $this->load->database('main', TRUE);
                }

                $print_str .= PAPER_LINE_SINGLE."\r\n";
            }



            $print_str .= $this->append_chars('Name:',"left",PAPER_RECEIPT_TEXT," ")
                            .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
            $print_str .= $this->append_chars('Address:',"left",PAPER_RECEIPT_TEXT," ")
                            .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
            $print_str .= $this->append_chars('TIN:',"left",PAPER_RECEIPT_TEXT," ")
                            .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
            $print_str .= $this->append_chars('Business Style:',"left",PAPER_RECEIPT_TEXT," ")
                            .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";

            $print_str .= PAPER_LINE_SINGLE."\r\n";
            //HEADER 3


            // if($order['waiter_id'] != ""){
            //     $print_str .= "FS - ".ucwords(strtolower($order['waiter_name']))."\r\n";
            // }


            // $orddetails = "";
            // if($order['table_id'] != "" || $order['table_id'] != 0)
            //     $orddetails .= $order['table_name']." ";

            // if($order['guest'] != 0)
            //     $orddetails .= "Guest #".$order['guest'];

            // if($order['serve_no'] != 0)
            //     $orddetails .= "Serve #".$order['serve_no'];

            // if($orddetails != "")
            //     $print_str .= $this->append_chars($orddetails,"left",PAPER_TOTAL_COL_2," ")."\r\n";//$this->align_center($orddetails,PAPER_WIDTH," ")."\r\n";
            // else{
            //  $print_str .= "\r\n";
            // }

            $log_user = $this->session->userdata('user');
            if (!empty($payments)) {
                if($add_reprinted){
                    if($order['printed'] >= 1){
                        $print_str .= $this->align_center('[REPRINTED]',PAPER_WIDTH," ")."\r\n";
                        if($main_db){
                            $this->cashier_model->update_trans_sales(array('printed'=>$order['printed']+1),$order['sales_id']);
                            $log_id = $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Reprinted Receipt on Sales Order #".$order['sales_id']." Reference #".$order['ref'],$order['sales_id']);
                        }
                        
                    }
                    else{
                        if($main_db){
                            $this->cashier_model->update_trans_sales(array('printed'=>1,'billed'=>1),$order['sales_id']);
                         
                          
                            if(!$return_print_str){
                                $log_id =  $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Printed Receipt on Sales Order #".$order['sales_id']." Reference #".$order['ref'],$order['sales_id']);
                            }
                        }
                    }
                }
                else{
                    if($main_db){
                        $this->cashier_model->update_trans_sales(array('printed'=>1,'billed'=>1),$order['sales_id']);
                        if(!$return_print_str){
                             $log_id = $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Printed Receipt on Sales Order #".$order['sales_id']." Reference #".$order['ref'],$order['sales_id']);
                        }
                    }
                }
            }
            else{
                if($main_db){
                    $this->cashier_model->update_trans_sales(array('billed'=>1),$order['sales_id']);
                    $log_id =  $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Printed Billing on Sales Order #".$order['sales_id'],$order['sales_id']);
                }
            }

            // if(LOCALSYNC){
            //     // if(isset($log_id)){
            //          // $this->sync_model->add_logs($log_id);
            //     // }

            //     $this->sync_model->update_trans_sales($sales_id);

            // }

            
            if($order['type'] == 'delivery' && $order['customer_id'] != ""){
            
            }


            // $print_str .= PAPER_LINE."\r\n";          

            // $print_str .= $this->append_chars("","right",PAPER_WIDTH,"=")."\r\n";

            $pre_total = 0;
            $post_details = array();
            $post_details_nc = array();
            $discs_items = array();
            foreach ($discs as $disc) {
                if(isset($disc['items']))
                    $discs_items[$disc['type']] = $disc['items'];
            }

            // echo "<pre>",print_r($details),"</pre>";die();

            $dscTxt = array();
            foreach ($details as $line_id => $val) {
                foreach ($discs_items as $type => $dissss) {
                    if(in_array($line_id, $dissss)){
                        $qty = 1;
                        if(isset($dscTxt[$val['menu_id'].'_'.$val['price']][$type]['qty'])){
                            $qty = $dscTxt[$val['menu_id'].'_'.$val['price']][$type]['qty'] + 1;
                        }
                        $dscTxt[$val['menu_id'].'_'.$val['price']][$type] = array('txt' => '#'.$type,'qty' => $qty);
                    }
                }
            }

            foreach ($details as $line_id => $val) {

                if($val['is_takeout'] == 1){
                    if (!isset($post_details_nc[$val['menu_id'].'_'.$val['price']])) {
                        $dscsacs = array();
                        if(isset($dscTxt[$val['menu_id'].'_'.$val['price']])){
                            $dscsacs = $dscTxt[$val['menu_id'].'_'.$val['price']];
                        }
                        $remarksArr = array();
                        if($val['remarks'] != '')
                            $remarksArr = array($val['remarks']." x ".$val['qty']);
                        $post_details_nc[$val['menu_id'].'_'.$val['price']] = array(
                            'name' => $val['name'],
                            'code' => $val['code'],
                            'price' => $val['price'],
                            'no_tax' => $val['no_tax'],
                            'discount' => $val['discount'],
                            'qty' => $val['qty'],
                            'discounted'=>$dscsacs,
                            'remarks'=>$remarksArr,
                            'modifiers' => array()
                        );
                    } else {
                        if($val['remarks'] != "")
                            $post_details_nc[$val['menu_id'].'_'.$val['price']]['remarks'][]= $val['remarks']." x ".$val['qty'];
                        $post_details_nc[$val['menu_id'].'_'.$val['price']]['qty'] += $val['qty'];
                    }

                    if (empty($val['modifiers']))
                        continue;

                    $modifs = $val['modifiers'];
                    $n_modifiers = $post_details_nc[$val['menu_id'].'_'.$val['price']]['modifiers'];
                    foreach ($modifs as $vv) {
                        if (!isset($n_modifiers[$vv['id']])) {
                            $n_modifiers[$vv['id']] = array(
                                'name' => $vv['name'],
                                'price' => $vv['price'],
                                'qty' => $val['qty'],
                                'discount' => $vv['discount']
                            );
                        } else {
                            $n_modifiers[$vv['id']]['qty'] += $val['qty'];
                        }
                    }
                    $post_details_nc[$val['menu_id'].'_'.$val['price']]['modifiers'] = $n_modifiers;
                }else{
                    if (!isset($post_details[$val['menu_id'].'_'.$val['price']])) {
                        $dscsacs = array();
                        if(isset($dscTxt[$val['menu_id'].'_'.$val['price']])){
                            $dscsacs = $dscTxt[$val['menu_id'].'_'.$val['price']];
                        }
                        $remarksArr = array();
                        if($val['remarks'] != '')
                            $remarksArr = array($val['remarks']." x ".$val['qty']);
                        
                        $post_details[$val['menu_id'].'_'.$val['price']] = array(
                            'name' => $val['name'],
                            'code' => $val['code'],
                            'price' => $val['price'],
                            'no_tax' => $val['no_tax'],
                            'discount' => $val['discount'],
                            'qty' => $val['qty'],
                            'discounted'=>$dscsacs,
                            'remarks'=>$remarksArr,
                            'modifiers' => array()
                        );
                    } else {
                        if($val['remarks'] != "")
                            $post_details[$val['menu_id'].'_'.$val['price']]['remarks'][]= $val['remarks']." x ".$val['qty'];
                        $post_details[$val['menu_id'].'_'.$val['price']]['qty'] += $val['qty'];
                    }

                    if (empty($val['modifiers']))
                        continue;

                    $modifs = $val['modifiers'];
                    $n_modifiers = $post_details[$val['menu_id'].'_'.$val['price']]['modifiers'];
                    foreach ($modifs as $vv) {
                        if (!isset($n_modifiers[$vv['id']])) {
                            $n_modifiers[$vv['id']] = array(
                                'name' => $vv['name'],
                                'price' => $vv['price'],
                                'qty' => $vv['qty'],
                                'discount' => $vv['discount'],
                                'mod_line_id' => $vv['mod_line_id'],
                                'subcategories' => array()
                            );

                            if(isset($vv['submodifiers']) && count($vv['submodifiers']) > 0){
                                $submods = array();
                                foreach($vv['submodifiers'] as $subid => $smods){
                                    if($vv['id'] == $smods['mod_id']){

                                        // $submods = $n_modifiers[$vv['id']]['submodifiers'];

                                        // if(isset($submods['sales_submod_id'])){}

                                        $submods[$smods['sales_submod_id']] = array(
                                            'name'=>$smods['name'],
                                            'qty'=>$smods['qty'],
                                            'price'=>$smods['price'],
                                            'mod_line_id'=>$smods['mod_line_id'],
                                        );
                                        
                                    }
                                }
                                $n_modifiers[$vv['id']]['submodifiers'] = $submods;
                            }


                        } else {
                            $n_modifiers[$vv['id']]['qty'] += $vv['qty'];

                            if(isset($n_modifiers[$vv['id']]['submodifiers']) && count($n_modifiers[$vv['id']]['submodifiers']) > 0){
                                $submods = $n_modifiers[$vv['id']]['submodifiers'];
                                foreach($vv['submodifiers'] as $subid => $smods){
                                    

                                    if($vv['id'] == $smods['mod_id']){

                                        if(!isset($submods[$smods['sales_submod_id']])){
                                            $submods[$smods['sales_submod_id']] = array(
                                                'name'=>$smods['name'],
                                                'qty'=>$smods['qty'],
                                                'price'=>$smods['price'],
                                                'mod_line_id'=>$smods['mod_line_id'],
                                            );
                                            $n_modifiers[$vv['id']]['submodifiers'] = $submods;
                                        }

                                        
                                    }
                                }
                            }

                        }
                    }
                    $post_details[$val['menu_id'].'_'.$val['price']]['modifiers'] = $n_modifiers;
                }

            }
            /* END NEW BLOCK */
            $tot_qty = 0;
              $print_str .= $this->append_chars("QTY" ,"right",PAPER_DET_COL_1," ");
               $print_str .= $this->append_chars("  Item Description","right",PAPER_DET_COL_2," ").
                $this->append_chars("Amount","left",PAPER_DET_COL_3," ")."\r\n\r\n";
            foreach ($post_details as $val) {
                $tot_qty += $val['qty'];
                $print_str .= $this->append_chars($val['qty'] ."  " ,"right",PAPER_DET_COL_1," ");

                $len = strlen($val['name']);

                if($val['qty'] == 1){
                    $lgth = 21;
                }else{
                    $lgth = 13;
                }

                if($len > $lgth){
                    $arr2 = str_split($val['name'], $lgth);
                    $counter = 1;
                    $sec_line = "";
                    foreach($arr2 as $k => $vv){
                        if($counter == 1){
                            if ($val['qty'] == 1) {
                                $print_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").
                                    $this->append_chars(number_format($val['price']/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                            } else {
                                $print_str .= $this->append_chars(substrwords($vv,100,"")." @".$val['price'],"right",22," ").
                                    $this->append_chars(' '.number_format(($val['price'] * $val['qty'])/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                            }
                        }else{

                            $sec_line .= $vv;
                            // if ($val['qty'] == 1) {
                                // $print_str .= $this->append_chars(" ","right",PAPER_DET_COL_1,"  ");
                                // $print_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").
                                //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                            // } else {
                                // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                            // }
                        }
                        $counter++;
                    }

                    $len2 = strlen($sec_line);

                    if($len2 > 21){
                        $arr2nd = str_split($sec_line, 21);
                        $counter = 1;

                        foreach($arr2nd as $k => $vv){
                            $print_str .= $this->append_chars(" ","right",PAPER_DET_COL_1,"  ");
                            $print_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").
                            $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                        }

                    }else{
                        $print_str .= $this->append_chars(" ","right",PAPER_DET_COL_1,"  ");
                        $print_str .= $this->append_chars(substrwords($sec_line,100,""),"right",PAPER_DET_COL_2," ").
                         $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                    }
                    
                    if ($val['qty'] == 1) {
                        $pre_total += $val['price'];
                    }else{
                        $pre_total += $val['price'] * $val['qty'];
                    }
                }else{
                    if ($val['qty'] == 1) {
                        $print_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").
                            $this->append_chars(number_format($val['price']/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                        $pre_total += $val['price'];
                    } else {
                        $print_str .= $this->append_chars(substrwords($val['name'],100,"")." ".$val['price'],"right",13," ").
                            $this->append_chars(number_format(($val['price'] * $val['qty'])/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                        $pre_total += $val['price'] * $val['qty'];
                    }
                }
                if(count($val['discounted']) > 0){
                    foreach ($val['discounted'] as $dssstxt) {
                      $print_str .= "      ";
                      $print_str .= $this->append_chars($dssstxt['txt']." x ".number_format($dssstxt['qty']/$splt,2),"right",PAPER_DET_COL_2," ")."\r\n";
                    }
                }
                if(isset($val['remarks']) && count($val['remarks']) > 0){
                    if(KERMIT){
                        foreach ($val['remarks'] as $rmrktxt) {
                            $print_str .= "     * ";
                            $print_str .= $this->append_chars(ucwords($rmrktxt),"right",PAPER_DET_COL_2," ")."\r\n";
                        }
                    }
                }

                if (empty($val['modifiers']))
                    continue;

                $modifs = $val['modifiers'];
                foreach ($modifs as $vv) {
                    $print_str .= "   * ".$vv['qty']." ";
                    // $print_str .= "   * 1 ";

                    if ($vv['qty'] == 1) {
                        $print_str .= $this->append_chars(substrwords($vv['name'],100,""),"right",PAPER_DET_SUBCOL," ")
                            .$this->append_chars(number_format($vv['price']/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                        $pre_total += $vv['price'];
                    } else {
                        $print_str .= $this->append_chars(substrwords($vv['name'],100,"")." @ ".$vv['price'],"right",PAPER_DET_SUBCOL," ")
                            .$this->append_chars(number_format(($vv['price'] * $vv['qty'])/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                        $pre_total += $vv['price'] * $vv['qty'];
                    }

                    if(isset($vv['submodifiers']) > 0){

                        foreach($vv['submodifiers'] as $subid => $smod){
                            $print_str .= "        ";
                            if($smod['qty'] == 1){
                                $print_str .= $this->append_chars(substrwords($smod['name'],100,""),"right",PAPER_DET_SUBCOL," ")
                                .$this->append_chars(number_format(($smod['price'] * $smod['qty'])/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                            }else{
                                $print_str .= $this->append_chars($smod['qty'] .' '.substrwords($smod['name'],100,""),"right",PAPER_DET_SUBCOL," ")
                                .$this->append_chars(number_format(($smod['price'] * $smod['qty'])/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                            }
                            $pre_total += $smod['qty']*$smod['price'];
                        }
                    }
                }
                

                $print_str .= "\r\n";
                //DISCOUNT PALATANDAAN
                // if(in_array($val[''], haystack))

            }

            //for no charges
            if($post_details_nc){
                // $print_str .= "\r\n";
                $print_str .= PAPER_LINE."\r\n";
                $print_str .= "          TAKE OUT"."\r\n";
                $print_str .= PAPER_LINE."\r\n";
                foreach ($post_details_nc as $val) {
                    $tot_qty += $val['qty'];
                    $print_str .= $this->append_chars($val['qty']." ","right",PAPER_DET_COL_1," ");

                    $len = strlen($val['name']);

                    if($val['qty'] == 1){
                        $lgth = 21;
                    }else{
                        $lgth = 13;
                    }

                    if($len > $lgth){
                        $arr2 = str_split($val['name'], $lgth);
                        $counter = 1;
                        $sec_line = "";
                        foreach($arr2 as $k => $vv){
                            if($counter == 1){
                                if ($val['qty'] == 1) {
                                    $print_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").
                                        $this->append_chars(number_format($val['price']/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                                } else {
                                    $print_str .= $this->append_chars(substrwords($vv,100,"")." @".$val['price'],"right",22," ").
                                        $this->append_chars(' '.number_format(($val['price'] * $val['qty'])/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                                }
                            }else{

                                $sec_line .= $vv;
                                // if ($val['qty'] == 1) {
                                    // $print_str .= $this->append_chars(" ","right",PAPER_DET_COL_1,"  ");
                                    // $print_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").
                                    //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                // } else {
                                    // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                    //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                // }
                            }
                            $counter++;
                        }

                        $len2 = strlen($sec_line);

                        if($len2 > 21){
                            $arr2nd = str_split($sec_line, 21);
                            $counter = 1;

                            foreach($arr2nd as $k => $vv){
                                $print_str .= $this->append_chars(" ","right",PAPER_DET_COL_1,"  ");
                                $print_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").
                                $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                            }

                        }else{
                            $print_str .= $this->append_chars(" ","right",PAPER_DET_COL_1," ");
                            $print_str .= $this->append_chars(substrwords($sec_line,100,""),"right",PAPER_DET_COL_2," ").
                             $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                        }
                        
                        if ($val['qty'] == 1) {
                            $pre_total += $val['price'];
                        }else{
                            $pre_total += $val['price'] * $val['qty'];
                        }
                    }else{
                        if ($val['qty'] == 1) {
                            $print_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").
                                $this->append_chars(number_format($val['price']/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                            $pre_total += $val['price'];
                        } else {
                            $print_str .= $this->append_chars(substrwords($val['name'],100,"")." ".$val['price'],"right",PAPER_DET_COL_2," ").
                                $this->append_chars(number_format(($val['price'] * $val['qty'])/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                            $pre_total += $val['price'] * $val['qty'];
                        }
                    }
                    if(count($val['discounted']) > 0){
                        foreach ($val['discounted'] as $dssstxt) {
                          $print_str .= "      ";
                          $print_str .= $this->append_chars($dssstxt['txt']." x ".number_format($dssstxt['qty']/$splt,2),"right",PAPER_DET_COL_2," ")."\r\n";
                        }
                    }
                    if(isset($val['remarks']) && count($val['remarks']) > 0){
                        // foreach ($val['remarks'] as $rmrktxt) {
                        //     $print_str .= "     * ";
                        //     $print_str .= $this->append_chars(ucwords($rmrktxt),"right",PAPER_DET_COL_2," ")."\r\n";
                        // }
                    }

                    if (empty($val['modifiers']))
                        continue;

                    $modifs = $val['modifiers'];
                    foreach ($modifs as $vv) {
                        $print_str .= "   * ".$vv['qty']." ";

                        if ($vv['qty'] == 1) {
                            $print_str .= $this->append_chars(substrwords($vv['name'],100,""),"right",PAPER_DET_SUBCOL," ")
                                .$this->append_chars(number_format($vv['price']/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                            $pre_total += $vv['price'];
                        } else {
                            $print_str .= $this->append_chars(substrwords($vv['name'],100,"")." ".$vv['price'],"right",PAPER_DET_SUBCOL," ")
                                .$this->append_chars(number_format(($vv['price'] * $vv['qty'])/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                            $pre_total += $vv['price'] * $vv['qty'];
                        }
                    }
                    


                    //DISCOUNT PALATANDAAN
                    // if(in_array($val[''], haystack))

                }
            }

            // $print_str .= $this->append_chars("","right",PAPER_WIDTH,"=");

            // $vat = round($order['amount'] / (1 + BASE_TAX) * BASE_TAX,1);
            $vat = 0;
            if($tax > 0){
                foreach ($tax as $tx) {
                   $vat += $tx['amount'];
                }
            }
            $no_tax_amt = 0;
            foreach ($no_tax as $k=>$v) {
                $no_tax_amt += $v['amount'];
            }

            $zname = "";
            $zcard = "";
            $zero_rated_amt = 0;
            foreach ($zero_rated as $k=>$v) {
                $zero_rated_amt += $v['amount'];
                $zname = $v['name'];
                $zcard = $v['card_no'];
            }
            if($zero_rated_amt > 0){
                $no_tax_amt = 0;
            }

            $print_str .= PAPER_LINE_SINGLE."\r\n";
            // $print_str .= "\r\n".$this->append_chars(ucwords("TOTAL"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format(($pre_total),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
            // $print_str .= $this->append_chars(ucwords("TOTAL QTY"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format(($tot_qty),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
            // // if(count($discs) > 0){
            //     foreach ($discs as $ds) {
            //         $print_str .= "\r\n".$this->append_chars(strtoupper($ds['type']),"right",28," ").$this->append_chars("P (".number_format($ds['amount'],2).")","left",10," ")."\r\n";
            //     }
            // }
            // $print_str .= "\r\n";
            

            //start of not show for cancelled trans

            if($cancelled == 0){

                $total_discounts = 0;
                $total_discounts_sm = 0;

                $per_item_disc = false;
                foreach ($discounts as $dcs_ci => $dcs) {
                    if($dcs['items'] != ""){
                        $per_item_disc = true;
                    }
                }
                if($per_item_disc){
                    foreach ($discounts as $dcs_ci => $dcs) {
                        // foreach ($dcs['persons'] as $code => $dcp) {
                            // $print_str .= $this->append_chars($dcs_ci,"right",28," ").$this->append_chars('P'.num($dcp['amount']),"left",10," ");
                            // $print_str .= "\r\n".$this->append_chars($dcp['name'],"right",28," ");
                            // $print_str .= "\r\n".$this->append_chars($dcp['code'],"right",28," ")."\r\n";
                            // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                            $total_discounts += $dcs['amount'];
                            $dcAmt = $dcs['amount'];
                            // if(MALL_ENABLED && MALL == 'megamall'){
                            //     if($dcs_ci == PWDDISC){
                            //         $dcAmt = $dcAmt / 1.12;       
                            //     }
                            // }
                            $total_discounts_sm += $dcAmt;
                        // }
                    }
                    $total_discounts_non_vat = 0;
                    foreach ($discounts as $dcs_ci => $dcs) {
                       
                        // foreach ($dcs['persons'] as $code => $dcp) {
                            // $print_str .= $this->append_chars($dcs_ci,"right",28," ").$this->append_chars('P'.num($dcp['amount']),"left",10," ");
                            // $print_str .= "\r\n".$this->append_chars($dcp['name'],"right",28," ");
                            // $print_str .= "\r\n".$this->append_chars($dcp['code'],"right",28," ")."\r\n";
                            // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                            if($dcs['no_tax'] == 1){
                                $total_discounts_non_vat += $dcs['amount'];
                            }
                        // }
                    }

                }else{
                    foreach ($discounts as $dcs_ci => $dcs) {
                        foreach ($dcs['persons'] as $code => $dcp) {
                            // $print_str .= $this->append_chars($dcs_ci,"right",28," ").$this->append_chars('P'.num($dcp['amount']),"left",10," ");
                            // $print_str .= "\r\n".$this->append_chars($dcp['name'],"right",28," ");
                            // $print_str .= "\r\n".$this->append_chars($dcp['code'],"right",28," ")."\r\n";
                            // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                            $total_discounts += $dcp['amount'];
                            $dcAmt = $dcp['amount'];
                            // if(MALL_ENABLED && MALL == 'megamall'){
                            //     if($dcs_ci == PWDDISC){
                            //         $dcAmt = $dcAmt / 1.12;       
                            //     }
                            // }
                            $total_discounts_sm += $dcAmt;
                        }
                    }
                    $total_discounts_non_vat = 0;
                    foreach ($discounts as $dcs_ci => $dcs) {
                       
                        foreach ($dcs['persons'] as $code => $dcp) {
                            // $print_str .= $this->append_chars($dcs_ci,"right",28," ").$this->append_chars('P'.num($dcp['amount']),"left",10," ");
                            // $print_str .= "\r\n".$this->append_chars($dcp['name'],"right",28," ");
                            // $print_str .= "\r\n".$this->append_chars($dcp['code'],"right",28," ")."\r\n";
                            // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                            if($dcs['no_tax'] == 1){
                                $total_discounts_non_vat += $dcp['amount'];
                            }
                        }
                    }
                }

                $total_charges = 0;
                if(count($charges) > 0){
                    foreach ($charges as $charge_id => $opt) {
                        $total_charges += $opt['total_amount'];
                    }
                }
                $local_tax_amt = 0;
                if(count($local_tax) > 0){
                    foreach ($local_tax as $lt_id => $lt) {
                        $local_tax_amt += $lt['amount'];
                    }
                }
                // echo num($total_charges + $local_tax_amt);

                // echo '((('.$order['amount'].' - ('.$total_charges.' + '.$local_tax_amt.') - '.$vat.') - '.$no_tax_amt.'+'.$total_discounts_non_vat.') -'.$zero_rated_amt;


                $vat_sales = ( ( ( $order['amount'] - ($total_charges + $local_tax_amt) ) - $vat)  - $no_tax_amt + $total_discounts_non_vat ) - $zero_rated_amt;

                // echo '===== '.$vat_sales;
                // $vat_sales = ( ( ( $order['amount'] ) - $vat)  - $no_tax_amt + $total_discounts) - $zero_rated_amt;
                // echo "vat_sales= ((".$order['amount']." - ".$total_charges."))- ".$vat." )- ".$no_tax_amt." + ".$total_discounts." - ".$zero_rated_amt;
                if($vat_sales < 0){
                    $vat_sales = 0;
                }

                $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                    $print_str .= $this->append_chars("Total Amount","right",PAPER_DET_COL_2," ").
                $this->append_chars(number_format($pre_total/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                if(count($discounts) >0){
                $less_vat = round(($pre_total - ($order['amount'] - $total_charges + $local_tax_amt ) ) - $total_discounts,2);
                $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                
                    if($less_vat >0){

                        $print_str .= $this->append_chars(ucwords("Less VAT"),"right",PAPER_DET_COL_2," ").$this->append_chars('('.number_format($less_vat/$splt,2).')',"left",PAPER_DET_COL_3," ")."\r\n";
                    }

                  // if(count($dcs['persons']) > 0){
                  //      $print_str .= $this->append_chars(ucwords("Less VAT (12%)"),"right",28," ").$this->append_chars("(".number_format($pre_total - $no_tax_amt,2).")","left",10," ")."\r\n";
                  //  }
                }else{
                    // $print_str .= $this->append_chars("Sub-Total","right",PAPER_DET_COL_2," ").
                    // $this->append_chars(number_format($pre_total,2),"left",PAPER_DET_COL_3," ")."\r\n";
                }
                if(count($discounts) >0){
                    $hasSMPWD = false;

                    if($per_item_disc){
                        foreach ($discounts as $dcs_ci => $dcs) {
                            // foreach ($dcs['persons'] as $code => $dcp) {
                            if($dcs['disc_code'] != "DIPLOMAT" && $dcs['disc_code'] != "QTYDISC"){    
                                $discRateTxt = " (".$dcs['disc_rate']."%)";
                                if($dcs['fix'] == 1){
                                    $discRateTxt = " (".$dcs['disc_rate'].")";
                                }
                                $dcAmt = $dcs['amount'];
                                // if(MALL_ENABLED && MALL == 'megamall'){
                                //     if($dcs_ci == PWDDISC){
                                //         $dcAmt = $dcAmt / 1.12; 
                                //         $hasSMPWD = true;      
                                //     }
                                // }

                                $where = array('disc_code'=>$dcs['disc_code']);
                                $det = $this->site_model->get_details($where,'receipt_discounts');

                                $discount_text = "Less ".$det[0]->disc_name." DISCOUNT";
                                $lend = strlen($discount_text);

                                $lgthd = 21;

                                if($lend > $lgthd){
                                    $arr2 = str_split($discount_text, $lgthd);
                                    $counter = 1;
                                    foreach($arr2 as $k => $vv){
                                        if($counter == 1){
                                            $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                                            $print_str .= $this->append_chars($vv,"right",PAPER_DET_COL_2," ").$this->append_chars('('.num($dcAmt/$splt).')',"left",PAPER_DET_COL_3," ")."\r\n";
                                        }else{
                                            $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                                            $print_str .= $this->append_chars($vv,"right",PAPER_DET_COL_2," ").$this->append_chars('',"left",PAPER_DET_COL_3," ")."\r\n";
                                        }
                                        $counter++;
                                    }
                                    
                                    
                                }else{
                                    $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                                    $print_str .= $this->append_chars($discount_text,"right",PAPER_DET_COL_2," ").$this->append_chars('('.num($dcAmt/$splt).')',"left",PAPER_DET_COL_3," ")."\r\n";
                                }

                                //   $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                                // $print_str .= $this->append_chars("Less ".$det[0]->disc_name." DISC","right",PAPER_DET_COL_2," ").$this->append_chars('('.num($dcAmt).")","left",PAPER_DET_COL_3," ")."\r\n";
                                
                            // }
                            }
                        }
                    }else{
                        if(count($dcs['persons']) > 0){
                            // $print_str .= "\r\n";
                            // $print_str .= PAPER_LINE."\r\n";
                            // $print_str .= "          Discount Details"."\r\n";
                            // $print_str .= PAPER_LINE."\r\n";

                            foreach ($discounts as $dcs_ci => $dcs) {
                                if($dcs_ci != "DIPLOMAT" && $dcs_ci != "QTYDISC"){
                                    foreach ($dcs['persons'] as $code => $dcp) {
                                        $discRateTxt = " (".$dcp['disc_rate']."%)";
                                        if($dcs['fix'] == 1){
                                            $discRateTxt = " (".$dcp['disc_rate'].")";
                                        }
                                        $dcAmt = $dcp['amount'];
                                        // if(MALL_ENABLED && MALL == 'megamall'){
                                        //     if($dcs_ci == PWDDISC){
                                        //         $dcAmt = $dcAmt / 1.12; 
                                        //         $hasSMPWD = true;      
                                        //     }
                                        // }

                                        $where = array('disc_code'=>$dcs_ci);
                                        $det = $this->site_model->get_details($where,'receipt_discounts');
                                        $discount_text = "Less ".$det[0]->disc_name." DISCOUNT";
                                        $lend = strlen($discount_text);

                                        $lgthd = 21;
                                        
                                        if($lend > $lgthd){
                                            $arr2 = str_split($discount_text, $lgthd);
                                            $counter = 1;
                                            foreach($arr2 as $k => $vv){
                                                if($counter == 1){
                                                    $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                                                    $print_str .= $this->append_chars($vv,"right",PAPER_DET_COL_2," ").$this->append_chars('('.num($dcAmt/$splt).')',"left",PAPER_DET_COL_3," ")."\r\n";
                                                }else{
                                                    $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                                                    $print_str .= $this->append_chars($vv,"right",PAPER_DET_COL_2," ").$this->append_chars('',"left",PAPER_DET_COL_3," ")."\r\n";
                                                }
                                                $counter++;
                                            }
                                            
                                            
                                        }else{
                                            $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                                            $print_str .= $this->append_chars($discount_text,"right",PAPER_DET_COL_2," ").$this->append_chars('('.num($dcAmt/$splt).')',"left",PAPER_DET_COL_3," ")."\r\n";
                                        }
                                        
                                    }
                                }
                            }
                            // $print_str .= "\r\n";
                            // echo $pre_total." - ".$order['amount']." - ".$total_charges." - ".$total_discounts; die();
                            // $less_vat = ($pre_total - ($order['amount'] - num($total_charges + $local_tax_amt) ) ) - $total_discounts;

                            // $print_str .= $this->append_chars(ucwords("Total Discount"),"right",28," ").$this->append_chars(number_format($total_discounts,2),"left",10," ")."\r\n";
                            // $print_str .= $this->append_chars(ucwords("Total Less VAT"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format( $less_vat,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                            // if(MALL_ENABLED && MALL == 'megamall' && $hasSMPWD){
                            //     $print_str .= $this->append_chars(ucwords("Total Amount Discounted"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format( ($total_discounts_sm + $less_vat),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                            // }
                            // else{
                            //     $print_str .= $this->append_chars(ucwords("Total Amount Discounted"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format( ($total_discounts + $less_vat),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                            // }
                        }
                    }

                } 
                // $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                // $print_str .= $this->append_chars("Service Charge (8.5%)","right",PAPER_DET_COL_2," ").
                // $this->append_chars(number_format($total_charges,2),"left",PAPER_DET_COL_3," ")."\r\n";
                if(count($charges) > 0){
                    // $print_str .= "\r\n";
                    // $print_str .= PAPER_LINE."\r\n";
                    // $print_str .= "              CHARGES"."\r\n";
                    // $print_str .= PAPER_LINE."\r\n";
                    foreach ($charges as $charge_id => $opt) {
                        $charge_amount = $opt['total_amount'];
                        // if($opt['absolute'] == 0){
                        //     $charge_amount = ($opt['amount'] / 100) * ($order['amount'] - $vat);
                        // }
                        $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");     
                        if($opt['absolute'] == 1){
                            $print_str .= $this->append_chars($opt['name'],"right",PAPER_DET_COL_2," ").$this->append_chars(number_format($charge_amount/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                        }else{
                            $print_str .= $this->append_chars($opt['name'] ."(".$opt['rate']."%)","right",PAPER_DET_COL_2," ").$this->append_chars(number_format($charge_amount/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                        }
                // $print_str .= $this->append_chars("Service Charge (8.5%)","right",PAPER_DET_COL_2," ").
                    }
                    // $print_str .= PAPER_LINE."\r\n";
                }
                if(PRINT_VERSION == 'V2'){    
                    $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");     
                    $print_str .="<bold>";
                    $print_str .= $this->append_chars(number_format($tot_qty/$splt,2)." Item(s) Total Due","right",PAPER_DET_COL_2," ")."</bold><bold>".
                    $this->append_chars(number_format($order['amount']/$splt,2),"left",PAPER_DET_COL_3," ")."</bold>"."\r\n";
                }else{
                    $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," "); 
                    $print_str .= $this->append_chars(number_format($tot_qty/$splt)." Item(s) Total Due","right",PAPER_DET_COL_2," ").
                    $this->append_chars(number_format($order['amount']/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                }
                $py_ref = "";
                if (!empty($payments)) {

                    // $print_str .= "\r\n";
                    // $print_str .= "\r\n"."======================================"."\r\n";
                    //   if(PRINT_VERSION=="V2"){
                    //         $print_str .= "STARTCUT==============================ENDCUT";
                    //     }
                    // $print_str .= $this->append_chars("Amount due","right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($order['amount'],2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    //   if(PRINT_VERSION=="V2"){
                    //       $print_str .= "STARTCUT==============================ENDCUT";
                    //    }
                    $pay_total = 0;
                    $gft_ctr = 0;
                    $nor_ctr = 0;
                    $py_ref = "";
                    $total_payment = 0;
                  
                    foreach ($payments as $payment_id => $opt) {
                        $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," "); 
                        if($opt['payment_type'] == 'gc'){
                            $print_str .= $this->append_chars(ucwords('gift cheque'),"right",PAPER_DET_COL_2," ").
                            $this->append_chars(number_format($opt['amount']/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                        }else{
                            $print_str .= $this->append_chars(ucwords($opt['payment_type']),"right",PAPER_DET_COL_2," ").
                            $this->append_chars(number_format($opt['amount']/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                        }    
                        // $print_str .= $this->append_chars(ucwords($opt['payment_type']),"right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($opt['amount'],2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                        
                        if($opt['payment_type'] == 'check'){
                            $print_str .= $this->append_chars("     Check # ".$opt['reference'],"right",PAPER_WIDTH," ")."\r\n";
                        }else{
                            if (!empty($opt['reference']) && $opt['payment_type'] != 'deposit') {
                                $py_ref = $opt['reference'];
                                // $print_str .= $this->append_chars("     Reference ".$opt['reference'],"right",PAPER_WIDTH," ")."\r\n";
                            }
                        }

                        if($opt['payment_type'] == 'foodpanda'){
                            if (!empty($opt['approval_code']))
                                    $print_str .= $this->append_chars("  Order Code: ".$opt['approval_code'],"right",PAPER_WIDTH," ")."\r\n";
                        }else if($opt['payment_type'] == 'check'){
                            $print_str .= $this->append_chars("     Bank: ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                        }else if($opt['payment_type'] == 'picc'){
                            $print_str .= $this->append_chars("     Name: ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                        }else if($opt['payment_type'] == 'egift'){
                            $print_str .= $this->append_chars("  Reference Amount : ".$opt['card_type'],"right",PAPER_WIDTH," ")."\r\n";
                        }else{
                            if (!empty($opt['card_number'])) {
                                if (!empty($opt['card_type'])) {
                                    $print_str .= $this->append_chars("  Card Type: ".$opt['card_type'],"right",PAPER_WIDTH," ")."\r\n";
                                }
                                $print_str .= $this->append_chars("  Card #: ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                                if (!empty($opt['approval_code']))
                                    $print_str .= $this->append_chars("  Approval #: ".$opt['approval_code'],"right",PAPER_WIDTH," ")."\r\n";
                            }
                        }
                        // $pay_total += $opt['amount'];
                        // if($opt['payment_type'] == 'gc'){
                        //     $gft_ctr++;
                        // }
                        // else
                        //     $nor_ctr++;
                        if($opt['payment_type'] == 'gc'){
                            if($opt['amount'] > $opt['to_pay']){
                                $total_payment  += $opt['to_pay'];
                            }else{
                                $total_payment  += $opt['amount'];
                            }
                        }
                        else{
                            $total_payment  += $opt['amount'];
                        }


                        if($opt['payment_type'] == 'cash' && $is_printed <= 0){
                            $open_drawer = true;
                        }

                        
                    }
                    if($pfields){
                        foreach ($pfields as $fid => $val) {
                            $print_str .= $this->append_chars("   ".$val['field_name'].": " .$val['value'],"right",PAPER_WIDTH," ")."\r\n";
                        }
                    }

                     if(PRINT_VERSION=="V2"){
                            $print_str .= "STARTCUT==============================ENDCUT";
                        }

                     $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");     
                    // if($gft_ctr == 1 && $nor_ctr == 0)
                    //     $print_str .= $this->append_chars('Change',"right",PAPER_DET_COL_2," ").$this->append_chars(number_format(0,2),"left",PAPER_DET_COL_3," ")."\r\n";
                    // else
                        $print_str .= $this->append_chars('Change',"right",PAPER_DET_COL_2," ").$this->append_chars(number_format((abs($total_payment - $order['amount']))/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                 
                        if(PRINT_VERSION=="V2"){
                          $print_str .= "STARTCUT==============================ENDCUT";
                       }
                    $print_str .= PAPER_LINE_SINGLE."\r\n";
                     $print_str .= "\r\n".$this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("VATABLE SALES"),"right",PAPER_DET_COL_2," ").$this->append_chars(num($vat_sales/$splt),"left",PAPER_DET_COL_3," ")."\r\n";
                    $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("VATEXEMPT"),"right",PAPER_DET_COL_2," ").$this->append_chars(number_format(($no_tax_amt-$total_discounts_non_vat)/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                    $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("Zero Rated"),"right",PAPER_DET_COL_2," ").$this->append_chars(number_format($zero_rated_amt/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                    
                       if($tax > 0){
                            foreach ($tax as $tx) {
                               $print_str .=  $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars($tx['name']." Amount","right",PAPER_DET_COL_2," ").$this->append_chars(number_format(abs($tx['amount']/$splt),2),"left",PAPER_DET_COL_3," ")."\r\n";
                            }
                        }
                    $print_str .= "\r\n";
                    

                    $total_discount_snr_count = $total_discount_pwd_count = $total_discount_count = 0;
                    if($per_item_disc){
                        foreach ($discounts as $dcs_ci => $dcs) {
                                if($dcs['disc_code'] == 'SNDISC' || $dcs['disc_code'] == 'PWDISC'){
                                    // echo "<pre>",print_r($dcs['persons']),"</pre>";die();
                                    // foreach ($dcs['persons'] as $code => $dcp) {   
                                        if($dcs['disc_code'] == 'SNDISC'){
                                            $total_discount_snr_count += 1;                            
                                        } 
                                        if($dcs['disc_code'] == 'PWDISC'){

                                            $total_discount_pwd_count += 1;                            
                                        } 
                                                                       }
                                // }
                        }
                    }else{
                        foreach ($discounts as $dcs_ci => $dcs) {
                                if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                                    // echo "<pre>",print_r($dcs['persons']),"</pre>";die();
                                    foreach ($dcs['persons'] as $code => $dcp) {   
                                        if($dcs_ci == 'SNDISC'){
                                            $total_discount_snr_count += 1;                            
                                        } 
                                        if($dcs_ci == 'PWDISC'){

                                            $total_discount_pwd_count += 1;                            
                                        } 
                                                                       }
                                }
                        }
                    }

                   
                    $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("Total Guest Count"),"right",PAPER_DET_COL_2," ").$this->append_chars((($order['guest'] >0) ? $order['guest']: 1),"left",PAPER_DET_COL_3," ")."\r\n";
                    
                    if($total_discount_snr_count > 0){

                        $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("Total SC Guest Count"),"right",PAPER_DET_COL_2," ").$this->append_chars($total_discount_snr_count,"left",PAPER_DET_COL_3," ")."\r\n\r\n";
                    }

                    if($total_discount_pwd_count > 0){

                        $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("Total PWD Guest Count:"),"right",PAPER_DET_COL_2," ").$this->append_chars($total_discount_pwd_count,"left",PAPER_DET_COL_3," ")."\r\n\r\n";
                    }

                    


                    $print_str .= PAPER_LINE_SINGLE."\r\n\r\n";

                    if ($include_footer) {
                        $rec_footer = "";
                        if($branch['rec_footer'] != ""){
                            $wrap = str_replace ("<br>","\r\n", $branch['rec_footer'] );
                            $exp = explode("\r\n", $wrap);
                            foreach ($exp as $v) {
                                $wrap2 = wordwrap($v,35,"|#|");
                                $exp2 = explode("|#|", $wrap2);  
                                foreach ($exp2 as $v2) {
                                    $rec_footer .= $this->align_center($v2,PAPER_WIDTH," ")."\r\n";
                                }
                            }                        
                        }
                        if($order['inactive'] == 0){
                            $print_str .= $rec_footer;
                        }    
                            $print_str .= "\r\n";
                            // $print_str .= $this->align_center("POS Vendor Details",PAPER_WIDTH," ")."\r\n";
                            // $print_str .= PAPER_LINE."\r\n";
                            $print_str .= $this->align_center("PointOne Integrated Tech., Inc.",PAPER_WIDTH," ")."\r\n";
                            $print_str .= $this->align_center("1409 Prestige Tower",PAPER_WIDTH," ")."\r\n";
                            $print_str .= $this->align_center("Ortigas Center, Pasig City",PAPER_WIDTH," ")."\r\n";
                            $print_str .= $this->append_chars('TIN:',"right",PAPER_RD_COL_3," ")
                                       .  $this->append_chars('008543444-000',"left",PAPER_DET_SUBCOL," ")."\r\n";
                            if($branch['accrdn'] != ""){
                                $print_str .= $this->append_chars('Accred. No.',"right",PAPER_RD_COL_3," ")
                                       .  $this->append_chars($branch['accrdn'],"left",PAPER_DET_SUBCOL," ")."\r\n";
                                // $print_str .= $this->align_center('ACCRDN:',PAPER_WIDTH," ")."\r\n".$this->align_center($branch['accrdn'],PAPER_WIDTH," ")."\r\n";
                            }
                            $print_str .= $this->append_chars('Permit No.:',"right",PAPER_RD_COL_3," ")
                                       .  $this->append_chars($branch['permit_no'],"left",PAPER_DET_SUBCOL," ")."\r\n";
                            // $print_str .= $this->append_chars('POS Version:',"right",PAPER_RD_COL_3," ")
                            //            .  $this->append_chars('iPos ver 1.0',"left",PAPER_DET_SUBCOL," ")."\r\n";
                            $print_str .= $this->append_chars('Date Issued:',"right",PAPER_RD_COL_3," ")
                                       .  $this->append_chars('December 22, 2014',"left",PAPER_DET_SUBCOL," ")."\r\n";
                                       // .  $this->append_chars(date2Word($order['datetime']),"right",PAPER_TOTAL_COL_2," ")."\r\n";
                            $print_str .= $this->append_chars('Valid Until:',"right",PAPER_RD_COL_3," ")
                                       .  $this->append_chars(date2Word('December 22, 2025'),"left",PAPER_DET_SUBCOL," ")."\r\n";
                                       // .  $this->append_chars(date2Word( date('Y-m-d',strtotime($order['datetime'].' +5 year')) ),"right",PAPER_TOTAL_COL_2," ")."\r\n";

                        if($branch['contact_no'] != ""){
                            $print_str .= $this->align_center("For feedback, please call us at",PAPER_WIDTH," ")."\r\n"
                                         .$this->align_center($branch['contact_no'],PAPER_WIDTH," ")."\r\n";
                        }
                        if($branch['email'] != ""){
                            $print_str .= $this->align_center("Or Email us at",PAPER_WIDTH," ")."\r\n" 
                                       .$this->align_center($branch['email'],PAPER_WIDTH," ")."\r\n";
                        }
                        if($branch['website'] != ""){
                            $print_str .= $this->align_center("Please visit us at",PAPER_WIDTH," ")."\r\n"
                                         .$this->align_center($branch['website'],PAPER_WIDTH," ")."\r\n";
                        }

                        if($per_item_disc){
                            foreach ($discounts as $dcs_ci => $dcs) {
                                if($dcs['disc_code'] == 'SNDISC'){
                                    // if($dcs_ci == 'SNDISC'){
                                    $print_str .= "\r\n".$this->append_chars("Senior Citizen TIN: ".$dcs['code'],"right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("OSCA ID No.: ".$dcs['name'],"right",PAPER_TOTAL_COL_1," ");
                                    // }
                                    // if($dcs_ci == 'PWDISC'){
                                    //     $print_str .= "\r\n".$this->append_chars("PWD TIN: ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                    //     $print_str .= "\r\n".$this->append_chars("OSCA ID No.: ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                    // }
                                }elseif($dcs['disc_code'] == 'PWDISC'){
                                    $print_str .= "\r\n".$this->append_chars("PWD TIN: ".$dcs['code'],"right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("OSCA ID No.: ".$dcs['name'],"right",PAPER_TOTAL_COL_1," ");

                                }
                                // elseif($dcs['disc_code'] == 'D1018'){
                                //     $print_str .= "\r\n".$this->append_chars("Name: ".$dcs['name'],"right",PAPER_TOTAL_COL_1," ");
                                //     $print_str .= "\r\n".$this->append_chars("Address: ","right",PAPER_TOTAL_COL_1," ");
                                //     $print_str .= "\r\n".$this->append_chars("VIP ID NO: ".$dcs['code'],"right",PAPER_TOTAL_COL_1," ");

                                // }elseif($dcs['disc_code'] == 'D1006'){
                                //     $print_str .= "\r\n".$this->append_chars("Name: ".$dcs['name'],"right",PAPER_TOTAL_COL_1," ");
                                //     $print_str .= "\r\n".$this->append_chars("National Athlete ID No.: ".$dcs['code'],"right",PAPER_TOTAL_COL_1," ");
                                // }elseif($dcs['disc_code'] == 'DIPLOMAT'){
                                //     $print_str .= "\r\n".$this->append_chars("Name: ".$dcs['name'],"right",PAPER_TOTAL_COL_1," ");
                                //     $print_str .= "\r\n".$this->append_chars("Address: ","right",PAPER_TOTAL_COL_1," ");
                                //     $print_str .= "\r\n".$this->append_chars("TIN: ","right",PAPER_TOTAL_COL_1," ");
                                //     $print_str .= "\r\n".$this->append_chars("Diplomat ID No: ".$dcs['code'],"right",PAPER_TOTAL_COL_1," ");
                                // }else{
                                //     $print_str .= "\r\n".$this->append_chars("Name: ".$dcs['name'],"right",PAPER_TOTAL_COL_1," ");
                                //     $print_str .= "\r\n".$this->append_chars("ID NO.: ".$dcs['code'],"right",PAPER_TOTAL_COL_1," ");
                                // }
                            }
                        }else{
                            foreach ($discounts as $dcs_ci => $dcs) {
                                if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                                    foreach ($dcs['persons'] as $code => $dcp) {
                                        // ."\r\n"
                                        // ."\r\n"
                                        if($dcs_ci == 'SNDISC'){
                                            $print_str .= "\r\n".$this->append_chars("Senior Citizen TIN: ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                            $print_str .= "\r\n".$this->append_chars("OSCA ID No.: ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                        }
                                        if($dcs_ci == 'PWDISC'){
                                            $print_str .= "\r\n".$this->append_chars("PWD TIN: ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                            $print_str .= "\r\n".$this->append_chars("OSCA ID No.: ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                        }

                                       

                                    }
                                }
                                // elseif($dcs_ci == 'D1018'){
                                //              $print_str .= "\r\n".$this->append_chars("Name: ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                //             $print_str .= "\r\n".$this->append_chars("Address: ","right",PAPER_TOTAL_COL_1," ");
                                //             $print_str .= "\r\n".$this->append_chars("VIP ID NO: ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");

                                // }elseif($dcs_ci == 'D1006'){
                                //             $print_str .= "\r\n".$this->append_chars("Name: ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                //             $print_str .= "\r\n".$this->append_chars("National Athlete ID No.: ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                         

                                // }elseif($dcs['disc_code'] == 'DIPLOMAT'){
                                //     $print_str .= "\r\n".$this->append_chars("Name: ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                //     $print_str .= "\r\n".$this->append_chars("Address: ","right",PAPER_TOTAL_COL_1," ");
                                //     $print_str .= "\r\n".$this->append_chars("TIN: ","right",PAPER_TOTAL_COL_1," ");
                                //     $print_str .= "\r\n".$this->append_chars("Diplomat ID No: ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                // }else{
                                //     $print_str .= "\r\n".$this->append_chars("Name: ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                //     $print_str .= "\r\n".$this->append_chars("ID NO.: ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                // }

                            }
                        }


                        // if($zero_rated_amt > 0){
                        //         $print_str .= "\r\n".$this->append_chars("Name: ".$zname,"right",PAPER_TOTAL_COL_1," ");
                        //         $print_str .= "\r\n".$this->append_chars("Address: ","right",PAPER_TOTAL_COL_1," ");
                        //         $print_str .= "\r\n".$this->append_chars("TIN: ","right",PAPER_TOTAL_COL_1," ");
                        //         $print_str .= "\r\n".$this->append_chars("Diplomat ID No: ".$zcard,"right",PAPER_TOTAL_COL_1," ");
                        // }

                        if(isset($py_ref) && !empty($py_ref)){
                            $print_str .= "\r\n".$this->append_chars("Name: ","right",PAPER_TOTAL_COL_1," ");
                            $print_str .= "\r\n".$this->append_chars("Address: ","right",PAPER_TOTAL_COL_1," ");
                            $print_str .= "\r\n".$this->append_chars("TIN: ","right",PAPER_TOTAL_COL_1," ");
                            $print_str .= "\r\n".$this->append_chars("GC Serial No: ".$py_ref,"right",PAPER_TOTAL_COL_1," ");

                        }
                        // $print_str .= PAPER_LINE."\r\n";
                        if($order['inactive'] == 0){
                            $print_str .= "\r\n";
                            // if(PRINT_VERSION == 'V1'){
                            //     $print_str .= $this->append_chars('Name:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                            //            // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                            //     $print_str .= $this->append_chars('Company:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                            //                // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                            //     $print_str .= $this->append_chars('Address:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                            //                // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                            //     $print_str .= $this->append_chars('TIN:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                            //     $print_str .= $this->append_chars('Signature:',"left",PAPER_RECEIPT_TEXT," ")
                            //            .  $this->append_chars('____________________',"left",PAPER_RECEIPT_INPUT,"_")."\r\n";
                            // }else{
                            //     $print_str .= $this->append_chars('Name:',"left",PAPER_RECEIPT_TEXT," ")
                            //                .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                            //     $print_str .= $this->append_chars('Company:',"left",PAPER_RECEIPT_TEXT," ")
                            //                .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                            //     $print_str .= $this->append_chars('Address:',"left",PAPER_RECEIPT_TEXT," ")
                            //                .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                            //     $print_str .= $this->append_chars('TIN:',"left",PAPER_RECEIPT_TEXT," ")
                            //                .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                            //     $print_str .= $this->append_chars('Signature:',"left",PAPER_RECEIPT_TEXT," ")
                            //                .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                            // }


                           
                                       // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n";
                            // $print_str .= "\r\n";
                            // $print_str .= "\r\n";
                            // $print_str .= PAPER_LINE."\r\n";

                            // if($order['inactive'] == 0){
                            //     $print_str .= $rec_footer;
                            // }  
                            // $print_str .= PAPER_LINE."\r\n";
                           
                            // $print_str .= $this->align_center('This Invoice/Receipt',PAPER_WIDTH," ")."\r\n";
                            // $print_str .= $this->align_center('Shall be valid',PAPER_WIDTH," ")."\r\n";
                            // $print_str .= $this->align_center('Five(5) Years from the date of',PAPER_WIDTH," ")."\r\n";
                            // $print_str .= $this->align_center('The Permit to use.',PAPER_WIDTH," ")."\r\n";



                            // if($branch['pos_footer'] != ""){
                            //     // $print_str .= PAPER_LINE."\r\n";
                            //     $print_str .= "\r\n";
                            //     $wrap = str_replace ("<br>","\r\n", $branch['pos_footer'] );
                            //     $exp = explode("\r\n", $wrap);
                            //     foreach ($exp as $v) {
                            //         $wrap2 = wordwrap($v,35,"|#|");
                            //         $exp2 = explode("|#|", $wrap2);  
                            //         foreach ($exp2 as $v2) {
                            //             $print_str .= $this->align_center($v2,PAPER_WIDTH," ")."\r\n";
                            //         }
                            //     }
                            // }
                        }

                    }

                  
                    if (!empty($order['ref']) && $order['inactive'] == 0) {
                        // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                        $print_str .= "\r\n\r\n".$this->append_chars("_________________________________","right",PAPER_TOTAL_COL_1," ");
                        $print_str .= "\r\n".$this->append_chars("Customer Signature Over Printed Name","right",PAPER_TOTAL_COL_1," ");
                        // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                        $print_str .= "\r\n";
                    }
                    $print_str .="\r\n".$this->align_center("THIS INVOICE/RECEIPT WILL BE VALID FOR FIVE(5) YEARS FROM THE DATE OF THE PERMIT TO USE",PAPER_WIDTH," ")."\r\n";
                        // $print_str .= "\r\n".$this->append_chars("THIS INVOICE/RECEIPT WILL BE VALID FOR","right",PAPER_TOTAL_COL_1," ");
                        // $print_str .= "\r\n".$this->append_chars("FIVE(5) YEARS FROM THE DATE OF THE PERMIT","right",PAPER_TOTAL_COL_1," ");
                        //  $print_str .= "\r\n".$this->append_chars("TO USE","right",PAPER_TOTAL_COL_1," ");
                
                } 

                 
                
                #CONDITION TO NA PINADAGDAG NG TAGAYTAY - FOR SENIOR CITEZEN VIEW VAT PLUS DISCOUNT
                // if(count($discounts) >0){
                //     if(count($dcs['persons']) > 0){
                //         $print_str .= $this->append_chars(ucwords("Less VAT (12%)"),"right",28," ").$this->append_chars("(".number_format($pre_total - $no_tax_amt,2).")","left",10," ")."\r\n";
                //     }
                // }
                // else{
                //     if($tax > 0){
                //         foreach ($tax as $tx) {
                //            $print_str .= $this->append_chars($tx['name']."(".$tx['rate']."%)","right",28," ").$this->append_chars(number_format($tx['amount'],2),"left",10," ")."\r\n";
                //         }
                //     }
                // }


                #CONDITION TO NA PARA SA TAGUEGARAO
                // if($tax > 0){
                //     foreach ($tax as $tx) {
                //        $print_str .= $this->append_chars($tx['name']."(".$tx['rate']."%)","right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format(abs($tx['amount']),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                //     }
                // }
                // if(count($local_tax) > 0){
                //     $local_tax_amt = 0;
                //     foreach ($local_tax as $lt_id => $lt) {
                //         $local_tax_amt += $lt['amount'];
                //     }
                //     $print_str .= $this->append_chars(ucwords("LOCAL TAX"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format($local_tax_amt,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                // }
                // if(count($discounts) >0){
                //     $hasSMPWD = false;
                //     if(count($dcs['persons']) > 0){
                //         $print_str .= "\r\n";
                //         // $print_str .= PAPER_LINE."\r\n";
                //         $print_str .= "          Discount Details"."\r\n";
                //         // $print_str .= PAPER_LINE."\r\n";

                //         foreach ($discounts as $dcs_ci => $dcs) {
                //             foreach ($dcs['persons'] as $code => $dcp) {
                //                 $discRateTxt = " (".$dcp['disc_rate']."%)";
                //                 if($dcs['fix'] == 1){
                //                     $discRateTxt = " (".$dcp['disc_rate'].")";
                //                 }
                //                 $dcAmt = $dcp['amount'];
                //                 // if(MALL_ENABLED && MALL == 'megamall'){
                //                 //     if($dcs_ci == PWDDISC){
                //                 //         $dcAmt = $dcAmt / 1.12; 
                //                 //         $hasSMPWD = true;      
                //                 //     }
                //                 // }
                //                 if(KERMIT){
                //                     $print_str .= $this->append_chars($dcs_ci.$discRateTxt,"right",PAPER_TOTAL_COL_1," ").$this->append_chars('P'.num($dcAmt),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                //                     $print_str .= "\r\n".$this->append_chars($dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                //                     $print_str .= "\r\n".$this->append_chars($dcp['code'],"right",PAPER_TOTAL_COL_1," ")."\r\n";
                //                 }else{
                //                      $print_str .= $this->append_chars($dcs_ci.$discRateTxt,"right",PAPER_TOTAL_COL_1," ").$this->append_chars('P'.num($dcAmt),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                //                 }
                //             }
                //         }
                //         // $print_str .= "\r\n";
                //         // echo $pre_total." - ".$order['amount']." - ".$total_charges." - ".$total_discounts; die();
                //         $less_vat = round(($pre_total - ($order['amount'] - $total_charges + $local_tax_amt ) ) - $total_discounts,2);
                //         // $less_vat = ($pre_total - ($order['amount'] - num($total_charges + $local_tax_amt) ) ) - $total_discounts;

                //         // $print_str .= $this->append_chars(ucwords("Total Discount"),"right",28," ").$this->append_chars(number_format($total_discounts,2),"left",10," ")."\r\n";
                //         $print_str .= $this->append_chars(ucwords("Total Less VAT"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format( $less_vat,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                //         if(MALL_ENABLED && MALL == 'megamall' && $hasSMPWD){
                //             $print_str .= $this->append_chars(ucwords("Total Amount Discounted"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format( ($total_discounts_sm + $less_vat),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                //         }
                //         else{
                //             $print_str .= $this->append_chars(ucwords("Total Amount Discounted"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format( ($total_discounts + $less_vat),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                //         }
                //     }
                // }

                // if(count($charges) > 0){
                //     $print_str .= "\r\n";
                //     // $print_str .= PAPER_LINE."\r\n";
                //     // $print_str .= "              CHARGES"."\r\n";
                //     // $print_str .= PAPER_LINE."\r\n";
                //     foreach ($charges as $charge_id => $opt) {
                //         $charge_amount = $opt['total_amount'];
                //         // if($opt['absolute'] == 0){
                //         //     $charge_amount = ($opt['amount'] / 100) * ($order['amount'] - $vat);
                //         // }
                //         $print_str .= $this->append_chars($opt['name'],"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format($charge_amount,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                //     }
                //     // $print_str .= PAPER_LINE."\r\n";
                // }

                if (!empty($payments)) {

                    // $print_str .= "\r\n";
                    // // $print_str .= "\r\n"."======================================"."\r\n";
                    //   if(PRINT_VERSION=="V2"){
                    //         $print_str .= "STARTCUT==============================ENDCUT";
                    //     }
                    // $print_str .= $this->append_chars("Amount due","right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($order['amount'],2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    //   if(PRINT_VERSION=="V2"){
                    //       $print_str .= "STARTCUT==============================ENDCUT";
                    //    }
                    // $pay_total = 0;
                    // $gft_ctr = 0;
                    // $nor_ctr = 0;
                  
                    // foreach ($payments as $payment_id => $opt) {

                    //     $print_str .= $this->append_chars(ucwords($opt['payment_type']),"right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($opt['amount'],2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                        
                    //     if($opt['payment_type'] == 'check'){
                    //         $print_str .= $this->append_chars("     Check # ".$opt['reference'],"right",PAPER_WIDTH," ")."\r\n";
                    //     }else{
                    //         if (!empty($opt['reference']) && $opt['payment_type'] != 'deposit') {
                    //             $print_str .= $this->append_chars("     Reference ".$opt['reference'],"right",PAPER_WIDTH," ")."\r\n";
                    //         }
                    //     }

                    //     if($opt['payment_type'] == 'foodpanda'){
                    //         if (!empty($opt['approval_code']))
                    //                 $print_str .= $this->append_chars("  Order Code: ".$opt['approval_code'],"right",PAPER_WIDTH," ")."\r\n";
                    //     }else if($opt['payment_type'] == 'check'){
                    //         $print_str .= $this->append_chars("     Bank: ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                    //     }else if($opt['payment_type'] == 'picc'){
                    //         $print_str .= $this->append_chars("     Name: ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                    //     }else{
                    //         if (!empty($opt['card_number'])) {
                    //             if (!empty($opt['card_type'])) {
                    //                 $print_str .= $this->append_chars("  Card Type: ".$opt['card_type'],"right",PAPER_WIDTH," ")."\r\n";
                    //             }
                    //             $print_str .= $this->append_chars("  Card #: ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                    //             if (!empty($opt['approval_code']))
                    //                 $print_str .= $this->append_chars("  Approval #: ".$opt['approval_code'],"right",PAPER_WIDTH," ")."\r\n";
                    //         }
                    //     }
                    //     $pay_total += $opt['amount'];
                    //     if($opt['payment_type'] == 'gc'){
                    //         $gft_ctr++;
                    //     }
                    //     else
                    //         $nor_ctr++;


                    //     if($opt['payment_type'] == 'cash' && $is_printed <= 0){
                    //         $open_drawer = true;
                    //     }

                        
                    // }
                    // if($gft_ctr == 1 && $nor_ctr == 0)
                    //     $print_str .= $this->append_chars("Change","right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format(0,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    // else
                    //     $print_str .= $this->append_chars("Change","right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format(abs($pay_total - $order['amount']),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    // $print_str .= PAPER_LINE."\r\n";

                    // if ($order['ref'] != null && $order['inactive'] == 1) {
                    //     // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                    //     $print_str .= "\r\n".$this->append_chars("_________________________________","right",PAPER_TOTAL_COL_1," ");
                    //     $print_str .= "\r\n".$this->append_chars("  Customer's Name & Signature","right",PAPER_TOTAL_COL_1," ");
                    //     // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                    //     $print_str .= "\r\n";
                    // }


                    // if ($include_footer) {
                    //     $rec_footer = "";
                    //     if($branch['rec_footer'] != ""){
                    //         $wrap = str_replace ("<br>","\r\n", $branch['rec_footer'] );
                    //         $exp = explode("\r\n", $wrap);
                    //         foreach ($exp as $v) {
                    //             $wrap2 = wordwrap($v,35,"|#|");
                    //             $exp2 = explode("|#|", $wrap2);  
                    //             foreach ($exp2 as $v2) {
                    //                 $rec_footer .= $this->align_center($v2,PAPER_WIDTH," ")."\r\n";
                    //             }
                    //         }                        
                    //     }
                    //     // if($order['inactive'] == 0){
                    //     //     $print_str .= $rec_footer;
                    //     // }    
                    //         $print_str .= "\r\n";
                    //         $print_str .= $this->align_center("POS Vendor Details",PAPER_WIDTH," ")."\r\n";
                    //         // $print_str .= PAPER_LINE."\r\n";
                    //         $print_str .= $this->align_center("PointOne Integrated Tech., Inc.",PAPER_WIDTH," ")."\r\n";
                    //         $print_str .= $this->align_center("1409 Prestige Tower",PAPER_WIDTH," ")."\r\n";
                    //         $print_str .= $this->align_center("Ortigas Center, Pasig City",PAPER_WIDTH," ")."\r\n";
                    //         $print_str .= $this->append_chars('POS Version:',"right",PAPER_RD_COL_3," ")
                    //                    .  $this->append_chars('iPos ver 1.0',"left",PAPER_DET_SUBCOL," ")."\r\n";
                    //         $print_str .= $this->append_chars('TIN:',"right",PAPER_RD_COL_3," ")
                    //                    .  $this->append_chars('008543444-000',"left",PAPER_DET_SUBCOL," ")."\r\n";
                    //         $print_str .= $this->append_chars('Date Issued:',"right",PAPER_RD_COL_3," ")
                    //                    .  $this->append_chars('December 22, 2014',"left",PAPER_DET_SUBCOL," ")."\r\n";
                    //                    // .  $this->append_chars(date2Word($order['datetime']),"right",PAPER_TOTAL_COL_2," ")."\r\n";
                    //         $print_str .= $this->append_chars('Valid Until:',"right",PAPER_RD_COL_3," ")
                    //                    .  $this->append_chars(date2Word('December 22, 2025'),"left",PAPER_DET_SUBCOL," ")."\r\n";
                    //                    // .  $this->append_chars(date2Word( date('Y-m-d',strtotime($order['datetime'].' +5 year')) ),"right",PAPER_TOTAL_COL_2," ")."\r\n";
                    //         if($branch['accrdn'] != ""){
                    //             $print_str .= $this->append_chars('ACCRDN:',"right",PAPER_RD_COL_3," ")
                    //                    .  $this->append_chars($branch['accrdn'],"left",PAPER_DET_SUBCOL," ")."\r\n";
                    //             // $print_str .= $this->align_center('ACCRDN:',PAPER_WIDTH," ")."\r\n".$this->align_center($branch['accrdn'],PAPER_WIDTH," ")."\r\n";
                    //         }

                    //     if($branch['contact_no'] != ""){
                    //         $print_str .= $this->align_center("For feedback, please call us at",PAPER_WIDTH," ")."\r\n"
                    //                      .$this->align_center($branch['contact_no'],PAPER_WIDTH," ")."\r\n";
                    //     }
                    //     if($branch['email'] != ""){
                    //         $print_str .= $this->align_center("Or Email us at",PAPER_WIDTH," ")."\r\n" 
                    //                    .$this->align_center($branch['email'],PAPER_WIDTH," ")."\r\n";
                    //     }
                    //     if($branch['website'] != ""){
                    //         $print_str .= $this->align_center("Please visit us at",PAPER_WIDTH," ")."\r\n"
                    //                      .$this->align_center($branch['website'],PAPER_WIDTH," ")."\r\n";
                    //     }
                    //     $print_str .= PAPER_LINE."\r\n";
                    //     if($order['inactive'] == 0){
                    //         $print_str .= "\r\n";
                    //         if(PRINT_VERSION == 'V1'){
                    //             $print_str .= $this->append_chars('Name:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                    //                    // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                    //             $print_str .= $this->append_chars('Company:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                    //                        // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                    //             $print_str .= $this->append_chars('Address:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                    //                        // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                    //             $print_str .= $this->append_chars('TIN:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                    //             $print_str .= $this->append_chars('Signature:',"left",PAPER_RECEIPT_TEXT," ")
                    //                    .  $this->append_chars('____________________',"left",PAPER_RECEIPT_INPUT,"_")."\r\n";
                    //         }else{
                    //             $print_str .= $this->append_chars('Name:',"left",PAPER_RECEIPT_TEXT," ")
                    //                        .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                    //             $print_str .= $this->append_chars('Company:',"left",PAPER_RECEIPT_TEXT," ")
                    //                        .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                    //             $print_str .= $this->append_chars('Address:',"left",PAPER_RECEIPT_TEXT," ")
                    //                        .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                    //             $print_str .= $this->append_chars('TIN:',"left",PAPER_RECEIPT_TEXT," ")
                    //                        .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                    //             $print_str .= $this->append_chars('Signature:',"left",PAPER_RECEIPT_TEXT," ")
                    //                        .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                    //         }


                           
                    //                    // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n";
                    //         // $print_str .= "\r\n";
                    //         $print_str .= "\r\n";
                    //         $print_str .= PAPER_LINE."\r\n";

                    //         if($order['inactive'] == 0){
                    //             $print_str .= $rec_footer;
                    //         }  
                    //         // $print_str .= PAPER_LINE."\r\n";
                           
                    //         // $print_str .= $this->align_center('This Invoice/Receipt',PAPER_WIDTH," ")."\r\n";
                    //         // $print_str .= $this->align_center('Shall be valid',PAPER_WIDTH," ")."\r\n";
                    //         // $print_str .= $this->align_center('Five(5) Years from the date of',PAPER_WIDTH," ")."\r\n";
                    //         // $print_str .= $this->align_center('The Permit to use.',PAPER_WIDTH," ")."\r\n";



                    //         // if($branch['pos_footer'] != ""){
                    //         //     // $print_str .= PAPER_LINE."\r\n";
                    //         //     $print_str .= "\r\n";
                    //         //     $wrap = str_replace ("<br>","\r\n", $branch['pos_footer'] );
                    //         //     $exp = explode("\r\n", $wrap);
                    //         //     foreach ($exp as $v) {
                    //         //         $wrap2 = wordwrap($v,35,"|#|");
                    //         //         $exp2 = explode("|#|", $wrap2);  
                    //         //         foreach ($exp2 as $v2) {
                    //         //             $print_str .= $this->align_center($v2,PAPER_WIDTH," ")."\r\n";
                    //         //         }
                    //         //     }
                    //         // }
                    //     }

                    // }
                } else {
                    $is_billing = true;
                    $print_str .= "\r\n".$this->append_chars("","right",PAPER_WIDTH,"=");
                    if(PRINT_VERSION == 'V1'){
                        $print_str .= "\r\n\r\n".$this->append_chars("Billing Amount","right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($order['amount'],2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    }
                    if(is_array($splits)){
                        $print_str .= $this->append_chars("Split Amount by ".$splits['by'],"right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($splits['total']/$splt,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    }

                    if($per_item_disc){
                        //for senior deaitls with signature forbiliing
                        foreach ($discounts as $dcs_ci => $dcs) {
                            if($dcs['disc_code'] == 'SNDISC' || $dcs['disc_code'] == 'PWDISC'){
                                // $print_str .= PAPER_LINE."\r\n";
                                $print_str .= "\r\n";
                                $print_str .= $this->align_center("OSCA/PWD Details",PAPER_WIDTH," ")."\r\n";
                                // $print_str .= PAPER_LINE."\r\n";
                                // $print_str .= $this->align_center(PAPER_LINE,42," ");
                                break;
                            }
                        }
                        foreach ($discounts as $dcs_ci => $dcs) {
                            if($dcs['disc_code'] == 'SNDISC' || $dcs['disc_code'] == 'PWDISC'){
                                // foreach ($dcs['persons'] as $code => $dcp) {
                                    // ."\r\n"
                                    // ."\r\n"
                                    $print_str .= "\r\n".$this->append_chars("ID NO      : ".$dcs['code'],"right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("NAME       : ".$dcs['name'],"right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("ADDRESS    : ","right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("SIGNATURE  : ","right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("             ____________________","right",PAPER_TOTAL_COL_1," ")."\r\n";
                                    // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                                // }
                            }
                        }
                    }else{
                        //for senior deaitls with signature forbiliing
                        foreach ($discounts as $dcs_ci => $dcs) {
                            if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                                // $print_str .= PAPER_LINE."\r\n";
                                $print_str .= "\r\n";
                                $print_str .= $this->align_center("OSCA/PWD Details",PAPER_WIDTH," ")."\r\n";
                                // $print_str .= PAPER_LINE."\r\n";
                                // $print_str .= $this->align_center(PAPER_LINE,42," ");
                                break;
                            }
                        }
                        foreach ($discounts as $dcs_ci => $dcs) {
                            if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                                foreach ($dcs['persons'] as $code => $dcp) {
                                    // ."\r\n"
                                    // ."\r\n"
                                    $print_str .= "\r\n".$this->append_chars("ID NO      : ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("NAME       : ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("ADDRESS    : ","right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("SIGNATURE  : ","right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("             ____________________","right",PAPER_TOTAL_COL_1," ")."\r\n";
                                    // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                                }
                            }
                        }
                    }


                    if ($include_footer) {
                        // $print_str .= "\r\n\r\n";
                        if($branch['contact_no'] != ""){
                            $print_str .= $this->align_center("For feedback, please call us at",PAPER_WIDTH," ")."\r\n"
                                         .$this->align_center($branch['contact_no'],PAPER_WIDTH," ")."\r\n";
                        }
                        if($branch['email'] != ""){
                            $print_str .= $this->align_center("Or Email us at",PAPER_WIDTH," ")."\r\n" 
                                       .$this->align_center($branch['email'],PAPER_WIDTH," ")."\r\n";
                        }
                        if($branch['website'] != "")
                            $print_str .= $this->align_center("Please visit us at \r\n".$branch['website'],PAPER_WIDTH," ")."\r\n";
                    }

                }

                if (!empty($payments)) {
                    // $print_str .= "\r\n";
                    // foreach ($discounts as $dcs_ci => $dcs) {
                    //     if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                    //         // $print_str .= PAPER_LINE."\r\n";
                    //         $print_str .= $this->align_center("OSCA/PWD Details",PAPER_WIDTH," ")."\r\n";
                    //         // $print_str .= PAPER_LINE."\r\n";
                    //         // $print_str .= $this->align_center(PAPER_LINE,42," ");
                    //         break;
                    //     }
                    // }
                    // foreach ($discounts as $dcs_ci => $dcs) {
                    //     if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                    //         foreach ($dcs['persons'] as $code => $dcp) {
                    //             // ."\r\n"
                    //             // ."\r\n"
                    //             $print_str .= "\r\n".$this->append_chars("ID NO      : ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                    //             $print_str .= "\r\n".$this->append_chars("NAME       : ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                    //             $print_str .= "\r\n".$this->append_chars("ADDRESS    : ","right",PAPER_TOTAL_COL_1," ");
                    //             $print_str .= "\r\n".$this->append_chars("SIGNATURE  : ","right",PAPER_TOTAL_COL_1," ");
                    //             $print_str .= "\r\n".$this->append_chars("             ____________________","right",PAPER_TOTAL_COL_1," ")."\r\n";
                    //             // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                    //         }
                    //     }
                    // }
                    // foreach ($discounts as $dcs_ci => $dcs) {
                    //     if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                    //         // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                    //         break;
                    //     }
                    // }

                    // if($zero_rated_amt != 0){
                    //     $print_str .= $this->align_center("Diplomat Details",PAPER_WIDTH," ")."\r\n";
                    //     foreach ($zero_rated as $k=>$v) {
                    //         // $zero_rated_amt += $v['amount'];
                    //         $print_str .= "\r\n".$this->append_chars("ID NO      : ".$v['card_no'],"right",PAPER_TOTAL_COL_1," ");
                    //         $print_str .= "\r\n".$this->append_chars("NAME       : ".$v['name'],"right",PAPER_TOTAL_COL_1," ");
                    //         $print_str .= "\r\n".$this->append_chars("ADDRESS    : ","right",PAPER_TOTAL_COL_1," ");
                    //         $print_str .= "\r\n".$this->append_chars("SIGNATURE  : ","right",PAPER_TOTAL_COL_1," ");
                    //         $print_str .= "\r\n".$this->append_chars("             ____________________","right",PAPER_TOTAL_COL_1," ")."\r\n";   
                    //     }

                    // }

                }

                if($approved_by != null){
                    // $app = $this->site_model->get_user_details($approved_by);
                    // $approver = $app->fname." ".$app->mname." ".$app->lname." ".$app->suffix;
                    // // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                    // $print_str .= "\r\n".$this->append_chars("Approved By : ".$approver,"right",PAPER_TOTAL_COL_1," ");
                    // $print_str .= "\r\n".$this->append_chars("             ____________________","right",PAPER_TOTAL_COL_1," ")."\r\n";
                    // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                }

            }
            //end of showing for cancelled trans



            if ($return_print_str) {
                return $print_str;
            }
            // echo "<pre>".$print_str."</pre>";
            // return false;
            $js_rcps = '';

            if(PRINT_VERSION && PRINT_VERSION == 'V2'){

                if(isset($order['ref'])){
                    $order_ref = $order['ref'];
                }else{
                    $order_ref = "";
                }
                // if(BILLING_PRINTER){
                //     if(BILLING_PRINTER != "DEFAULT"){
                // echo $print_str;die();
                         $this->do_print_receipt_v2($print_str,$order['amount'],$is_billing,$open_drawer,$order_ref,$branch['name']);  
                //     }
                // }

                if($openDrawer){
                    $pet = $this->cashier_model->get_pos_settings();
                    $open_drawer_printer = $pet->open_drawer_printer;
                    // if($open_drawer_printer != ""){
                    //     $this->do_print_receipt_v2($print_str);  
                    //     // $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".$open_drawer_printer."\"  ";   
                    // }            
                }
            }else if(PRINT_VERSION && PRINT_VERSION == 'V3'){
                $js_rcp = $this->html_print($print_str,true, $sales_id);

                $js_rcps[] = array('printer'=>BILLING_PRINTER,'value'=>$js_rcp);

                // echo $js_rcp;
            }else{
                // $this->do_print_os($print_str,$printer['printer'],$printer['no']);  

                $filename = "sales.txt";
                $fp = fopen($filename, "w+");
                fwrite($fp,$print_str);
                fclose($fp);

                $batfile = "print.bat";
                $fh1 = fopen($batfile,'w+');
                $root = dirname(BASEPATH);
                $battxt ="NOTEPAD /P \"".realpath($root."/".$filename)."\"";

                if(BILLING_PRINTER){
                    if(BILLING_PRINTER != "DEFAULT"){
                        $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".BILLING_PRINTER."\"  ";   
                    }
                }

                if($openDrawer){
                    $pet = $this->cashier_model->get_pos_settings();
                    $open_drawer_printer = $pet->open_drawer_printer;
                    if($open_drawer_printer != ""){
                        $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".$open_drawer_printer."\"  ";   
                    }            
                }

                fwrite($fh1, $battxt);
                fclose($fh1);
                session_write_close();
                // exec($filename);
                for ($i=0; $i < $no_prints; $i++) { 
                    exec($batfile);
                }
                session_start();
                unlink($filename);
                unlink($batfile);
            }

            if($order_slip_prints > 0){
                if(PRINT_VERSION && PRINT_VERSION == 'V3'){
                    $print_str = $this->print_order_slip($header_print_str,$post_details,$order_slip_prints);
                    $js_rcp = $this->html_print($print_str);
                    $js_rcps[] = array('printer'=>BILLING_PRINTER,'value'=>$js_rcp);
                }else{
                    $this->print_order_slip($header_print_str,$post_details,$order_slip_prints);
                }
                            
            }


            if ($asJson)
                echo json_encode(array('msg'=>'Receipt # '.(!empty($order['ref']) ? $order['ref'] : $sales_id).' has been printed','js_rcps'=>$js_rcps,'ord_slip'=>$order_slip_prints));
            else
                return array('msg'=>'Receipt # '.(!empty($order['ref']) ? $order['ref'] : $sales_id).' has been printed','js_rcps'=>$js_rcps,'ord_slip'=>$order_slip_prints);
        }
        public function print_sales_receipt($sales_id=null,$asJson=true,$return_print_str=false,$add_reprinted=true,$splits=null,$include_footer=true,$no_prints=1,$order_slip_prints=0,$approved_by=null,$main_db=false,$openDrawer=false){
            // if(LOCALSYNC){
            //     $this->load->model('core/sync_model');
            // }
            $splt = 1;
            if(is_array($splits)){
                $splt = $splits['by'];
            }

            if($main_db){
                $this->db = $this->load->database('main', TRUE);
            }
            $branch = $this->get_branch_details(false);
            $return = $this->get_order(false,$sales_id);
            $order = $return['order'];
            $details = $return['details'];
            $payments = $return['payments'];
            $discounts = $return['discounts'];
            $local_tax = $return['local_tax'];
            $charges = $return['charges'];
            $tax = $return['taxes'];
            $no_tax = $return['no_tax'];
            $zero_rated = $return['zero_rated'];
            $totalsss = $this->total_trans(false,$details,$discounts);
            $discs = $totalsss['discs'];
            $print_str = "\r\n";

            $wrap = wordwrap($branch['name'],PAPER_WIDTH,"|#|");
            $exp = explode("|#|", $wrap);
            foreach ($exp as $v) {
                $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
            }

            // $wrap = wordwrap($branch['desc'],PAPER_WIDTH,"|#|");
            // $exp = explode("|#|", $wrap);
            // foreach ($exp as $v) {
            //     $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
            // }

            $wrap = wordwrap($branch['address'],PAPER_WIDTH,"|#|");
            $exp = explode("|#|", $wrap);
            foreach ($exp as $v) {
                $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
            }

            if($branch['tin'] != ""){
                // $print_str .= $this->append_chars('VAT REG TIN:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['tin'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
                $print_str .= $this->append_chars('VAT REG TIN:'.$branch['tin'],"right",PAPER_WIDTH," ")."\r\n";
            }
            // if($branch['accrdn'] != ""){
            //     $print_str .= $this->append_chars('ACCRDN:',"right",PAPER_DET_SUBCOL," ").$this->append_chars($branch['accrdn'],"right",PAPER_TOTAL_COL_1," ")."\r\n";
            // }
            if($branch['machine_no'] != ""){
                $print_str .= $this->append_chars('MIN:'.$branch['machine_no'],"right",PAPER_WIDTH," ")."\r\n";
                // $print_str .= $this->append_chars('MIN:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['machine_no'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
            }
            if($branch['permit_no'] != ""){
                $print_str .= $this->append_chars('PERMIT:'.$branch['permit_no'],"right",PAPER_WIDTH," ")."\r\n";
                // $print_str .= $this->append_chars('PERMIT:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['permit_no'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
            }
            if($branch['serial'] != ""){
                $print_str .= $this->append_chars('SN:'.$branch['serial'],"right",PAPER_WIDTH," ")."\r\n";
                // $print_str .= $this->append_chars('SN:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['serial'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
            }
            // $print_str .= "\r\n";
            // if (!empty($order['void_ref']) || $order['inactive'] == 1) {
            if ($order['ref'] != null && $order['inactive'] == 1) {
                $print_str .= $this->align_center("***** VOIDED TRANSACTION *****",PAPER_WIDTH," ")."\r\n";
                $print_str .= $order['reason']."\r\n\r\n";
            }
            $cancelled = 0;
            if ($order['ref'] == null && $order['inactive'] == 1) {
                $print_str .= $this->align_center("***** CANCELLED TRANSACTION *****",PAPER_WIDTH," ")."\r\n";
                $print_str .= $order['reason']."\r\n\r\n";
                $cancelled = 1;
            }
            $header_print_str = $print_str;
            $header_print_str .= "\r\n";
            // $header_print_str .= PAPER_LINE."\r\n";
                if (!empty($payments)){
                    $header_print_str .= "Receipt # ".$order['ref']." - ".strtoupper($order['type'])."\r\n";
                        // $this->align_center("Receipt # ".$order['ref']." - ".strtoupper($order['type']),42," ")."\r\n";
                }
                else{
                    $header_print_str .= "Reference # ".$order['sales_id']." - ".strtoupper($order['type'])."\r\n";
                        // $this->align_center(strtoupper($order['type'])." # ".$order['sales_id'],42," ")."\r\n";
                }
            $header_print_str .= "\r\n";
            // $header_print_str .= PAPER_LINE."\r\n";

            // $print_str .= $this->align_center(date('Y-m-d H:i:s',strtotime($order['datetime']))." ".$order['terminal_name']." ".$order['name'],42," ")."\r\n";


            if($order['update_date']){
                $print_str .= $this->append_chars(ucwords($order['name']),"right",PAPER_RD_COL_MID," ").$this->append_chars(date('Y-m-d H:i:s',strtotime($order['update_date'])),"left",PAPER_TOTAL_COL_2," ")."\r\n"
                    ."Terminal ID : ".$order['terminal_code']."\r\n"
                    ."\r\n";
                    // .PAPER_LINE."\r\n";
            }else{
                $print_str .= $this->append_chars(ucwords($order['name']),"right",PAPER_RD_COL_MID," ").$this->append_chars(date('Y-m-d H:i:s',strtotime($order['datetime'])),"left",PAPER_TOTAL_COL_2," ")."\r\n"
                    ."Terminal ID : ".$order['terminal_code']."\r\n"
                    ."\r\n";
                    // .PAPER_LINE."\r\n";
                
            }

            if (!empty($payments)){
                $print_str .= "Receipt # ".$order['ref']." - ".strtoupper($order['type'])."\r\n";
                    // $this->align_center("Receipt # ".$order['ref']." - ".strtoupper($order['type']),42," ")."\r\n";
            }else if($order['type'] == "reservation"){
                $print_str .= "Reference # ".$order['ref_no']."\r\n";
                $print_str .= "Transaction # ".$order['sales_id']." - ".strtoupper($order['type'])."\r\n";

            }
            else{
                $print_str .= "Reference # ".$order['sales_id']." - ".strtoupper($order['type'])."\r\n";
                    // $this->align_center(strtoupper($order['type'])." # ".$order['sales_id'],42," ")."\r\n";
            }

            if($order['waiter_id'] != ""){
                $print_str .= "FS - ".ucwords(strtolower($order['waiter_name']))."\r\n";
            }

            $orddetails = "";
            if($order['table_id'] != "" || $order['table_id'] != 0)
                $orddetails .= $order['table_name']." ";

            if($order['guest'] != 0)
                $orddetails .= "Guest #".$order['guest'];

            if($order['serve_no'] != 0)
                $orddetails .= "Serve #".$order['serve_no'];

            if($orddetails != "")
                $print_str .= $this->align_center($orddetails,PAPER_WIDTH," ")."\r\n";
            

            $log_user = $this->session->userdata('user');
            if (!empty($payments)) {
                if($add_reprinted){
                    if($order['printed'] >= 1){
                        $print_str .= $this->align_center('[REPRINTED]',PAPER_WIDTH," ")."\r\n";
                        $this->cashier_model->update_trans_sales(array('printed'=>$order['printed']+1),$order['sales_id']);
                        $log_id = $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Reprinted Receipt on Sales Order #".$order['sales_id']." Reference #".$order['ref'],$order['sales_id']);
                        
                    }
                    else{
                        $this->cashier_model->update_trans_sales(array('printed'=>1,'billed'=>1),$order['sales_id']);
                     
                      
                        if(!$return_print_str){
                            $log_id =  $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Printed Receipt on Sales Order #".$order['sales_id']." Reference #".$order['ref'],$order['sales_id']);
                        }
                    }
                }
                else{
                    $this->cashier_model->update_trans_sales(array('printed'=>1,'billed'=>1),$order['sales_id']);
                    if(!$return_print_str){
                         $log_id = $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Printed Receipt on Sales Order #".$order['sales_id']." Reference #".$order['ref'],$order['sales_id']);
                    }
                }
            }
            else{
                $this->cashier_model->update_trans_sales(array('billed'=>1),$order['sales_id']);
                 $log_id =  $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Printed Billing on Sales Order #".$order['sales_id'],$order['sales_id']);
            }

            // if(LOCALSYNC){
            //     // if(isset($log_id)){
            //          // $this->sync_model->add_logs($log_id);
            //     // }

            //     $this->sync_model->update_trans_sales($sales_id);

            // }

            if($order['customer_id'] != ""){
                if($main_db){
                    $this->db = $this->load->database('default', TRUE);
                }
                $this->load->model('dine/customers_model');
                $customers = $this->customers_model->get_customer($order['customer_id']);
                if(count($customers) > 0){
                    $cust = $customers[0];
                    $name = strtolower($cust->fname." ".$cust->mname." ".$cust->lname." ".$cust->suffix);
                    $print_str .= "Customer : ".$this->append_chars(ucwords($name),"right",19," ")."\r\n";
                    if($order['type'] == 'delivery'){
                        $print_str .= "Contact  : ".$this->append_chars(ucwords($cust->phone),"right",19," ")."\r\n";
                        $address = strtolower($cust->street_no." ".$cust->street_address." ".$cust->city." ".$cust->region." ".$cust->zip);
                        $print_str .= "Address  : ".$this->append_chars(ucwords($address),"right",19," ")."\r\n";
                    }
                }

                if($main_db){
                    $this->db = $this->load->database('main', TRUE);
                }
            }
            if($order['type'] == 'delivery' && $order['customer_id'] != ""){
            
            }


            $print_str .= "\r\n";
            // $print_str .= $this->append_chars("","right",PAPER_WIDTH,"=")."\r\n";

            $pre_total = 0;
            $post_details = array();
            $post_details_nc = array();
            $discs_items = array();
            foreach ($discs as $disc) {
                if(isset($disc['items']))
                    $discs_items[$disc['type']] = $disc['items'];
            }

            // echo "<pre>",print_r($details),"</pre>";die();

            $dscTxt = array();
            foreach ($details as $line_id => $val) {
                foreach ($discs_items as $type => $dissss) {
                    if(in_array($line_id, $dissss)){
                        $qty = 1;
                        if(isset($dscTxt[$val['menu_id'].'_'.$val['price']][$type]['qty'])){
                            $qty = $dscTxt[$val['menu_id'].'_'.$val['price']][$type]['qty'] + 1;
                        }
                        $dscTxt[$val['menu_id'].'_'.$val['price']][$type] = array('txt' => '#'.$type,'qty' => $qty);
                    }
                }
            }

            foreach ($details as $line_id => $val) {

                if($val['is_takeout'] == 1){
                    if (!isset($post_details_nc[$val['menu_id'].'_'.$val['price']])) {
                        $dscsacs = array();
                        if(isset($dscTxt[$val['menu_id'].'_'.$val['price']])){
                            $dscsacs = $dscTxt[$val['menu_id'].'_'.$val['price']];
                        }
                        $remarksArr = array();
                        if($val['remarks'] != '')
                            $remarksArr = array($val['remarks']." x ".$val['qty']);
                        $post_details_nc[$val['menu_id'].'_'.$val['price']] = array(
                            'name' => $val['name'],
                            'code' => $val['code'],
                            'price' => $val['price'],
                            'no_tax' => $val['no_tax'],
                            'discount' => $val['discount'],
                            'qty' => $val['qty'],
                            'discounted'=>$dscsacs,
                            'remarks'=>$remarksArr,
                            'modifiers' => array()
                        );
                    } else {
                        if($val['remarks'] != "")
                            $post_details_nc[$val['menu_id'].'_'.$val['price']]['remarks'][]= $val['remarks']." x ".$val['qty'];
                        $post_details_nc[$val['menu_id'].'_'.$val['price']]['qty'] += $val['qty'];
                    }

                    if (empty($val['modifiers']))
                        continue;

                    $modifs = $val['modifiers'];
                    $n_modifiers = $post_details_nc[$val['menu_id'].'_'.$val['price']]['modifiers'];
                    foreach ($modifs as $vv) {
                        if (!isset($n_modifiers[$vv['id']])) {
                            $n_modifiers[$vv['id']] = array(
                                'name' => $vv['name'],
                                'price' => $vv['price'],
                                'qty' => $val['qty'],
                                'discount' => $vv['discount']
                            );
                        } else {
                            $n_modifiers[$vv['id']]['qty'] += $val['qty'];
                        }
                    }
                    $post_details_nc[$val['menu_id'].'_'.$val['price']]['modifiers'] = $n_modifiers;
                }else{
                    if (!isset($post_details[$val['menu_id'].'_'.$val['price']])) {
                        $dscsacs = array();
                        if(isset($dscTxt[$val['menu_id'].'_'.$val['price']])){
                            $dscsacs = $dscTxt[$val['menu_id'].'_'.$val['price']];
                        }
                        $remarksArr = array();
                        if($val['remarks'] != '')
                            $remarksArr = array($val['remarks']." x ".$val['qty']);
                        
                        $post_details[$val['menu_id'].'_'.$val['price']] = array(
                            'name' => $val['name'],
                            'code' => $val['code'],
                            'price' => $val['price'],
                            'no_tax' => $val['no_tax'],
                            'discount' => $val['discount'],
                            'qty' => $val['qty'],
                            'discounted'=>$dscsacs,
                            'remarks'=>$remarksArr,
                            'modifiers' => array()
                        );
                    } else {
                        if($val['remarks'] != "")
                            $post_details[$val['menu_id'].'_'.$val['price']]['remarks'][]= $val['remarks']." x ".$val['qty'];
                        $post_details[$val['menu_id'].'_'.$val['price']]['qty'] += $val['qty'];
                    }

                    if (empty($val['modifiers']))
                        continue;

                    $modifs = $val['modifiers'];
                    $n_modifiers = $post_details[$val['menu_id'].'_'.$val['price']]['modifiers'];
                    foreach ($modifs as $vv) {
                        if (!isset($n_modifiers[$vv['id']])) {
                            $n_modifiers[$vv['id']] = array(
                                'name' => $vv['name'],
                                'price' => $vv['price'],
                                'qty' => $val['qty'],
                                'discount' => $vv['discount']
                            );
                        } else {
                            $n_modifiers[$vv['id']]['qty'] += $val['qty'];
                        }
                    }
                    $post_details[$val['menu_id'].'_'.$val['price']]['modifiers'] = $n_modifiers;
                }

            }
            /* END NEW BLOCK */
            $tot_qty = 0;
            foreach ($post_details as $val) {
                $tot_qty += $val['qty'];
                $print_str .= $this->append_chars($val['qty'],"right",PAPER_DET_COL_1," ");

                $len = strlen($val['name']);

                if($val['qty'] == 1){
                    $lgth = 21;
                }else{
                    $lgth = 16;
                }

                if($len > $lgth){
                    $arr2 = str_split($val['name'], $lgth);
                    $counter = 1;
                    foreach($arr2 as $k => $vv){
                        if($counter == 1){
                            if ($val['qty'] == 1) {
                                $print_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").
                                    $this->append_chars(number_format($val['price']/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                            } else {
                                $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                    $this->append_chars(number_format(($val['price'] * $val['qty'])/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                            }
                        }else{
                            // if ($val['qty'] == 1) {
                                $print_str .= $this->append_chars("","right",PAPER_DET_COL_1," ");
                                $print_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").
                                    $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                            // } else {
                                // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                            // }
                        }
                        $counter++;
                    }
                    
                    if ($val['qty'] == 1) {
                        $pre_total += $val['price'];
                    }else{
                        $pre_total += $val['price'] * $val['qty'];
                    }
                }else{
                    if ($val['qty'] == 1) {
                        $print_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").
                            $this->append_chars(number_format($val['price']/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                        $pre_total += $val['price'];
                    } else {
                        $print_str .= $this->append_chars(substrwords($val['name'],100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                            $this->append_chars(number_format(($val['price'] * $val['qty'])/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                        $pre_total += $val['price'] * $val['qty'];
                    }
                }
                if(count($val['discounted']) > 0){
                    foreach ($val['discounted'] as $dssstxt) {
                      $print_str .= "      ";
                      $print_str .= $this->append_chars($dssstxt['txt']." x ".$dssstxt['qty'],"right",PAPER_DET_COL_2," ")."\r\n";
                    }
                }
                if(isset($val['remarks']) && count($val['remarks']) > 0){
                    if(KERMIT){
                        foreach ($val['remarks'] as $rmrktxt) {
                            $print_str .= "     * ";
                            $print_str .= $this->append_chars(ucwords($rmrktxt),"right",PAPER_DET_COL_2," ")."\r\n";
                        }
                    }
                }

                if (empty($val['modifiers']))
                    continue;

                $modifs = $val['modifiers'];
                foreach ($modifs as $vv) {
                    $print_str .= "   * ".$vv['qty']." ";

                    if ($vv['qty'] == 1) {
                        $print_str .= $this->append_chars(substrwords($vv['name'],100,""),"right",PAPER_DET_SUBCOL," ")
                            .$this->append_chars(number_format($vv['price']/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                        $pre_total += $vv['price'];
                    } else {
                        $print_str .= $this->append_chars(substrwords($vv['name'],100,"")." @ ".$vv['price'],"right",PAPER_DET_SUBCOL," ")
                            .$this->append_chars(number_format(($vv['price'] * $vv['qty'])/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                        $pre_total += $vv['price'] * $vv['qty'];
                    }
                }
                


                //DISCOUNT PALATANDAAN
                // if(in_array($val[''], haystack))

            }

            //for no charges
            if($post_details_nc){
                // $print_str .= "\r\n";
                $print_str .= PAPER_LINE."\r\n";
                $print_str .= "          ".TAKEOUTTEXT."\r\n";
                $print_str .= PAPER_LINE."\r\n";
                foreach ($post_details_nc as $val) {
                    $tot_qty += $val['qty'];
                    $print_str .= $this->append_chars($val['qty'],"right",PAPER_DET_COL_1," ");

                    $len = strlen($val['name']);

                    if($val['qty'] == 1){
                        $lgth = 21;
                    }else{
                        $lgth = 16;
                    }

                    if($len > $lgth){
                        $arr2 = str_split($val['name'], $lgth);
                        $counter = 1;
                        foreach($arr2 as $k => $vv){
                            if($counter == 1){
                                if ($val['qty'] == 1) {
                                    $print_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").
                                        $this->append_chars(number_format($val['price']/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                                } else {
                                    $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                        $this->append_chars(number_format(($val['price'] * $val['qty'])/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                                }
                            }else{
                                // if ($val['qty'] == 1) {
                                    $print_str .= $this->append_chars("","right",PAPER_DET_COL_1," ");
                                    $print_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").
                                        $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                // } else {
                                    // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                    //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                // }
                            }
                            $counter++;
                        }
                        
                        if ($val['qty'] == 1) {
                            $pre_total += $val['price'];
                        }else{
                            $pre_total += $val['price'] * $val['qty'];
                        }
                    }else{
                        if ($val['qty'] == 1) {
                            $print_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").
                                $this->append_chars(number_format($val['price']/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                            $pre_total += $val['price'];
                        } else {
                            $print_str .= $this->append_chars(substrwords($val['name'],100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                $this->append_chars(number_format(($val['price'] * $val['qty'])/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                            $pre_total += $val['price'] * $val['qty'];
                        }
                    }
                    if(count($val['discounted']) > 0){
                        foreach ($val['discounted'] as $dssstxt) {
                          $print_str .= "      ";
                          $print_str .= $this->append_chars($dssstxt['txt']." x ".$dssstxt['qty'],"right",PAPER_DET_COL_2," ")."\r\n";
                        }
                    }
                    if(isset($val['remarks']) && count($val['remarks']) > 0){
                        // foreach ($val['remarks'] as $rmrktxt) {
                        //     $print_str .= "     * ";
                        //     $print_str .= $this->append_chars(ucwords($rmrktxt),"right",PAPER_DET_COL_2," ")."\r\n";
                        // }
                    }

                    if (empty($val['modifiers']))
                        continue;

                    $modifs = $val['modifiers'];
                    foreach ($modifs as $vv) {
                        $print_str .= "   * ".$vv['qty']." ";

                        if ($vv['qty'] == 1) {
                            $print_str .= $this->append_chars(substrwords($vv['name'],100,""),"right",PAPER_DET_SUBCOL," ")
                                .$this->append_chars(number_format($vv['price']/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                            $pre_total += $vv['price'];
                        } else {
                            $print_str .= $this->append_chars(substrwords($vv['name'],100,"")." @ ".$vv['price'],"right",PAPER_DET_SUBCOL," ")
                                .$this->append_chars(number_format(($vv['price'] * $vv['qty'])/$splt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                            $pre_total += $vv['price'] * $vv['qty'];
                        }
                    }
                    


                    //DISCOUNT PALATANDAAN
                    // if(in_array($val[''], haystack))

                }
            }

            // $print_str .= $this->append_chars("","right",PAPER_WIDTH,"=");

            // $vat = round($order['amount'] / (1 + BASE_TAX) * BASE_TAX,1);
            $vat = 0;
            if($tax > 0){
                foreach ($tax as $tx) {
                   $vat += $tx['amount'];
                }
            }
            $no_tax_amt = 0;
            foreach ($no_tax as $k=>$v) {
                $no_tax_amt += $v['amount'];
            }

            $zero_rated_amt = 0;
            foreach ($zero_rated as $k=>$v) {
                $zero_rated_amt += $v['amount'];
            }
            if($zero_rated_amt > 0){
                $no_tax_amt = 0;
            }

            $print_str .= "\r\n".$this->append_chars(ucwords("TOTAL"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format(($pre_total/$splt),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
            $print_str .= $this->append_chars(ucwords("TOTAL QTY"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format(($tot_qty),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
            // if(count($discs) > 0){
            //     foreach ($discs as $ds) {
            //         $print_str .= "\r\n".$this->append_chars(strtoupper($ds['type']),"right",28," ").$this->append_chars("P (".number_format($ds['amount'],2).")","left",10," ")."\r\n";
            //     }
            // }
            // $print_str .= "\r\n";
            

            //start of not show for cancelled trans

            if($cancelled == 0){

                $total_discounts = 0;
                $total_discounts_sm = 0;
                foreach ($discounts as $dcs_ci => $dcs) {
                    foreach ($dcs['persons'] as $code => $dcp) {
                        // $print_str .= $this->append_chars($dcs_ci,"right",28," ").$this->append_chars('P'.num($dcp['amount']),"left",10," ");
                        // $print_str .= "\r\n".$this->append_chars($dcp['name'],"right",28," ");
                        // $print_str .= "\r\n".$this->append_chars($dcp['code'],"right",28," ")."\r\n";
                        // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                        $total_discounts += $dcp['amount'];
                        $dcAmt = $dcp['amount'];
                        // if(MALL_ENABLED && MALL == 'megamall'){
                        //     if($dcs_ci == PWDDISC){
                        //         $dcAmt = $dcAmt / 1.12;       
                        //     }
                        // }
                        $total_discounts_sm += $dcAmt;
                    }
                }
                $total_discounts_non_vat = 0;
                foreach ($discounts as $dcs_ci => $dcs) {
                   
                    foreach ($dcs['persons'] as $code => $dcp) {
                        // $print_str .= $this->append_chars($dcs_ci,"right",28," ").$this->append_chars('P'.num($dcp['amount']),"left",10," ");
                        // $print_str .= "\r\n".$this->append_chars($dcp['name'],"right",28," ");
                        // $print_str .= "\r\n".$this->append_chars($dcp['code'],"right",28," ")."\r\n";
                        // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                        if($dcs['no_tax'] == 1){
                            $total_discounts_non_vat += $dcp['amount'];
                        }
                    }
                }
                $total_charges = 0;
                if(count($charges) > 0){
                    foreach ($charges as $charge_id => $opt) {
                        $total_charges += $opt['total_amount'];
                    }
                }
                $local_tax_amt = 0;
                if(count($local_tax) > 0){
                    foreach ($local_tax as $lt_id => $lt) {
                        $local_tax_amt += $lt['amount'];
                    }
                }
                // echo num($total_charges + $local_tax_amt);

                // echo '((('.$order['amount'].' - ('.$total_charges.' + '.$local_tax_amt.') - '.$vat.') - '.$no_tax_amt.'+'.$total_discounts_non_vat.') -'.$zero_rated_amt;


                $vat_sales = ( ( ( $order['amount'] - ($total_charges + $local_tax_amt) ) - $vat)  - $no_tax_amt + $total_discounts_non_vat ) - $zero_rated_amt;

                // echo '===== '.$vat_sales;
                // $vat_sales = ( ( ( $order['amount'] ) - $vat)  - $no_tax_amt + $total_discounts) - $zero_rated_amt;
                // echo "vat_sales= ((".$order['amount']." - ".$total_charges."))- ".$vat." )- ".$no_tax_amt." + ".$total_discounts." - ".$zero_rated_amt;
                if($vat_sales < 0){
                    $vat_sales = 0;
                }
                $print_str .= "\r\n".$this->append_chars(ucwords("VAT SALES"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(num($vat_sales/$splt),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                $print_str .= $this->append_chars(ucwords("VAT EXEMPT SALES"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format(($no_tax_amt-$total_discounts_non_vat)/$splt,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                $print_str .= $this->append_chars(ucwords("VAT ZERO RATED"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format($zero_rated_amt/$splt,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                
                
                
                #CONDITION TO NA PINADAGDAG NG TAGAYTAY - FOR SENIOR CITEZEN VIEW VAT PLUS DISCOUNT
                // if(count($discounts) >0){
                //     if(count($dcs['persons']) > 0){
                //         $print_str .= $this->append_chars(ucwords("Less VAT (12%)"),"right",28," ").$this->append_chars("(".number_format($pre_total - $no_tax_amt,2).")","left",10," ")."\r\n";
                //     }
                // }
                // else{
                //     if($tax > 0){
                //         foreach ($tax as $tx) {
                //            $print_str .= $this->append_chars($tx['name']."(".$tx['rate']."%)","right",28," ").$this->append_chars(number_format($tx['amount'],2),"left",10," ")."\r\n";
                //         }
                //     }
                // }


                #CONDITION TO NA PARA SA TAGUEGARAO
                if($tax > 0){
                    foreach ($tax as $tx) {
                       $print_str .= $this->append_chars($tx['name']."(".$tx['rate']."%)","right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format(abs($tx['amount']/$splt),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    }
                }
                if(count($local_tax) > 0){
                    $local_tax_amt = 0;
                    foreach ($local_tax as $lt_id => $lt) {
                        $local_tax_amt += $lt['amount'];
                    }
                    $print_str .= $this->append_chars(ucwords("LOCAL TAX"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format($local_tax_amt/$splt,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                }
                if(count($discounts) >0){
                    $hasSMPWD = false;
                    if(count($dcs['persons']) > 0){
                        $print_str .= "\r\n";
                        // $print_str .= PAPER_LINE."\r\n";
                        $print_str .= "          Discount Details"."\r\n";
                        // $print_str .= PAPER_LINE."\r\n";

                        foreach ($discounts as $dcs_ci => $dcs) {
                            foreach ($dcs['persons'] as $code => $dcp) {
                                $discRateTxt = " (".$dcp['disc_rate']."%)";
                                if($dcs['fix'] == 1){
                                    $discRateTxt = " (".$dcp['disc_rate'].")";
                                }
                                $dcAmt = $dcp['amount'];
                                // if(MALL_ENABLED && MALL == 'megamall'){
                                //     if($dcs_ci == PWDDISC){
                                //         $dcAmt = $dcAmt / 1.12; 
                                //         $hasSMPWD = true;      
                                //     }
                                // }
                                if(KERMIT){
                                    $print_str .= $this->append_chars($dcs_ci.$discRateTxt,"right",PAPER_TOTAL_COL_1," ").$this->append_chars('P'.num($dcAmt),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                                    $print_str .= "\r\n".$this->append_chars($dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars($dcp['code'],"right",PAPER_TOTAL_COL_1," ")."\r\n";
                                }else{
                                     $print_str .= $this->append_chars($dcs_ci.$discRateTxt,"right",PAPER_TOTAL_COL_1," ").$this->append_chars('P'.num($dcAmt/$splt),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                                }
                            }
                        }
                        // $print_str .= "\r\n";
                        // echo $pre_total." - ".$order['amount']." - ".$total_charges." - ".$total_discounts; die();
                        $less_vat = round(($pre_total - ($order['amount'] - $total_charges + $local_tax_amt ) ) - $total_discounts,2);
                        // $less_vat = ($pre_total - ($order['amount'] - num($total_charges + $local_tax_amt) ) ) - $total_discounts;

                        // $print_str .= $this->append_chars(ucwords("Total Discount"),"right",28," ").$this->append_chars(number_format($total_discounts,2),"left",10," ")."\r\n";
                        $print_str .= $this->append_chars(ucwords("Total Less VAT"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format( $less_vat/$splt,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                        if(MALL_ENABLED && MALL == 'megamall' && $hasSMPWD){
                            $print_str .= $this->append_chars(ucwords("Total Amount Discounted"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format( ($total_discounts_sm + $less_vat)/$splt,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                        }
                        else{
                            $print_str .= $this->append_chars(ucwords("Total Amount Discounted"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format( ($total_discounts + $less_vat)/$splt,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                        }
                    }
                }

                if(count($charges) > 0){
                    $print_str .= "\r\n";
                    // $print_str .= PAPER_LINE."\r\n";
                    // $print_str .= "              CHARGES"."\r\n";
                    // $print_str .= PAPER_LINE."\r\n";
                    foreach ($charges as $charge_id => $opt) {
                        $charge_amount = $opt['total_amount'];
                        // if($opt['absolute'] == 0){
                        //     $charge_amount = ($opt['amount'] / 100) * ($order['amount'] - $vat);
                        // }
                        $print_str .= $this->append_chars($opt['name'],"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format($charge_amount/$splt,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    }
                    // $print_str .= PAPER_LINE."\r\n";
                }

                if (!empty($payments)) {

                    $print_str .= "\r\n";
                    // $print_str .= "\r\n"."======================================"."\r\n";
                    $print_str .= $this->append_chars("Amount due","right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($order['amount']/$splt,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";

                    $pay_total = 0;
                    $gft_ctr = 0;
                    $nor_ctr = 0;
                    foreach ($payments as $payment_id => $opt) {
                        if($opt['payment_type'] == 'gc'){
                            $print_str .= $this->append_chars(ucwords('gift cheque'),"right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($opt['amount']/$splt,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                        }else{
                            $print_str .= $this->append_chars(ucwords($opt['payment_type']),"right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($opt['amount']/$splt,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                        }
                        
                        if($opt['payment_type'] == 'check'){
                            $print_str .= $this->append_chars("     Check # ".$opt['reference'],"right",PAPER_WIDTH," ")."\r\n";
                        }else{
                            if (!empty($opt['reference']) && $opt['payment_type'] != 'deposit') {
                                $print_str .= $this->append_chars("     Reference ".$opt['reference'],"right",PAPER_WIDTH," ")."\r\n";
                            }
                        }

                        if($opt['payment_type'] == 'foodpanda'){
                            if (!empty($opt['approval_code']))
                                    $print_str .= $this->append_chars("  Order Code: ".$opt['approval_code'],"right",PAPER_WIDTH," ")."\r\n";
                        }else if($opt['payment_type'] == 'check'){
                            $print_str .= $this->append_chars("     Bank: ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                        }else if($opt['payment_type'] == 'picc'){
                            $print_str .= $this->append_chars("     Name: ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                        }else if($opt['payment_type'] == 'FPDelivery'){
                            $print_str .= $this->append_chars(" Order Code : ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                            $print_str .= $this->append_chars(" Discount % : ".$opt['card_type'],"right",PAPER_WIDTH," ")."\r\n";
                        }else if($opt['payment_type'] == 'FPPickup'){
                            $print_str .= $this->append_chars(" Order Code : ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                            $print_str .= $this->append_chars(" Discount % : ".$opt['card_type'],"right",PAPER_WIDTH," ")."\r\n";
                        }else{
                            if (!empty($opt['card_number'])) {
                                $print_str .= $this->append_chars("  Card #: ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                                if (!empty($opt['approval_code']))
                                    $print_str .= $this->append_chars("  Approval #: ".$opt['approval_code'],"right",PAPER_WIDTH," ")."\r\n";
                            }
                        }
                        $pay_total += $opt['amount'];
                        if($opt['payment_type'] == 'gc'){
                            $gft_ctr++;
                        }
                        else
                            $nor_ctr++;
                        
                    }
                    if($gft_ctr == 1 && $nor_ctr == 0)
                        $print_str .= $this->append_chars("Change","right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format(0,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    else
                        $print_str .= $this->append_chars("Change","right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format(abs(($pay_total - $order['amount'])/$splt),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    $print_str .= PAPER_LINE."\r\n";

                    if ($order['ref'] != null && $order['inactive'] == 1) {
                        // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                        $print_str .= "\r\n".$this->append_chars("_________________________________","right",PAPER_TOTAL_COL_1," ");
                        $print_str .= "\r\n".$this->append_chars("  Customer's Name & Signature","right",PAPER_TOTAL_COL_1," ");
                        // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                        $print_str .= "\r\n";
                    }


                    if ($include_footer) {
                        $rec_footer = "";
                        if($branch['rec_footer'] != ""){
                            $wrap = str_replace ("<br>","\r\n", $branch['rec_footer'] );
                            $exp = explode("\r\n", $wrap);
                            foreach ($exp as $v) {
                                $wrap2 = wordwrap($v,35,"|#|");
                                $exp2 = explode("|#|", $wrap2);  
                                foreach ($exp2 as $v2) {
                                    $rec_footer .= $this->align_center($v2,PAPER_WIDTH," ")."\r\n";
                                }
                            }                        
                        }
                        if($order['inactive'] == 0){
                            $print_str .= $rec_footer;
                        }    
                        if($branch['contact_no'] != ""){
                            $print_str .= $this->align_center("For feedback, please call us at",PAPER_WIDTH," ")."\r\n"
                                         .$this->align_center($branch['contact_no'],PAPER_WIDTH," ")."\r\n";
                        }
                        if($branch['email'] != ""){
                            $print_str .= $this->align_center("Or Email us at",PAPER_WIDTH," ")."\r\n" 
                                       .$this->align_center($branch['email'],PAPER_WIDTH," ")."\r\n";
                        }
                        if($branch['website'] != ""){
                            $print_str .= $this->align_center("Please visit us at",PAPER_WIDTH," ")."\r\n"
                                         .$this->align_center($branch['website'],PAPER_WIDTH," ")."\r\n";
                        }
                        $print_str .= PAPER_LINE."\r\n";
                        if($order['inactive'] == 0){
                            // $print_str .= "\r\n";
                            $print_str .= $this->append_chars('Name:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                                       // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                            $print_str .= $this->append_chars('Company:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                                       // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                            $print_str .= $this->append_chars('Address:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                                       // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                            $print_str .= $this->append_chars('TIN:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                            $print_str .= $this->append_chars('Signature:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                                       // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n";
                            // $print_str .= "\r\n";
                            $print_str .= "\r\n";
                            // $print_str .= PAPER_LINE."\r\n";
                            $print_str .= $this->align_center("POS Vendor Details",PAPER_WIDTH," ")."\r\n";
                            // $print_str .= PAPER_LINE."\r\n";
                            $print_str .= $this->align_center("PointOne Integrated Tech., Inc.",PAPER_WIDTH," ")."\r\n";
                            $print_str .= $this->align_center("1409 Prestige Tower",PAPER_WIDTH," ")."\r\n";
                            $print_str .= $this->align_center("Ortigas Center, Pasig City",PAPER_WIDTH," ")."\r\n";
                            $print_str .= $this->append_chars('POS Version:',"right",PAPER_RECEIPT_TEXT_FT," ")
                                       .  $this->append_chars('iPos ver 1.0',"right",PAPER_RECEIPT_INPUT_FT," ")."\r\n";
                            $print_str .= $this->append_chars('TIN:',"right",PAPER_RECEIPT_TEXT_FT," ")
                                       .  $this->append_chars('008543444-000',"right",PAPER_RECEIPT_INPUT_FT," ")."\r\n";
                            $print_str .= $this->append_chars('Date Issued:',"right",PAPER_RECEIPT_TEXT_FT," ")
                                       .  $this->append_chars('December 22, 2014',"right",PAPER_RECEIPT_INPUT_FT," ")."\r\n";
                                       // .  $this->append_chars(date2Word($order['datetime']),"right",PAPER_TOTAL_COL_2," ")."\r\n";
                            $print_str .= $this->append_chars('Valid Until:',"right",PAPER_RECEIPT_TEXT_FT," ")
                                       .  $this->append_chars(date2Word('December 22, 2025'),"right",PAPER_RECEIPT_INPUT_FT," ")."\r\n";
                                       // .  $this->append_chars(date2Word( date('Y-m-d',strtotime($order['datetime'].' +5 year')) ),"right",PAPER_TOTAL_COL_2," ")."\r\n";
                            if($branch['accrdn'] != ""){
                                $print_str .= $this->align_center('ACCRDN:',PAPER_WIDTH," ")."\r\n".$this->align_center($branch['accrdn'],PAPER_WIDTH," ")."\r\n";
                            }
                            // $print_str .= $this->align_center('This Invoice/Receipt',PAPER_WIDTH," ")."\r\n";
                            // $print_str .= $this->align_center('Shall be valid',PAPER_WIDTH," ")."\r\n";
                            // $print_str .= $this->align_center('Five(5) Years from the date of',PAPER_WIDTH," ")."\r\n";
                            // $print_str .= $this->align_center('The Permit to use.',PAPER_WIDTH," ")."\r\n";



                            // if($branch['pos_footer'] != ""){
                            //     // $print_str .= PAPER_LINE."\r\n";
                            //     $print_str .= "\r\n";
                            //     $wrap = str_replace ("<br>","\r\n", $branch['pos_footer'] );
                            //     $exp = explode("\r\n", $wrap);
                            //     foreach ($exp as $v) {
                            //         $wrap2 = wordwrap($v,35,"|#|");
                            //         $exp2 = explode("|#|", $wrap2);  
                            //         foreach ($exp2 as $v2) {
                            //             $print_str .= $this->align_center($v2,PAPER_WIDTH," ")."\r\n";
                            //         }
                            //     }
                            // }
                        }

                    }
                } else {
                    $print_str .= "\r\n".$this->append_chars("","right",PAPER_WIDTH,"=");
                    $print_str .= "\r\n\r\n".$this->append_chars("Billing Amount","right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($order['amount'],2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    if(is_array($splits)){
                        $print_str .= $this->append_chars("Split Amount by ".$splits['by'],"right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($splits['total'],2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    }
                    if ($include_footer) {
                        // $print_str .= "\r\n\r\n";
                        if($branch['contact_no'] != ""){
                            $print_str .= $this->align_center("For feedback, please call us at",PAPER_WIDTH," ")."\r\n"
                                         .$this->align_center($branch['contact_no'],PAPER_WIDTH," ")."\r\n";
                        }
                        if($branch['email'] != ""){
                            $print_str .= $this->align_center("Or Email us at",PAPER_WIDTH," ")."\r\n" 
                                       .$this->align_center($branch['email'],PAPER_WIDTH," ")."\r\n";
                        }
                        if($branch['website'] != "")
                            $print_str .= $this->align_center("Please visit us at \r\n".$branch['website'],PAPER_WIDTH," ")."\r\n";
                    }

                }

                if (!empty($payments)) {
                    $print_str .= "\r\n";
                    foreach ($discounts as $dcs_ci => $dcs) {
                        if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                            // $print_str .= PAPER_LINE."\r\n";
                            $print_str .= $this->align_center("OSCA/PWD Details",PAPER_WIDTH," ")."\r\n";
                            // $print_str .= PAPER_LINE."\r\n";
                            // $print_str .= $this->align_center(PAPER_LINE,42," ");
                            break;
                        }
                    }
                    foreach ($discounts as $dcs_ci => $dcs) {
                        if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                            foreach ($dcs['persons'] as $code => $dcp) {
                                // ."\r\n"
                                // ."\r\n"
                                $print_str .= "\r\n".$this->append_chars("ID NO      : ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                $print_str .= "\r\n".$this->append_chars("NAME       : ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                $print_str .= "\r\n".$this->append_chars("ADDRESS    : ","right",PAPER_TOTAL_COL_1," ");
                                $print_str .= "\r\n".$this->append_chars("SIGNATURE  : ","right",PAPER_TOTAL_COL_1," ");
                                $print_str .= "\r\n".$this->append_chars("             ____________________","right",PAPER_TOTAL_COL_1," ")."\r\n";
                                // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                            }
                        }
                    }
                    foreach ($discounts as $dcs_ci => $dcs) {
                        if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                            // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                            break;
                        }
                    }
                }

                if($approved_by != null){
                    $app = $this->site_model->get_user_details($approved_by);
                    $approver = $app->fname." ".$app->mname." ".$app->lname." ".$app->suffix;
                    // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                    $print_str .= "\r\n".$this->append_chars("Approved By : ".$approver,"right",PAPER_TOTAL_COL_1," ");
                    $print_str .= "\r\n".$this->append_chars("             ____________________","right",PAPER_TOTAL_COL_1," ")."\r\n";
                    // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                }

            }
            //end of showing for cancelled trans



            if ($return_print_str) {
                return $print_str;
            }
            // echo "<pre>".$print_str."</pre>";
            // return false;
            $js_rcps = '';

            if(PRINT_VERSION && PRINT_VERSION == 'V2'){


                // if(BILLING_PRINTER){
                //     if(BILLING_PRINTER != "DEFAULT"){
                         $this->do_print_receipt_v2($print_str);  
                //     }
                // }

                if($openDrawer){
                    $pet = $this->cashier_model->get_pos_settings();
                    $open_drawer_printer = $pet->open_drawer_printer;
                    // if($open_drawer_printer != ""){
                    //     $this->do_print_receipt_v2($print_str);  
                    //     // $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".$open_drawer_printer."\"  ";   
                    // }            
                }
            }else if(PRINT_VERSION && PRINT_VERSION == 'V3'){
                $js_rcp = $this->html_print($print_str);
                $js_rcps[] = array('printer'=>BILLING_PRINTER,'value'=>$js_rcp);
            }else{
                // $this->do_print_os($print_str,$printer['printer'],$printer['no']);  

                $filename = "sales.txt";
                $fp = fopen($filename, "w+");
                fwrite($fp,$print_str);
                fclose($fp);

                $batfile = "print.bat";
                $fh1 = fopen($batfile,'w+');
                $root = dirname(BASEPATH);
                $battxt ="NOTEPAD /P \"".realpath($root."/".$filename)."\"";

                if(BILLING_PRINTER){
                    if(BILLING_PRINTER != "DEFAULT"){
                        $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".BILLING_PRINTER."\"  ";   
                    }
                }

                if($openDrawer){
                    $pet = $this->cashier_model->get_pos_settings();
                    $open_drawer_printer = $pet->open_drawer_printer;
                    if($open_drawer_printer != ""){
                        $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".$open_drawer_printer."\"  ";   
                    }            
                }

                fwrite($fh1, $battxt);
                fclose($fh1);
                session_write_close();
                // exec($filename);
                for ($i=0; $i < $no_prints; $i++) { 
                    exec($batfile);
                }
                session_start();
                unlink($filename);
                unlink($batfile);
            }

            if($order_slip_prints > 0){
                if(PRINT_VERSION && PRINT_VERSION == 'V3'){
                    $print_str = $this->print_order_slip($header_print_str,$post_details,$order_slip_prints);
                    $js_rcp = $this->html_print($print_str);
                    $js_rcps[] = array('printer'=>BILLING_PRINTER,'value'=>$js_rcp);
                }else{
                    $this->print_order_slip($header_print_str,$post_details,$order_slip_prints);
                }
                            
            }

            if ($asJson)
                echo json_encode(array('msg'=>'Receipt # '.(!empty($order['ref']) ? $order['ref'] : $sales_id).' has been printed','js_rcps'=>$js_rcps,'ord_slip'=>$order_slip_prints));
            else
                return array('msg'=>'Receipt # '.(!empty($order['ref']) ? $order['ref'] : $sales_id).' has been printed','js_rcps'=>$js_rcps,'ord_slip'=>$order_slip_prints);
        }
        public function print_order_slip($header_print_str=null,$post_details=array(),$order_slip_prints=0){
            $print_str = $header_print_str;
            $print_str .=  $this->align_center('Order Slip',38," ")."\r\n";
            $tot_qty = 0;
            foreach ($post_details as $val) {
                $tot_qty += $val['qty'];
                $print_str .= $this->append_chars($val['qty'],"right",4," ");

                $len = strlen($val['name']);

                if($len > 18){
                    $arr2 = str_split($val['name'], 18);
                    $counter = 1;
                    foreach($arr2 as $k => $vv){
                        if($counter == 1){
                            if ($val['qty'] == 1) {
                                $print_str .= $this->append_chars(substrwords($vv,21,""),"right",26," ").
                                    $this->append_chars(null,"left",8," ")."\r\n";
                            } else {
                                $print_str .= $this->append_chars(substrwords($vv,21,"")." @ ".$val['price'],"right",26," ").
                                    $this->append_chars(null,"left",8," ")."\r\n";
                            }
                        }else{
                            // if ($val['qty'] == 1) {
                                $print_str .= $this->append_chars("","right",4," ");
                                $print_str .= $this->append_chars(substrwords($vv,21,""),"right",26," ").
                                    $this->append_chars(null,"left",8," ")."\r\n";
                            // } else {
                                // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                            // }
                        }
                        $counter++;
                    }

                }else{
                    if ($val['qty'] == 1) {
                        $print_str .= $this->append_chars(substrwords($val['name'],21,""),"right",26," ").
                            $this->append_chars(null,"left",8," ")."\r\n";
                    } else {
                        $print_str .= $this->append_chars(substrwords($val['name'],21,"")." @ ".$val['price'],"right",26," ").
                            $this->append_chars(null,"left",8," ")."\r\n";
                    }
                }

                if(count($val['discounted']) > 0){
                    foreach ($val['discounted'] as $dssstxt) {
                      $print_str .= "      ";
                      $print_str .= $this->append_chars($dssstxt['txt']." x ".$dssstxt['qty'],"right",23," ")."\r\n";
                    }
                }
                if(isset($val['remarks']) && count($val['remarks']) > 0){
                    foreach ($val['remarks'] as $rmrktxt) {
                        $print_str .= "     * ";
                        $print_str .= $this->append_chars(ucwords($rmrktxt),"right",23," ")."\r\n";
                    }
                }

                if (empty($val['modifiers']))
                    continue;

                $modifs = $val['modifiers'];
                foreach ($modifs as $vv) {
                    $print_str .= "     * ";

                    if ($vv['qty'] == 1) {
                        $print_str .= $this->append_chars(substrwords($vv['name'],18,""),"right",23," ")
                            .$this->append_chars(null,"left",8," ")."\r\n";
                    } else {
                        $print_str .= $this->append_chars(substrwords($vv['name'],18,"")." @ ".$vv['price'],"right",23," ")
                            .$this->append_chars(null,"left",8," ")."\r\n";
                    }
                }
            }
            $print_str .= "\r\n"."--------------------------------------"."\r\n";
            $print_str .= $this->append_chars(ucwords("TOTAL QTY"),"right",28," ").$this->append_chars(number_format(($tot_qty),2),"left",10," ")."\r\n";

            if(PRINT_VERSION && PRINT_VERSION=='V3'){
                return $print_str;
            }else{
                $filename = "order.txt";
                $fp = fopen($filename, "w+");
                fwrite($fp,$print_str);
                fclose($fp);

                $batfile = "print.bat";
                $fh1 = fopen($batfile,'w+');
                $root = dirname(BASEPATH);

                fwrite($fh1, "NOTEPAD /P \"".realpath($root."/".$filename)."\"");
                fclose($fh1);
                session_write_close();
                for ($i=0; $i < $order_slip_prints; $i++) { 
                    exec($batfile);
                }
                session_start();
                unlink($filename);
                unlink($batfile);
            }
        }
        #############################
        #                           #
        # New Order Slip Printing   #
        #                           #
        #############################
        public function set_printers(){
            
            if(PRINTER_DB){

                $pet = $this->cashier_model->get_printers(null,'active');
                $printers = array();
                foreach ($pet as $key => $value) {
                    
                    // echo $value->printer_name;
                    // $kitchen_printer = $pet->kitchen_printer_name;
                    // if(KITCHEN_PRINTER){

                    // }
                    $printers[$value->printer_name] = array('printer'=>$value->printer_name_assigned,'no'=>$value->no_prints,'sub_cat_id'=>$value->sub_cat);

                }

                // die();
                // echo "<pre>",print_r($printers),"</pre>";die();
                return $printers;

            }else{

                $pet = $this->cashier_model->get_pos_settings();

                $kitchen_printer = $pet->kitchen_printer_name;
                if(KITCHEN_PRINTER){
                    $kitchen_printer = KITCHEN_PRINTER;
                }
                $kitchen_printer_no = $pet->kitchen_printer_name_no;
                if(KITCHEN_PRINTER_NUM){
                    $kitchen_printer_no = KITCHEN_PRINTER_NUM;
                }    
                
                $kitchen_printer_beverage = $pet->kitchen_beverage_printer_name;
                if(BEVERAGE_PRINTER){
                    $kitchen_printer_beverage = BEVERAGE_PRINTER;
                }
                $kitchen_printer_beverage_no = $pet->kitchen_beverage_printer_name_no;

                if(BEVERAGE_PRINTER_NUM){
                    $kitchen_printer_beverage_no = BEVERAGE_PRINTER_NUM;
                }

                $printers = array(
                    KITCHEN_PRINTER_NAME=>array('printer'=>$kitchen_printer,'no'=>$kitchen_printer_no,'sub_cat_id'=>FOOD_ID),
                    BEVERAGE_PRINTER_NAME=>array('printer'=>$kitchen_printer_beverage,'no'=>$kitchen_printer_beverage_no,'sub_cat_id'=>BEVERAGE_ID),
                    PRINT1_PRINTER_NAME=>array('printer'=>PRINT1_PRINTER,'no'=>PRINT1_PRINTER_NUM,'sub_cat_id'=>PRINT1_ID),
                );

                // echo $kitchen_printer_beverage;
                // die();
                // echo "<pre>",print_r($printers),"</pre>";die();
                return $printers;

            }

            


            // $psetup = $this->cashier_model->get_printer_setup();
            
            // $kitchen_printer = $pet->kitchen_printer_name;
            // if(KITCHEN_PRINTER && $psetup->kitchen_printer != " "){
            //     $kitchen_printer = $psetup->kitchen_printer;
            // }else{
            //     $kitchen_printer = KITCHEN_PRINTER;
            // }

            // $kitchen_printer_no = $pet->kitchen_printer_name_no;
            // if(KITCHEN_PRINTER_NUM){
            //     $kitchen_printer_no = KITCHEN_PRINTER_NUM;
            // }    
            
            // $kitchen_printer_beverage = $pet->kitchen_beverage_printer_name;
            // if(BEVERAGE_PRINTER  && $psetup->beverage_printer != " "){
            //     $kitchen_printer_beverage = $psetup->beverage_printer;
            // }else{
            //     $kitchen_printer_beverage = BEVERAGE_PRINTER;
            // }

            // if(PRINT1_PRINTER  && $psetup->extra_printer != " "){
            //     $extra_printer = $psetup->extra_printer;
            // }else{
            //     $extra_printer = PRINT1_PRINTER;
            // }

            // $kitchen_printer_beverage_no = $pet->kitchen_beverage_printer_name_no;

            // if(BEVERAGE_PRINTER_NUM){
            //     $kitchen_printer_beverage_no = BEVERAGE_PRINTER_NUM;
            // }

            // $printers = array(
            //     KITCHEN_PRINTER_NAME=>array('printer'=>$kitchen_printer,'no'=>$kitchen_printer_no,'sub_cat_id'=>1),
            //     BEVERAGE_PRINTER_NAME=>array('printer'=>$kitchen_printer_beverage,'no'=>$kitchen_printer_beverage_no,'sub_cat_id'=>BEVERAGE_ID),
            //     PRINT1_PRINTER_NAME=>array('printer'=>$extra_printer,'no'=>PRINT1_PRINTER_NUM,'sub_cat_id'=>PRINT1_ID),
            // );
            // return $printers;
        }
        public function print_os($sales_id=null,$not_printed_only=true,$reprinted=false,$use_main=false){
            $printers = $this->set_printers();
            if($use_main){
                $this->db = $this->load->database('main',true);
            }
            $return = $this->get_order(false,$sales_id);
            $order = $return['order'];
            $details = $return['details'];
            $details2 = $return['details2'];
            $details_to = $return['details_to'];


            $update_line_ids = array();
            $update_line_mod_ids = array();
            $update_line_submod_ids = array();
            $print_bar_str = array();
                // $print_bar_str[] = strtoupper($order['type']);
            $print_bar_str[] = "Ref #: ".$order['ref'];
            $print_bar_str[] = "Name: ".strtoupper($order['customer_name']);
                // $print_bar_str[] = "Reference # ".$order['sales_id'];
            // echo "<pre>",print_r($details2),"</pre>";die();
            $js_rcps = array();
            foreach ($printers as $name => $printer) {
                $has_to_print = 0;
                $update_line_ids = array();
                // $print_str = $this->os_header();
                $print_str =  "";
                $print_str_part_1_v2 ="";
                $print_str_part_2_v2 ="";
                $print_str_part_3_v2 ="";
                $print_str_part_4_v2 ="";
                $print_str .=  align_center(strtoupper('ORDER SLIP'),PAPER_WIDTH," ")."\r\n";
                  $guest = (int)$order['guest'];
                // echo var_dump($guest);
                if($guest == 0)
                    $guest = 1;
                if($order['type'] == "reservation"){
                    $print_str .= "Reference # ".$order['ref_no']."\r\n";
                    $print_str .= "Transaction # ".$order['sales_id']."      "."Guest # : ".$guest."\r\n";

                }else{
                    $print_str .= "Reference # ".$order['sales_id']."      "."Guest # : ".$guest."\r\n";
                }
              
                // $print_str .=strtoupper($order['type']) ."\r\n";
                $serve_no = $order['serve_no'];
                if($serve_no > 0){
                    $print_str .= "Serve No: ".$serve_no."\r\n";
                    $print_str_part_3_v2 .= "Serve No: ".$serve_no."\r\n";
                }
                if($order['waiter_username'] != ""){
                    $print_str .= "FS: ".$order['waiter_username']."\r\n";
                    $print_str_part_2_v2 .=  "FS: ".strtoupper($order['waiter_username'])."              ".strtoupper($order['type'])."\r\n";
                }
                
                // $print_str .= "============"."\r\n";
                $print_str .= PAPER_LINE."\r\n";
                if($order['inactive'] == 1){
                    $print_str .=  align_center('*** VOIDED TRANSACTION ***',PAPER_WIDTH," ")."\r\n\r\n";
                }
                $print_str .=  align_center(strtoupper($name),PAPER_WIDTH," ")."\r\n\r\n";
                
                if($reprinted){
                    $print_str .=  align_center('[REPRINTED]',PAPER_WIDTH," ")."\r\n\r\n";
                }
               
                // echo "<pre>",print_r($details2),"</pre>";
                foreach ($details2 as $menu_id => $val) {
                    if(isset($val['retail']) &&  $val['retail'] == 1){
                        continue;
                    }
                    $category = $this->site_model->get_tbl('menus',array('menu_id'=>$val['menu_id']),array(),null,true,'menu_sub_cat_id');
                    $cat = $category[0];
                    // echo $this->db->last_query();die();
                    // echo "<pre>",print_r($cat->menu_sub_cat_id),"</pre>";die();

                    // if($printer['sub_cat_id'] == $cat->menu_sub_cat_id){
                        $all_str = "";
                        $menu_str = "";
                        
                        $qty = 0;
                        $remarks = "";
                        $modi = 0;
                        foreach($val['dets'] as $line_id =>$dets){
                            
                            $mod_bar_str = "";
                            if( $cat->menu_sub_cat_id == BEVERAGE_ID){

                                    $print_bar_str[] = $val['name'];
                                    
                            }
                            if($not_printed_only){

                                if($dets['kitchen_slip_printed'] == 0){  
                                     // var_dump($not_printed_only);
                                    // $all_str .= $menu_str;
                                    $update_line_ids[]=$dets['id'];
                                    // $has_to_print++;


                                    if(count($dets['modifiers']) > 0){
                                        
                                        // if($printer['sub_cat_id'] == SUBCAT_BEV){
                                        //     $all_str .= $print_mod_bev;
                                        // }else{
                                        //     $all_str .= $print_mod_food;
                                        // }
                                        if($cat->menu_sub_cat_id != RAMEN_ID){
                                            $print_str_part_1_v2 .= "<bold>";
                                            $print_str_part_1_v2 .= $this->append_chars($dets['qty']." @ ","right",4," ");
                                            $print_str_part_1_v2 .= "</bold>";
                                            $all_str .= $this->append_chars($dets['qty'],"right",4," ");
                                            // echo $str;
                                            $len = strlen($val['name']);

                                            if($len > 30){
                                                $arr2 = str_split($val['name'], 30);
                                                $counter = 1;
                                                foreach($arr2 as $k => $vv){
                                                    if($counter == 1){
                                                       $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                       $print_str_part_1_v2  .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                    }else{
                                                        // if ($val['qty'] == 1) {
                                                            $all_str .= $this->append_chars("","right",4," ");
                                                            $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                            $print_str_part_1_v2  .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";

                                                        // } else {
                                                            // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                                            //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                                        // }
                                                    }
                                                    $counter++;
                                                }

                                            }else{
                                                $all_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                $print_str_part_1_v2  .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                            }

                                            if(isset($dets['remarks']) && $dets['remarks'] != ""){
                                                $all_str .= "     * ";
                                                $all_str .= $this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."\r\n";
                                                $print_str_part_1_v2  .= "<indentbold>     * ".$this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."</indentbold>"."\r\n";
                                            }

                                            // echo $str.'ssss';
                                            // echo "<pre>",print_r($dets['modifiers']),"</pre>";die();

                                            foreach ($dets['modifiers'] as $mod_id => $mod) {

                                                $mod_sub_cat = $this->site_model->get_tbl('modifiers',array('mod_id'=>$mod['id']),array(),null,true,'mod_sub_cat_id');
                                                $mod_sc = $mod_sub_cat[0];


                                                $mod_str = "";
                                                $kitchen_mod_slip_printed = $mod['kitchen_slip_printed'];
                                                if($mod['kitchen_slip_printed'] == ""){
                                                    $kitchen_mod_slip_printed = 0;
                                                }
                                                $mod_str .= "     - ";

                                                if($mod['qty'] == 1){
                                                    $mod_str .= $this->append_chars(substrwords($mod['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                    .$this->append_chars(null,"left",8," ")."\r\n";
                                                }else{
                                                    $mod_str .= $this->append_chars(substrwords($mod['qty'].' '.$mod['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                    .$this->append_chars(null,"left",8," ")."\r\n";
                                                }
                                                
                                                
                                                if(!empty( $mod_bar_str)){
                                                     $mod_bar_str .= ", ".substrwords($mod['name'],100,"");
                                                }else{
                                                    $mod_bar_str .= substrwords($mod['name'],100,"");
                                                }

                                                $smod_str = "";
                                                if(isset($mod['submodifiers'])){
                                                    
                                                    foreach($mod['submodifiers'] as $sub_id => $subm){
                                                        if($subm['mod_line_id'] == $mod['mod_line_id']){
                                                            $kitchen_submod_slip_printed = $subm['kitchen_slip_printed'];
                                                            if($subm['kitchen_slip_printed'] == ""){
                                                                $kitchen_submod_slip_printed = 0;
                                                            }

                                                            $smod_str .= "         * ";

                                                            if($subm['qty'] == 1){
                                                                $smod_str .= $this->append_chars(substrwords($subm['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                            .$this->append_chars(null,"left",8," ")."\r\n";
                                                            }else{
                                                                $smod_str .= $this->append_chars(substrwords($subm['qty'].' '.$subm['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                            .$this->append_chars(null,"left",8," ")."\r\n";
                                                            }
                                                            

                                                            if($not_printed_only){
                                                                if($kitchen_submod_slip_printed == 0){ 
                                                                    // if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                                    //     // $print_mod_bev .= $str;
                                                                    //     $all_str .= $smod_str;
                                                                    //     $print_str_part_1_v2  .= $smod_str;
                                                                    //     $has_to_print++;
                                                                    // }
                                                                    // else{
                                                                    //     // $print_mod_food .= $str;
                                                                    //     $all_str .= $mod_str;
                                                                    // }
                                                                    // $all_str .= $mod_str;
                                                                    $update_line_submod_ids[]=$subm['sales_submod_id'];
                                                                    // $has_to_print++;
                                                                }   
                                                            }   
                                                            else{
                                                                // if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                                //     // $print_mod_bev .= $str;
                                                                //     $all_str .= $smod_str;
                                                                //     $print_str_part_1_v2  .= $smod_str;
                                                                //     $has_to_print++;
                                                                // }
                                                                // else{
                                                                //     // $print_mod_food .= $str;
                                                                //     $all_str .= $mod_str;
                                                                // }
                                                                // $all_str .= $mod_str;
                                                                $update_line_submod_ids[]=$subm['sales_submod_id'];
                                                                // $has_to_print++;
                                                            }



                                                        }
                                                    }

                                                }

                                                if($not_printed_only){
                                                    if($kitchen_mod_slip_printed == 0){ 
                                                        if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                            // $print_mod_bev .= $str;
                                                            $all_str .= $mod_str;
                                                            $all_str .= $smod_str;
                                                            $print_str_part_1_v2  .= $mod_str;
                                                            $print_str_part_1_v2  .= $smod_str;
                                                            $has_to_print++;
                                                        }
                                                        // else{
                                                        //     // $print_mod_food .= $str;
                                                        //     $all_str .= $mod_str;
                                                        // }
                                                        // $all_str .= $mod_str;
                                                        $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                        // $has_to_print++;
                                                    }   
                                                }   
                                                else{
                                                    if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                        // $print_mod_bev .= $str;
                                                        $all_str .= $mod_str;
                                                        $all_str .= $smod_str;
                                                        $print_str_part_1_v2  .= $mod_str;
                                                        $print_str_part_1_v2  .= $smod_str;
                                                        $has_to_print++;
                                                    }
                                                    // else{
                                                    //     // $print_mod_food .= $str;
                                                    //     $all_str .= $mod_str;
                                                    // }
                                                    // $all_str .= $mod_str;
                                                    $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                    // $has_to_print++;
                                                }
                                            }

                                        }


                                    }else{
                                         $print_bar_str[]  = "";
                                         $print_bar_str[] = $dets['remarks'];
                                         // echo "asdasdasdsadsadasd";
                                         //             echo "<pre>aa:",print_r($val),"</pre>";//die();
                                        $qty += $dets['qty'];
                                        if($remarks == ""){
                                            $remarks = $dets['remarks'];
                                        }else{
                                            if($dets['remarks'] != ""){
                                                $remarks .= ", ".$dets['remarks'];
                                            }
                                        }
                                    }

                                }   
                                // echo " " .$cat->menu_sub_cat_id   . " : ". BEVERAGE_ID. "<br>";
                                // if( $cat->menu_sub_cat_id == BEVERAGE_ID){

                                //     $print_bar_str[] = $val['name'];
                                    
                                // }
                            }   
                            else{
                                // $all_str .= $menu_str;
                                $update_line_ids[]=$dets['id'];
                                // $has_to_print++;

                                if(count($dets['modifiers']) > 0){
                                        
                                        
                                    // if($printer['sub_cat_id'] == SUBCAT_BEV){
                                    //     $all_str .= $print_mod_bev;
                                    // }else{
                                    //     $all_str .= $print_mod_food;
                                    // }

                                    if($cat->menu_sub_cat_id != RAMEN_ID){

                                        $all_str .= $this->append_chars($dets['qty'],"right",4," ");
                                        $print_str_part_1_v2  .= "<bold>".$this->append_chars($dets['qty']." @ ","right",4," ")."</bold>";
                                        // echo $str;
                                        $len = strlen($val['name']);

                                        if($len > 30){
                                            $arr2 = str_split($val['name'], 30);
                                            $counter = 1;
                                            foreach($arr2 as $k => $vv){
                                                if($counter == 1){
                                                   $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                   $print_str_part_1_v2  .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                }else{
                                                    // if ($val['qty'] == 1) {
                                                        $all_str .= $this->append_chars("","right",4," ");
                                                        $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                        $print_str_part_1_v2  .= $this->append_chars("","right",4," ");
                                                        $print_str_part_1_v2  .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                    // } else {
                                                        // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                                        //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                                    // }
                                                }
                                                $counter++;
                                            }

                                        }else{
                                            $all_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                            $print_str_part_1_v2  .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                        }

                                        if(isset($dets['remarks']) && $dets['remarks'] != ""){
                                            $all_str .= "     * ";
                                            $all_str .= $this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."\r\n";
                                            $print_str_part_1_v2 .= "<indentbold>". "     * ".$this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."</indentbold>"."\r\n";
                                        }

                                        // echo $str.'ssss';
                                        // echo "<pre>",print_r($dets['modifiers']),"</pre>";die();

                                        foreach ($dets['modifiers'] as $mod_id => $mod) {

                                            $mod_sub_cat = $this->site_model->get_tbl('modifiers',array('mod_id'=>$mod['id']),array(),null,true,'mod_sub_cat_id');
                                            $mod_sc = $mod_sub_cat[0];


                                            $mod_str = "";
                                            $kitchen_mod_slip_printed = $mod['kitchen_slip_printed'];
                                            if($mod['kitchen_slip_printed'] == ""){
                                                $kitchen_mod_slip_printed = 0;
                                            }
                                            $mod_str .= "     - ";
                                            $mod_str .= $this->append_chars(substrwords($mod['qty'].' '.$mod['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                .$this->append_chars(null,"left",8," ")."\r\n";
                                            
                                            if(!empty( $mod_bar_str)){
                                                 $mod_bar_str .= ", ".substrwords($mod['name'],100,"");
                                            }else{
                                                $mod_bar_str .= substrwords($mod['name'],100,"");
                                            }

                                            //printing of os para sa submdifer
                                            $smod_str = "";
                                            if(isset($mod['submodifiers'])){
                                                    
                                                foreach($mod['submodifiers'] as $sub_id => $subm){
                                                    if($subm['mod_line_id'] == $mod['mod_line_id']){
                                                        $kitchen_submod_slip_printed = $subm['kitchen_slip_printed'];
                                                        if($subm['kitchen_slip_printed'] == ""){
                                                            $kitchen_submod_slip_printed = 0;
                                                        }

                                                        $smod_str .= "         * ";
                                                        $smod_str .= $this->append_chars(substrwords($subm['qty'].' '.$subm['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                        .$this->append_chars(null,"left",8," ")."\r\n";

                                                        if($not_printed_only){
                                                            if($kitchen_submod_slip_printed == 0){ 
                                                                // if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                                //     // $print_mod_bev .= $str;
                                                                //     $all_str .= $smod_str;
                                                                //     $print_str_part_1_v2  .= $smod_str;
                                                                //     $has_to_print++;
                                                                // }
                                                                // else{
                                                                //     // $print_mod_food .= $str;
                                                                //     $all_str .= $mod_str;
                                                                // }
                                                                // $all_str .= $mod_str;
                                                                $update_line_submod_ids[]=$subm['sales_submod_id'];
                                                                // $has_to_print++;
                                                            }   
                                                        }   
                                                        else{
                                                            // if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                            //     // $print_mod_bev .= $str;
                                                            //     $all_str .= $smod_str;
                                                            //     $print_str_part_1_v2  .= $smod_str;
                                                            //     $has_to_print++;
                                                            // }
                                                            // else{
                                                            //     // $print_mod_food .= $str;
                                                            //     $all_str .= $mod_str;
                                                            // }
                                                            // $all_str .= $mod_str;
                                                            $update_line_submod_ids[]=$subm['sales_submod_id'];
                                                            // $has_to_print++;
                                                        }



                                                    }
                                                }

                                            }



                                            if($not_printed_only){
                                                if($kitchen_mod_slip_printed == 0){ 
                                                    if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                        // $print_mod_bev .= $str;
                                                        $all_str .= $mod_str;
                                                        $all_str .= $smod_str;
                                                        $print_str_part_1_v2 .= $mod_str;
                                                        $print_str_part_1_v2 .= $smod_str;
                                                        $has_to_print++;
                                                    }
                                                    // else{
                                                    //     // $print_mod_food .= $str;
                                                    //     $all_str .= $mod_str;
                                                    // }
                                                    // $all_str .= $mod_str;
                                                    $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                    // $has_to_print++;
                                                }   
                                            }   
                                            else{
                                                // echo $printer['sub_cat_id'].'====';
                                                if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                    // $print_mod_bev .= $str;
                                                    $all_str .= $mod_str;
                                                    $all_str .= $smod_str;
                                                    $print_str_part_1_v2 .= $mod_str;
                                                    $print_str_part_1_v2 .= $smod_str;
                                                    $has_to_print++;
                                                }
                                                // else{
                                                //     // $print_mod_food .= $str;
                                                //     $all_str .= $mod_str;
                                                // }
                                                // $all_str .= $mod_str;
                                                $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                // $has_to_print++;
                                            }
                                        }

                                    }
                                   

                                }else{
                                    $qty += $dets['qty'];
                                    if($remarks == ""){
                                        $remarks = $dets['remarks'];
                                    }else{
                                        if($dets['remarks'] != ""){
                                            $remarks .= ", ".$dets['remarks'];
                                        }
                                    }
                                }

                                if(isset($mod_str)){
                                    $print_bar_str[] = $mod_bar_str;
                                }

                                $print_bar_str[] = $dets['remarks'];

                            }

                            

                        }

                        if($qty > 0){

                            if($printer['sub_cat_id'] == $cat->menu_sub_cat_id){
                                $has_to_print++;
                                $all_str .= $this->append_chars($qty,"right",4," ");
                                $print_str_part_1_v2 .= "<bold>".$this->append_chars($qty ." @ " ,"right",4," ")."</bold>";
                                $len = strlen($val['name']);

                                if($len > 30){
                                    $arr2 = str_split($val['name'], 30);
                                    $counter = 1;
                                    foreach($arr2 as $k => $vv){
                                        if($counter == 1){
                                           $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                            $print_str_part_1_v2 .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                        }else{
                                            // if ($val['qty'] == 1) {
                                                $all_str .= $this->append_chars("","right",4," ");
                                                $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                $print_str_part_1_v2 .= $this->append_chars("","right",4," ");
                                                $print_str_part_1_v2 .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                            // } else {
                                                // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                                //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                            // }
                                        }
                                        $counter++;
                                    }

                                }else{
                                    $all_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                    $print_str_part_1_v2 .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                }

                                // if(isset($order['type']) && $order['type'] == "App Order" && isset($order['memo']) &&  $order['memo'] != ""){
                                        // $all_str .= "     * ";
                                        // $all_str .= $this->append_chars(ucwords($order['memo']),"right",PAPER_DET_COL_2," ")."\r\n";
                                // }else{
                                    if(isset($remarks) && $remarks != ""){
                                        $all_str .= "     * ";
                                        $all_str .= $this->append_chars(ucwords($remarks),"right",PAPER_DET_COL_2," ")."\r\n";
                                        $print_str_part_1_v2 .=  "<indentbold>     * ".$this->append_chars(ucwords($remarks),"right",PAPER_DET_COL_2," ")."</indentbold>\r\n";
                                    }

                                   
                                // }

                                // if(isset($remarks) && $remarks != ""){
                                    // $all_str .= "     * ";
                                    // $all_str .= $this->append_chars(ucwords($remarks),"right",PAPER_DET_COL_2," ")."\r\n";
                                // }

                            }

                        }
                        

                   
                        $print_str .= $all_str;
                        // echo $print_str;
                    // }
                }

                ////for takeout dinein

                if(count($details_to) > 0){

                    // $print_str .= "\r\n";
                    $print_str .= "===========FOR TAKEOUT=========="."\r\n";



                    foreach ($details_to as $menu_id => $val) {
                        if(isset($val['retail']) &&  $val['retail'] == 1){
                            continue;
                        }
                        $category = $this->site_model->get_tbl('menus',array('menu_id'=>$val['menu_id']),array(),null,true,'menu_sub_cat_id');
                        $cat = $category[0];
                        // echo $this->db->last_query();die();
                        // echo "<pre>",print_r($cat->menu_sub_cat_id),"</pre>";die();

                        // if($printer['sub_cat_id'] == $cat->menu_sub_cat_id){
                            $all_str = "";
                            $menu_str = "";
                            
                            $qty = 0;
                            $remarks = "";
                            $modi = 0;
                            foreach($val['dets'] as $line_id =>$dets){
                                
                                $mod_bar_str = "";
                                if( $cat->menu_sub_cat_id == BEVERAGE_ID){

                                        $print_bar_str[] = $val['name'];
                                        
                                }
                                if($not_printed_only){

                                    if($dets['kitchen_slip_printed'] == 0){  
                                         // var_dump($not_printed_only);
                                        // $all_str .= $menu_str;
                                        $update_line_ids[]=$dets['id'];
                                        // $has_to_print++;


                                        if(count($dets['modifiers']) > 0){
                                            
                                            // if($printer['sub_cat_id'] == SUBCAT_BEV){
                                            //     $all_str .= $print_mod_bev;
                                            // }else{
                                            //     $all_str .= $print_mod_food;
                                            // }
                                            if($cat->menu_sub_cat_id != RAMEN_ID){
                                                $print_str_part_1_v2 .= "<bold>";
                                                $print_str_part_1_v2 .= $this->append_chars($dets['qty']." @ ","right",4," ");
                                                $print_str_part_1_v2 .= "</bold>";
                                                $all_str .= $this->append_chars($dets['qty'],"right",4," ");
                                                // echo $str;
                                                $len = strlen($val['name']);

                                                if($len > 30){
                                                    $arr2 = str_split($val['name'], 30);
                                                    $counter = 1;
                                                    foreach($arr2 as $k => $vv){
                                                        if($counter == 1){
                                                           $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                           $print_str_part_1_v2  .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                        }else{
                                                            // if ($val['qty'] == 1) {
                                                                $all_str .= $this->append_chars("","right",4," ");
                                                                $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                                $print_str_part_1_v2  .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";

                                                            // } else {
                                                                // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                                                //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                                            // }
                                                        }
                                                        $counter++;
                                                    }

                                                }else{
                                                    $all_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                    $print_str_part_1_v2  .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                }

                                                if(isset($dets['remarks']) && $dets['remarks'] != ""){
                                                    $all_str .= "     * ";
                                                    $all_str .= $this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."\r\n";
                                                    $print_str_part_1_v2  .= "<indentbold>     * ".$this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."</indentbold>"."\r\n";
                                                }

                                                // echo $str.'ssss';
                                                // echo "<pre>",print_r($dets['modifiers']),"</pre>";die();

                                                foreach ($dets['modifiers'] as $mod_id => $mod) {

                                                    $mod_sub_cat = $this->site_model->get_tbl('modifiers',array('mod_id'=>$mod['id']),array(),null,true,'mod_sub_cat_id');
                                                    $mod_sc = $mod_sub_cat[0];


                                                    $mod_str = "";
                                                    $kitchen_mod_slip_printed = $mod['kitchen_slip_printed'];
                                                    if($mod['kitchen_slip_printed'] == ""){
                                                        $kitchen_mod_slip_printed = 0;
                                                    }
                                                    $mod_str .= "     - ";

                                                    if($mod['qty'] == 1){
                                                        $mod_str .= $this->append_chars(substrwords($mod['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                        .$this->append_chars(null,"left",8," ")."\r\n";
                                                    }else{
                                                        $mod_str .= $this->append_chars(substrwords($mod['qty'].' '.$mod['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                        .$this->append_chars(null,"left",8," ")."\r\n";
                                                    }
                                                    
                                                    
                                                    if(!empty( $mod_bar_str)){
                                                         $mod_bar_str .= ", ".substrwords($mod['name'],100,"");
                                                    }else{
                                                        $mod_bar_str .= substrwords($mod['name'],100,"");
                                                    }

                                                    if($not_printed_only){
                                                        if($kitchen_mod_slip_printed == 0){ 
                                                            if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                                // $print_mod_bev .= $str;
                                                                $all_str .= $mod_str;
                                                                $print_str_part_1_v2  .= $mod_str;
                                                                $has_to_print++;
                                                            }
                                                            // else{
                                                            //     // $print_mod_food .= $str;
                                                            //     $all_str .= $mod_str;
                                                            // }
                                                            // $all_str .= $mod_str;
                                                            $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                            // $has_to_print++;
                                                        }   
                                                    }   
                                                    else{
                                                        if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                            // $print_mod_bev .= $str;
                                                            $all_str .= $mod_str;
                                                            $print_str_part_1_v2  .= $mod_str;
                                                            $has_to_print++;
                                                        }
                                                        // else{
                                                        //     // $print_mod_food .= $str;
                                                        //     $all_str .= $mod_str;
                                                        // }
                                                        // $all_str .= $mod_str;
                                                        $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                        // $has_to_print++;
                                                    }
                                                }

                                            }


                                        }else{
                                             $print_bar_str[]  = "";
                                             $print_bar_str[] = $dets['remarks'];
                                             // echo "asdasdasdsadsadasd";
                                             //             echo "<pre>aa:",print_r($val),"</pre>";//die();
                                            $qty += $dets['qty'];
                                            if($remarks == ""){
                                                $remarks = $dets['remarks'];
                                            }else{
                                                if($dets['remarks'] != ""){
                                                    $remarks .= ", ".$dets['remarks'];
                                                }
                                            }
                                        }

                                    }   
                                    // echo " " .$cat->menu_sub_cat_id   . " : ". BEVERAGE_ID. "<br>";
                                    // if( $cat->menu_sub_cat_id == BEVERAGE_ID){

                                    //     $print_bar_str[] = $val['name'];
                                        
                                    // }
                                }   
                                else{
                                    // $all_str .= $menu_str;
                                    $update_line_ids[]=$dets['id'];
                                    // $has_to_print++;

                                    if(count($dets['modifiers']) > 0){
                                            
                                            
                                        // if($printer['sub_cat_id'] == SUBCAT_BEV){
                                        //     $all_str .= $print_mod_bev;
                                        // }else{
                                        //     $all_str .= $print_mod_food;
                                        // }

                                        if($cat->menu_sub_cat_id != RAMEN_ID){

                                            $all_str .= $this->append_chars($dets['qty'],"right",4," ");
                                            $print_str_part_1_v2  .= "<bold>".$this->append_chars($dets['qty']." @ ","right",4," ")."</bold>";
                                            // echo $str;
                                            $len = strlen($val['name']);

                                            if($len > 30){
                                                $arr2 = str_split($val['name'], 30);
                                                $counter = 1;
                                                foreach($arr2 as $k => $vv){
                                                    if($counter == 1){
                                                       $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                       $print_str_part_1_v2  .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                    }else{
                                                        // if ($val['qty'] == 1) {
                                                            $all_str .= $this->append_chars("","right",4," ");
                                                            $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                            $print_str_part_1_v2  .= $this->append_chars("","right",4," ");
                                                            $print_str_part_1_v2  .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                        // } else {
                                                            // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                                            //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                                        // }
                                                    }
                                                    $counter++;
                                                }

                                            }else{
                                                $all_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                $print_str_part_1_v2  .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                            }

                                            if(isset($dets['remarks']) && $dets['remarks'] != ""){
                                                $all_str .= "     * ";
                                                $all_str .= $this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."\r\n";
                                                $print_str_part_1_v2 .= "<indentbold>". "     * ".$this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."</indentbold>"."\r\n";
                                            }

                                            // echo $str.'ssss';
                                            // echo "<pre>",print_r($dets['modifiers']),"</pre>";die();

                                            foreach ($dets['modifiers'] as $mod_id => $mod) {

                                                $mod_sub_cat = $this->site_model->get_tbl('modifiers',array('mod_id'=>$mod['id']),array(),null,true,'mod_sub_cat_id');
                                                $mod_sc = $mod_sub_cat[0];


                                                $mod_str = "";
                                                $kitchen_mod_slip_printed = $mod['kitchen_slip_printed'];
                                                if($mod['kitchen_slip_printed'] == ""){
                                                    $kitchen_mod_slip_printed = 0;
                                                }
                                                $mod_str .= "     - ";
                                                $mod_str .= $this->append_chars(substrwords($mod['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                    .$this->append_chars(null,"left",8," ")."\r\n";
                                                
                                                if(!empty( $mod_bar_str)){
                                                     $mod_bar_str .= ", ".substrwords($mod['name'],100,"");
                                                }else{
                                                    $mod_bar_str .= substrwords($mod['name'],100,"");
                                                }

                                                if($not_printed_only){
                                                    if($kitchen_mod_slip_printed == 0){ 
                                                        if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                            // $print_mod_bev .= $str;
                                                            $all_str .= $mod_str;
                                                            $print_str_part_1_v2 .= $mod_str;
                                                            $has_to_print++;
                                                        }
                                                        // else{
                                                        //     // $print_mod_food .= $str;
                                                        //     $all_str .= $mod_str;
                                                        // }
                                                        // $all_str .= $mod_str;
                                                        $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                        // $has_to_print++;
                                                    }   
                                                }   
                                                else{
                                                    // echo $printer['sub_cat_id'].'====';
                                                    if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                        // $print_mod_bev .= $str;
                                                        $all_str .= $mod_str;
                                                        $print_str_part_1_v2 .= $mod_str;
                                                        $has_to_print++;
                                                    }
                                                    // else{
                                                    //     // $print_mod_food .= $str;
                                                    //     $all_str .= $mod_str;
                                                    // }
                                                    // $all_str .= $mod_str;
                                                    $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                    // $has_to_print++;
                                                }
                                            }

                                        }
                                       

                                    }else{
                                        $qty += $dets['qty'];
                                        if($remarks == ""){
                                            $remarks = $dets['remarks'];
                                        }else{
                                            if($dets['remarks'] != ""){
                                                $remarks .= ", ".$dets['remarks'];
                                            }
                                        }
                                    }

                                    if(isset($mod_str)){
                                        $print_bar_str[] = $mod_bar_str;
                                    }

                                    $print_bar_str[] = $dets['remarks'];

                                }

                                

                            }

                            if($qty > 0){

                                if($printer['sub_cat_id'] == $cat->menu_sub_cat_id){
                                    $has_to_print++;
                                    $all_str .= $this->append_chars($qty,"right",4," ");
                                    $print_str_part_1_v2 .= "<bold>".$this->append_chars($qty ." @ " ,"right",4," ")."</bold>";
                                    $len = strlen($val['name']);

                                    if($len > 30){
                                        $arr2 = str_split($val['name'], 30);
                                        $counter = 1;
                                        foreach($arr2 as $k => $vv){
                                            if($counter == 1){
                                               $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                $print_str_part_1_v2 .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                            }else{
                                                // if ($val['qty'] == 1) {
                                                    $all_str .= $this->append_chars("","right",4," ");
                                                    $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                    $print_str_part_1_v2 .= $this->append_chars("","right",4," ");
                                                    $print_str_part_1_v2 .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                // } else {
                                                    // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                                    //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                                // }
                                            }
                                            $counter++;
                                        }

                                    }else{
                                        $all_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                        $print_str_part_1_v2 .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                    }

                                    // if(isset($order['type']) && $order['type'] == "App Order" && isset($order['memo']) &&  $order['memo'] != ""){
                                            // $all_str .= "     * ";
                                            // $all_str .= $this->append_chars(ucwords($order['memo']),"right",PAPER_DET_COL_2," ")."\r\n";
                                    // }else{
                                        if(isset($remarks) && $remarks != ""){
                                            $all_str .= "     * ";
                                            $all_str .= $this->append_chars(ucwords($remarks),"right",PAPER_DET_COL_2," ")."\r\n";
                                            $print_str_part_1_v2 .=  "<indentbold>     * ".$this->append_chars(ucwords($remarks),"right",PAPER_DET_COL_2," ")."</indentbold>\r\n";
                                        }

                                       
                                    // }

                                    // if(isset($remarks) && $remarks != ""){
                                        // $all_str .= "     * ";
                                        // $all_str .= $this->append_chars(ucwords($remarks),"right",PAPER_DET_COL_2," ")."\r\n";
                                    // }

                                }

                            }
                            

                       
                            $print_str .= $all_str;
                            // echo $print_str;
                        // }
                    }


                }

               $print_str .= PAPER_LINE."\r\n";
               if($order['table_name'] != ""){
                    // $print_str .=  align_center($order['table_name'],PAPER_WIDTH," ")."\r\n";
                    $print_str .= "Table #: ".$order['table_name']."  ";
                    $print_str_part_3_v2 .= "Table #: ".$order['table_name']."  ";
                }
                if($order['update_date']){
                    $print_str .= $order['update_date']."\r\n";
                    $print_str_part_4_v2 .= $order['update_date']."\r\n";
                }else{
                    $print_str .= $order['datetime']."\r\n";
                    $print_str_part_4_v2 .= $order['datetime']."\r\n";
                }

                 $print_str .=  align_center(strtoupper($order['type']),PAPER_WIDTH," ")."\r\n\r\n";
              
                // var_dump($has_to_print);
                // echo "<pre>",print_r($print_bar_str),"</pre>";die();
                // $has_to_print++; /
                ##### MENU FOR EACH END #######################################################
                if($has_to_print > 0){
                    $js = '';
                    if(PRINT_VERSION && PRINT_VERSION == 'V2'){
                        if(BEVERAGE_BARCODE_ENABLED && count($print_bar_str) > 2){

                            $this->do_print_bar_receipt_v2($print_bar_str);
                         }
                         /// echo "test";die();
                        $this->do_print_os_v2($print_str_part_1_v2,$printer['printer'],$printer['no'],$print_str_part_2_v2,$print_str_part_3_v2,$print_str_part_4_v2);  
                    }else if(PRINT_VERSION && PRINT_VERSION == 'V3'){
                        if(BEVERAGE_BARCODE_ENABLED && count($print_bar_str) > 2){

                            $js_rcp = $this->html_print($print_bar_str);

                            $js_rcps[]=array('printer'=>$printer['printer'],'value'=>$js_rcp);
                         }

                        $js_rcp = $this->html_print($print_str);

                        $js_rcps[]=array('printer'=>$printer['printer'],'value'=>$js_rcp);
                    }else{
                        if(BEVERAGE_BARCODE_ENABLED && count($print_bar_str) > 2){
                            $this->do_print_bar_receipt_v1($print_bar_str,$printer['printer'],$printer['no']);  
                        }else{
                            $this->do_print_os($print_str,$printer['printer'],$printer['no']);  
                        }

                    }
                    if(count($update_line_ids) > 0){
                        foreach ($update_line_ids as $sales_menu_id) {
                            $this->site_model->update_tbl('trans_sales_menus','sales_menu_id',array('kitchen_slip_printed'=>1),$sales_menu_id);      
                        }   
                    }
                    if(count($update_line_mod_ids) > 0){
                        foreach ($update_line_mod_ids as $sales_mod_id) {
                            $this->site_model->update_tbl('trans_sales_menu_modifiers','sales_mod_id',array('kitchen_slip_printed'=>1),$sales_mod_id);      
                        }   
                    }
                    if(count($update_line_submod_ids) > 0){
                        foreach ($update_line_submod_ids as $sales_submod_id) {
                            $this->site_model->update_tbl('trans_sales_menu_submodifiers','sales_submod_id',array('kitchen_slip_printed'=>1),$sales_submod_id);      
                        }   
                    }           
                }else{
                    if(count($update_line_ids) > 0){
                        foreach ($update_line_ids as $sales_menu_id) {
                            $this->site_model->update_tbl('trans_sales_menus','sales_menu_id',array('kitchen_slip_printed'=>1),$sales_menu_id);      
                        }   
                    }
                    if(count($update_line_mod_ids) > 0){
                        foreach ($update_line_mod_ids as $sales_mod_id) {
                            $this->site_model->update_tbl('trans_sales_menu_modifiers','sales_mod_id',array('kitchen_slip_printed'=>1),$sales_mod_id);      
                        }   
                    }
                    if(count($update_line_submod_ids) > 0){
                        foreach ($update_line_submod_ids as $sales_submod_id) {
                            $this->site_model->update_tbl('trans_sales_menu_submodifiers','sales_submod_id',array('kitchen_slip_printed'=>1),$sales_submod_id);      
                        }   
                    }
                }
                // echo "<pre>".$print_str."</pre>";
            }################# END PRINT #######################################################

            if($this->input->post('isjson') == 1){
                echo json_encode(array('js_rcps'=>$js_rcps));
            }else{
                return array('js_rcps'=>$js_rcps);
            }
            
        }
        public function print_os_removes($sales_id=null,$removes=array()){
            $reasons = $removes;
            $reasons = sess('reasons');
            $printers = $this->set_printers();
            $return = $this->get_order(false,$sales_id);
            $order = $return['order'];
            $details = $return['details'];
            $cancels = array();
            foreach ($reasons as $ctr => $rea) {
                if($rea['type'] == 'mod' || $rea['type'] == 'menu'){
                    $exp = explode(' - ', $rea['ref_name']);
                    $type = $rea['type'];
                    $name = $exp[1];
                    $qty = explode(':', $exp[2]);
                    $price = $exp[3];
                    $on_id = null;
                    $menuLine = explode(' ',$exp[0]);
                    if(count($menuLine) > 1){
                        $on = explode(':',$menuLine[0]);
                        $ln = explode(':',$menuLine[1]);
                        $on_id = $on[1]; 
                        $ln_id = $ln[1]; 
                    }
                    else{
                        $ln = explode(':',$menuLine[0]);
                        $ln_id = $ln[1]; 
                    }
                    $cancels[] = array(
                        'line' => $ln_id,
                        'item' => $rea['ref_id'],
                        'name' => $name,
                        'type' => $type,
                        'qty' => $qty[1],
                        'price' => $price,
                        'on_id' => $on_id,
                        'reason'=>$rea['reason'],
                        'datetime'=>$rea['datetime']
                    );                
                }
            }
            $merge = array();
            foreach ($cancels as $ctr => $cn) {
                if($cn['type'] == 'menu'){
                    $merge[$cn['line']] = array(
                        'item'  => $cn['item'],
                        'name'  => $cn['name'],
                        'reason' =>$cn['reason'],
                        'type' => $cn['type'],
                        'qty' => $cn['qty'],
                        'price' => $cn['price'],
                        'mods' => array(),
                        'on_id' => $cn['on_id']
                    );
                }
            }
            foreach ($cancels as $ctr => $cn) {
                if($cn['type'] == 'mod'){
                    if(isset($merge[$cn['line']]) ){
                            if($cn['line'] == $cn['line']){
                                $mrMD = $merge[$cn['line']];
                                $mrMD['mods'][] = array('mod_name'=>$cn['name'],'mod_price'=>$cn['price']);
                                $merge[$cn['line']] = $mrMD;                                
                            }
                    }
                    else{
                        $merge[$cn['line']] = array(
                            'item'  => $cn['item'],
                            'name'  => $cn['name'],
                            'reason' =>$cn['reason'],
                            'type' => $cn['type'],
                            'mods' => array(),
                            'on_id' => $cn['on_id']
                        );
                    }
                }
            }
            foreach ($printers as $name => $printer) {
                $has_to_print = 0;
                $print_str = $this->os_header();
                $print_str .=  align_center(strtoupper('Cancelled ORDER SLIP'),38," ")."\r\n";
                $print_str .= "Reference # ".$order['sales_id']." - ".strtoupper($order['type'])."\r\n";
                if($order['waiter_username'] != "")
                    $print_str .= "FS: ".$order['waiter_username']."\r\n";
                $print_str .= $order['datetime']."\r\n";
                $print_str .= "======================================"."\r\n";
                $print_str .=  align_center(strtoupper($name),38," ")."\r\n";
                if($order['table_name'] != ""){
                    $print_str .=  align_center($order['table_name'],38," ")."\r\n\r\n";
                }
                foreach ($merge as $line_id => $val) {
                    if($val['type'] == 'menu'){
                        $print_str .= $this->append_chars("**Cancelled Menu(s)","right",23," ")."\r\n";
                        $category = $this->site_model->get_tbl('menus',array('menu_id'=>$val['item']),array(),null,true,'menu_sub_cat_id');
                        $cat = $category[0];
                        if($printer['sub_cat_id'] == $cat->menu_sub_cat_id){
                            $print_str .= $this->append_chars($val['qty'],"right",4," ");
                            
                            $len = strlen($val['name']);
                            if($len > 30){
                                $arr2 = str_split($val['name'], 30);
                                $counter = 1;
                                foreach($arr2 as $k => $vv){
                                    if($counter == 1){
                                       $print_str .= $this->append_chars(substrwords($vv,28,""),"right",28," ").$this->append_chars(round($val['price'],2),"right",6," ")."\r\n"; 
                                        
                                    }else{
                                        $print_str .= $this->append_chars("","right",4," ");
                                        $print_str .= $this->append_chars(substrwords($vv,100,""),"right",100," ").$this->append_chars(null,"left",8," ")."\r\n";
                                    }
                                    $counter++;
                                }

                            }else{
                                $print_str .= $this->append_chars(substrwords($val['name'],28,""),"right",28," ").$this->append_chars(round($val['price'],2),"right",6," ")."\r\n"; 
                            }                       
                            if(count($val['mods']) > 0){
                                foreach ($val['mods'] as $key => $mod) {
                                    $print_str .= "     - ";
                                    $print_str .= $this->append_chars(substrwords($mod['mod_name'],26,""),"right",26," ")
                                        .$this->append_chars(round($mod['mod_price'],2),"right",6," ")."\r\n";
                                }
                            }
                            $has_to_print++;
                            ######    
                        }
                    }###########################

                }

                foreach ($merge as $line_id => $val) {
                    if($val['type'] == 'mod'){
                        $print_str .= "\r\n".$this->append_chars("**Cancelled Modifier(s)","right",23," ")."\r\n";
                        $category = $this->site_model->get_tbl('menus',array('menu_id'=>$val['on_id']),array(),null,true,'menu_name,menu_sub_cat_id');
                        $cat = $category[0];
                        if($printer['sub_cat_id'] == $cat->menu_sub_cat_id){
                            $print_str .= $this->append_chars($val['name']." on ".$cat->menu_name." line ".$line_id,"right",26," ").$this->append_chars(null,"left",8," ")."\r\n";                        
                            $has_to_print++;
                        }
                    }
                }

                if($has_to_print > 0){
                    if(PRINT_VERSION && PRINT_VERSION == 'V2'){
                        $this->do_print_os_v2($print_str,$printer['printer'],$printer['no']);  
                    }else{
                        $this->do_print_os($print_str,$printer['printer'],$printer['no']);  
                    }
                   // $this->do_print_os($print_str,$printer['printer'],$printer['no']);  
               }
            }
        }
        public function do_print_os($print_str="",$kitchen_printer="",$kitchen_printer_no=1){           
            $js_rcp = '';

            if(PRINT_VERSION && PRINT_VERSION=='V3'){
                $js_rcp = $this->html_print($print_str);
                // echo $js_rcp;exit;
                // echo json_encode(array('js_rcp'=>$js_rcp));
                return array('js_rcp'=>$js_rcp);
            }else{
                $filename = "order.txt";
                $fp = fopen($filename, "w+");
                fwrite($fp,$print_str);
                fclose($fp);
                $batfile = "print.bat";
                $fh1 = fopen($batfile,'w+');
                $root = dirname(BASEPATH);
                $battxt = "NOTEPAD /P \"".realpath($root."/".$filename)."\" \r\n";
                if($kitchen_printer != ""){
                    if($kitchen_printer != 'DEFAULT')
                        $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".$kitchen_printer."\"  ";
                }
                fwrite($fh1, $battxt);
                fclose($fh1);
                session_write_close();
                for ($i=0; $i < $kitchen_printer_no; $i++) { 
                    exec($batfile);
                }
                session_start();
                unlink($filename);
                unlink($batfile);
            }
            
        }   
        public function os_header(){
            $branch_details = $this->setup_model->get_branch_details();
            $branch = array();
            foreach ($branch_details as $bv) {
                $branch = array(
                    'id' => $bv->branch_id,
                    'res_id' => $bv->res_id,
                    'branch_code' => $bv->branch_code,
                    'name' => $bv->branch_name,
                    'branch_desc' => $bv->branch_desc,
                    'contact_no' => $bv->contact_no,
                    'delivery_no' => $bv->delivery_no,
                    'address' => $bv->address,
                    'base_location' => $bv->base_location,
                    'currency' => $bv->currency,
                    'inactive' => $bv->inactive,
                    'tin' => $bv->tin,
                    'machine_no' => $bv->machine_no,
                    'bir' => $bv->bir,
                    'permit_no' => $bv->permit_no,
                    'serial' => $bv->serial,
                    'accrdn' => $bv->accrdn,
                    'email' => $bv->email,
                    'website' => $bv->website,
                    'store_open' => $bv->store_open,
                    'store_close' => $bv->store_close,
                );
            }
            $userdata = $this->session->userdata('user');
            $print_str = "\r\n\r\n";
            $wrap = wordwrap($branch['name'],35,"|#|");
            $exp = explode("|#|", $wrap);
            foreach ($exp as $v) {
                $print_str .= align_center($v,38," ")."\r\n";
            }
            $wrap = wordwrap($branch['address'],35,"|#|");
            $exp = explode("|#|", $wrap);
            foreach ($exp as $v) {
                $print_str .= align_center($v,38," ")."\r\n";
            }
            $print_str .= 
             align_center('TIN: '.$branch['tin'],38," ")."\r\n"
            .align_center('ACCRDN: '.$branch['accrdn'],38," ")."\r\n"
            // .$this->align_center('BIR # '.$branch['bir'],42," ")."\r\n"
            .align_center('MIN: '.$branch['machine_no'],38," ")."\r\n"
            // .align_center('SN: '.$branch['serial'],38," ")."\r\n"
            .align_center('PERMIT: '.$branch['permit_no'],38," ")."\r\n";
            $print_str .= "======================================"."\r\n";
            return $print_str;
        }

        public function print_checklist($sales_id=null,$not_printed_only=true,$reprinted=false,$use_main=false){
            
            // echo 'ssss'; die();
            // $printers = $this->set_printers();
            if($use_main){
                $this->db = $this->load->database('main',true);
            }
            $return = $this->get_order(false,$sales_id);
            $order = $return['order'];
            $details = $return['details'];
            $details2 = $return['details2'];


            $update_line_ids = array();
            $update_line_mod_ids = array();
            $print_bar_str = array();
                $print_bar_str[] = strtoupper($order['type']);
                $print_bar_str[] = "Reference # ".$order['sales_id'];
            // echo "<pre>",print_r($printers),"</pre>";die();
            // foreach ($printers as $name => $printer) {
                $has_to_print = 0;
                $update_line_ids = array();
                // $print_str = $this->os_header();
                $print_str = "";
                $print_str_part_1_v2 ="";
                $print_str_part_2_v2 ="";
                $print_str_part_3_v2 ="";
                $print_str_part_4_v2 ="";

                $print_str .=  align_center(strtoupper('DISPATCH'),PAPER_WIDTH," ")."\r\n";
                $print_str .= "Reference # ".$order['sales_id']." - ".strtoupper($order['type'])."\r\n";
                if($order['table_name'] != ""){
                    // $print_str .=  align_center($order['table_name'],PAPER_WIDTH," ")."\r\n";
                    $print_str .= "Table #: ".$order['table_name']."\r\n";
                }
                $guest = (int)$order['guest'];
                // echo var_dump($guest);
                if($guest == 0)
                    $guest = 1;
                $print_str .= "No Guest: ".$guest."\r\n";
              
                $serve_no = $order['serve_no'];
                if($serve_no > 0){
                    $print_str .= "Serve No: ".$serve_no."\r\n";
                    $print_str_part_3_v2 .= "Serve No: ".$serve_no."\r\n";
                }
                if($order['waiter_username'] != ""){
                    $print_str .= "FS: ".$order['waiter_username']."\r\n";
                    $print_str_part_2_v2 .=  "FS: ".strtoupper($order['waiter_username'])."              ".strtoupper($order['type'])."\r\n";

                }
                if($order['update_date']){
                    $print_str .= $order['update_date']."\r\n";
                }else{
                    $print_str .= $order['datetime']."\r\n";
                }
                $print_str .= "============"."\r\n";
                if($order['inactive'] == 1){
                    $print_str .=  align_center('*** VOIDED TRANSACTION ***',PAPER_WIDTH," ")."\r\n\r\n";
                }
                // $print_str .=  align_center(strtoupper($name),PAPER_WIDTH," ")."\r\n\r\n";
                
                if($reprinted){
                    $print_str .=  align_center('[REPRINTED]',PAPER_WIDTH," ")."\r\n\r\n";
                }
               

                foreach ($details2 as $menu_id => $val) {
                    if(isset($val['retail']) &&  $val['retail'] == 1){
                        continue;
                    }
                    $category = $this->site_model->get_tbl('menus',array('menu_id'=>$val['menu_id']),array(),null,true,'menu_sub_cat_id');
                    $cat = $category[0];
                    // echo $this->db->last_query();die();
                    // echo "<pre>",print_r($cat->menu_sub_cat_id),"</pre>";die();
                    // if($printer['sub_cat_id'] == $cat->menu_sub_cat_id){
                        $all_str = "";
                        $menu_str = "";
                        
                        $qty = 0;
                        $remarks = "";
                        $modi = 0;
                        foreach($val['dets'] as $line_id =>$dets){
                            
                            if($not_printed_only){

                                if($dets['kitchen_slip_printed'] == 0){  
                                // var_dump($not_printed_only);
                                    // $all_str .= $menu_str;
                                    $update_line_ids[]=$dets['id'];
                                    $has_to_print++;


                                    if(count($dets['modifiers']) > 0){
                                        $print_str_part_1_v2 .= "<bold>";
                                        $print_str_part_1_v2 .= $this->append_chars($dets['qty']." @ ","right",4," ");
                                        $print_str_part_1_v2 .= "</bold>";
                                        
                                        $all_str .= $this->append_chars($dets['qty'],"right",4," ");

                                        $len = strlen($val['name']);
 
                                        if($len > 30){
                                            $arr2 = str_split($val['name'], 30);
                                            $counter = 1;
                                          

                                            foreach($arr2 as $k => $vv){
                                                if($counter == 1){
                                                   $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                    
                                                }else{
                                                    // if ($val['qty'] == 1) {
                                                        $all_str .= $this->append_chars("","right",4," ");
                                                        $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                    // } else {
                                                        // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                                        //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                                    // }

                                                }

                                                $counter++;
                                            }

                                        }else{
                                            $all_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                            $print_str_part_1_v2  .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";

                                        }

                                        if(isset($dets['remarks']) && $dets['remarks'] != ""){
                                            $print_str_part_1_v2  .= "<indentbold>     * ".$this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."</indentbold>"."\r\n";
                                        }

                                        // if(isset($order['type']) && $order['type'] == "App Order" && isset($order['memo']) &&  $order['memo'] != ""){
                                                // $all_str .= "     * ";
                                                // $all_str .= $this->append_chars(ucwords($order['memo']),"right",PAPER_DET_COL_2," ")."\r\n";
                                        // }else{
                                            // ilipat daw sa baba
                                            // if(isset($dets['remarks']) && $dets['remarks'] != ""){
                                            //     $all_str .= "     * ";
                                            //     $all_str .= $this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."\r\n";
                                            // }
                                        // }

                                        foreach ($dets['modifiers'] as $mod_id => $mod) {
                                            $mod_str = "";
                                            $kitchen_mod_slip_printed = $mod['kitchen_slip_printed'];
                                            if($mod['kitchen_slip_printed'] == ""){
                                                $kitchen_mod_slip_printed = 0;
                                            }
                                            $mod_str .= "     - ";
                                            $mod_str .= $this->append_chars(substrwords($mod['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                .$this->append_chars(null,"left",8," ")."\r\n";
                                            if($not_printed_only){
                                                if($kitchen_mod_slip_printed == 0){ 
                                                    $all_str .= $mod_str;
                                                    $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                    $has_to_print++;
                                                }   
                                            }   
                                            else{
                                                $all_str .= $mod_str;
                                                $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                $has_to_print++;
                                            }
                                        }

                                        if(isset($dets['remarks']) && $dets['remarks'] != ""){
                                            $all_str .= "     * ";
                                            $all_str .= $this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."\r\n";
                                        }


                                    }else{
                                         // echo "asdasdasdsadsadasd";
                                         //             echo "<pre>aa:",print_r($val),"</pre>";//die();
                                        $qty += $dets['qty'];
                                        if($remarks == ""){
                                            $remarks = $dets['remarks'];
                                        }else{
                                            if($dets['remarks'] != ""){
                                                $remarks .= ", ".$dets['remarks'];
                                            }
                                        }
                                    }

                                }   
                                // echo " " .$cat->menu_sub_cat_id   . " : ". BEVERAGE_ID. "<br>";
                                // if( $cat->menu_sub_cat_id == BEVERAGE_ID){

                                //     $print_bar_str[] = $val['name'];
                                    
                                // }
                            }   
                            else{
                                // $all_str .= $menu_str;
                                $update_line_ids[]=$dets['id'];
                                $has_to_print++;

                                if(count($dets['modifiers']) > 0){
                                        
                                        $all_str .= $this->append_chars($dets['qty'],"right",4," ");
                                        $print_str_part_1_v2  .= "<bold>".$this->append_chars($dets['qty']." @ ","right",4," ")."</bold>";

                                        $len = strlen($val['name']);

                                        if($len > 30){
                                            $arr2 = str_split($val['name'], 30);
                                            $counter = 1;
                                            foreach($arr2 as $k => $vv){
                                                if($counter == 1){
                                                   $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                   $print_str_part_1_v2  .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";

                                                }else{
                                                    // if ($val['qty'] == 1) {
                                                        $all_str .= $this->append_chars("","right",4," ");
                                                        $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                  
                                                        $print_str_part_1_v2  .= $this->append_chars("","right",4," ");
                                                        $print_str_part_1_v2  .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";

                                                    // } else {
                                                        // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                                        //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                                    // }
                                                }
                                                $counter++;
                                            }

                                        }else{
                                            $all_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                            $print_str_part_1_v2  .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";

                                        }

                                        // if(isset($order['type']) && $order['type'] == "App Order" && isset($order['memo']) &&  $order['memo'] != ""){
                                                // $all_str .= "     * ";
                                                // $all_str .= $this->append_chars(ucwords($order['memo']),"right",PAPER_DET_COL_2," ")."\r\n";
                                        // }else{
                                            if(isset($dets['remarks']) && $dets['remarks'] != ""){
                                                $all_str .= "     * ";
                                                $all_str .= $this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."\r\n";
                                                $print_str_part_1_v2 .= "<indentbold>". "     * ".$this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."</indentbold>"."\r\n";

                                            }
                                        // }

                                        foreach ($dets['modifiers'] as $mod_id => $mod) {
                                            $mod_str = "";
                                            $kitchen_mod_slip_printed = $mod['kitchen_slip_printed'];
                                            if($mod['kitchen_slip_printed'] == ""){
                                                $kitchen_mod_slip_printed = 0;
                                            }
                                            $mod_str .= "     - ";
                                            $mod_str .= $this->append_chars(substrwords($mod['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                .$this->append_chars(null,"left",8," ")."\r\n";
                                            if($not_printed_only){
                                                if($kitchen_mod_slip_printed == 0){ 
                                                    $all_str .= $mod_str;
                                                    $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                    $has_to_print++;
                                                }   
                                            }   
                                            else{
                                                $all_str .= $mod_str;
                                                $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                $has_to_print++;
                                            }
                                        }


                                    }else{
                                        $qty += $dets['qty'];
                                        if($remarks == ""){
                                            $remarks = $dets['remarks'];
                                        }else{
                                            if($dets['remarks'] != ""){
                                                $remarks .= ", ".$dets['remarks'];
                                            }
                                        }
                                    }

                            }



                        }

                        if($qty > 0){
                            $all_str .= $this->append_chars($qty,"right",4," ");
                            $print_str_part_1_v2 .= "<bold>".$this->append_chars($qty ." @ " ,"right",4," ")."</bold>";

                            $len = strlen($val['name']);

                            if($len > 30){
                                $arr2 = str_split($val['name'], 30);
                                $counter = 1;
                                foreach($arr2 as $k => $vv){
                                    if($counter == 1){
                                       $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                        $print_str_part_1_v2 .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
            
                                    }else{
                                        // if ($val['qty'] == 1) {
                                            $all_str .= $this->append_chars("","right",4," ");
                                            $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                            $print_str_part_1_v2 .= $this->append_chars("","right",4," ");
                                            $print_str_part_1_v2 .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
           
                                        // } else {
                                            // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                            //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                        // }
                                    }
                                    $counter++;
                                }

                            }else{
                                $all_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                $print_str_part_1_v2 .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";

                            }

                            // if(isset($order['type']) && $order['type'] == "App Order" && isset($order['memo']) &&  $order['memo'] != ""){
                                    // $all_str .= "     * ";
                                    // $all_str .= $this->append_chars(ucwords($order['memo']),"right",PAPER_DET_COL_2," ")."\r\n";
                            // }else{
                                if(isset($remarks) && $remarks != ""){
                                    $all_str .= "     * ";
                                    $all_str .= $this->append_chars(ucwords($remarks),"right",PAPER_DET_COL_2," ")."\r\n";
                                     $print_str_part_1_v2 .=  "<indentbold>     * ".$this->append_chars(ucwords($remarks),"right",PAPER_DET_COL_2," ")."</indentbold>\r\n";

                                }

                                if( $cat->menu_sub_cat_id == BEVERAGE_ID){

                                    $print_bar_str[] = $val['name'];
            
                                }
                            // }

                            // if(isset($remarks) && $remarks != ""){
                                // $all_str .= "     * ";
                                // $all_str .= $this->append_chars(ucwords($remarks),"right",PAPER_DET_COL_2," ")."\r\n";
                            // }
                        }
                        

                   
                        $print_str .= $all_str;
                // echo $print_str;
                    // }
                }
                 if($order['table_name'] != ""){
                    // $print_str .=  align_center($order['table_name'],PAPER_WIDTH," ")."\r\n";
                    $print_str .= "Table #: ".$order['table_name']."  ";
                    $print_str_part_3_v2 .= "Table #: ".$order['table_name']."  ";
                }
                if($order['update_date']){
                    $print_str .= $order['update_date']."\r\n";
                    $print_str_part_4_v2 .= $order['update_date']."\r\n";
                }else{
                    $print_str .= $order['datetime']."\r\n";
                    $print_str_part_4_v2 .= $order['datetime']."\r\n";
                }

                // var_dump($has_to_print);
                // echo "<pre>",print_r($print_bar_str),"</pre>";die();
                // $has_to_print++;
                ##### MENU FOR EACH END #######################################################
                if($has_to_print > 0){
                    if(PRINT_VERSION && PRINT_VERSION == 'V2'){
                         $this->do_print_os_v2($print_str_part_1_v2,DISPATCH_PRINTER,DISPATCH_PRINTER_NUM,$print_str_part_2_v2,$print_str_part_3_v2,$print_str_part_4_v2,true);  
                    }if(PRINT_VERSION && PRINT_VERSION == 'V3'){
                        echo json_encode(array('message'=>'success','js_rcp'=>$this->html_print($print_str)));
                    }else{

                        $filename = "checklist.txt";
                        $fp = fopen($filename, "w+");
                        fwrite($fp,$print_str);
                        fclose($fp);

                        $batfile = "print.bat";
                        $fh1 = fopen($batfile,'w+');
                        $root = dirname(BASEPATH);
                        $battxt ="NOTEPAD /P \"".realpath($root."/".$filename)."\"";

                        // if(BILLING_PRINTER){
                        //     if(BILLING_PRINTER != "DEFAULT"){
                        //         $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".BILLING_PRINTER."\"  ";   
                        //     }
                        // }

                        // if($openDrawer){
                        //     $pet = $this->cashier_model->get_pos_settings();
                        //     $open_drawer_printer = $pet->open_drawer_printer;
                        //     if($open_drawer_printer != ""){
                        //         $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".$open_drawer_printer."\"  ";   
                        //     }            
                        // }

                        fwrite($fh1, $battxt);
                        fclose($fh1);
                        session_write_close();
                        // exec($filename);
                        // for ($i=0; $i < $no_prints; $i++) { 
                        exec($batfile);
                        // }
                        session_start();
                        unlink($filename);
                        unlink($batfile);
                    }

                }
                // echo "<pre>".$print_str."</pre>";
            // }################# END PRINT #######################################################
        }


    #REINPUT SECTION
        public function retrack(){
            sess_clear('trans_mod_cart');
            sess_clear('trans_submod_cart');
            sess_clear('trans_cart');
            sess_clear('counter');
            sess_clear('trans_disc_cart');
            sess_clear('trans_charge_cart');
            sess_clear('reasons');
            sess_clear('trans_type_cart');
            $this->load->helper('dine/cashier_helper');
            $data = $this->syter->spawn(null);
            $data['page_title'] = fa('fa-random').' Retracking';
            $data['code'] = retrackPage();
            $data['load_js'] = 'dine/cashier.php';
            $data['use_js'] = 'retrackJs';
            $data['sideBarHide'] = true;
            $this->load->view('page',$data);
        }
        public function retrack_load(){
            $this->load->library('make');
            $this->site_model->db = $this->load->database('main', TRUE);
            $set = $this->cashier_model->get_pos_settings();
            start_load(0);
            sleep(1);
            $read_date = $this->input->post('read_date');
            update_load(10);
            $sargs["DATE(shifts.check_in) = DATE('".date2Sql($read_date)."') "] = array('use'=>'where','val'=>null,'third'=>false);
            $join['users'] = array('content'=>'shifts.user_id = users.id');
            $select = "shifts.*,users.fname,users.lname,users.mname,users.suffix,users.username";
            $shift_results = $this->site_model->get_tbl('shifts',$sargs,array('check_in'=>'desc'),$join,true,$select);
            $shift_ids = array();
            foreach ($shift_results as $res) {
                $shift_ids[] = $res->shift_id;
            }    
            // $args   = $this->get_from_to_read_date($read_date);
            $args['trans_sales.shift_id'] = $shift_ids;
            $results = $this->cashier_model->get_trans_sales(null,$args);
            foreach ($results as $res) {
                if($res->type_id == 10){
                    $this->make->sRow();
                        $this->make->td($res->sales_id);
                        $this->make->td($res->trans_ref);
                        $this->make->td(sql2Date($res->datetime));
                        $this->make->td(toTimeW($res->datetime));
                        $this->make->td(num($res->total_amount));
                        $this->make->td(strtoupper($res->username));
                        $status = "";
                            if($res->trans_ref != "" && $res->inactive == 0){
                                $status = "SETTLED";
                            }
                            else if($res->trans_ref == "" && $res->inactive == 1){
                                $status = "CANCEL";
                            }  
                            else if($res->trans_ref != "" && $res->inactive == 1){
                                $status = "VOID";
                            }  
                            else{
                                $status = "OPEN";
                            }  
                        $this->make->td($status);
                    $this->make->eRow();
                }
            }
            $sales_rows = $this->make->code();
            update_load(60);
            

            $ids = explode(',',$set->controls);
            $types = array();
            foreach($ids as $value){
                $text = explode('=>',$value);
                if($text[0] == 1){
                    $texts='dine-in';
                }else{
                    $texts=$text[1];
                }
                $types[$text[1]] = $texts;                
            }

            foreach ($shift_results as $res) {
                $in = "";
                if($res->check_in != "")
                    $in = toTimeW($res->check_in);
                $out = "";
                if($res->check_out != "")
                    $out = toTimeW($res->check_out);
                $this->make->sRow();
                    $this->make->td(strtoupper($res->username));
                    $this->make->td(sql2Date($res->check_in));
                    $this->make->td($in);
                    $this->make->td($out);
                    $cashout = $res->cashout_id;
                    if($res->xread_id == "")
                        $cashout = "None";
                    $this->make->td($cashout);
                    $xread = $res->xread_id;
                    if($res->xread_id == "")
                        $xread = "None";
                    $this->make->td($xread);

                    $add = $this->make->button(fa('fa-plus'),array('id'=>'add-shift-'.$res->shift_id,'class'=>'add-shift-order btn-sm','style'=>'height:20px;line-height:0px;','ref'=>$res->shift_id,'user'=>$res->user_id,'return'=>true),'primary');
                    $sel = $this->make->select(null,'type-shift-'.$res->shift_id,$types,null,array('return'=>true),'',$add);
                    $this->make->td($sel);
                $this->make->eRow();
            }    
            $shift_rows = $this->make->code();            
            update_load(100);
            echo json_encode(array('sales_rows'=>$sales_rows,'shift_rows'=>$shift_rows));
        }
        public function get_from_to_read_date($date){
            $rargs["DATE(read_details.read_date) = DATE('".date2Sql($date)."') "] = array('use'=>'where','val'=>null,'third'=>false);
            $select = "read_details.*";
            $results = $this->site_model->get_tbl('read_details',$rargs,array('scope_from'=>'asc'),"",true,$select);
            $args = array();
            $from = "";
            $to = "";
            $datetimes = array();
            foreach ($results as $res) {
                $datetimes[] = $res->scope_from;
                $datetimes[] = $res->scope_to;
            }
            usort($datetimes, function($a, $b) {
              $ad = new DateTime($a);
              $bd = new DateTime($b);
              if ($ad == $bd) {
                return 0;
              }
              return $ad > $bd ? 1 : -1;
            });
            foreach ($datetimes as $dt) {
                $from = $dt;
                break;
            }    
            foreach ($datetimes as $dt) {
                $to = $dt;
            }    
            if($from != "" && $to != ""){
                $args["trans_sales.datetime  BETWEEN '".$from."' AND '".$to."'"] = array('use'=>'where','val'=>null,'third'=>false);
            }
            else{
                $args["DATE(trans_sales.datetime) = DATE('".date2Sql($date)."') "] = array('use'=>'where','val'=>null,'third'=>false);
                $from = date('Y-m-d 00:00',strtotime($date));
                $to = date('Y-m-d 24:00',strtotime($date));
            }
            return $args;
        }
        public function counter_retrack($type=null,$sales_id=null){
            $this->load->model('site/site_model');
            $this->load->model('dine/cashier_model');
            $this->load->helper('dine/cashier_helper');
            $data = $this->syter->spawn(null);
            $typeCN = sess('trans_type_cart');

            $loaded = null;
            $order = array();

            $loc_res = $this->site_model->get_tbl('settings',array(),array(),null,true,'*',null,1);
            $local_tax = $loc_res[0]->local_tax;          
            $trans = $this->retrack_trans(false,$type);
            $time = $trans['datetime'];            
           
            if(isset($typeCN[0]['table'])){
                $tbl = $this->cashier_model->get_tables($typeCN[0]['table']);
                if($tbl){
                    $tcn = $typeCN[0];
                    $tcn['table_name'] = $tbl[0]->name;
                    $typeCN[0] = $tcn;
                    sess_initialize('trans_type_cart',$typeCN);
                }
            }
            $trans['user_id'] = $typeCN[0]['re_user_id'];
            $trans['shift_id'] = $typeCN[0]['re_shift_id'];
            sess_initialize('counter',$trans);
            
            $data['code'] = counterRetrackPage($type,$time,$loaded,$order,$typeCN,$local_tax);            
            $data['add_css'] = array('css/virtual_keyboard.css', 'css/cashier.css');
            $data['add_js'] = array('js/jquery.keyboard.extension-navigation.min.js','js/jquery.keyboard.min.js','js/jquery.scannerdetection.js');           
            $data['load_js'] = 'dine/cashier.php';
            $data['use_js'] = 'counterRetrackJs';
            $data['noNavbar'] = true;
            $this->load->view('cashier',$data);
        }
        function edit_datetime(){
            $this->load->helper('dine/cashier_helper');
            $data = $this->syter->spawn(null,false);
            $this->make->input('Date & Time','datetime',null,null,array('class'=>'rOkay datetimepicker','style'=>'position:initial;'),fa('fa-calendar'));
            $data['code'] = $this->make->code();
            // $data['add_css'] = array('css/datepicker/datepicker.css','css/daterangepicker/daterangepicker-bs3.css');
            // $data['add_js'] = array('js/plugins/datepicker/bootstrap-datepicker.js','js/plugins/daterangepicker/daterangepicker.js');
            $data['load_js'] = 'dine/cashier';
            $data['use_js'] = 'editDatetimeJs';
            $this->load->view('load',$data);
        }
        function update_datetime_trans(){
            $counter = sess('counter');
            $counter['datetime'] = date2SqlDateTime($this->input->post('datetime'));
            sess_initialize('counter',$counter);
            echo $counter['datetime'];
        }
        public function order_to_main($sales_order_id){
            $this->load->model('dine/main_model');
            $this->load->model('dine/cashier_model');
            $this->load->model('site/site_model');
            $args = array();
            $orders = array();
            $cols = array();
            // if($date_from != null)
            //    $args['trans_sales.datetime >='] = $date_from;
            // if($date_to != null)
            //    $args['trans_sales.datetime <='] = $date_to;
            
           
            $args =  array("trans_sales.sales_id" => $sales_order_id);
            $result = $this->cashier_model->get_just_trans_sales(
                null,
                $args,
                'asc'
            );
            $orders = $result->result();
            $cols = $result->list_fields();
            $prints = "";
            $sales = array();
            $sales_ids = array();
            if(count($orders) > 0 ){
                foreach ($orders as $ord) {
                    $row = array();
                    $sales_ids[] = $ord->sales_id;
                    foreach ($cols as $col) {
                        $row[$col] = $ord->$col;
                    }
                    $row['pos_id'] = TERMINAL_ID;
                    $sales[] = $row;
                }

                // $args['trans_sales.sales_id'] = $sales_ids;
                // $args['trans_sales.pos_id'] = TERMINAL_ID;
                // $this->main_model->delete_trans_tbl_batch('trans_sales',$args);
                $this->main_model->add_trans_sales_batch($sales);

                $tbl['trans_sales_charges'] = $this->cashier_model->get_trans_sales_charges(null,array('sales_id'=>$sales_ids));
                $tbl['trans_sales_items'] = $this->cashier_model->get_trans_sales_items(null,array('sales_id'=>$sales_ids));
                $tbl['trans_sales_discounts'] = $this->cashier_model->get_trans_sales_discounts(null,array('sales_id'=>$sales_ids));
                $tbl['trans_sales_menu_modifiers'] = $this->cashier_model->get_trans_sales_menu_modifiers(null,array('sales_id'=>$sales_ids));
                $tbl['trans_sales_menus'] = $this->cashier_model->get_trans_sales_menus(null,array('sales_id'=>$sales_ids));
                $tbl['trans_sales_no_tax'] = $this->cashier_model->get_trans_sales_no_tax(null,array('sales_id'=>$sales_ids));
                $tbl['trans_sales_payments'] = $this->cashier_model->get_trans_sales_payments(null,array('sales_id'=>$sales_ids));
                $tbl['trans_sales_tax'] = $this->cashier_model->get_trans_sales_tax(null,array('sales_id'=>$sales_ids));
                $tbl['trans_sales_zero_rated'] = $this->cashier_model->get_trans_sales_zero_rated(null,array('sales_id'=>$sales_ids));
                $tbl['trans_sales_local_tax'] = $this->cashier_model->get_trans_sales_local_tax(null,array('sales_id'=>$sales_ids));
                $tbl['reasons'] = $this->cashier_model->get_just_reasons($sales_ids);
                // echo var_dump($tbl['trans_sales_local_tax'])
                $details = array();
                foreach ($tbl as $table => $row) {
                    $cl = $this->site_model->get_tbl_cols($table);
                    unset($cl[0]);
                    $dets = array();
                    foreach ($row as $r) {
                        $det = array();
                        foreach ($cl as $c) {
                            $det[$c] = $r->$c;
                        }
                        $det['pos_id'] = TERMINAL_ID;
                        $dets[] = $det;
                    }####
                    $details[$table]=$dets;
                }
                #
                foreach ($details as $table => $tbl_rows) {
                    if(count($tbl_rows) > 0){
                        $bargs = array();
                        if($table == 'reasons'){
                            $bargs[$table.'.trans_id'] = $sales_ids;                        
                        }
                        else
                            $bargs[$table.'.sales_id'] = $sales_ids;                        
                        $bargs[$table.'.pos_id'] = TERMINAL_ID;
                        $this->main_model->delete_trans_tbl_batch($table,$bargs);
                        $this->main_model->add_trans_tbl_batch($table,$tbl_rows);
                    }
                }
                #
            }
        }
    #########################################
    #########################################
    public function print_kitchen_order_slip($sales_id=null,$kitchen_printer=null,$kitchen_printer_no=0,$just_true=false){
        $return = $this->get_order(false,$sales_id);
        $branch = $this->get_branch_details(false);
        $order = $return['order'];
        $details = $return['details'];

        $discounts = $return['discounts'];
        $totalsss = $this->total_trans(false,$details,$discounts);
        $discs = $totalsss['discs'];


        $print_str = "\r\n\r\n\r\n\r\n";
        $wrap = wordwrap($branch['name'],25,"|#|");
        $exp = explode("|#|", $wrap);
        foreach ($exp as $v) {
            $print_str .= $this->align_center($v,38," ")."\r\n";
        }

        $wrap = wordwrap($branch['address'],35,"|#|");
        $exp = explode("|#|", $wrap);
        foreach ($exp as $v) {
            $print_str .= $this->align_center($v,38," ")."\r\n";
        }

            // .$this->align_center(wordwrap($branch['address'],20,"|#|"),38," ")."\r\n"
            $print_str .= 
            $this->align_center('TIN: '.$branch['tin'],38," ")."\r\n"
            .$this->align_center('ACCRDN: '.$branch['accrdn'],38," ")."\r\n"
            // .$this->align_center('BIR: '.$branch['bir'],42," ")."\r\n"
            .$this->align_center('MIN: '.$branch['machine_no'],38," ")."\r\n"
            // .$this->align_center('SN #'.$branch['serial'],38," ")."\r\n"
            .$this->align_center('PERMIT: '.$branch['permit_no'],38," ")."\r\n\r\n";
            // ."=========================================="."\r\n"
            // ;
        if (!empty($order['void_ref']) || $order['inactive'] == 1) {
            $print_str .= $this->align_center("***** VOIDED TRANSACTION *****",38," ")."\r\n";
            $print_str .= $order['reason']."\r\n\r\n";
        }
        $header_print_str = $print_str;
        $header_print_str .= "======================================"."\r\n";
            if (!empty($payments)){
                $header_print_str .= "Receipt # ".$order['ref']." - ".strtoupper($order['type'])."\r\n";
                    // $this->align_center("Receipt # ".$order['ref']." - ".strtoupper($order['type']),42," ")."\r\n";
            }
            else{
                $header_print_str .= "Reference # ".$order['sales_id']." - ".strtoupper($order['type'])."\r\n";
                    // $this->align_center(strtoupper($order['type'])." # ".$order['sales_id'],42," ")."\r\n";
            }
            $header_print_str .= $order['table_name']."\r\n";
            if($order['waiter_username'] != "")
                $header_print_str .= "FS: ".$order['waiter_username']."\r\n";
            $header_print_str .= $order['datetime']."\r\n";
        $header_print_str .= "======================================"."\r\n";
        $print_str = $header_print_str;
        ################################
        $discs_items = array();
        foreach ($discs as $disc) {
            if(isset($disc['items']))
                $discs_items[$disc['type']] = $disc['items'];
        }
        $dscTxt = array();
        foreach ($details as $line_id => $val) {
            foreach ($discs_items as $type => $dissss) {
                if(in_array($line_id, $dissss)){
                    $qty = 1;
                    if(isset($dscTxt[$val['menu_id']][$type]['qty'])){
                        $qty = $dscTxt[$val['menu_id']][$type]['qty'] + 1;
                    }
                    $dscTxt[$val['menu_id']][$type] = array('txt' => '#'.$type,'qty' => $qty);
                }
            }
        }
        $post_details = array();
        $update_line_ids = array();
        $update_line_mod_ids = array();
        $added_modifs = array();
        foreach ($details as $line_id => $val) {
            $modif_check = false;
            $category = $this->site_model->get_tbl('menus',array('menu_id'=>$val['menu_id']),array(),null,true,'menu_sub_cat_id');
            $cat = $category[0];
            if(BEVERAGE_ID != $cat->menu_sub_cat_id){
                if($just_true == false){
                    if($val['kitchen_slip_printed'] == 0){
                            if (!isset($post_details[$val['menu_id']])) {
                                $dscsacs = array();
                                if(isset($dscTxt[$val['menu_id']])){
                                    $dscsacs = $dscTxt[$val['menu_id']];
                                }
                                $remarksArr = array();
                                if($val['remarks'] != '')
                                    $remarksArr = array($val['remarks']." x ".$val['qty']);
                                
                                $kitchen_slip_printed = $val['kitchen_slip_printed'];
                                if($val['kitchen_slip_printed'] == ""){
                                    $kitchen_slip_printed = 0;
                                }

                                $post_details[$val['menu_id']] = array(
                                    'name' => $val['name'],
                                    'code' => $val['code'],
                                    'price' => $val['price'],
                                    'no_tax' => $val['no_tax'],
                                    'discount' => $val['discount'],
                                    'qty' => $val['qty'],
                                    'discounted'=>$dscsacs,
                                    'kitchen_slip_printed'=>$kitchen_slip_printed,
                                    'remarks'=>$remarksArr,
                                    'modifiers' => array()
                                );
                                $update_line_ids[]=$val['id'];
                            } else {
                                if($val['remarks'] != "")
                                    $post_details[$val['menu_id']]['remarks'][]= $val['remarks']." x ".$val['qty'];
                                $post_details[$val['menu_id']]['qty'] += $val['qty'];
                                $update_line_ids[]=$val['id'];
                            }
                            if (empty($val['modifiers']))
                                continue;
                            
                            $modif_check = true;
                            $modifs = $val['modifiers'];
                            $n_modifiers = $post_details[$val['menu_id']]['modifiers'];
                            foreach ($modifs as $vv) {
                                
                                $kitchen_slip_printed = $vv['kitchen_slip_printed'];
                                if($vv['kitchen_slip_printed'] == ""){
                                    $kitchen_slip_printed = 0;
                                }

                                if (!isset($n_modifiers[$vv['id']])) {
                                    $n_modifiers[$vv['id']] = array(
                                        'name' => $vv['name'],
                                        'price' => $vv['price'],
                                        'kitchen_slip_printed'=> $kitchen_slip_printed,
                                        'qty' => $val['qty'],
                                        'discount' => $vv['discount']
                                    );
                                    $update_line_mod_ids[]=$vv['sales_mod_id'];
                                } else {
                                    $n_modifiers[$vv['id']]['qty'] += $val['qty'];
                                    $update_line_mod_ids[]=$vv['sales_mod_id'];
                                }
                            }
                            $post_details[$val['menu_id']]['modifiers'] = $n_modifiers;
                    }
                    if (!empty($val['modifiers'])){
                        if(!$modif_check){
                            $modifs = $val['modifiers'];
                            foreach ($modifs as $vv) {
                                if($vv['kitchen_slip_printed'] == 0){
                                    $kitchen_slip_printed = $vv['kitchen_slip_printed'];
                                    if($vv['kitchen_slip_printed'] == ""){
                                        $kitchen_slip_printed = 0;
                                    }
                                    if(!isset($added_modifs['sales_mod_id'])){
                                        $added_modifs[$vv['id']] = array(
                                            'name' => $vv['name'],
                                            'price' => $vv['price'],
                                            'kitchen_slip_printed'=> $kitchen_slip_printed,
                                            'qty' => $val['qty'],
                                            'discount' => $vv['discount']
                                        );
                                        $update_line_mod_ids[]=$vv['sales_mod_id'];
                                    }
                                    else{
                                        $added_modifs[$vv['id']]['qty'] += $val['qty'];
                                        $update_line_mod_ids[]=$vv['sales_mod_id'];
                                    }
                                }
                                ####
                            }
                            #####    
                        }
                        ###########
                    }
                }
                else{
                    if (!isset($post_details[$val['menu_id']])) {
                        $dscsacs = array();
                        if(isset($dscTxt[$val['menu_id']])){
                            $dscsacs = $dscTxt[$val['menu_id']];
                        }
                        $remarksArr = array();
                        if($val['remarks'] != '')
                            $remarksArr = array($val['remarks']." x ".$val['qty']);
                        
                        $kitchen_slip_printed = $val['kitchen_slip_printed'];
                        if($val['kitchen_slip_printed'] == ""){
                            $kitchen_slip_printed = 0;
                        }

                        $post_details[$val['menu_id']] = array(
                            'name' => $val['name'],
                            'code' => $val['code'],
                            'price' => $val['price'],
                            'no_tax' => $val['no_tax'],
                            'discount' => $val['discount'],
                            'qty' => $val['qty'],
                            'discounted'=>$dscsacs,
                            'kitchen_slip_printed'=>$kitchen_slip_printed,
                            'remarks'=>$remarksArr,
                            'modifiers' => array()
                        );
                        $update_line_ids[]=$val['id'];
                    } else {
                        if($val['remarks'] != "")
                            $post_details[$val['menu_id']]['remarks'][]= $val['remarks']." x ".$val['qty'];
                        $post_details[$val['menu_id']]['qty'] += $val['qty'];
                        $update_line_ids[]=$val['id'];
                    }
                    if (empty($val['modifiers']))
                        continue;
                    
                    $modif_check = true;
                    $modifs = $val['modifiers'];
                    $n_modifiers = $post_details[$val['menu_id']]['modifiers'];
                    foreach ($modifs as $vv) {
                        
                        $kitchen_slip_printed = $vv['kitchen_slip_printed'];
                        if($vv['kitchen_slip_printed'] == ""){
                            $kitchen_slip_printed = 0;
                        }

                        if (!isset($n_modifiers[$vv['id']])) {
                            $n_modifiers[$vv['id']] = array(
                                'name' => $vv['name'],
                                'price' => $vv['price'],
                                'kitchen_slip_printed'=> $kitchen_slip_printed,
                                'qty' => $val['qty'],
                                'discount' => $vv['discount']
                            );
                            $update_line_mod_ids[]=$vv['sales_mod_id'];
                        } else {
                            $n_modifiers[$vv['id']]['qty'] += $val['qty'];
                            $update_line_mod_ids[]=$vv['sales_mod_id'];
                        }
                    }
                    $post_details[$val['menu_id']]['modifiers'] = $n_modifiers;
                    if (!empty($val['modifiers'])){
                        if(!$modif_check){
                            $modifs = $val['modifiers'];
                            foreach ($modifs as $vv) {
                                
                                    $kitchen_slip_printed = $vv['kitchen_slip_printed'];
                                    if($vv['kitchen_slip_printed'] == ""){
                                        $kitchen_slip_printed = 0;
                                    }
                                    if(!isset($added_modifs['sales_mod_id'])){
                                        $added_modifs[$vv['id']] = array(
                                            'name' => $vv['name'],
                                            'price' => $vv['price'],
                                            'kitchen_slip_printed'=> $kitchen_slip_printed,
                                            'qty' => $val['qty'],
                                            'discount' => $vv['discount']
                                        );
                                        $update_line_mod_ids[]=$vv['sales_mod_id'];
                                    }
                                    else{
                                        $added_modifs[$vv['id']]['qty'] += $val['qty'];
                                        $update_line_mod_ids[]=$vv['sales_mod_id'];
                                    }
                                ####
                            }
                            #####    
                        }
                        ###########
                    }
                    ##################################################################
                }    
            }
        }
        $print_str .=  $this->align_center('Order Slip',38," ")."\r\n";
        $tot_qty = 0;
        $needs_to_print = 0;
        foreach ($post_details as $menu_id => $val) {
             if($just_true == false){
                if($val['kitchen_slip_printed'] == 0){
                    $tot_qty += $val['qty'];
                    $print_str .= $this->append_chars($val['qty'],"right",4," ");
                    if ($val['qty'] == 1) {
                        $print_str .= $this->append_chars(substrwords($val['name'],21,""),"right",26," ").
                            $this->append_chars(null,"left",8," ")."\r\n";
                    } else {
                        $print_str .= $this->append_chars(substrwords($val['name'],21,"")." @ ".$val['price'],"right",26," ").
                            $this->append_chars(null,"left",8," ")."\r\n";
                    }
                    if(count($val['discounted']) > 0){
                        foreach ($val['discounted'] as $dssstxt) {
                          $print_str .= "      ";
                          $print_str .= $this->append_chars($dssstxt['txt']." x ".$dssstxt['qty'],"right",23," ")."\r\n";
                        }
                    }
                    if(isset($val['remarks']) && count($val['remarks']) > 0){
                        foreach ($val['remarks'] as $rmrktxt) {
                            $print_str .= "     * ";
                            $print_str .= $this->append_chars(ucwords($rmrktxt),"right",23," ")."\r\n";
                        }
                    }
                    $needs_to_print++;
                }
                if (empty($val['modifiers']))
                    continue;
                $modifs = $val['modifiers'];
                foreach ($modifs as $vv) {
                    if($vv['kitchen_slip_printed'] == 0){
                        $print_str .= "     * ".$vv['qty']." ";
                        if ($vv['qty'] == 1) {
                            $print_str .= $this->append_chars(substrwords($vv['name'],18,""),"right",23," ")
                                .$this->append_chars(null,"left",8," ")."\r\n";
                        } else {
                            $print_str .= $this->append_chars(substrwords($vv['name'],18,""),"right",23," ")
                                .$this->append_chars(null,"left",8," ")."\r\n";
                        }
                        $needs_to_print++;
                    }
                }
                ##########################
            }
            else{
                    $tot_qty += $val['qty'];
                    $print_str .= $this->append_chars($val['qty'],"right",4," ");
                    if ($val['qty'] == 1) {
                        $print_str .= $this->append_chars(substrwords($val['name'],21,""),"right",26," ").
                            $this->append_chars(null,"left",8," ")."\r\n";
                    } else {
                        $print_str .= $this->append_chars(substrwords($val['name'],21,"")." @ ".$val['price'],"right",26," ").
                            $this->append_chars(null,"left",8," ")."\r\n";
                    }
                    if(count($val['discounted']) > 0){
                        foreach ($val['discounted'] as $dssstxt) {
                          $print_str .= "      ";
                          $print_str .= $this->append_chars($dssstxt['txt']." x ".$dssstxt['qty'],"right",23," ")."\r\n";
                        }
                    }
                    if(isset($val['remarks']) && count($val['remarks']) > 0){
                        foreach ($val['remarks'] as $rmrktxt) {
                            $print_str .= "     * ";
                            $print_str .= $this->append_chars(ucwords($rmrktxt),"right",23," ")."\r\n";
                        }
                    }
                    $needs_to_print++;
                if (empty($val['modifiers']))
                    continue;
                $modifs = $val['modifiers'];
                foreach ($modifs as $vv) {
                        $print_str .= "     * ".$vv['qty']." ";
                        if ($vv['qty'] == 1) {
                            $print_str .= $this->append_chars(substrwords($vv['name'],18,""),"right",23," ")
                                .$this->append_chars(null,"left",8," ")."\r\n";
                        } else {
                            $print_str .= $this->append_chars(substrwords($vv['name'],18,""),"right",23," ")
                                .$this->append_chars(null,"left",8," ")."\r\n";
                        }
                        $needs_to_print++;
                }
                ##########################
            }
        }
        if(count($added_modifs) > 0){
            $print_str .= $this->append_chars('Modifiers Added.',"right",4," ")."\r\n";
            foreach ($added_modifs as $vv) {
                if($just_true == false){
                    if($vv['kitchen_slip_printed'] == 0){
                        $print_str .= "     * ".$vv['qty']." ";
                        if ($vv['qty'] == 1) {
                            $print_str .= $this->append_chars(substrwords($vv['name'],18,""),"right",23," ")
                                .$this->append_chars(null,"left",8," ")."\r\n";
                        } else {
                            $print_str .= $this->append_chars(substrwords($vv['name'],18,""),"right",23," ")
                                .$this->append_chars(null,"left",8," ")."\r\n";
                        }
                        $needs_to_print++;
                    }
                }
                else{
                    $print_str .= "     * ".$vv['qty']." ";
                    if ($vv['qty'] == 1) {
                        $print_str .= $this->append_chars(substrwords($vv['name'],18,""),"right",23," ")
                            .$this->append_chars(null,"left",8," ")."\r\n";
                    } else {
                        $print_str .= $this->append_chars(substrwords($vv['name'],18,""),"right",23," ")
                            .$this->append_chars(null,"left",8," ")."\r\n";
                    }
                    $needs_to_print++;
                }############################
            }
        } 

        $print_str .= "\r\n"."--------------------------------------"."\r\n";
        $print_str .= $this->append_chars(ucwords("TOTAL QTY"),"right",28," ").$this->append_chars(number_format(($tot_qty),2),"left",10," ")."\r\n";

        if($needs_to_print > 0){
            $filename = "order.txt";
            $fp = fopen($filename, "w+");
            fwrite($fp,$print_str);
            fclose($fp);
            $batfile = "print.bat";
            $fh1 = fopen($batfile,'w+');
            $root = dirname(BASEPATH);
            // $battxt = "NOTEPAD /P \"".realpath($root."/".$filename)."\" \r\n";
            $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".$kitchen_printer."\"  ";
            fwrite($fh1, $battxt);
            fclose($fh1);
            session_write_close();
            for ($i=0; $i < $kitchen_printer_no; $i++) { 
                exec($batfile);
            }
            // exec($batfile);
            session_start();
            unlink($filename);
            unlink($batfile);
        }
        ##########################
        ### UPDATE SLIP PRINTED
        ##########################
            if(count($update_line_ids) > 0){
                foreach ($update_line_ids as $sales_menu_id) {
                    $this->site_model->update_tbl('trans_sales_menus','sales_menu_id',array('kitchen_slip_printed'=>1),$sales_menu_id);      
                }   
            }
            if(count($update_line_mod_ids) > 0){
                foreach ($update_line_mod_ids as $sales_mod_id) {
                    $this->site_model->update_tbl('trans_sales_menu_modifiers','sales_mod_id',array('kitchen_slip_printed'=>1),$sales_mod_id);      
                }   
            }
    }
    public function print_kitchen_order_slip_beverage($sales_id=null,$kitchen_beverage_printer=null,$kitchen_printer_beverage_no=0,$just_true=false){
        $return = $this->get_order(false,$sales_id);
        $branch = $this->get_branch_details(false);
        $order = $return['order'];
        $details = $return['details'];

        $discounts = $return['discounts'];
        $totalsss = $this->total_trans(false,$details,$discounts);
        $discs = $totalsss['discs'];


        $print_str = "\r\n\r\n\r\n\r\n";
        $print_bar_str = array();
        $wrap = wordwrap($branch['name'],25,"|#|");
        $exp = explode("|#|", $wrap);
        foreach ($exp as $v) {
            $print_str .= $this->align_center($v,38," ")."\r\n";
        }

        $wrap = wordwrap($branch['address'],35,"|#|");
        $exp = explode("|#|", $wrap);
        foreach ($exp as $v) {
            $print_str .= $this->align_center($v,38," ")."\r\n";
        }

            // .$this->align_center(wordwrap($branch['address'],20,"|#|"),38," ")."\r\n"
            $print_str .= 
            $this->align_center('TIN: '.$branch['tin'],38," ")."\r\n"
            .$this->align_center('ACCRDN: '.$branch['accrdn'],38," ")."\r\n"
            // .$this->align_center('BIR: '.$branch['bir'],42," ")."\r\n"
            .$this->align_center('MIN: '.$branch['machine_no'],38," ")."\r\n"
            // .$this->align_center('SN #'.$branch['serial'],38," ")."\r\n"
            .$this->align_center('PERMIT: '.$branch['permit_no'],38," ")."\r\n\r\n";
            // ."=========================================="."\r\n"
            // ;
        if (!empty($order['void_ref']) || $order['inactive'] == 1) {
            $print_str .= $this->align_center("***** VOIDED TRANSACTION *****",38," ")."\r\n";
            $print_str .= $order['reason']."\r\n\r\n";
        }
        $header_print_str = $print_str;
        $header_print_str .= "======================================"."\r\n";
             if (!empty($payments)){
                $print_bar_str[] = "Receipt # ".$order['ref']." - ".strtoupper($order['type'])."\r\n";
                $header_print_str .= "Receipt # ".$order['ref']." - ".strtoupper($order['type'])."\r\n";
                    // $this->align_center("Receipt # ".$order['ref']." - ".strtoupper($order['type']),42," ")."\r\n";
            }
            else{
                $print_bar_str[] = "Reference # ".$order['sales_id']." - ".strtoupper($order['type'])."\r\n";
                $header_print_str .= "Reference # ".$order['sales_id']." - ".strtoupper($order['type'])."\r\n";
                    // $this->align_center(strtoupper($order['type'])." # ".$order['sales_id'],42," ")."\r\n";
            }
            $header_print_str .= $order['table_name']."\r\n";
            if($order['waiter_username'] != "")
                $header_print_str .= "FS: ".$order['waiter_username']."\r\n";
            $header_print_str .= $order['datetime']."\r\n";

        $header_print_str .= "======================================"."\r\n";

        $print_str = $header_print_str;
        ################################
        $discs_items = array();
        foreach ($discs as $disc) {
            if(isset($disc['items']))
                $discs_items[$disc['type']] = $disc['items'];
        }

        $dscTxt = array();
        foreach ($details as $line_id => $val) {
            foreach ($discs_items as $type => $dissss) {
                if(in_array($line_id, $dissss)){
                    $qty = 1;
                    if(isset($dscTxt[$val['menu_id']][$type]['qty'])){
                        $qty = $dscTxt[$val['menu_id']][$type]['qty'] + 1;
                    }
                    $dscTxt[$val['menu_id']][$type] = array('txt' => '#'.$type,'qty' => $qty);
                }
            }
        }

        $post_details = array();
        $update_line_ids = array();
        $update_line_mod_ids = array();
        $added_modifs = array();
        foreach ($details as $line_id => $val) {
            $modif_check = false;
            $category = $this->site_model->get_tbl('menus',array('menu_id'=>$val['menu_id']),array(),null,true,'menu_sub_cat_id');
            $cat = $category[0];
            if(BEVERAGE_ID == $cat->menu_sub_cat_id){
                if($just_true == false){
                    if($val['kitchen_slip_printed'] == 0){
                            if (!isset($post_details[$val['menu_id']])) {
                                $dscsacs = array();
                                if(isset($dscTxt[$val['menu_id']])){
                                    $dscsacs = $dscTxt[$val['menu_id']];
                                }
                                $remarksArr = array();
                                if($val['remarks'] != '')
                                    $remarksArr = array($val['remarks']." x ".$val['qty']);
                                
                                $kitchen_slip_printed = $val['kitchen_slip_printed'];
                                if($val['kitchen_slip_printed'] == ""){
                                    $kitchen_slip_printed = 0;
                                }

                                $post_details[$val['menu_id']] = array(
                                    'name' => $val['name'],
                                    'code' => $val['code'],
                                    'price' => $val['price'],
                                    'no_tax' => $val['no_tax'],
                                    'discount' => $val['discount'],
                                    'qty' => $val['qty'],
                                    'discounted'=>$dscsacs,
                                    'kitchen_slip_printed'=>$kitchen_slip_printed,
                                    'remarks'=>$remarksArr,
                                    'modifiers' => array()
                                );
                                $update_line_ids[]=$val['id'];
                            } else {
                                if($val['remarks'] != "")
                                    $post_details[$val['menu_id']]['remarks'][]= $val['remarks']." x ".$val['qty'];
                                $post_details[$val['menu_id']]['qty'] += $val['qty'];
                                $update_line_ids[]=$val['id'];
                            }
                            if (empty($val['modifiers']))
                                continue;
                            
                            $modif_check = true;
                            $modifs = $val['modifiers'];
                            $n_modifiers = $post_details[$val['menu_id']]['modifiers'];
                            foreach ($modifs as $vv) {
                                
                                $kitchen_slip_printed = $vv['kitchen_slip_printed'];
                                if($vv['kitchen_slip_printed'] == ""){
                                    $kitchen_slip_printed = 0;
                                }

                                if (!isset($n_modifiers[$vv['id']])) {
                                    $n_modifiers[$vv['id']] = array(
                                        'name' => $vv['name'],
                                        'price' => $vv['price'],
                                        'kitchen_slip_printed'=> $kitchen_slip_printed,
                                        'qty' => $val['qty'],
                                        'discount' => $vv['discount']
                                    );
                                    $update_line_mod_ids[]=$vv['sales_mod_id'];
                                } else {
                                    $n_modifiers[$vv['id']]['qty'] += $val['qty'];
                                    $update_line_mod_ids[]=$vv['sales_mod_id'];
                                }
                            }
                            $post_details[$val['menu_id']]['modifiers'] = $n_modifiers;
                        
                    }
                    if (!empty($val['modifiers'])){
                        if(!$modif_check){
                            $modifs = $val['modifiers'];
                            foreach ($modifs as $vv) {
                                if($vv['kitchen_slip_printed'] == 0){
                                    $kitchen_slip_printed = $vv['kitchen_slip_printed'];
                                    if($vv['kitchen_slip_printed'] == ""){
                                        $kitchen_slip_printed = 0;
                                    }
                                    if(!isset($added_modifs['sales_mod_id'])){
                                        $added_modifs[$vv['id']] = array(
                                            'name' => $vv['name'],
                                            'price' => $vv['price'],
                                            'kitchen_slip_printed'=> $kitchen_slip_printed,
                                            'qty' => $val['qty'],
                                            'discount' => $vv['discount']
                                        );
                                        $update_line_mod_ids[]=$vv['sales_mod_id'];
                                    }
                                    else{
                                        $added_modifs[$vv['id']]['qty'] += $val['qty'];
                                        $update_line_mod_ids[]=$vv['sales_mod_id'];
                                    }
                                }
                                ####
                            }
                            #####    
                        }
                        ###########
                    }
                }
                else{
                    if (!isset($post_details[$val['menu_id']])) {
                        $dscsacs = array();
                        if(isset($dscTxt[$val['menu_id']])){
                            $dscsacs = $dscTxt[$val['menu_id']];
                        }
                        $remarksArr = array();
                        if($val['remarks'] != '')
                            $remarksArr = array($val['remarks']." x ".$val['qty']);
                        
                        $kitchen_slip_printed = $val['kitchen_slip_printed'];
                        if($val['kitchen_slip_printed'] == ""){
                            $kitchen_slip_printed = 0;
                        }

                        $post_details[$val['menu_id']] = array(
                            'name' => $val['name'],
                            'code' => $val['code'],
                            'price' => $val['price'],
                            'no_tax' => $val['no_tax'],
                            'discount' => $val['discount'],
                            'qty' => $val['qty'],
                            'discounted'=>$dscsacs,
                            'kitchen_slip_printed'=>$kitchen_slip_printed,
                            'remarks'=>$remarksArr,
                            'modifiers' => array()
                        );
                        $update_line_ids[]=$val['id'];
                    } else {
                        if($val['remarks'] != "")
                            $post_details[$val['menu_id']]['remarks'][]= $val['remarks']." x ".$val['qty'];
                        $post_details[$val['menu_id']]['qty'] += $val['qty'];
                        $update_line_ids[]=$val['id'];
                    }
                    if (empty($val['modifiers']))
                        continue;
                    
                    $modif_check = true;
                    $modifs = $val['modifiers'];
                    $n_modifiers = $post_details[$val['menu_id']]['modifiers'];
                    foreach ($modifs as $vv) {
                        
                        $kitchen_slip_printed = $vv['kitchen_slip_printed'];
                        if($vv['kitchen_slip_printed'] == ""){
                            $kitchen_slip_printed = 0;
                        }

                        if (!isset($n_modifiers[$vv['id']])) {
                            $n_modifiers[$vv['id']] = array(
                                'name' => $vv['name'],
                                'price' => $vv['price'],
                                'kitchen_slip_printed'=> $kitchen_slip_printed,
                                'qty' => $val['qty'],
                                'discount' => $vv['discount']
                            );
                            $update_line_mod_ids[]=$vv['sales_mod_id'];
                        } else {
                            $n_modifiers[$vv['id']]['qty'] += $val['qty'];
                            $update_line_mod_ids[]=$vv['sales_mod_id'];
                        }
                    }
                    $post_details[$val['menu_id']]['modifiers'] = $n_modifiers;
                        
                    if (!empty($val['modifiers'])){
                        if(!$modif_check){
                            $modifs = $val['modifiers'];
                            foreach ($modifs as $vv) {
                                    $kitchen_slip_printed = $vv['kitchen_slip_printed'];
                                    if($vv['kitchen_slip_printed'] == ""){
                                        $kitchen_slip_printed = 0;
                                    }
                                    if(!isset($added_modifs['sales_mod_id'])){
                                        $added_modifs[$vv['id']] = array(
                                            'name' => $vv['name'],
                                            'price' => $vv['price'],
                                            'kitchen_slip_printed'=> $kitchen_slip_printed,
                                            'qty' => $val['qty'],
                                            'discount' => $vv['discount']
                                        );
                                        $update_line_mod_ids[]=$vv['sales_mod_id'];
                                    }
                                    else{
                                        $added_modifs[$vv['id']]['qty'] += $val['qty'];
                                        $update_line_mod_ids[]=$vv['sales_mod_id'];
                                    }
                                ####
                            }
                            #####    
                        }
                        ###########
                    }
                    ################################
                }    
            }
        }

        $print_str .=  $this->align_center('Order Slip',38," ")."\r\n";
        $tot_qty = 0;
        $needs_to_print = 0;
        foreach ($post_details as $menu_id => $val) {
            if($just_true == false){    
                if($val['kitchen_slip_printed'] == 0){
                    $tot_qty += $val['qty'];
                    $print_str .= $this->append_chars($val['qty'],"right",4," ");
                    if ($val['qty'] == 1) {
                        $print_str .= $this->append_chars(substrwords($val['name'],21,""),"right",26," ").
                            $this->append_chars(null,"left",8," ")."\r\n";
                    } else {
                        $print_str .= $this->append_chars(substrwords($val['name'],21,"")." @ ".$val['price'],"right",26," ").
                            $this->append_chars(null,"left",8," ")."\r\n";
                    }
                    if(count($val['discounted']) > 0){
                        foreach ($val['discounted'] as $dssstxt) {
                          $print_str .= "      ";
                          $print_str .= $this->append_chars($dssstxt['txt']." x ".$dssstxt['qty'],"right",23," ")."\r\n";
                        }
                    }
                    if(isset($val['remarks']) && count($val['remarks']) > 0){
                        foreach ($val['remarks'] as $rmrktxt) {
                            $print_str .= "     * ";
                            $print_str .= $this->append_chars(ucwords($rmrktxt),"right",23," ")."\r\n";
                        }
                    }
                    $print_bar_str[] = $val['name']."\r\n";
                    $needs_to_print++;
                }
                if (empty($val['modifiers']))
                    continue;
                $modifs = $val['modifiers'];
                foreach ($modifs as $vv) {
                    if($vv['kitchen_slip_printed'] == 0){
                        $print_str .= "     * ".$vv['qty']." ";
                        if ($vv['qty'] == 1) {
                            $print_str .= $this->append_chars(substrwords($vv['name'],18,""),"right",23," ")
                                .$this->append_chars(null,"left",8," ")."\r\n";
                        } else {
                            $print_str .= $this->append_chars(substrwords($vv['name'],18,""),"right",23," ")
                                .$this->append_chars(null,"left",8," ")."\r\n";
                        }
                        $needs_to_print++;
                    }
                }
                ##########################
            }
            else{
                   $tot_qty += $val['qty'];
                   $print_str .= $this->append_chars($val['qty'],"right",4," ");
                   if ($val['qty'] == 1) {
                       $print_str .= $this->append_chars(substrwords($val['name'],21,""),"right",26," ").
                           $this->append_chars(null,"left",8," ")."\r\n";
                   } else {
                       $print_str .= $this->append_chars(substrwords($val['name'],21,"")." @ ".$val['price'],"right",26," ").
                           $this->append_chars(null,"left",8," ")."\r\n";
                   }
                   if(count($val['discounted']) > 0){
                       foreach ($val['discounted'] as $dssstxt) {
                         $print_str .= "      ";
                         $print_str .= $this->append_chars($dssstxt['txt']." x ".$dssstxt['qty'],"right",23," ")."\r\n";
                       }
                   }
                   if(isset($val['remarks']) && count($val['remarks']) > 0){
                       foreach ($val['remarks'] as $rmrktxt) {
                           $print_str .= "     * ";
                           $print_str .= $this->append_chars(ucwords($rmrktxt),"right",23," ")."\r\n";
                       }
                   }
                   $needs_to_print++;
               if (empty($val['modifiers']))
                   continue;
               $modifs = $val['modifiers'];
               foreach ($modifs as $vv) {
                       $print_str .= "     * ".$vv['qty']." ";
                       if ($vv['qty'] == 1) {
                           $print_str .= $this->append_chars(substrwords($vv['name'],18,""),"right",23," ")
                               .$this->append_chars(null,"left",8," ")."\r\n";
                       } else {
                           $print_str .= $this->append_chars(substrwords($vv['name'],18,""),"right",23," ")
                               .$this->append_chars(null,"left",8," ")."\r\n";
                       }
                       $needs_to_print++;
               }
               ########################## 
            }    
        }
        if(count($added_modifs) > 0){
            $print_str .= $this->append_chars('Modifiers Added.',"right",4," ")."\r\n";
            foreach ($added_modifs as $vv) {
                if($just_true == false){  
                    if($vv['kitchen_slip_printed'] == 0){
                        $print_str .= "     * ".$vv['qty']." ";
                        if ($vv['qty'] == 1) {
                            $print_str .= $this->append_chars(substrwords($vv['name'],18,""),"right",23," ")
                                .$this->append_chars(null,"left",8," ")."\r\n";
                        } else {
                            $print_str .= $this->append_chars(substrwords($vv['name'],18,""),"right",23," ")
                                .$this->append_chars(null,"left",8," ")."\r\n";
                        }
                        $needs_to_print++;
                    }
                }
                else{
                   $print_str .= "     * ".$vv['qty']." ";
                   if ($vv['qty'] == 1) {
                       $print_str .= $this->append_chars(substrwords($vv['name'],18,""),"right",23," ")
                           .$this->append_chars(null,"left",8," ")."\r\n";
                   } else {
                       $print_str .= $this->append_chars(substrwords($vv['name'],18,""),"right",23," ")
                           .$this->append_chars(null,"left",8," ")."\r\n";
                   }
                   $needs_to_print++; 
                }
            }
        } 

        $print_str .= "\r\n"."--------------------------------------"."\r\n";
        $print_str .= $this->append_chars(ucwords("TOTAL QTY"),"right",28," ").$this->append_chars(number_format(($tot_qty),2),"left",10," ")."\r\n";


        if($needs_to_print > 0){

              if(PRINT_VERSION && PRINT_VERSION == 'V2'){


                // if(BILLING_PRINTER){
                //     if(BILLING_PRINTER != "DEFAULT"){
                         if(BEVERAGE_BARCODE_ENABLED){

                            $this->do_print_bar_receipt_v2($print_bar_str);
                         }else{
                            $this->do_print_beverage_v2($print_str); 

                         }
                }else{

                    $filename = "order.txt";
                    $fp = fopen($filename, "w+");
                    fwrite($fp,$print_str);
                    fclose($fp);
                    $batfile = "print.bat";
                    $fh1 = fopen($batfile,'w+');
                    $root = dirname(BASEPATH);
                    $battxt = "NOTEPAD /P \"".realpath($root."/".$filename)."\" \r\n";
                    if($kitchen_beverage_printer != "")
                        $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".$kitchen_beverage_printer."\"  ";
                    fwrite($fh1, $battxt);
                    fclose($fh1);
                    session_write_close();
                    for ($i=0; $i < $kitchen_printer_beverage_no; $i++) { 
                        exec($batfile);
                    }
                    // exec($batfile);
                    session_start();
                    unlink($filename);
                    unlink($batfile);
                }
        }
        ##########################
        ### UPDATE SLIP PRINTED
        ##########################
            if(count($update_line_ids) > 0){
                foreach ($update_line_ids as $sales_menu_id) {
                    $this->site_model->update_tbl('trans_sales_menus','sales_menu_id',array('kitchen_slip_printed'=>1),$sales_menu_id);      
                }   
            }
            if(count($update_line_mod_ids) > 0){
                foreach ($update_line_mod_ids as $sales_mod_id) {
                    $this->site_model->update_tbl('trans_sales_menu_modifiers','sales_mod_id',array('kitchen_slip_printed'=>1),$sales_mod_id);      
                }   
            }
    }
    public function append_chars($string,$position = "right",$count = 0, $char = ""){
        $rep_count = $count - strlen($string);
        $append_string = "";
        for ($i=0; $i < $rep_count ; $i++) {
            $append_string .= $char;
        }
        if ($position == 'right')
            return $string.$append_string;
        else
            return $append_string.$string;
    }
    public function align_center($string,$count,$char = " "){
        $rep_count = $count - strlen($string);
        for ($i=0; $i < $rep_count; $i++) {
            if ($i % 2 == 0) {
                $string = $char.$string;
            } else {
                $string = $string.$char;
            }
        }
        return $string;
    }
    public function manager_view_orders($terminal='my',$status='open',$types='all',$now=null,$show='box'){
        $this->load->model('dine/cashier_model');
        $this->load->model('site/site_model');
        $args = array(
            "trans_sales.trans_ref"=>null,
            "trans_sales.terminal_id"=>TERMINAL_ID,
            "trans_sales.type_id"=>SALES_TRANS,
            "trans_sales.inactive"=>0,
        );
        if($terminal != 'my')
            unset($args["trans_sales.terminal_id"]);
        if($status != 'open'){
            unset($args["trans_sales.trans_ref"]);
            $args["trans_sales.trans_ref  IS NOT NULL"] = array('use'=>'where','val'=>null,'third'=>false);
        }
        if($types != 'all'){
            $args["trans_sales.type"] = $types;
        }
        $orders = $this->cashier_model->get_trans_sales(null,$args);
        // echo $this->cashier_model->db->last_query();
        $code = "";
        $ids = array();
        $time = $this->site_model->get_db_now();
        $this->make->sDivRow();
        $ord=array();
        $combine_cart = sess('trans_combine_cart');
        foreach ($orders as $res) {
            $status = "open";
            if($res->trans_ref != "")
                $status = "settled";
            $ord[$res->sales_id] = array(
                "type"=>$res->type,
                "status"=>$status,
                "user_id"=>$res->user_id,
                "name"=>$res->username,
                "terminal_id"=>$res->terminal_id,
                "terminal_name"=>$res->terminal_name,
                "shift_id"=>$res->shift_id,
                "datetime"=>$res->datetime,
                "amount"=>$res->total_amount
            );
            if($show == "box"){
                $this->make->sDivCol(4,'left',0);
                    $this->make->sDiv(array('class'=>'order-btn','id'=>'order-btn-'.$res->sales_id,'ref'=>$res->sales_id));
                        if($res->trans_ref == null){
                            $this->make->sBox('default',array('class'=>'box-solid'));
                        }else{
                            $this->make->sBox('default',array('class'=>'box-solid bg-green'));
                        }
                            $this->make->sBoxBody();
                                $this->make->sDivRow();
                                    $this->make->sDivCol(6);
                                        $this->make->H(5,strtoupper($res->type)." #".$res->sales_id,array("style"=>'font-weight:700;'));
                                        if($res->trans_ref == null){
                                            $this->make->H(5,strtoupper($res->username),array("style"=>'color:#888'));
                                            $this->make->H(5,strtoupper($res->terminal_name),array("style"=>'color:#888'));
                                        }else{
                                            $this->make->H(5,strtoupper($res->username),array("style"=>'color:#fff'));
                                            $this->make->H(5,strtoupper($res->terminal_name),array("style"=>'color:#fff'));
                                        }
                                        $this->make->H(5,tagWord(strtoupper(ago($res->datetime,$time) ) ) );
                                    $this->make->eDivCol();
                                    $this->make->sDivCol(6);
                                        $this->make->H(4,'Order Total',array('class'=>'text-center'));
                                        $this->make->H(3,num($res->total_amount),array('class'=>'text-center'));
                                    $this->make->eDivCol();
                                $this->make->eDivRow();

                            $this->make->eBoxBody();
                        $this->make->eBox();
                    $this->make->eDiv();
                $this->make->eDivCol();
            }
            else if($show=='combineList'){
                $got = false;
                if(count($combine_cart) > 0){
                    foreach ($combine_cart as $key => $co) {
                        if($co['sales_id'] == $res->sales_id){
                            $got = true;
                            break;
                        }
                    }
                }
                if(!$got){
                    $this->make->sDivRow(array('class'=>'orders-list-div-btnish sel-row','id'=>'order-btnish-'.$res->sales_id, "ref"=>$res->sales_id, "type"=>$res->type));
                        $this->make->sDivCol(6);
                            $this->make->sDiv(array('style'=>'margin-left:10px;'));
                                $this->make->H(5,strtoupper($res->type)." #".$res->sales_id,array("style"=>'font-weight:700;'));
                                $this->make->H(5,strtoupper($res->username),array("style"=>'color:#888'));
                                $this->make->H(5,strtoupper($res->terminal_name),array("style"=>'color:#888'));
                            $this->make->eDiv();
                        $this->make->eDivCol();
                        $this->make->sDivCol(6);
                            $this->make->sDiv(array('style'=>'margin-left:10px;'));
                                if($status != 'open')
                                    $this->make->H(4,'ORDER TOTAL',array('class'=>'text-center'));
                                else
                                    $this->make->H(4,'BALANCE DUE',array('class'=>'text-center'));
                                // $this->make->H(3,num($res->total_amount),array('class'=>'text-center','style'=>'margin-top:10px;'));
                                $this->make->H(3,num($res->total_amount),array('class'=>'text-center'));
                            $this->make->eDiv();
                        $this->make->eDivCol();
                        // $this->make->sDivCol(4);
                            // $this->make->sDiv(array('class'=>'order-btn-right-container','style'=>'margin-left:10px;margin-right:10px;margin-top:15px;'));
                                // $this->make->button(fa('fa-angle-double-right fa-lg fa-fw'),array('id'=>'add-to-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'add-btn-row btn-block counter-btn-green'));
                            // $this->make->eDiv();
                        // $this->make->eDivCol();
                    $this->make->eDivRow();
                }
            }
            $ids[] = $res->sales_id;
        }
        //}
        $this->make->eDivRow();
        $code = $this->make->code();
        echo json_encode(array('code'=>$code,'ids'=>$ord));
    }
    public function script_print_all(){
        $read_date = '2016-05-30';
        $zread_id = 2;
        $args = array();
        if($zread_id != null){
            $lastRead = $this->cashier_model->get_z_read($zread_id);
            $zread = array();
            if(count($lastRead) > 0){
                foreach ($lastRead as $res) {
                    $zread = array(
                        'from' => $res->scope_from,
                        'to'   => $res->scope_to,
                        'old_gt_amnt' => $res->old_total,
                        'grand_total' => $res->grand_total,
                        'read_date' => $res->read_date,
                        'id' => $res->id,
                        'user_id'=>$res->user_id
                    );
                    $read_date = $res->read_date;
                }           
            }
            $args['trans_sales.datetime >= '] = $zread['from'];             
            $args['trans_sales.datetime <= '] = $zread['to'];
            // $file_flg = "Z".date('Ymd',strtotime($read_date)).".flg";
        }

        $curr = true; 
        $trans = $this->trans_sales($args,$curr);
        $sales = $trans['sales'];
        echo count($sales['settled']['ids'])."<br><br>";
        // echo var_dump($sales['settled']['ids']);
        foreach ($sales['settled']['ids'] as $key => $sales_id) {
            $this->print_sales_receipt($sales_id,false,false,false);
            // break;
        }
        
        // $this->print_sales_receipt(130,false,false,false);
        // $sales['settled']['ids']
    }    
    public function scenario(){
        $trans = 0;
        $payments = array(
            '1'=> array(
                    array('cash'=>array('type'=>'cash','amount'=>326.79,'card_number'=>null,'approval'=>null))
                   ) ,
            '2'=> array(
                    array('gc'=>array('type'=>'gc','amount'=>326.79,'card_number'=>'12345678','approval'=>null))
                  ),
            '3'=> array(
                    array('debit'=>array('type'=>'debit','amount'=>326.79,'card_number'=>'12345678','approval'=>'12345678'))
                  ),
            '4'=> array(
                    array('credit'=>array('type'=>'credit','amount'=>326.79,'card_number'=>'12345678','approval'=>'12345678'))
                  ),
            '5'=> array(
                    array('eplus'=>array('type'=>'eplus','amount'=>326.79,'card_number'=>'12345678','approval'=>null))
                  ),
            '6'=> array(
                    array('smac'=>array('type'=>'smac','amount'=>326.79,'card_number'=>'12345678','approval'=>null))
                  ),
            '7'=> array(
                    array('online'=>array('type'=>'online','amount'=>326.79,'card_number'=>'12345678','approval'=>null))
                  ),
            '8'=> array(
                    array('cash'=>array('type'=>'cash','amount'=>126.79,'card_number'=>null,'approval'=>null)),
                    array('credit'=>array('type'=>'credit','amount'=>200.00,'card_number'=>'12345678','approval'=>'12345678')),
                  ),
            '9'=> array(
                    array('cash'=>array('type'=>'cash','amount'=>126.79,'card_number'=>null,'approval'=>null)),
                    array('gc'=>array('type'=>'gc','amount'=>200.00,'card_number'=>'12345678','approval'=>null)),
                  ),
            '10'=> array(
                    array('cash'=>array('type'=>'cash','amount'=>126.79,'card_number'=>null,'approval'=>null)),
                    array('debit'=>array('type'=>'debit','amount'=>200.00,'card_number'=>'12345678','approval'=>'12345678')),
                  ),
            '11'=> array(
                    array('cash'=>array('type'=>'cash','amount'=>126.79,'card_number'=>null,'approval'=>null)),
                    array('eplus'=>array('type'=>'eplus','amount'=>200.00,'card_number'=>'12345678','approval'=>null)),
                  ),
            '12'=> array(
                    array('cash'=>array('type'=>'cash','amount'=>250.00,'card_number'=>null,'approval'=>null)),
                    array('smac'=>array('type'=>'smac','amount'=>76.79,'card_number'=>'12345678','approval'=>null)),
                  ),
            '14'=> array(
                    array('cash'=>array('type'=>'cash','amount'=>176.79,'card_number'=>null,'approval'=>null)),
                    array('coupon'=>array('type'=>'coupon','amount'=>150.00,'card_number'=>'12345678','approval'=>null)),
                  ),
            '15'=> array(
                    array('credit'=>array('type'=>'credit','amount'=>126.79,'card_number'=>'12345678','approval'=>'12345678')),
                    array('gc'=>array('type'=>'gc','amount'=>200.00,'card_number'=>'12345678','approval'=>null)),
                  ),
            '16'=> array(
                    array('credit'=>array('type'=>'credit','amount'=>200.00,'card_number'=>'12345678','approval'=>'12345678')),
                    array('debit'=>array('type'=>'debit','amount'=>126.79,'card_number'=>'12345678','approval'=>'12345678'))
                  ),
            '17'=> array(
                    array('credit'=>array('type'=>'credit','amount'=>200.00,'card_number'=>'12345678','approval'=>'12345678')),
                    array('eplus'=>array('type'=>'eplus','amount'=>126.79,'card_number'=>'12345678','approval'=>null)),
                  ),
            '18'=> array(
                    array('credit'=>array('type'=>'credit','amount'=>225.00,'card_number'=>'12345678','approval'=>'12345678')),
                    array('smac'=>array('type'=>'smac','amount'=>101.79,'card_number'=>'12345678','approval'=>null)),
                  ),
            '20'=> array(
                    array('credit'=>array('type'=>'credit','amount'=>200.00,'card_number'=>'12345678','approval'=>'12345678')),
                    array('coupon'=>array('type'=>'coupon','amount'=>126.79,'card_number'=>'12345678','approval'=>null)),
                  ),
            '21'=> array(
                    array('debit'=>array('type'=>'debit','amount'=>126.79,'card_number'=>'12345678','approval'=>'12345678')),
                    array('gc'=>array('type'=>'gc','amount'=>200.00,'card_number'=>'12345678','approval'=>null) ),
                  ),
            '22'=> array(
                    array('debit'=>array('type'=>'debit','amount'=>200.00,'card_number'=>'12345678','approval'=>'12345678')),
                    array('eplus'=>array('type'=>'eplus','amount'=>126.79,'card_number'=>'12345678','approval'=>null)),
                  ),
            '23'=> array(
                    array('debit'=>array('type'=>'debit','amount'=>225.00,'card_number'=>'12345678','approval'=>'12345678')),
                    array('smac'=>array('type'=>'smac','amount'=>101.79,'card_number'=>'12345678','approval'=>null)),
                  ),
            '25'=> array(
                    array('debit'=>array('type'=>'debit','amount'=>126.79,'card_number'=>'12345678','approval'=>'12345678')),
                    array('coupon'=>array('type'=>'coupon','amount'=>200.00,'card_number'=>'12345678','approval'=>null)),
                  ),
        );
        $ctr = 1;
        $last = count($payments);
        foreach ($payments as $no => $pay) {
            $this->cashier_model->db = $this->load->database('default', TRUE);
            $this->site_model->db = $this->load->database('default', TRUE);
            // $trans_cart = sess('trans_cart');
            // echo $no."==";
            // echo var_dump($trans_cart)."<br>";
            $order = $this->submit_trans(false,null,false,null,null,null,false,null,false);
            // echo var_dump($order)."<br>";
            $sales_id = $order['id'];
            foreach ($pay as $key => $val) {
                foreach ($val as $v) {
                    $send = false;
                    if($ctr == $last){
                        $send = true;
                    }
                    $this->add_payment2($sales_id,$v['amount'],$v['type'],$v['approval'],$v['card_number'],$send);
                }
            }
            $this->cashier_model->db = $this->load->database('default', TRUE);
            $this->site_model->db = $this->load->database('default', TRUE);
            $trans++;
            $ctr++;
        }
        echo "created ".$trans." orders";

        
        // for ($i=1; $i <= 21; $i++) { 
        //     $this->add_payment2($sales_id=null,$amount=null,$type=null,$approval_code=null,$card_number=null);
        // }
    }
    public function add_payment2($sales_id=null,$amount=null,$type=null,$approval_code=null,$card_number=null,$send=false){
        $this->load->model('dine/cashier_model');
        $this->load->model('site/site_model');
        $order = $this->get_order_header(false,$sales_id);
        $error = "";
        $payments = $this->get_order_payments(false,$sales_id);
        $total_to_pay = $order['amount'];
        $paid = $order['paid'];
        $total_paid = 0;
        $balance = $order['balance'];
        if(count($payments) > 0){
            foreach ($payments as $pay_id => $pay) {
                $total_paid += $pay['amount'];
            }
        }
        if($total_to_pay >= $total_paid)
            $total_to_pay -= $total_paid;
        else
            $total_to_pay = 0;
        $change = 0;
        

        $log_user = $this->session->userdata('user');
        if($total_to_pay > 0){
            $payment = array(
                'sales_id'      =>  $sales_id,
                'payment_type'  =>  $type,
                'amount'        =>  $amount,
                'to_pay'        =>  $total_to_pay,
                "user_id"       =>  $log_user['id'],
                // 'reference'     =>  null,
                // 'card_type'     =>  null
            );


            if ($type=="credit") {
                $payment['card_type'] = 'master';
                $ma = $card_number;
                for ($i=0,$x=strlen($ma); $i < $x-4; $i++) { $ma[$i] = "*"; }
                $payment['card_number'] = $ma;
                $payment['approval_code'] = $approval_code;
            } elseif ($type=="debit") {
                $payment['card_number'] = $card_number;
                $payment['approval_code'] = $approval_code;
            } elseif ($type=="smac") {
                $payment['card_number'] = $card_number;
            } elseif ($type=="eplus") {
                $payment['card_number'] = $card_number;
            } elseif ($type=="online") {
                $payment['card_number'] = $card_number;
            } elseif ($type=="gc") {
                $this->load->model('dine/gift_cards_model');
                $payment['reference'] = $card_number;
                $payment['amount'] = $amount;
            } elseif ($type=="coupon") {
                $payment['reference'] = $card_number;
                $payment['amount'] = $amount;
            } elseif ($type=="chit") {
                $payment['user_id'] = $this->input->post('manager_id');
            }
            $curr_shift_id = $order['shift_id'];
            $time = $this->site_model->get_db_now();
            $get_curr_shift = $this->clock_model->get_shift_id(date2Sql($time),$log_user['id']);
            if(count($get_curr_shift) > 0){
                $curr_shift_id = $get_curr_shift[0]->shift_id;
            }
            $payment_id = $this->cashier_model->add_trans_sales_payments($payment);
            $new_total_paid = 0;
            if($amount > $total_to_pay){
                $new_total_paid = $order['amount'];
                $balance = 0;
            }
            else{
                $new_total_paid = $total_paid+$amount;
                $balance = $balance - $amount;
                // $balance = $total_to_pay - $amount;
            }

            // var_dump($payment);
            $this->cashier_model->update_trans_sales(array('total_paid'=>$new_total_paid,'user_id'=>$log_user['id'],'shift_id'=>$curr_shift_id),$sales_id);
            $log_user = $this->session->userdata('user');
            $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Added Payment ".$amount." on Sales Order #".$sales_id,$sales_id);

            if (num($balance) == 0) {
            //     // if ($paid == 0) {
                    $this->finish_trans($sales_id,true);
                    $set = $this->cashier_model->get_pos_settings();
                    $no_prints = $set->no_of_receipt_print;
                    $order_slip_prints = $set->no_of_order_slip_print;
                    $approved_by = null;
                    if($type == 'chit'){
                        $approved_by = $payment['user_id'];
                        $app = $this->site_model->get_user_details($approved_by);
                        $this->logs_model->add_logs('Sales Order',$app->id,$app->fname." ".$app->mname." ".$app->lname." ".$app->suffix." Approved CHIT Payment ".$amount." on Sales Order #".$sales_id,$sales_id);
                    }
                    $print_echo = $this->print_sales_receipt($sales_id,false,false,true,null,true,$no_prints,$order_slip_prints,$approved_by,false,true);
                    
                    if($send){
                        if(MALL_ENABLED){
                            if(MALL == 'megamall'){
                                $this->sm_file($order['datetime']);
                            }
                        }
                    }

            //     // }
            }
            // if($paid == 0){
            //     $move = true;
            // }
            // else
            //     $move = false;
            // if(in_array($type, array([0]=>'cash'))){
            if ($type == 'cash') {
                if($amount > $total_to_pay){
                    $change = $amount - $total_to_pay;
                }
            }
        }
        else{
            $error = 'Amount Received.';
        }
        // echo json_encode(array('error'=>$error,'change'=>$change,'tendered'=>$amount,'balance'=>num($balance) ));
    }
    public function counter2($type=null,$sales_id=null){
        $this->load->model('site/site_model');
        $this->load->model('dine/cashier_model');
        $this->load->helper('dine/cashier_helper');
        $data = $this->syter->spawn(null);
        $loaded = null;
        $order = array();

        $loc_res = $this->site_model->get_tbl('settings',array(),array(),null,true,'*',null,1);
        $local_tax = $loc_res[0]->local_tax;
        $kitchen_printer = "";
        if(iSetObj($loc_res[0],'kitchen_printer_name') != ""){
            $kitchen_printer = iSetObj($loc_res[0],'kitchen_printer_name');
        }

        if($sales_id != null){
            $order = $this->get_order(false,$sales_id);
            $trans = $this->load_trans(false,$order);
            $time = $trans['datetime'];
            $type = $type." #".$order['order']['sales_id'];
            $loaded = "loaded";
        }
        else{
            $trans = $this->new_trans(false,$type);
            $time = $trans['datetime'];
        }
        if(isset($order['order']))
            $order = $order['order'];
        $typeCN = sess('trans_type_cart');
        
        if(isset($typeCN[0]['table'])){
            $error = $this->check_tbl_activity($typeCN[0]['table'],false);
            if($error == ""){
                $this->update_tbl_activity($typeCN[0]['table']);
            }
            else{
                site_alert($error,'error');
                header("Location:".base_url()."cashier");
            }
        }

        $data['code'] = counterPage2($type,$time,$loaded,$order,$typeCN,$local_tax,$kitchen_printer);
        // $data['add_css'] = 'css/cashier.css';
        $data['add_css'] = array('css/virtual_keyboard.css', 'css/cashier.css');
        $data['add_js'] = array('js/jquery.keyboard.extension-navigation.min.js','js/jquery.keyboard.min.js');
        $data['load_js'] = 'dine/cashier.php';
        $data['use_js'] = 'counterJs2';
        $data['noNavbar'] = true;
        $this->load->view('cashier',$data);
    }
    public function submit_trans2($asJson=true,$submit=null,$void=false,$void_ref=null,$cart=null,$mod_cart=null,$print=false,$split_id=null,$printKitSlip=false){
        $error = null;
        $act = null;
        $sales_id = null;
        $type = null;
        $must_ref = $this->input->post('must_ref');
        $must_datetime = $this->input->post('must_datetime');
        $must_shift = 413;
        $must_user_id = 27;
        // $this->site_model->db = $this->load->database('main', TRUE);
        $ref_check = $this->site_model->get_tbl('trans_sales',array('trans_ref ='=>$must_ref));
        // $this->site_model->db = $this->load->database('default', TRUE);
        if(count($ref_check) > 0){
            $error = "Trans ref is already inserted";
        }
        else{
            $this->load->model('dine/cashier_model');
            $counter = sess('counter');
            $trans_cart = sess('trans_cart');
            $trans_mod_cart = sess('trans_mod_cart');
            $trans_type_cart = sess('trans_type_cart');
            $trans_disc_cart = sess('trans_disc_cart');
            $trans_charge_cart = sess('trans_charge_cart');
            $reasons = sess('reasons');
            
            $totals  = $this->total_trans(false,$cart);
            $total_amount = $totals['total'];
            $charges = $totals['charges'];
            $local_tax = $totals['local_tax'];
            
            
            $type_id = SALES_TRANS;
            $print_echo = array();
            if($void === true){
                $type_id = SALES_VOID_TRANS;
            }

            if($void_ref == null || $void_ref == 0)
                $void_ref = null;

            if(count($trans_cart) <= 0){
                $error = "Error! There are no items.";
            }
            else if(count($counter) <= 0){
                $error = "Error! Shift or User is invalid.";
            }
            else if(NEED_FOOD_SERVER && !isset($counter['waiter_id']) ){
                $error = "Please Select a Food Server.";
            }
            else{
                if(count($trans_disc_cart) > 0){
                    foreach ($trans_disc_cart as $disc_id => $row) {
                        if(!isset($row['disc_type'])){
                            $error = "Select Discount Type. If equally Divided or All Items.";
                        }
                        else{
                            if($row['disc_type'] == "")
                                $error = "Select Discount Type. If equally Divided or All Items.";
                        }
                    }
                    if($error != null){
                        if($asJson){
                            echo json_encode(array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type));
                            return false;
                        }
                        else{
                            return array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type);
                        }
                    }
                }


                if(is_array($cart)){
                    $trans_cart = $cart;
                }
                if(is_array($mod_cart)){
                    $trans_mod_cart = $mod_cart;
                }
                $type = $counter['type'];
                #save sa trans_sales
                $table = null;
                $guest = 0;
                $customer = null;
                if(isset($trans_type_cart[0]['table'])){
                    $table = $trans_type_cart[0]['table'];
                }
                if(isset($trans_type_cart[0]['guest'])){
                    $guest = $trans_type_cart[0]['guest'];
                }
                if(count($trans_disc_cart) > 0){
                    foreach ($trans_disc_cart as $disc_code => $dc) {
                        $guest = $dc['guest'];
                    }
                } 
                if(isset($trans_type_cart[0]['customer_id'])){
                    $customer = $trans_type_cart[0]['customer_id'];
                }
                $waiter = null;
                if(isset($counter['waiter_id'])){
                    $waiter = $counter['waiter_id'];
                }
                $splid = 0;
                if($split_id != null)
                    $splid = $split_id;
                 // $total_amount = number_format($total_amount, 2, '.', '');
                 $total_amount = $total_amount;
                 $trans_sales = array(
                    "user_id"       => $must_user_id,
                    // "user_id"       => $counter['user_id'],
                    "type_id"       => $type_id,
                    "trans_ref"     => $must_ref,
                    // "shift_id"      => $counter['shift_id'],
                    "shift_id"      => $must_shift,
                    "terminal_id"   => $counter['terminal_id'],
                    "type"          => $counter['type'],
                    // "datetime"      => date2SqlDateTime($counter['datetime']),
                    "datetime"      => date2SqlDateTime($must_datetime),
                    "total_amount"  => $total_amount,
                    "void_ref"      => $void_ref,
                    "memo"          => null,
                    "table_id"      => $table,
                    "guest"         => $guest,
                    "customer_id"   => $customer,
                    "waiter_id"     => $waiter,
                    "split"         => $splid
                );
                $user = $this->session->userdata('user');
                if(isset($counter['sales_id']) && $counter['sales_id'] != null){
                    $sales_id = $counter['sales_id'];
                    $this->cashier_model->update_trans_sales($trans_sales,$sales_id);
                    $this->logs_model->add_logs('Sales Order',$user['id'],$user['full_name']." Updated Sales Order #".$sales_id,$sales_id);
                    $this->cashier_model->delete_trans_sales_menus($sales_id);
                    $this->cashier_model->delete_trans_sales_items($sales_id);
                    $this->cashier_model->delete_trans_sales_menu_modifiers($sales_id);
                    $this->cashier_model->delete_trans_sales_discounts($sales_id);
                    $this->cashier_model->delete_trans_sales_charges($sales_id);
                    $this->cashier_model->delete_trans_sales_tax($sales_id);
                    $this->cashier_model->delete_trans_sales_no_tax($sales_id);
                    $this->cashier_model->delete_trans_sales_zero_rated($sales_id);
                    $this->cashier_model->delete_trans_sales_local_tax($sales_id);
                    $act="update";
                    if($submit === null || $submit == 0 || $submit == null)
                        site_alert('Transaction Updated.','success');
                }
                else{
                    $sales_id = $this->cashier_model->add_trans_sales($trans_sales);
                    $this->logs_model->add_logs('Sales Order',$user['id'],$user['full_name']." Added New Sales Order #".$sales_id,$sales_id);
                    $act="add";
                }
                #save sa trans_sales_menus
                $trans_sales_menu = array();
                $trans_sales_items = array();
                foreach ($trans_cart as $trans_id => $v) {
                    $remarks = null;
                    if(isset($v['remarks']) && $v['remarks'] != ""){
                        $remarks = $v['remarks'];
                    }
                    $kitchen_slip_printed=0;
                    if(isset($v['kitchen_slip_printed']) && $v['kitchen_slip_printed'] != ""){
                        $kitchen_slip_printed = $v['kitchen_slip_printed'];
                    }
                    if(!isset($v['retail'])){
                        $trans_sales_menu[] = array(
                            "sales_id" => $sales_id,
                            "line_id" => $trans_id,
                            "menu_id" => $v['menu_id'],
                            "price" => $v['cost'],
                            "qty" => $v['qty'],
                            "no_tax" => $v['no_tax'],
                            "discount"=> 0,
                            "remarks"=>$remarks,
                            "kitchen_slip_printed"=>$kitchen_slip_printed
                        );
                    }
                    else{
                        $trans_sales_items[] = array(
                            "sales_id" => $sales_id,
                            "line_id" => $trans_id,
                            "item_id" => $v['menu_id'],
                            "price" => $v['cost'],
                            "qty" => $v['qty'],
                            "no_tax" => $v['no_tax'],
                            "discount"=> 0,
                            "remarks"=>$remarks
                        );
                    }
                }
                if(count($trans_sales_menu) > 0)
                    $this->cashier_model->add_trans_sales_menus($trans_sales_menu);
                
                if(count($trans_sales_items) > 0)
                    $this->cashier_model->add_trans_sales_items($trans_sales_items);
                #save sa trans_sales_menu_modifiers
                if(count($trans_mod_cart) > 0){
                    $trans_sales_menu_modifiers = array();
                    foreach ($trans_mod_cart as $trans_mod_id => $m) {
                        $kitchen_slip_printed=0;
                        if(isset($m['kitchen_slip_printed']) && $m['kitchen_slip_printed'] != ""){
                            $kitchen_slip_printed = $m['kitchen_slip_printed'];
                        }
                        if(isset($trans_cart[$m['trans_id']])){
                            $trans_sales_menu_modifiers[] = array(
                                "sales_id" => $sales_id,
                                "line_id" => $m['trans_id'],
                                "menu_id" => $m['menu_id'],
                                "mod_group_id" => $m['mod_group_id'],
                                "mod_id" => $m['mod_id'],
                                "price" => $m['cost'],
                                "qty" => $m['qty'],
                                "discount"=> 0,
                                "kitchen_slip_printed"=>$kitchen_slip_printed
                            );
                        }
                    }
                    if(count($trans_sales_menu_modifiers) > 0)
                        $this->cashier_model->add_trans_sales_menu_modifiers($trans_sales_menu_modifiers);
                }
                #save sa trans_sales_discounts
                if(count($trans_disc_cart) > 0){
                    $trans_sales_disc_cart = array();
                    $total = 0;
                    foreach ($trans_cart as $trans_id => $trans){
                        if(isset($trans['cost']))
                            $cost = $trans['cost'];
                        if(isset($trans['price']))
                            $cost = $trans['price'];

                        if(isset($trans['modifiers'])){
                            foreach ($trans['modifiers'] as $trans_mod_id => $mod) {
                                if($trans_id == $mod['line_id'])
                                    $cost += $mod['price'];
                            }
                        }

                        else{
                            if(count($trans_mod_cart) > 0){
                                foreach ($trans_mod_cart as $trans_mod_id => $mod) {
                                    if($trans_id == $mod['trans_id'])
                                        $cost += $mod['cost'];
                                }
                            }
                        }
                        if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
                            $rate = 1.12;
                            $cost = ($cost / $rate);
                            $zero_rated += $v['qty'] * $cost;
                        }
                        $total += $trans['qty'] * $cost;
                    }

                    foreach ($trans_disc_cart as $disc_id => $dc) {
                        $dit = "";
                        if(isset($dc['items'])){
                            foreach ($dc['items'] as $lines) {
                                $dit .= $lines.",";
                            }
                            if($dit != "")
                                $dit = substr($dit,0,-1);                        
                        }
                        

                        $discount = 0;
                        $rate = $dc['disc_rate'];
                        switch ($dc['disc_type']) {
                            case "equal":
                                $divi = $total/$dc['guest'];
                                $divi_less = $divi;
                                if($dc['no_tax'] == 1){
                                    $divi_less = ($divi / 1.12);
                                }
                                $no_persons = count($dc['persons']);
                                // foreach ($row['persons'] as $code => $per) {
                                $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $divi_less);
                                $discount = ($rate / 100) * $divi_less;
                                // }
                                // $total = ($divi * $row['guest']) - $discount;

                                break;
                            default:
                                // $no_citizens = count($dc['persons']);
                                // if($dc['no_tax'] == 1)
                                //     $total = ($total / 1.12);                     
                                // $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total);
                                // $discount = ($rate / 100) * $total;
                                if($dc['fix'] == 0){
                                    if(DISCOUNT_NET_OF_VAT && $row['disc_code'] != DISCOUNT_NET_OF_VAT_EX){
                                        $no_citizens = count($dc['persons']);
                                        $total_net_vat = ($total / 1.12);                     
                                        foreach ($dc['persons'] as $code => $per) {
                                            $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total_net_vat);
                                            $discount += ($rate / 100) * $total_net_vat;
                                        }
                                        $total -= $discount; 
                                    }
                                    else{
                                        $no_citizens = count($dc['persons']);
                                        if($dc['no_tax'] == 1)
                                            $total = ($total / 1.12);                     
                                        foreach ($dc['persons'] as $code => $per) {
                                            $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total);
                                            $discount += ($rate / 100) * $total;
                                        }
                                        $total -= $discount;                                        
                                    }    
                                }
                                else{
                                    $discs[] = array('type'=>$dc['disc_code'],'amount'=>$rate);
                                    $discount += $rate;
                                    $total -= $discount;
                                }
                                // }    
                        }
                        foreach ($dc['persons'] as $pcode => $oper) {
                            $dcBday = null;
                            if(isset($oper['bday']) && $oper['bday'] != "")
                                $dcBday = date2Sql($oper['bday']);
                            $trans_sales_disc_cart[] = array(
                                "sales_id"=>$sales_id,
                                "disc_id"=>$dc['disc_id'],
                                "disc_code"=>$dc['disc_code'],
                                "disc_rate"=>$dc['disc_rate'],
                                "no_tax"=>$dc['no_tax'],
                                "type"=>$dc['disc_type'],
                                "name"=>$oper['name'],
                                "bday"=>$dcBday,
                                "code"=>$oper['code'],
                                "items"=>$dit,
                                "guest"=>$dc['guest'],
                                "amount"=>$discount
                            );
                        }
                    }
                    if(count($trans_sales_disc_cart) > 0)
                        $this->cashier_model->add_trans_sales_discounts($trans_sales_disc_cart);
                }
                #save sa trans_sales_charges
                $total_charge = 0;
                if(count($trans_charge_cart) > 0){
                    $trans_sales_charge_cart = array();
                    foreach ($trans_charge_cart as $charge_id => $ch) {
                        $trans_sales_charge_cart[] = array(
                            "sales_id"=>$sales_id,
                            "charge_id"=>$charge_id,
                            "charge_code"=>$ch['code'],
                            "charge_name"=>$ch['name'],
                            "rate"=>$ch['amount'],
                            "absolute"=>$ch['absolute'],
                            "amount"=>$charges[$charge_id]['amount']
                        );
                        $total_charge += $charges[$charge_id]['amount'];
                    }
                    if(count($trans_sales_charge_cart) > 0)
                        $this->cashier_model->add_trans_sales_charges($trans_sales_charge_cart);
                }
                #SAVE SA TRANS_SALES_TAX
                // $total_amount
                $tax = $this->get_tax_rates(false);
                $zero_rated = 0;
                $total = 0;
                if(count($tax) > 0){
                    $taxable_amount = 0;
                    $not_taxable_amount = 0;
                    foreach ($trans_cart as $trans_id => $v) {
                        $cost = $v['cost'];
                        if(count($trans_mod_cart) > 0){
                            foreach ($trans_mod_cart as $trans_mod_id => $m) {
                                if($trans_id == $m['trans_id']){
                                    $cost += $m['cost'];
                                }
                            }
                        }
                        if($v['no_tax'] == 0){
                            if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
                                $rate = 1.12;
                                $cost = ($cost / $rate);
                                $zero_rated += $v['qty'] * $cost;
                            }
                            $total += $v['qty'] * $cost;

                            $taxable_amount = $total;
                            foreach ($trans_disc_cart as $disc_id => $dc) {
                                $discount = 0;
                                $rate = $dc['disc_rate'];
                                switch ($dc['disc_type']) {
                                    case "equal":
                                        $divi = $total/$dc['guest'];
                                        $no_tax_persons = count($dc['persons']);
                                        $tax_persons = abs($dc['guest'] - $no_persons);
                                        $taxable_amount = $divi * $tax_persons; 
                                        $divi_less = $divi;
                                        if($dc['no_tax'] == 1){
                                            $divi_less = ($divi / 1.12);
                                            // $discount = (($rate / 100) * $divi_less) * $no_tax_persons;
                                            $not_taxable_amount = $divi_less * $no_tax_persons;
                                        }
                                        else{
                                            $discount = (($rate / 100) * $divi) * $no_tax_persons;
                                            $taxable_amount += $divi - $discount;
                                            // $taxable_amount += $divi * $tax_persons;
                                        }                                
                                        break;
                                    default:
                                        $no_citizens = count($dc['persons']);
                                        $no_cost_total = $total;
                                        if($dc['no_tax'] == 1){
                                            $no_cost_total = $total / 1.12;
                                            // $discount = ($rate / 100) * $total;
                                            // $total_discount = $discount * $no_citizens;
                                            $taxable_amount = 0;
                                            $not_taxable_amount = $no_cost_total;
                                        }
                                        else{
                                            if($dc['fix'] == 0){
                                                if(DISCOUNT_NET_OF_VAT && $row['disc_code'] != DISCOUNT_NET_OF_VAT_EX){
                                                    $total_net_vat = $total / 1.12;
                                                    $discount = ($rate / 100) * $total_net_vat;                                                    
                                                    // $total_discount = $discount * $no_citizens;
                                                    // $taxable_amount = $total - $discount;
                                                    $taxable_amount -= $discount;
                                                    $not_taxable_amount = 0;
                                                }
                                                else{
                                                    $discount = ($rate / 100) * $total;                                                    
                                                    $total_discount = $discount * $no_citizens;
                                                    $taxable_amount -= $discount;
                                                    $not_taxable_amount = 0;
                                                }
                                            }
                                            else{
                                                $discount = $rate;
                                                $total_discount = $discount;
                                                $taxable_amount -= $discount;
                                                $not_taxable_amount = 0;                                                
                                            }
                                        }###
                                }
                            }
                        }
                        else{
                          if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
                                $rate = 1.12;
                                $cost = ($cost / $rate);
                                $zero_rated += $v['qty'] * $cost;
                                $not_taxable_amount += $v['qty'] * $cost;
                          }
                          else{
                                $not_taxable_amount += $cost * $v['qty'];
                          }  
                        }
                        // if($v['no_tax'] == 0){
                        //     $taxable_amount += $cost * $v['qty'];
                        // }
                        // else{
                        // }
                    }
                    //remove charges
                    

                    $trans_sales_zero_rated[] = array(
                        "sales_id"=>$sales_id,
                        "amount"=>$zero_rated
                    );
                    // echo var_dump($trans_sales_zero_rated);
                    // return false;
                    if(count($trans_sales_zero_rated) > 0)
                        $this->cashier_model->add_trans_sales_zero_rated($trans_sales_zero_rated);
                    $trans_sales_no_tax[] = array(
                        "sales_id"=>$sales_id,
                        "amount"=>$not_taxable_amount
                    );
                    if(count($trans_sales_no_tax) > 0)
                        $this->cashier_model->add_trans_sales_no_tax($trans_sales_no_tax);

                    $am = $taxable_amount;
                    $trans_sales_tax = array();

                    foreach ($tax as $tax_id => $tx) {
                        $rate = ($tx['rate'] / 100);
                        $tax_value = ($am / ($rate + 1) ) * $rate;
                        // ($am / 1.12) * .12
                        $trans_sales_tax[] = array(
                            "sales_id"=>$sales_id,
                            "name"=>$tx['name'],
                            "rate"=>$tx['rate'],
                            "amount"=>$tax_value,
                        );
                        $am -= $tax_value;
                    }
                    
                    if(count($trans_sales_tax) > 0)
                        $this->cashier_model->add_trans_sales_tax($trans_sales_tax);
                }
                ### LOCAL TAX 
                if($local_tax > 0){
                    $trans_sales_local_tax[] = array(
                        "sales_id"=>$sales_id,
                        "amount"=>$local_tax
                    );
                    if(count($trans_sales_local_tax) > 0)
                        $this->cashier_model->add_trans_sales_local_tax($trans_sales_local_tax);
                }
                #print
                if ($print == "true" || $print === true){
                    // $set = $this->cashier_model->get_pos_settings();
                    // $return_print_str=false,$add_reprinted=true,$splits=null,$include_footer=true
                    // $no_prints = $set->no_of_receipt_print;
                    // $print_echo = $this->print_sales_receipt($sales_id,false,false,true,null,true,$no_prints);
                    $print_echo = $this->print_sales_receipt($sales_id,false);
                }
                if ($printKitSlip == "true" || $printKitSlip === true){
                    $pet = $this->cashier_model->get_pos_settings();
                    $kitchen_printer = $pet->kitchen_printer_name;
                    if(KITCHEN_PRINTER){
                        $kitchen_printer = KITCHEN_PRINTER;
                    }
                    if(count($reasons) > 0){
                        foreach ($reasons as $ctrr => $re) {
                            $this->cashier_model->add_reasons($re);
                        }
                        $this->print_os_removes($sales_id,$reasons);
                    }
                    if($kitchen_printer != ""){
                        $this->print_os($sales_id);            
                    }
                }
                $payment = array(
                    'sales_id'      =>  $sales_id,
                    'payment_type'  =>  'cash',
                    'amount'        =>  $total_amount,
                    'to_pay'        =>  $total_amount,
                    "user_id"       =>  $must_user_id,
                    // 'reference'     =>  null,
                    // 'card_type'     =>  null
                );
                $payment_id = $this->cashier_model->add_trans_sales_payments($payment);
                $this->finish_trans2($sales_id,true);
                site_alert('Transaction Added','success');
            }

        }    
        $this->update_tbl_activity(null,true);
        if($asJson)
            echo json_encode(array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type));
        else
            return array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type);
    }
    public function finish_trans2($sales_id=null,$move=false,$void=false){
        $this->load->model('dine/cashier_model');
        $this->load->model('dine/items_model');
        $this->load->model('core/trans_model');
        $loc_id = 1;
        $trans_type = SALES_TRANS;
        if($void)
        $trans_type = SALES_VOID_TRANS;
        // $ref = $this->trans_model->get_next_ref($trans_type);
        $this->trans_model->db->trans_start();
        // $this->trans_model->save_ref($trans_type,$ref);
        $this->cashier_model->update_trans_sales(array('paid'=>1),$sales_id);
        $log_user = $this->session->userdata('user');
        $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Settled Payment on Sales Order #".$sales_id,$sales_id);
        if($move || $move == "true"){
            $opts = array(
                "type_id" => $trans_type,
                "trans_id" => $sales_id,
                "trans_ref" => '0000',
            );
            if($void)
                $rrr = true;
            else
                $rrr = false;
            $items = $this->order_items_used($sales_id,$rrr);
            if(count($items) > 0 )
                $this->items_model->move_items($loc_id,$items,$opts);
        }
        $this->update_tbl_activity(0,true);   
        $this->trans_model->db->trans_complete();
    }
    public function find_missing(){
        $ref = '000096646';
        for ($i=0; $i <= 186; $i++) { 
            if (preg_match('/^(\D*?)(\d+)(.*)/', $ref, $result) == 1) 
            {
                list($all, $prefix, $number, $postfix) = $result;
                $dig_count = strlen($number); // How many digits? eg. 0003 = 4
                $fmt = '%0' . $dig_count . 'd'; // Make a format string - leading zeroes
                $nextval =  sprintf($fmt, intval($number + 1)); // Add one on, and put prefix back on

                $new_ref=$prefix.$nextval.$postfix;
            }
            else 
                $new_ref=$ref;
            $res = $this->site_model->get_tbl('trans_sales',array('trans_ref ='=>$new_ref));
            if(count($res) == 0){
                echo "MISSING - ".$new_ref."<br>";
            }
            echo $new_ref."<br>";
            $ref = $new_ref;

        }
    }

    function credit_no_fix(){
        // $this->load->model('dine/cashier_model');
        $str = $this->input->post('str');
        $cut = $this->input->post('cut');
        // echo $str;
        // die();

        $exp = explode($cut,$str);
        $num = $exp[0];
        $new_num = substr($num, 2);

        echo $new_num;
    }

    public function check_payment($sales_id=null){
        $this->load->model('dine/cashier_model');
        $order = $this->get_order_header(false,$sales_id);
        $error = "";
        if($order['paid'] == 1){
            $error = "paid";
            echo json_encode(array('error'=>$error));
        }else{
            echo json_encode(array('error'=>$error));
        }
    }

    public function print_sales_receipt_btrack($sales_id=null,$asJson=true,$return_print_str=false,$add_reprinted=true,$splits=null,$include_footer=true,$no_prints=1,$order_slip_prints=0,$approved_by=null,$main_db=false,$openDrawer=false){
        // if(LOCALSYNC){
        //     $this->load->model('core/sync_model');
        // }
        if($main_db){
            $this->db = $this->load->database('main', TRUE);
        }
        $branch = $this->get_branch_details(false);
        $return = $this->get_order(false,$sales_id);
        $order = $return['order'];
        $details = $return['details'];
        $payments = $return['payments'];
        $discounts = $return['discounts'];
        $local_tax = $return['local_tax'];
        $charges = $return['charges'];
        $tax = $return['taxes'];
        $no_tax = $return['no_tax'];
        $zero_rated = $return['zero_rated'];
        $totalsss = $this->total_trans(false,$details,$discounts);
        $discs = $totalsss['discs'];
        $print_str = "\r\n";

        $wrap = wordwrap($branch['name'],PAPER_WIDTH,"|#|");
        $exp = explode("|#|", $wrap);

        if($return_print_str){
            $print_str .= "<b>";
        }
        foreach ($exp as $v) {
            $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
        }
        if($return_print_str){
            $print_str .= "</b>";
        }

        // $wrap = wordwrap($branch['desc'],PAPER_WIDTH,"|#|");
        // $exp = explode("|#|", $wrap);
        // foreach ($exp as $v) {
        //     $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
        // }

             if(defined('RECEIPT_ADDITIONAL_HEADER_BELOW_BRANCH') && !empty(RECEIPT_ADDITIONAL_HEADER_BELOW_BRANCH)){
                $print_str .= $this->align_center(RECEIPT_ADDITIONAL_HEADER_BELOW_BRANCH,PAPER_WIDTH," ")."\r\n";
            }

            // $wrap = wordwrap($branch['desc'],PAPER_WIDTH,"|#|");
            // $exp = explode("|#|", $wrap);
            // foreach ($exp as $v) {
            //     $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
            // }

            $wrap = wordwrap($branch['address'],PAPER_WIDTH,"|#|");
            $exp = explode("|#|", $wrap);
            foreach ($exp as $v) {
                $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
            }   
                // $print_str .= "\r\n";
            if($branch['tin'] != ""){
                // $print_str .= $this->append_chars('VAT REG TIN:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['tin'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
                $print_str .= $this->align_center('VAT REG TIN:'.$branch['tin'],PAPER_WIDTH," ")."\r\n";
            }
            // if($branch['accrdn'] != ""){
            //     $print_str .= $this->append_chars('ACCRDN:',"right",PAPER_DET_SUBCOL," ").$this->append_chars($branch['accrdn'],"right",PAPER_TOTAL_COL_1," ")."\r\n";
            // }
            if($branch['serial'] != ""){
                $print_str .= $this->align_center('S/N:'.$branch['serial'],PAPER_WIDTH," ")."\r\n";
                // $print_str .= $this->append_chars('SN:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['serial'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
            }
            if($branch['machine_no'] != ""){
                $print_str .= $this->align_center('MIN:'.$branch['machine_no'],PAPER_WIDTH," ")."\r\n";
                // $print_str .= $this->append_chars('MIN:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['machine_no'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
            }
            // if($branch['permit_no'] != ""){
            //     $print_str .= $this->append_chars('PERMIT:'.$branch['permit_no'],"right",PAPER_WIDTH," ")."\r\n";
            //     // $print_str .= $this->append_chars('PERMIT:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['permit_no'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
            // }


            $print_str .= "\r\n";
              $print_str .= $this->append_chars(date('M d, Y h:i A',strtotime($order['datetime'])),"left",PAPER_WIDTH," ")."\r\n";

            // if (!empty($order['void_ref']) || $order['inactive'] == 1) {
            if ($order['ref'] != null && $order['inactive'] == 1) {
                $print_str .= $this->align_center("***** VOIDED TRANSACTION *****",PAPER_WIDTH," ")."\r\n";
                $print_str .= $order['reason']."\r\n\r\n";
            }
            $cancelled = 0;
            if ($order['ref'] == null && $order['inactive'] == 1) {
                $print_str .= $this->align_center("***** CANCELLED TRANSACTION *****",PAPER_WIDTH," ")."\r\n";
                $print_str .= $order['reason']."\r\n\r\n";
                $cancelled = 1;
            }
            

           
            $print_str .= "\r\n";

            if (!empty($payments)){
                 if(PRINT_VERSION=="V2"){
                    if($return_print_str){
                         $print_str .=  $this->align_center("<b>OFFICIAL RECEIPT</b>",PAPER_WIDTH," ")."\r\n";// "Receipt # ".$order['ref']." - ".strtoupper($order['type'])."\r\n";
                         $print_str .=  $this->align_center("<b>OR #: ".$order['ref']."</b>",PAPER_WIDTH," ")."\r\n";// "Receipt # ".$order['ref']." - ".strtoupper($order['type'])."\r\n";

                    }else{

                        $print_str .=  $this->align_center("<bold>OFFICIAL RECEIPT</bold>",PAPER_RD_COL_MID,"  ")."\r\n";// "Receipt # ".$order['ref']." - ".strtoupper($order['type'])."\r\n";
                        $print_str .=  $this->align_center("<bold>OR #: ".$order['ref']."</bold>",PAPER_RD_COL_MID,"  ")."\r\n";// "Receipt # ".$order['ref']." - ".strtoupper($order['type'])."\r\n";
                    }

                  }else{
                    $print_str .=  $this->align_center("OFFICIAL  RECEIPT ",PAPER_RD_COL_MID,"  ")."\r\n";// "Receipt # ".$order['ref']." - ".strtoupper($order['type'])."\r\n";
                    $print_str .=  $this->align_center("OR #: ".$order['ref'],PAPER_RD_COL_MID,"  ")."\r\n";
                  }
                    // $this->align_center("Receipt # ".$order['ref']." - ".strtoupper($order['type']),42," ")."\r\n";
            } else{
                $print_str .= $this->align_center("REFERENCE",PAPER_RD_COL_MID," ");//"Reference # ".$order['sales_id']." - ".strtoupper($order['type'])."\r\n";
                $print_str .=  $this->align_center(" #: ".$order['ref'],PAPER_RD_COL_MID,"  ")."\r\n";
                    // $this->align_center(strtoupper($order['type'])." # ".$order['sales_id'],42," ")."\r\n";
            }
            if(PRINT_VERSION=="V2"){
                if($return_print_str){
                    $print_str .= "\r\n";
                 $print_str .=  $this->align_center("<b>".strtoupper($order['type'])."</b>",PAPER_WIDTH," ")."\r\n";
                }else{
                 $print_str .=  $this->align_center("\r\n <bold>".strtoupper($order['type'])."</bold>",PAPER_RD_COL_MID," ")."\r\n";

                }
            }else{
             $print_str .=  $this->align_center("\r\n ".strtoupper($order['type']),PAPER_RD_COL_MID," ")."\r\n";
            }
            $print_str .= $this->append_chars("Table No:  ".$order['table_name'],"left",PAPER_WIDTH," ")."\r\n";
            $print_str .= $this->append_chars("Register No:  ".$order['terminal_id'],"left",PAPER_WIDTH," ")."\r\n";
            $print_str .= $this->append_chars("Cashier Name:  ".ucwords($order['name']),"left",PAPER_WIDTH," ")."\r\n";
            $print_str .= PAPER_LINE_SINGLE."\r\n";



            $print_str .= $this->append_chars('Name:',"left",PAPER_RECEIPT_TEXT," ")
                            .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
            $print_str .= $this->append_chars('Address:',"left",PAPER_RECEIPT_TEXT," ")
                            .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
            $print_str .= $this->append_chars('TIN:',"left",PAPER_RECEIPT_TEXT," ")
                            .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
            $print_str .= $this->append_chars('Business Style:',"left",PAPER_RECEIPT_TEXT," ")
                            .  $this->append_chars('',"right",23,"_")."\r\n"."\r\n";

            $print_str .= PAPER_LINE_SINGLE."\r\n";
        

        $log_user = $this->session->userdata('user');
       
         if (!empty($payments)) {
                if($add_reprinted){
                    if($order['printed'] >= 1){
                        // $print_str .= $this->align_center('[REPRINTED]',PAPER_WIDTH," ")."\r\n";
                        $this->cashier_model->update_trans_sales(array('printed'=>$order['printed']+1),$order['sales_id']);
                        $log_id = $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Reprinted Receipt on Sales Order #".$order['sales_id']." Reference #".$order['ref'],$order['sales_id']);
                        
                    }
                    else{
                        $this->cashier_model->update_trans_sales(array('printed'=>1,'billed'=>1),$order['sales_id']);
                     
                      
                        if(!$return_print_str){
                            $log_id =  $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Printed Receipt on Sales Order #".$order['sales_id']." Reference #".$order['ref'],$order['sales_id']);
                        }
                    }
                }
                else{
                    $this->cashier_model->update_trans_sales(array('printed'=>1,'billed'=>1),$order['sales_id']);
                    if(!$return_print_str){
                         $log_id = $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Printed Receipt on Sales Order #".$order['sales_id']." Reference #".$order['ref'],$order['sales_id']);
                    }
                }
            }
            else{
                $this->cashier_model->update_trans_sales(array('billed'=>1),$order['sales_id']);
                 $log_id =  $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Printed Billing on Sales Order #".$order['sales_id'],$order['sales_id']);
            }

            
            if($order['customer_id'] != ""){
                if($main_db){
                    $this->db = $this->load->database('default', TRUE);
                }
                $this->load->model('dine/customers_model');
                $customers = $this->customers_model->get_customer($order['customer_id']);
                if(count($customers) > 0){
                    $cust = $customers[0];
                    $name = strtolower($cust->fname." ".$cust->mname." ".$cust->lname." ".$cust->suffix);
                    $print_str .= "Customer : ".$this->append_chars(ucwords($name),"right",19," ")."\r\n";
                    if($order['type'] == 'delivery'){
                        $print_str .= "Contact  : ".$this->append_chars(ucwords($cust->phone),"right",19," ")."\r\n";
                        $address = strtolower($cust->street_no." ".$cust->street_address." ".$cust->city." ".$cust->region." ".$cust->zip);
                        $print_str .= "Address  : ".$this->append_chars(ucwords($address),"right",19," ")."\r\n";
                    }
                }

                if($main_db){
                    $this->db = $this->load->database('main', TRUE);
                }
            }
            if($order['type'] == 'delivery' && $order['customer_id'] != ""){
            
            }


            // $print_str .= PAPER_LINE."\r\n";          

            // $print_str .= $this->append_chars("","right",PAPER_WIDTH,"=")."\r\n";

            $pre_total = 0;
            $post_details = array();
            $post_details_nc = array();
            $discs_items = array();
            foreach ($discs as $disc) {
                if(isset($disc['items']))
                    $discs_items[$disc['type']] = $disc['items'];
            }

            // echo "<pre>",print_r($details),"</pre>";die();

            $dscTxt = array();
            foreach ($details as $line_id => $val) {
                foreach ($discs_items as $type => $dissss) {
                    if(in_array($line_id, $dissss)){
                        $qty = 1;
                        if(isset($dscTxt[$val['menu_id'].'_'.$val['price']][$type]['qty'])){
                            $qty = $dscTxt[$val['menu_id'].'_'.$val['price']][$type]['qty'] + 1;
                        }
                        $dscTxt[$val['menu_id'].'_'.$val['price']][$type] = array('txt' => '#'.$type,'qty' => $qty);
                    }
                }
            }

            foreach ($details as $line_id => $val) {

                if($val['nocharge'] == 1){
                    if (!isset($post_details_nc[$val['menu_id'].'_'.$val['price']])) {
                        $dscsacs = array();
                        if(isset($dscTxt[$val['menu_id'].'_'.$val['price']])){
                            $dscsacs = $dscTxt[$val['menu_id'].'_'.$val['price']];
                        }
                        $remarksArr = array();
                        if($val['remarks'] != '')
                            $remarksArr = array($val['remarks']." x ".$val['qty']);
                        $post_details_nc[$val['menu_id'].'_'.$val['price']] = array(
                            'name' => $val['name'],
                            'code' => $val['code'],
                            'price' => $val['price'],
                            'no_tax' => $val['no_tax'],
                            'discount' => $val['discount'],
                            'qty' => $val['qty'],
                            'discounted'=>$dscsacs,
                            'remarks'=>$remarksArr,
                            'modifiers' => array()
                        );
                    } else {
                        if($val['remarks'] != "")
                            $post_details_nc[$val['menu_id'].'_'.$val['price']]['remarks'][]= $val['remarks']." x ".$val['qty'];
                        $post_details_nc[$val['menu_id'].'_'.$val['price']]['qty'] += $val['qty'];
                    }

                    if (empty($val['modifiers']))
                        continue;

                    $modifs = $val['modifiers'];
                    $n_modifiers = $post_details_nc[$val['menu_id'].'_'.$val['price']]['modifiers'];
                    foreach ($modifs as $vv) {
                        if (!isset($n_modifiers[$vv['id']])) {
                            $n_modifiers[$vv['id']] = array(
                                'name' => $vv['name'],
                                'price' => $vv['price'],
                                'qty' => $val['qty'],
                                'discount' => $vv['discount']
                            );
                        } else {
                            $n_modifiers[$vv['id']]['qty'] += $val['qty'];
                        }
                    }
                    $post_details_nc[$val['menu_id'].'_'.$val['price']]['modifiers'] = $n_modifiers;
                }else{
                    if (!isset($post_details[$val['menu_id'].'_'.$val['price']])) {
                        $dscsacs = array();
                        if(isset($dscTxt[$val['menu_id'].'_'.$val['price']])){
                            $dscsacs = $dscTxt[$val['menu_id'].'_'.$val['price']];
                        }
                        $remarksArr = array();
                        if($val['remarks'] != '')
                            $remarksArr = array($val['remarks']." x ".$val['qty']);
                        
                        $post_details[$val['menu_id'].'_'.$val['price']] = array(
                            'name' => $val['name'],
                            'code' => $val['code'],
                            'price' => $val['price'],
                            'no_tax' => $val['no_tax'],
                            'discount' => $val['discount'],
                            'qty' => $val['qty'],
                            'discounted'=>$dscsacs,
                            'remarks'=>$remarksArr,
                            'modifiers' => array()
                        );
                    } else {
                        if($val['remarks'] != "")
                            $post_details[$val['menu_id'].'_'.$val['price']]['remarks'][]= $val['remarks']." x ".$val['qty'];
                        $post_details[$val['menu_id'].'_'.$val['price']]['qty'] += $val['qty'];
                    }

                    if (empty($val['modifiers']))
                        continue;

                    $modifs = $val['modifiers'];
                    $n_modifiers = $post_details[$val['menu_id'].'_'.$val['price']]['modifiers'];
                    foreach ($modifs as $vv) {
                        if (!isset($n_modifiers[$vv['id']])) {
                            $n_modifiers[$vv['id']] = array(
                                'name' => $vv['name'],
                                'price' => $vv['price'],
                                'qty' => $val['qty'],
                                'discount' => $vv['discount']
                            );
                        } else {
                            $n_modifiers[$vv['id']]['qty'] += $val['qty'];
                        }
                    }
                    $post_details[$val['menu_id'].'_'.$val['price']]['modifiers'] = $n_modifiers;
                }

            }
            /* END NEW BLOCK */
            $tot_qty = 0;
              $print_str .= $this->append_chars("QTY" ,"right",PAPER_DET_COL_1," ");
               $print_str .= $this->append_chars("Item Description","right",PAPER_DET_COL_2," ").
                $this->append_chars("Amount","left",PAPER_DET_COL_3," ")."\r\n\r\n";
            foreach ($post_details as $val) {
                $tot_qty += $val['qty'];
                $print_str .= $this->append_chars($val['qty'] ."  " ,"right",PAPER_DET_COL_1," ");

                $len = strlen($val['name']);

                if($val['qty'] == 1){
                    $lgth = 21;
                }else{
                    $lgth = 16;
                }

                if($len > $lgth){
                    $arr2 = str_split($val['name'], $lgth);
                    $counter = 1;
                    foreach($arr2 as $k => $vv){
                        if($counter == 1){
                            if ($val['qty'] == 1) {
                                $print_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").
                                    $this->append_chars(number_format($val['price'],2),"left",PAPER_DET_COL_3," ")."\r\n\r\n";
                            } else {
                                $print_str .= $this->append_chars(substrwords($vv,100,"")." ".$val['price'],"right",PAPER_DET_COL_2," ").
                                    $this->append_chars(number_format($val['price'] * $val['qty'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                            }
                        }else{
                            // if ($val['qty'] == 1) {
                                $print_str .= $this->append_chars("","right",PAPER_DET_COL_1," ");
                                $print_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").
                                    $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                            // } else {
                                // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                            // }
                        }
                        $counter++;
                    }
                    
                    if ($val['qty'] == 1) {
                        $pre_total += $val['price'];
                    }else{
                        $pre_total += $val['price'] * $val['qty'];
                    }
                }else{
                    if ($val['qty'] == 1) {
                        $print_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").
                            $this->append_chars(number_format($val['price'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                        $pre_total += $val['price'];
                    } else {
                        $print_str .= $this->append_chars(substrwords($val['name'],100,"")." ".$val['price'],"right",PAPER_DET_COL_2," ").
                            $this->append_chars(number_format($val['price'] * $val['qty'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                        $pre_total += $val['price'] * $val['qty'];
                    }
                }
                if(count($val['discounted']) > 0){
                    foreach ($val['discounted'] as $dssstxt) {
                      $print_str .= "      ";
                      $print_str .= $this->append_chars($dssstxt['txt']." x ".$dssstxt['qty'],"right",PAPER_DET_COL_2," ")."\r\n";
                    }
                }
                if(isset($val['remarks']) && count($val['remarks']) > 0){
                    if(KERMIT){
                        foreach ($val['remarks'] as $rmrktxt) {
                            $print_str .= "     * ";
                            $print_str .= $this->append_chars(ucwords($rmrktxt),"right",PAPER_DET_COL_2," ")."\r\n";
                        }
                    }
                }

                if (empty($val['modifiers']))
                    continue;

                $modifs = $val['modifiers'];
                foreach ($modifs as $vv) {
                    $print_str .= "   * ".$vv['qty']." ";

                    if ($vv['qty'] == 1) {
                        $print_str .= $this->append_chars(substrwords($vv['name'],100,""),"right",PAPER_DET_SUBCOL," ")
                            .$this->append_chars(number_format($vv['price'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                        $pre_total += $vv['price'];
                    } else {
                        $print_str .= $this->append_chars(substrwords($vv['name'],100,"")." @ ".$vv['price'],"right",PAPER_DET_SUBCOL," ")
                            .$this->append_chars(number_format($vv['price'] * $vv['qty'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                        $pre_total += $vv['price'] * $vv['qty'];
                    }
                }
                

                $print_str .= "\r\n";
                //DISCOUNT PALATANDAAN
                // if(in_array($val[''], haystack))

            }

            //for no charges
            if($post_details_nc){
                // $print_str .= "\r\n";
                $print_str .= PAPER_LINE."\r\n";
                $print_str .= "          ".TAKEOUTTEXT."\r\n";
                $print_str .= PAPER_LINE."\r\n";
                foreach ($post_details_nc as $val) {
                    $tot_qty += $val['qty'];
                    $print_str .= $this->append_chars($val['qty']." ","right",PAPER_DET_COL_1," ");

                    $len = strlen($val['name']);

                    if($val['qty'] == 1){
                        $lgth = 21;
                    }else{
                        $lgth = 16;
                    }

                    if($len > $lgth){
                        $arr2 = str_split($val['name'], $lgth);
                        $counter = 1;
                        foreach($arr2 as $k => $vv){
                            if($counter == 1){
                                if ($val['qty'] == 1) {
                                    $print_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").
                                        $this->append_chars(number_format($val['price'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                                } else {
                                    $print_str .= $this->append_chars(substrwords($vv,100,"")." ".$val['price'],"right",PAPER_DET_COL_2," ").
                                        $this->append_chars(number_format($val['price'] * $val['qty'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                                }
                            }else{
                                // if ($val['qty'] == 1) {
                                    $print_str .= $this->append_chars("","right",PAPER_DET_COL_1," ");
                                    $print_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").
                                        $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                // } else {
                                    // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                    //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                // }
                            }
                            $counter++;
                        }
                        
                        if ($val['qty'] == 1) {
                            $pre_total += $val['price'];
                        }else{
                            $pre_total += $val['price'] * $val['qty'];
                        }
                    }else{
                        if ($val['qty'] == 1) {
                            $print_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").
                                $this->append_chars(number_format($val['price'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                            $pre_total += $val['price'];
                        } else {
                            $print_str .= $this->append_chars(substrwords($val['name'],100,"")." ".$val['price'],"right",PAPER_DET_COL_2," ").
                                $this->append_chars(number_format($val['price'] * $val['qty'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                            $pre_total += $val['price'] * $val['qty'];
                        }
                    }
                    if(count($val['discounted']) > 0){
                        foreach ($val['discounted'] as $dssstxt) {
                          $print_str .= "      ";
                          $print_str .= $this->append_chars($dssstxt['txt']." x ".$dssstxt['qty'],"right",PAPER_DET_COL_2," ")."\r\n";
                        }
                    }
                    if(isset($val['remarks']) && count($val['remarks']) > 0){
                        // foreach ($val['remarks'] as $rmrktxt) {
                        //     $print_str .= "     * ";
                        //     $print_str .= $this->append_chars(ucwords($rmrktxt),"right",PAPER_DET_COL_2," ")."\r\n";
                        // }
                    }

                    if (empty($val['modifiers']))
                        continue;

                    $modifs = $val['modifiers'];
                    foreach ($modifs as $vv) {
                        $print_str .= "   * ".$vv['qty']." ";

                        if ($vv['qty'] == 1) {
                            $print_str .= $this->append_chars(substrwords($vv['name'],100,""),"right",PAPER_DET_SUBCOL," ")
                                .$this->append_chars(number_format($vv['price'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                            $pre_total += $vv['price'];
                        } else {
                            $print_str .= $this->append_chars(substrwords($vv['name'],100,"")." ".$vv['price'],"right",PAPER_DET_SUBCOL," ")
                                .$this->append_chars(number_format($vv['price'] * $vv['qty'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                            $pre_total += $vv['price'] * $vv['qty'];
                        }
                    }
                    


                    //DISCOUNT PALATANDAAN
                    // if(in_array($val[''], haystack))

                }
            }

            // $print_str .= $this->append_chars("","right",PAPER_WIDTH,"=");

            // $vat = round($order['amount'] / (1 + BASE_TAX) * BASE_TAX,1);
            $vat = 0;
            if($tax > 0){
                foreach ($tax as $tx) {
                   $vat += $tx['amount'];
                }
            }
            $no_tax_amt = 0;
            foreach ($no_tax as $k=>$v) {
                $no_tax_amt += $v['amount'];
            }

            $zero_rated_amt = 0;
            foreach ($zero_rated as $k=>$v) {
                $zero_rated_amt += $v['amount'];
            }
            if($zero_rated_amt > 0){
                $no_tax_amt = 0;
            }

            $print_str .= PAPER_LINE_SINGLE."\r\n";
            // $print_str .= "\r\n".$this->append_chars(ucwords("TOTAL"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format(($pre_total),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
            // $print_str .= $this->append_chars(ucwords("TOTAL QTY"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format(($tot_qty),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
            // // if(count($discs) > 0){
            //     foreach ($discs as $ds) {
            //         $print_str .= "\r\n".$this->append_chars(strtoupper($ds['type']),"right",28," ").$this->append_chars("P (".number_format($ds['amount'],2).")","left",10," ")."\r\n";
            //     }
            // }
            // $print_str .= "\r\n";
            

            //start of not show for cancelled trans

            if($cancelled == 0){

                $total_discounts = 0;
                $total_discounts_sm = 0;
                foreach ($discounts as $dcs_ci => $dcs) {
                    foreach ($dcs['persons'] as $code => $dcp) {
                        // $print_str .= $this->append_chars($dcs_ci,"right",28," ").$this->append_chars('P'.num($dcp['amount']),"left",10," ");
                        // $print_str .= "\r\n".$this->append_chars($dcp['name'],"right",28," ");
                        // $print_str .= "\r\n".$this->append_chars($dcp['code'],"right",28," ")."\r\n";
                        // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                        $total_discounts += $dcp['amount'];
                        $dcAmt = $dcp['amount'];
                        // if(MALL_ENABLED && MALL == 'megamall'){
                        //     if($dcs_ci == PWDDISC){
                        //         $dcAmt = $dcAmt / 1.12;       
                        //     }
                        // }
                        $total_discounts_sm += $dcAmt;
                    }
                }
                $total_discounts_non_vat = 0;
                foreach ($discounts as $dcs_ci => $dcs) {
                   
                    foreach ($dcs['persons'] as $code => $dcp) {
                        // $print_str .= $this->append_chars($dcs_ci,"right",28," ").$this->append_chars('P'.num($dcp['amount']),"left",10," ");
                        // $print_str .= "\r\n".$this->append_chars($dcp['name'],"right",28," ");
                        // $print_str .= "\r\n".$this->append_chars($dcp['code'],"right",28," ")."\r\n";
                        // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                        if($dcs['no_tax'] == 1){
                            $total_discounts_non_vat += $dcp['amount'];
                        }
                    }
                }
                $total_charges = 0;
                if(count($charges) > 0){
                    foreach ($charges as $charge_id => $opt) {
                        $total_charges += $opt['total_amount'];
                    }
                }
                $local_tax_amt = 0;
                if(count($local_tax) > 0){
                    foreach ($local_tax as $lt_id => $lt) {
                        $local_tax_amt += $lt['amount'];
                    }
                }
                // echo num($total_charges + $local_tax_amt);

                // echo '((('.$order['amount'].' - ('.$total_charges.' + '.$local_tax_amt.') - '.$vat.') - '.$no_tax_amt.'+'.$total_discounts_non_vat.') -'.$zero_rated_amt;


                $vat_sales = ( ( ( $order['amount'] - ($total_charges + $local_tax_amt) ) - $vat)  - $no_tax_amt + $total_discounts_non_vat ) - $zero_rated_amt;

                // echo '===== '.$vat_sales;
                // $vat_sales = ( ( ( $order['amount'] ) - $vat)  - $no_tax_amt + $total_discounts) - $zero_rated_amt;
                // echo "vat_sales= ((".$order['amount']." - ".$total_charges."))- ".$vat." )- ".$no_tax_amt." + ".$total_discounts." - ".$zero_rated_amt;
                if($vat_sales < 0){
                    $vat_sales = 0;
                }
 $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                    $print_str .= $this->append_chars("Total Amount","right",PAPER_DET_COL_2," ").
                $this->append_chars(number_format($pre_total,2),"left",PAPER_DET_COL_3," ")."\r\n";
                if(count($discounts) >0){
                $less_vat = round(($pre_total - ($order['amount'] - $total_charges + $local_tax_amt ) ) - $total_discounts,2);
                $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                
                    if($less_vat >0){

                        $print_str .= $this->append_chars(ucwords("Less VAT"),"right",PAPER_DET_COL_2," ").$this->append_chars(number_format( $less_vat,2),"left",PAPER_DET_COL_3," ")."\r\n";
                    }

                  // if(count($dcs['persons']) > 0){
                  //      $print_str .= $this->append_chars(ucwords("Less VAT (12%)"),"right",28," ").$this->append_chars("(".number_format($pre_total - $no_tax_amt,2).")","left",10," ")."\r\n";
                  //  }
                }else{
                    // $print_str .= $this->append_chars("Sub-Total","right",PAPER_DET_COL_2," ").
                    // $this->append_chars(number_format($pre_total,2),"left",PAPER_DET_COL_3," ")."\r\n";
                }
                if(count($discounts) >0){
                    $hasSMPWD = false;
                    if(count($dcs['persons']) > 0){
                        // $print_str .= "\r\n";
                        // $print_str .= PAPER_LINE."\r\n";
                        // $print_str .= "          Discount Details"."\r\n";
                        // $print_str .= PAPER_LINE."\r\n";

                        foreach ($discounts as $dcs_ci => $dcs) {
                            foreach ($dcs['persons'] as $code => $dcp) {
                                $discRateTxt = " (".$dcp['disc_rate']."%)";
                                if($dcs['fix'] == 1){
                                    $discRateTxt = " (".$dcp['disc_rate'].")";
                                }
                                $dcAmt = $dcp['amount'];
                                // if(MALL_ENABLED && MALL == 'megamall'){
                                //     if($dcs_ci == PWDDISC){
                                //         $dcAmt = $dcAmt / 1.12; 
                                //         $hasSMPWD = true;      
                                //     }
                                // }
                                  $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                                $print_str .= $this->append_chars("LESS ".$dcs_ci." DISCOUNT","right",PAPER_DET_COL_2," ").$this->append_chars(' '.num($dcAmt),"left",PAPER_DET_COL_3," ")."\r\n";
                                
                            }
                        }
                       
                    }
                } 
           
                if(count($charges) > 0){
                    // $print_str .= "\r\n";
                    // $print_str .= PAPER_LINE."\r\n";
                    // $print_str .= "              CHARGES"."\r\n";
                    // $print_str .= PAPER_LINE."\r\n";
                    foreach ($charges as $charge_id => $opt) {
                        $charge_amount = $opt['total_amount'];
                        // if($opt['absolute'] == 0){
                        //     $charge_amount = ($opt['amount'] / 100) * ($order['amount'] - $vat);
                        // }
                            $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");     
                        $print_str .= $this->append_chars($opt['name'] ."(".$opt['rate']."%)","right",PAPER_DET_COL_2," ").$this->append_chars(number_format($charge_amount,2),"left",PAPER_DET_COL_3," ")."\r\n";
                // $print_str .= $this->append_chars("Service Charge (8.5%)","right",PAPER_DET_COL_2," ").
                    }
                    // $print_str .= PAPER_LINE."\r\n";
                }
                if(PRINT_VERSION == 'V2'){    
                    $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");     
                    $print_str .="<bold>";
                    $print_str .= $this->append_chars($tot_qty." Item(s) Total Due","right",PAPER_DET_COL_2," ")."</bold><bold>".
                    $this->append_chars(number_format($order['amount'],2),"left",PAPER_DET_COL_3," ")."</bold>"."\r\n";
                }else{
                    $print_str .= $this->append_chars($tot_qty." Item(s) Total Due","right",PAPER_DET_COL_2," ").
                    $this->append_chars(number_format($order['amount'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                }
                $py_ref = "";
                if (!empty($payments)) {

                   
                    $pay_total = 0;
                    $gft_ctr = 0;
                    $nor_ctr = 0;
                    $py_ref = "";
                    $total_payment = 0;
                  
                    foreach ($payments as $payment_id => $opt) {
                        $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");     
                        $print_str .= $this->append_chars(ucwords($opt['payment_type']),"right",PAPER_DET_COL_2," ").
                        $this->append_chars(number_format($opt['amount'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                        // $print_str .= $this->append_chars(ucwords($opt['payment_type']),"right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($opt['amount'],2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                        
                        if($opt['payment_type'] == 'check'){
                            $print_str .= $this->append_chars("     Check # ".$opt['reference'],"right",PAPER_WIDTH," ")."\r\n";
                        }else{
                            if (!empty($opt['reference']) && $opt['payment_type'] != 'deposit') {
                                $py_ref = $opt['reference'];
                                // $print_str .= $this->append_chars("     Reference ".$opt['reference'],"right",PAPER_WIDTH," ")."\r\n";
                            }
                        }

                        if($opt['payment_type'] == 'foodpanda'){
                            if (!empty($opt['approval_code']))
                                    $print_str .= $this->append_chars("  Order Code: ".$opt['approval_code'],"right",PAPER_WIDTH," ")."\r\n";
                        }else if($opt['payment_type'] == 'check'){
                            $print_str .= $this->append_chars("     Bank: ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                        }else if($opt['payment_type'] == 'picc'){
                            $print_str .= $this->append_chars("     Name: ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                        }else{
                            if (!empty($opt['card_number'])) {
                                if (!empty($opt['card_type'])) {
                                    $print_str .= $this->append_chars("  Card Type: ".$opt['card_type'],"right",PAPER_WIDTH," ")."\r\n";
                                }
                                $print_str .= $this->append_chars("  Card #: ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                                if (!empty($opt['approval_code']))
                                    $print_str .= $this->append_chars("  Approval #: ".$opt['approval_code'],"right",PAPER_WIDTH," ")."\r\n";
                            }
                        }
                        // $pay_total += $opt['amount'];
                        // if($opt['payment_type'] == 'gc'){
                        //     $gft_ctr++;
                        // }
                        // else
                        //     $nor_ctr++;
                        if($opt['payment_type'] == 'gc'){
                            if($opt['amount'] > $opt['to_pay']){
                                $total_payment  += $opt['to_pay'];
                            }else{
                                $total_payment  += $opt['amount'];
                            }
                        }
                        else{
                            $total_payment  += $opt['amount'];
                        }


                      

                        
                    }

                    
                     if(PRINT_VERSION=="V2" && !$return_print_str){

                            $print_str .= "STARTCUT==============================ENDCUT";
                        }else{
                            $print_str .="<b>";
                        }

                     $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");     
                     
                    if($gft_ctr == 1 && $nor_ctr == 0)
                        $print_str .= $this->append_chars('Change',"right",PAPER_DET_COL_2," ").$this->append_chars(number_format(0,2),"left",PAPER_DET_COL_3," ")."\r\n";
                    else
                        $print_str .= $this->append_chars('Change',"right",PAPER_DET_COL_2," ").$this->append_chars(number_format(abs($total_payment - $order['amount']),2),"left",PAPER_DET_COL_3," ")."\r\n";
                 
                        if(PRINT_VERSION=="V2" && !$return_print_str){
                          $print_str .= "STARTCUT==============================ENDCUT";

                       }else{
                         $print_str .="</b>";
                       }
                    $print_str .= PAPER_LINE_SINGLE."\r\n";
                     $print_str .= "\r\n".$this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("VATABLE SALES"),"right",PAPER_DET_COL_2," ").$this->append_chars(num($vat_sales),"left",PAPER_DET_COL_3," ")."\r\n";
                    $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("VATEXEMPT"),"right",PAPER_DET_COL_2," ").$this->append_chars(number_format($no_tax_amt-$total_discounts_non_vat,2),"left",PAPER_DET_COL_3," ")."\r\n";
                    $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("Zero Rated VAT"),"right",PAPER_DET_COL_2," ").$this->append_chars(number_format($zero_rated_amt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                    
                       if($tax > 0){
                            foreach ($tax as $tx) {
                               $print_str .=  $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars($tx['name']." Amount","right",PAPER_DET_COL_2," ").$this->append_chars(number_format(abs($tx['amount']),2),"left",PAPER_DET_COL_3," ")."\r\n";
                            }
                        }
                    $print_str .= "\r\n";
                    

                    $total_discount_snr_count = $total_discount_pwd_count = $total_discount_count = 0;
                    foreach ($discounts as $dcs_ci => $dcs) {
                            if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                                // echo "<pre>",print_r($dcs['persons']),"</pre>";die();
                                foreach ($dcs['persons'] as $code => $dcp) {   
                                    if($dcs_ci == 'SNDISC'){
                                        $total_discount_snr_count += 1;                            
                                    } 
                                    if($dcs_ci == 'PWDISC'){

                                        $total_discount_pwd_count += 1;                            
                                    } 
                                                                   }
                            }
                    }

                   
                    $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("Total Guest Count"),"right",PAPER_DET_COL_2," ").$this->append_chars((($order['guest'] >0) ? $order['guest']: 1),"left",PAPER_DET_COL_3," ")."\r\n";
                    
                    if($total_discount_snr_count > 0){

                        $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("Total SC Guest Count"),"right",PAPER_DET_COL_2," ").$this->append_chars($total_discount_snr_count,"left",PAPER_DET_COL_3," ")."\r\n\r\n";
                    }

                    if($total_discount_pwd_count > 0){

                        $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("Total PWD Guest Count:"),"right",PAPER_DET_COL_2," ").$this->append_chars($total_discount_pwd_count,"left",PAPER_DET_COL_3," ")."\r\n\r\n";
                    }

                    


                    $print_str .= PAPER_LINE_SINGLE."\r\n\r\n";

                    if ($include_footer) {
                        $rec_footer = "";
                        if($branch['rec_footer'] != ""){
                            $wrap = str_replace ("<br>","\r\n", $branch['rec_footer'] );
                            $exp = explode("\r\n", $wrap);
                            foreach ($exp as $v) {
                                $wrap2 = wordwrap($v,35,"|#|");
                                $exp2 = explode("|#|", $wrap2);  
                                foreach ($exp2 as $v2) {
                                    $rec_footer .= $this->align_center($v2,PAPER_WIDTH," ")."\r\n";
                                }
                            }                        
                        }
                        if($order['inactive'] == 0){
                            $print_str .= $rec_footer;
                        }    
                            $print_str .= "\r\n";
                            // $print_str .= $this->align_center("POS Vendor Details",PAPER_WIDTH," ")."\r\n";
                            // $print_str .= PAPER_LINE."\r\n";
                            $print_str .= $this->align_center("PointOne Integrated Tech., Inc.",PAPER_WIDTH," ")."\r\n";
                            $print_str .= $this->align_center("1409 Prestige Tower",PAPER_WIDTH," ")."\r\n";
                            $print_str .= $this->align_center("Ortigas Center, Pasig City",PAPER_WIDTH," ")."\r\n";
                            $print_str .= $this->append_chars('TIN:',"right",PAPER_RD_COL_3," ")
                                       .  $this->append_chars('008543444-000',"left",PAPER_DET_SUBCOL," ")."\r\n";
                            if($branch['accrdn'] != ""){
                                $print_str .= $this->append_chars('Accred. No.',"right",PAPER_RD_COL_3," ")
                                       .  $this->append_chars($branch['accrdn'],"left",PAPER_DET_SUBCOL," ")."\r\n";
                                // $print_str .= $this->align_center('ACCRDN:',PAPER_WIDTH," ")."\r\n".$this->align_center($branch['accrdn'],PAPER_WIDTH," ")."\r\n";
                            }
                            $print_str .= $this->append_chars('Permit No.:',"right",PAPER_RD_COL_3," ")
                                       .  $this->append_chars($branch['permit_no'],"left",PAPER_DET_SUBCOL," ")."\r\n";
                            // $print_str .= $this->append_chars('POS Version:',"right",PAPER_RD_COL_3," ")
                            //            .  $this->append_chars('iPos ver 1.0',"left",PAPER_DET_SUBCOL," ")."\r\n";
                            $print_str .= $this->append_chars('Date Issued:',"right",PAPER_RD_COL_3," ")
                                       .  $this->append_chars('December 22, 2014',"left",PAPER_DET_SUBCOL," ")."\r\n";
                                       // .  $this->append_chars(date2Word($order['datetime']),"right",PAPER_TOTAL_COL_2," ")."\r\n";
                            $print_str .= $this->append_chars('Valid Until:',"right",PAPER_RD_COL_3," ")
                                       .  $this->append_chars(date2Word('December 22, 2025'),"left",PAPER_DET_SUBCOL," ")."\r\n";
                                       // .  $this->append_chars(date2Word( date('Y-m-d',strtotime($order['datetime'].' +5 year')) ),"right",PAPER_TOTAL_COL_2," ")."\r\n";

                        if($branch['contact_no'] != ""){
                            $print_str .= $this->align_center("For feedback, please call us at",PAPER_WIDTH," ")."\r\n"
                                         .$this->align_center($branch['contact_no'],PAPER_WIDTH," ")."\r\n";
                        }
                        if($branch['email'] != ""){
                            $print_str .= $this->align_center("Or Email us at",PAPER_WIDTH," ")."\r\n" 
                                       .$this->align_center($branch['email'],PAPER_WIDTH," ")."\r\n";
                        }
                        if($branch['website'] != ""){
                            $print_str .= $this->align_center("Please visit us at",PAPER_WIDTH," ")."\r\n"
                                         .$this->align_center($branch['website'],PAPER_WIDTH," ")."\r\n";
                        }

                        foreach ($discounts as $dcs_ci => $dcs) {
                            if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                                foreach ($dcs['persons'] as $code => $dcp) {
                                    // ."\r\n"
                                    // ."\r\n"
                                    if($dcs_ci == 'SNDISC'){
                                        $print_str .= "\r\n".$this->append_chars("Senior Citizen TIN: ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                        $print_str .= "\r\n".$this->append_chars("OSCA ID No.: ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                    }
                                    if($dcs_ci == 'PWDISC'){
                                        $print_str .= "\r\n".$this->append_chars("PWD TIN: ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                        $print_str .= "\r\n".$this->append_chars("OSCA ID No.: ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                    }

                                   

                                }
                            }
                             if($dcs_ci == 'D1018'){
                                         $print_str .= "\r\n".$this->append_chars("Name: ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                        $print_str .= "\r\n".$this->append_chars("Address: ","right",PAPER_TOTAL_COL_1," ");
                                        $print_str .= "\r\n".$this->append_chars("TIN: ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                        $print_str .= "\r\n".$this->append_chars("VIP ID NO: ","right",PAPER_TOTAL_COL_1," ");

                            }

                            if($dcs_ci == 'D1006'){
                                         $print_str .= "\r\n".$this->append_chars("PWD TIN: ","right",PAPER_TOTAL_COL_1," ");
                                        $print_str .= "\r\n".$this->append_chars("National Athlete ID No.: ","right",PAPER_TOTAL_COL_1," ");
                                     

                            }

                        }

                        if($zero_rated_amt > 0){
                                $print_str .= "\r\n".$this->append_chars("Name: ","right",PAPER_TOTAL_COL_1," ");
                                $print_str .= "\r\n".$this->append_chars("Address: ","right",PAPER_TOTAL_COL_1," ");
                                $print_str .= "\r\n".$this->append_chars("TIN: ","right",PAPER_TOTAL_COL_1," ");
                                $print_str .= "\r\n".$this->append_chars("Diplomat ID No: ","right",PAPER_TOTAL_COL_1," ");
                        }
                        
                            if(isset($py_ref) && !empty($py_ref)){
                                $print_str .= "\r\n".$this->append_chars("Name: ","right",PAPER_TOTAL_COL_1," ");
                                $print_str .= "\r\n".$this->append_chars("Address: ","right",PAPER_TOTAL_COL_1," ");
                                $print_str .= "\r\n".$this->append_chars("TIN: ","right",PAPER_TOTAL_COL_1," ");
                                $print_str .= "\r\n".$this->append_chars("GC Serial No: ".$py_ref,"right",PAPER_TOTAL_COL_1," ");

                            }
                        // $print_str .= PAPER_LINE."\r\n";
                        if($order['inactive'] == 0){
                            $print_str .= "\r\n";
                          
                        }

                    }

                  
                    if (!empty($order['ref']) && $order['inactive'] == 0) {
                        // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                        $print_str .= "\r\n\r\n".$this->append_chars("_________________________________","right",PAPER_TOTAL_COL_1," ");
                        $print_str .= "\r\n".$this->append_chars("Customer Signature Over Printed Name","right",PAPER_TOTAL_COL_1," ");
                        // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                        $print_str .= "\r\n";
                    }
                    $print_str .="\r\n".$this->align_center("THIS INVOICE/RECEIPT WILL BE VALID FOR FIVE(5) YEARS FROM THE DATE OF THE PERMIT TO USE",PAPER_WIDTH," ")."\r\n";
                        // $print_str .= "\r\n".$this->append_chars("THIS INVOICE/RECEIPT WILL BE VALID FOR","right",PAPER_TOTAL_COL_1," ");
                        // $print_str .= "\r\n".$this->append_chars("FIVE(5) YEARS FROM THE DATE OF THE PERMIT","right",PAPER_TOTAL_COL_1," ");
                        //  $print_str .= "\r\n".$this->append_chars("TO USE","right",PAPER_TOTAL_COL_1," ");
                
                } 

                 
            
                if (!empty($payments)) {

                   
                } else {
                    $is_billing = true;
                    $print_str .= "\r\n".$this->append_chars("","right",PAPER_WIDTH,"=");
                    if(PRINT_VERSION == 'V1'){
                        $print_str .= "\r\n\r\n".$this->append_chars("Billing Amount","right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($order['amount'],2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    }
                    if(is_array($splits)){
                        $print_str .= $this->append_chars("Split Amount by ".$splits['by'],"right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($splits['total'],2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    }


                    //for senior deaitls with signature forbiliing
                    foreach ($discounts as $dcs_ci => $dcs) {
                        if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                            // $print_str .= PAPER_LINE."\r\n";
                            $print_str .= "\r\n";
                            $print_str .= $this->align_center("OSCA/PWD Details",PAPER_WIDTH," ")."\r\n";
                            // $print_str .= PAPER_LINE."\r\n";
                            // $print_str .= $this->align_center(PAPER_LINE,42," ");
                            break;
                        }
                    }
                    foreach ($discounts as $dcs_ci => $dcs) {
                        if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                            foreach ($dcs['persons'] as $code => $dcp) {
                                // ."\r\n"
                                // ."\r\n"
                                $print_str .= "\r\n".$this->append_chars("ID NO      : ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                $print_str .= "\r\n".$this->append_chars("NAME       : ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                $print_str .= "\r\n".$this->append_chars("ADDRESS    : ","right",PAPER_TOTAL_COL_1," ");
                                $print_str .= "\r\n".$this->append_chars("SIGNATURE  : ","right",PAPER_TOTAL_COL_1," ");
                                $print_str .= "\r\n".$this->append_chars("             ____________________","right",PAPER_TOTAL_COL_1," ")."\r\n";
                                // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                            }
                        }
                    }


                    if ($include_footer) {
                        // $print_str .= "\r\n\r\n";
                        if($branch['contact_no'] != ""){
                            $print_str .= $this->align_center("For feedback, please call us at",PAPER_WIDTH," ")."\r\n"
                                         .$this->align_center($branch['contact_no'],PAPER_WIDTH," ")."\r\n";
                        }
                        if($branch['email'] != ""){
                            $print_str .= $this->align_center("Or Email us at",PAPER_WIDTH," ")."\r\n" 
                                       .$this->align_center($branch['email'],PAPER_WIDTH," ")."\r\n";
                        }
                        if($branch['website'] != "")
                            $print_str .= $this->align_center("Please visit us at \r\n".$branch['website'],PAPER_WIDTH," ")."\r\n";
                    }

                }

             


            }
            //end of showing for cancelled trans



            if ($return_print_str) {
                return $print_str;
            }
            // echo "<pre>".$print_str."</pre>";
            // return false;

            $js_rcps = array();

            if(PRINT_VERSION && PRINT_VERSION == 'V2'){

                if(isset($order['ref'])){
                    $order_ref = $order['ref'];
                }else{
                    $order_ref = "";
                }
                // if(BILLING_PRINTER){
                //     if(BILLING_PRINTER != "DEFAULT"){
                // echo $print_str;die();
                         $this->do_print_receipt_v2($print_str,$order['amount'],$is_billing,$open_drawer,$order_ref,$branch['name']);  
                //     }
                // }

                if($openDrawer){
                    $pet = $this->cashier_model->get_pos_settings();
                    $open_drawer_printer = $pet->open_drawer_printer;
                    // if($open_drawer_printer != ""){
                    //     $this->do_print_receipt_v2($print_str);  
                    //     // $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".$open_drawer_printer."\"  ";   
                    // }            
                }
            }else if(PRINT_VERSION && PRINT_VERSION == 'V3'){
                $js_rcp = $this->html_print($print_str);

                $js_rcps[] = array('printer'=>BILLING_PRINTER,'value'=>$js_rcp);

                if($openDrawer){
                    $pet = $this->cashier_model->get_pos_settings();
                    $open_drawer_printer = $pet->open_drawer_printer;
                    if($open_drawer_printer != ""){
                       $js_rcps[] = array('printer'=>BILLING_PRINTER,'value'=>$js_rcp);
                    }            
                }

                if($order_slip_prints > 0){
                    $print_str = $this->print_order_slip($header_print_str,$post_details,$order_slip_prints);
                    $js_rcp = $this->html_print($print_str);
                    $js_rcps[] = array('printer'=>BILLING_PRINTER,'value'=>$js_rcp);            
                }
            }else{
                // $this->do_print_os($print_str,$printer['printer'],$printer['no']);  

                $filename = "sales.txt";
                $fp = fopen($filename, "w+");
                fwrite($fp,$print_str);
                fclose($fp);

                $batfile = "print.bat";
                $fh1 = fopen($batfile,'w+');
                $root = dirname(BASEPATH);
                $battxt ="NOTEPAD /P \"".realpath($root."/".$filename)."\"";

                if(BILLING_PRINTER){
                    if(BILLING_PRINTER != "DEFAULT"){
                        $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".BILLING_PRINTER."\"  ";   
                    }
                }

                if($openDrawer){
                    $pet = $this->cashier_model->get_pos_settings();
                    $open_drawer_printer = $pet->open_drawer_printer;
                    if($open_drawer_printer != ""){
                        $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".$open_drawer_printer."\"  ";   
                    }            
                }

                fwrite($fh1, $battxt);
                fclose($fh1);
                session_write_close();
                // exec($filename);
                for ($i=0; $i < $no_prints; $i++) { 
                    exec($batfile);
                }
                session_start();
                unlink($filename);
                unlink($batfile);
            }

            if($order_slip_prints > 0){
                $this->print_order_slip($header_print_str,$post_details,$order_slip_prints);            
            }


            if ($asJson)
                echo json_encode(array('msg'=>'Receipt # '.(!empty($order['ref']) ? $order['ref'] : $sales_id).' has been printed'));
            else
                return array('msg'=>'Receipt # '.(!empty($order['ref']) ? $order['ref'] : $sales_id).' has been printed');
    }
    public function check_trans_settled($id=null){
        $error = 0;
        $where = array('sales_id'=>$id);
        $rest = $this->site_model->get_details($where,'trans_sales');
        if($rest[0]->paid == 1){
            $error = 1;          
        }
        
        echo $error;
    }

    /**@Justin 06292018 
        New version of printer
    **/
    public function do_print_os_v2($print_str="",$kitchen_printer="",$kitchen_printer_no=1,$print_str_2="",$print_str_3="",$print_str_4="",$is_checklist=false,$number_of_print_try=0){
         $printer_ready = $this->restart_printer();
         if($printer_ready){
            try {
                // Enter the share name for your USB printer here
                // $connector = null;

                /* Print a "Hello world" receipt" */
                for($x = 1 ; $x <= $kitchen_printer_no ; $x++){

                    $connector = new WindowsPrintConnector($kitchen_printer);
                    $printer = new Printer($connector);
                    $printer->setJustification(Printer::JUSTIFY_CENTER);
                     // $printer -> setTextSize(8, 8);
                    if(RECEIPT_LOGO_ENABLE){
                        $tux = EscposImage::load(RECEIPT_LOGO, false);
                        $printer->bitImage($tux);
                    }
                    $printer->setTextSize(1, 1);
                    // $printer->selectPrintMode(dot_matrix_os_font_size);
                    $printbody_raw = explode("</bold>", $print_str);
                    if($is_checklist){
                        $print_body = "\n\n\n\n\nDISPATCH\n";
                    }else{

                        $print_body = "\n\n\n\n\nORDER\n";
                    }
                    $print_body .= "======================================";
                    $printer->text($print_body."\n");
                    if(!empty($printbody_raw)){
                        foreach ($printbody_raw as $key => $value) {
                           $printbody_raw_2 = explode("<bold>", $value);
                           $printbody_raw_2_ctr = count($printbody_raw_2)-1;
                           
                           if(count($printbody_raw_2) > 1 ){

                               foreach ($printbody_raw_2 as $key2 => $value2) {

                                  if($key2 == $printbody_raw_2_ctr){
                                    $printer->setEmphasis(true);
                                    $printer->text($value2);
                                    $printer->setEmphasis(false);
                                    // $print_body .= $value2;
                                  }else{
                                    if(strpos($value2,"</indentbold>") ){
                                        $printbody_raw_3 = explode("<indentbold>", $value2);
                                        $printbody_raw_3_ctr = count($printbody_raw_3)-1;

                                        foreach ($printbody_raw_3 as $pkey3 => $vkey3) {

    
                                                if($pkey3 == $printbody_raw_3_ctr){
                                                    $vkey3 = str_replace("</indentbold>", "", $vkey3);
                                                    $printer->setTextSize(2, 1);
                                                    $printer->setEmphasis(true);
                                                    $printer->setUnderline(true);
                                                    $printer->text($vkey3."\n\n");
                                                    $printer->setUnderline(false);
                                                    $printer->setEmphasis(false);
                                                    $printer->setTextSize(1, 1);
                                                }else{
                                                    $printer->text($vkey3);
                                                            
                                                }
                                                      
                                               
                                        }
                                    }else{
                                        $printer->setUnderline(false);
                                        $printer->setEmphasis(false);
                                        $printer->text($value2."\n\n");
                                    }
                                  }
                               }
                           }else{
                             // $printer->setEmphasis(true);
                                if(strpos($value,"</indentbold>") ){
                                   
                                    $printbody_raw_3 = explode("<indentbold>", $value);
                                            $printbody_raw_3_ctr = count($printbody_raw_3)-1;

                                            foreach ($printbody_raw_3 as $pkey3 => $vkey3) {

        
                                                    if($pkey3 == $printbody_raw_3_ctr){
                                                        $vkey3 = str_replace("</indentbold>", "", $vkey3);
                                                        $printer->setTextSize(2, 1);
                                                        $printer->setEmphasis(true);
                                                        $printer->setUnderline(true);
                                                        $printer->text($vkey3);
                                                        $printer->setUnderline(false);
                                                        $printer->setEmphasis(false);
                                                        $printer->setTextSize(1, 1);
                                                                         
                                                    }else{
                                                        $printer->text($vkey3);
                                                                
                                                    }
                                                          
                                                   
                                            }
                                }else{
                                     $printer->text($value);
                                }
                             // $printer->text($value);
                             // $printer->setEmphasis(false);
                           }

                          // $print_body .= $value;
                        }
                    }
                    // $printer->text($print_body."\n");
                    $printer->text("\n\n======================================\n");
                    $printer->text($print_str_2."\n\n");
                    $printer->setTextSize(2, 2);
                    $printer->text($print_str_3."\n");
                    $printer->setTextSize(1, 1);
                    $print_str_4_raw = explode(" ",$print_str_4);
                    if(!empty($print_str_4_raw)){
                        if(isset($print_str_4_raw[0])){
                             $printer->setEmphasis(false);
                            $printer->text($print_str_4_raw[0]."\n");
                        }

                        if(isset($print_str_4_raw[1])){
                             $printer->setEmphasis(true);
                            $printer->text($print_str_4_raw[1]."\n");
                        }

                    }
                    // $printer->text($kitchen_printer_no);
                    $printer->cut();
                    $printer -> close();
                }


   
                // $printer->setTextSize(f_order_slip_w, f_order_slip_h);
                // $printer -> selectPrintMode(dot_matrix_os_font_size);

                // $print_str = str_replace("ORDER SLIP", "", $print_str);
                // $print_str = str_replace("KITCHEN", "DISPATCH", $print_str);
                // $print_str = str_replace("BEVERAGE", "DISPATCH", $print_str);
                // $print_str = str_replace("BIBINGKA", "DISPATCH", $print_str);

                // $printer->text($print_str);
                // $printer->cut();
                // // echo "asd";die()
                // /* Close printer */
                // $printer -> close();
                // // echo "asd";die()
                // /* Close printer */
                // // echo "asd";die()
                // /* Close printer */

            } catch (Exception $e) {
                if($number_of_print_try < 2){
                    $number_of_print_try++;
                    $this->do_print_os_v2($print_str, $kitchen_printer, $kitchen_printer_no, $print_str_2 ,$print_str_3, $print_str_4 ,$is_checklist,$number_of_print_try);
                }else{

                    echo "Couldn't print to this printer: OS $kitchen_printer " . $e -> getMessage() . "\n";exit;
                }
            }
            
         }
      
    }   

    public function do_print_receipt_v2($print_str="",$order_amount=0,$is_billing=false,$open_drawer=false,$order_ref=NULL,$branch_name="",$number_of_print_try=0){
        $printer_ready = $this->restart_printer();
        if(ORDERING_STATION && !$is_billing){ // ALLOW PRINT OF RECEIPT IF NOT ORDERING STATION
            return true;
        }
        // var_dump($printer_ready);die();
        if($printer_ready){
            try {
                // Enter the share name for your USB printer here
                // $this->shell_ex();
                $new_prints = $print_str;

                $connector = new WindowsPrintConnector(RECEIPT_PRINTER);

                $printer = new Printer($connector);
                $printer->setJustification(Printer::JUSTIFY_CENTER);
                // $printer->setFont(Printer::FONT_C);

                if(!$is_billing && $open_drawer == true){
                    $printer->pulse(); //  cash drawer open @justin
                }
                if(RECEIPT_LOGO_ENABLE){
                    // echo "d";die();  
                    $tux = EscposImage::load(RECEIPT_LOGO, false);
                    $printer->bitImage($tux);
                }

                    $wrap = wordwrap($branch_name,PAPER_WIDTH,"|#|");
                    $exp = explode("|#|", $wrap);
                    $rest_name = "";
                    foreach ($exp as $v) {
                        $rest_name .= $v;
                    }
                    // $printer->text($print_str);$printer->cut();$printer->close();die();
                    $printer->setTextSize(2, 1);
                    $printer->setEmphasis(true);
                    $printer->text($rest_name);
                    $printer->setTextSize(1, 1);
                    $printer->setEmphasis(false);


                    // echo "<pre>",print_r($print_str),"</pre>";die();

                if(strpos($print_str, "STARTCUT==============================ENDCUT")){
                    $print_str_raw = explode("STARTCUT==============================ENDCUT", $print_str);
                }
                if(!isset($print_str_raw)){
                    $printer -> text($new_prints);
                    
                }else{
                    $printer->setTextSize(1, 1);
                    $printer->setEmphasis(false);
                    $printbody_raw = explode("</bold>", $print_str_raw[0]);
                    // $printer -> text($print_str_raw[0]);
                    // echo "<pre>",print_r($print_str_raw),"</pre>";die();
                    if(!empty($printbody_raw)){
                        foreach ($printbody_raw as $key => $value) {
                           $printbody_raw_2 = explode("<bold>", $value);
                           $printbody_raw_2_ctr = count($printbody_raw_2)-1;
                          
                           if(count($printbody_raw_2) > 1 ){

                               foreach ($printbody_raw_2 as $key2 => $value2) {

                                  if($key2 == $printbody_raw_2_ctr){
                                    $printer->setEmphasis(true);
                                    $printer->text($value2);
                                    $printer->setEmphasis(false);
                                    // $print_body .= $value2;
                                    // $printer->close();
                                  }else{
                                    if(strpos($value2,"</indentbold>") ){
                                        $printbody_raw_3 = explode("<indentbold>", $value2);
                                        $printbody_raw_3_ctr = count($printbody_raw_3)-1;

                                        foreach ($printbody_raw_3 as $pkey3 => $vkey3) {

    
                                                if($pkey3 == $printbody_raw_3_ctr){
                                                    $vkey3 = str_replace("</indentbold>", "", $vkey3);
                                                    $printer->setTextSize(2, 1);
                                                    $printer->setEmphasis(true);
                                                    $printer->setUnderline(true);
                                                    $printer->text($vkey3);
                                                    // $printer->text($vkey3."\n\n");
                                                    $printer->setUnderline(false);
                                                    $printer->setEmphasis(false);
                                                    $printer->setTextSize(1, 1);
                                                }else{
                                                    $printer->text($vkey3);
                                                            
                                                }
                                                      
                                               
                                        }
                                    }else{
                                        $printer->setUnderline(false);
                                        $printer->setEmphasis(false);
                                        $printer->text($value2);
                                        // $printer->close();
                                        // $printer->text($value2."\n\n");
                                    }
                                  }
                               }
                           }else{
                             // $printer->setEmphasis(true);
                                if(strpos($value,"</indentbold>") ){
                                   
                                    $printbody_raw_3 = explode("<indentbold>", $value);
                                            $printbody_raw_3_ctr = count($printbody_raw_3)-1;

                                            foreach ($printbody_raw_3 as $pkey3 => $vkey3) {

        
                                                    if($pkey3 == $printbody_raw_3_ctr){
                                                        $vkey3 = str_replace("</indentbold>", "", $vkey3);
                                                        $printer->setTextSize(2, 1);
                                                        $printer->setEmphasis(true);
                                                        $printer->setUnderline(true);
                                                        $printer->text($vkey3);
                                                        $printer->setUnderline(false);
                                                        $printer->setEmphasis(false);
                                                        $printer->setTextSize(1, 1);
                                                                         
                                                    }else{
                                                        $printer->text($vkey3);
                                                                
                                                    }
                                                          
                                                   
                                            }
                                }else{
                                     $printer->text($value);
                                }
                             // $printer->text($value);
                             // $printer->setEmphasis(false);
                           }

                          // $print_body .= $value;
                        }
                    }
                    if(isset($print_str_raw[1])){
                        $printer -> setEmphasis(true);
                        $printer -> selectPrintMode(dot_matrix_amount_due_font_size);
                        $printer -> text($print_str_raw[1]);
                    }

                     if(isset($print_str_raw[2])){
                        $printer -> setEmphasis(false);
                        $printer -> selectPrintMode();
                        $printer -> text($print_str_raw[2]);
                    }
                }

                if($is_billing){

                    $printer -> setEmphasis(true);
                    $printer -> selectPrintMode(dot_matrix_amount_due_font_size);
                    $printer -> text("\r\n". $this->append_chars("Billing Amount","right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($order_amount,2),"left",PAPER_TOTAL_COL_2," ")."\r\n");
                }
                // $printer->text($open_drawer);

                if(defined('ENABLE_BARCODE_ON_OR') && ENABLE_BARCODE_ON_OR && !empty($order_ref)){
                    $printer->setBarcodeHeight(60);
                    $printer->setBarcodeTextPosition(Printer::BARCODE_TEXT_BELOW);
                    $printer->barcode($order_ref);
                    $printer->feed(1);
                }
                // else{
                //     $printer -> text( "\r\n".$this->append_chars("Amount Due","right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($order_amount,2),"left",PAPER_TOTAL_COL_2," ")."\r\n");

                // }
                $printer -> cut();

                // $file_loc = qrs_folder.'01DE48QL1.png';
                //     $tux = EscposImage::load($file_loc, false);
                //     $printer->bitImage($tux);
                /* Close printer */
                $printer -> close();
            } catch (Exception $e) {
                 if($number_of_print_try < 2){
                    $number_of_print_try++;
                    $this->do_print_receipt_v2($print_str, $order_amount, $is_billing, $open_drawer ,$order_ref, $branch_name ,$number_of_print_try);
                }else{

                    echo "Couldn't print to this printer: RECEIPT ".RECEIPT_PRINTER . $e -> getMessage() . "\n";exit;
                }
            }
        }
      
    }  


    public function do_print_beverage_v2($print_str="",$number_of_print_try=0){
        $printer_ready = $this->restart_printer();
        // var_dump($printer_ready);die();
        if($printer_ready){
            try {
                if(defined('BEVERAGE_PRINTER_NUM')){
                    $beverage_print_num = BEVERAGE_PRINTER_NUM; // important number of prints
                }else{
                    $beverage_print_num = 1;
                }
                // Enter the share name for your USB printer here
                // $this->shell_ex();
                for($x = 1 ; $x <= $beverage_print_num ; $x++){
                    $connector = new WindowsPrintConnector(BEVERAGE_PRINTER);

                    $printer = new Printer($connector);
                    $printer->setJustification(Printer::JUSTIFY_CENTER);

                    if(RECEIPT_LOGO_ENABLE){
                        $tux = EscposImage::load(RECEIPT_LOGO, false);
                        $printer->bitImage($tux);
                    }

                    $printer -> text($print_str);
                    $printer -> cut();
                }

                // $file_loc = qrs_folder.'01DE48QL1.png';
                //     $tux = EscposImage::load($file_loc, false);
                //     $printer->bitImage($tux);
                /* Close printer */
                $printer -> close();
            } catch (Exception $e) {
                 if($number_of_print_try < 2){
                    $number_of_print_try++;
                    $this->do_print_beverage_v2($print_str,$number_of_print_try);
                }else{
                    echo "Couldn't print to this printer: " . $e -> getMessage() . "\n";exit;
                }
            }
        }
      
    }         

    public function do_print_bar_receipt_v2($print_str=array(),$number_of_print_try=0){
        $printer_ready = $this->restart_printer();
        // var_dump($printer_ready);die();
        if($printer_ready){
            try {
                // Enter the share name for your USB printer here
                // $this->shell_ex();
                $connector = new WindowsPrintConnector(BEVERAGE_PRINTER);
                // echo "<pre>",print_r($print_str),"</pre>";die();
                 $x = 1 ;
                 $y = 10;
                 $plus_y = 60;
                 $line_counts = count($print_str);
                 if(!empty($print_str)){
                    // foreach($print_str as $pstr){
                        // echo $print_str[0];//die();
                    for($x=1;$x < $line_counts ; $x+=3){
                        // echo $print_str[$x+1];
                        if(!isset($print_str[$x+1])){
                            continue;
                        }

                         $printer = new TsplPrinter($connector);
                         $printer->beep();
                         $printer->getSizeCommand();
                         $printer->getGapCommad();
                         $printer->getReferenceCommand();
                         $printer->getDirectionCommand();

                         $printer->CLS();
                         $printer->text($print_str[0],15,20,"2"); // print_name
                         $printer->text($print_str[1],15,50,"2");
                         $printer->text("Item: ".$print_str[$x+1],15,80,"2");

                        // }else{
                        $printer->text("Add Ons: ".trim($print_str[$x+2]),15,110,"2");
                        if(!empty($print_str[$x+3])){
                            $remarks = explode("/", $print_str[$x+3]);
                            if(count($remarks) > 2){
                                $array_chunk = array_chunk($remarks,2);
                                $xx = 15;
                                $yy = 130;

                                foreach( $array_chunk as $chunk){
                                    $printer->text("Note: ".implode("/ ", $chunk),$xx,$yy,"2");
                                    // $xx +=20;
                                    $yy += 20;
                                }
                            }else{
                                $printer->text("Note: ".$print_str[$x+3],15,130,"2");
                            }

                        }else{
                            if(isset($print_str[$x+3])){

                                    $printer->text("Note: ".$print_str[$x+3],15,130,"2");
                            }else{
                                    $printer->text("Note: ",15,130,"2");
                            }

                        }

                        $printer->go_print();
                        $printer->close();
                        // }
                        // $y += $plus_y;
                        // $x++;
                    }
                    // }
                 }
                 // $printer = new Printer($connector);
                 // $printer->setJustification(Printer::JUSTIFY_CENTER);

                // if(RECEIPT_LOGO_ENABLE){
                //     $tux = EscposImage::load(RECEIPT_LOGO, false);
                //     $printer->bitImage($tux);
                // }


                // $file_loc = qrs_folder.'01DE48QL1.png';
                //     $tux = EscposImage::load($file_loc, false);
                //     $printer->bitImage($tux);
                /* Close printer */
            } catch (Exception $e) {
                 if($number_of_print_try < 2){
                    $number_of_print_try++;
                    $this->do_print_bar_receipt_v2($print_str,$number_of_print_try);
                }else{
                    echo "Couldn't print to this printer: " . $e -> getMessage() . "\n";exit;
                }
                // echo "Couldn't print to this printer: " . $e -> getMessage() . "\n";exit;
            }
        }
      
    }         

    public function do_print_bar_receipt_v1($print_str=array(),$printer="",$print_no=""){
        // $printer_ready = $this->restart_printer();
        // var_dump($printer_ready);die();
        // if($printer_ready){
            try {
                // Enter the share name for your USB printer here
                // $this->shell_ex();
                // $connector = new WindowsPrintConnector(BEVERAGE_PRINTER);
                // echo "<pre>",print_r($print_str),"</pre>";die();
                 $x = 1 ;
                 $y = 10;
                 $plus_y = 60;
                 $line_counts = count($print_str);
                 if(!empty($print_str)){
                    // foreach($print_str as $pstr){
                        // echo $print_str[0];//die();
                    for($x=1;$x < $line_counts ; $x+=3){
                        // echo $print_str[$x+1];
                        if(!isset($print_str[$x+1])){
                            continue;
                        }
                        $print_x = "";
                         // $printer = new TsplPrinter($connector);
                         // $printer->beep();
                         // $printer->getSizeCommand();
                         // $printer->getGapCommad();
                         // $printer->getReferenceCommand();
                         // $printer->getDirectionCommand();

                         // $printer->CLS();
                         // $printer->text($print_str[0],15,20,"2"); // print_name
                         // $printer->text($print_str[1],15,50,"2");
                         // $printer->text("Item: ".$print_str[$x+1],15,80,"2");

                        $print_x .= "Ref #: ".$print_str[0]."\r\n";
                        $print_x .= "Name: ".$print_str[1]."\r\n";
                        $print_x .= "Item: ".$print_str[$x+1]."\r\n";
                        $print_x .= "Add Ons: ".$print_str[$x+1]."\r\n";
                        // }else{
                        // $printer->text("Add Ons: ".trim($print_str[$x+2]),15,110,"2");
                        if(!empty($print_str[$x+3])){
                            $remarks = explode("/", $print_str[$x+3]);
                            if(count($remarks) > 2){
                                $array_chunk = array_chunk($remarks,2);
                                $xx = 15;
                                $yy = 130;

                                foreach( $array_chunk as $chunk){
                                     $print_x .= "Note: ".implode("/ ", $chunk)."\r\n";
                                    // $printer->text("Note: ".implode("/ ", $chunk),$xx,$yy,"2");
                                    // $xx +=20;
                                    $yy += 20;
                                }
                            }else{
                                $print_x .= "Note: ".$print_str[$x+3]."\r\n";
                                // $printer->text("Note: ".$print_str[$x+3],15,130,"2");
                            }

                        }else{
                            if(isset($print_str[$x+3])){
                                $print_x .= "Note: ".$print_str[$x+3]."\r\n";
                                    // $printer->text("Note: ".$print_str[$x+3],15,130,"2");
                            }else{
                                $print_x .= "Note: \r\n";
                                    // $printer->text("Note: ",15,130,"2");
                            }

                        }

                         $this->do_print_os($print_x, $printer, $print_no);  

                        // $printer->go_print();
                        // $printer->close();
                        // }
                        // $y += $plus_y;
                        // $x++;
                    }
                    // }
                 }
                 // $printer = new Printer($connector);
                 // $printer->setJustification(Printer::JUSTIFY_CENTER);

                // if(RECEIPT_LOGO_ENABLE){
                //     $tux = EscposImage::load(RECEIPT_LOGO, false);
                //     $printer->bitImage($tux);
                // }


                // $file_loc = qrs_folder.'01DE48QL1.png';
                //     $tux = EscposImage::load($file_loc, false);
                //     $printer->bitImage($tux);
                /* Close printer */
            } catch (Exception $e) {
                echo "Couldn't print to this printer: " . $e -> getMessage() . "\n";exit;
            }
        // }
      
    }    

    public function shell_ex(){
        // $shell_exec = shell_exec("net use LPT1 /delete ; net use LPT1 \\192.168.254.109\JUSTINPRINT /p:y /user:POINTONE-715");
        $shell_exec = shell_exec("net use LPT1");
        if($shell_exec){
            if(!empty($shell_exec)){
                return true;
                
            }
            
        }else{
            return false;
        }

    }   

   public function restart_printer(){
        $check_net_use = shell_exec("net use");
        $occurence_count = substr_count($check_net_use, 'LPT');

        if(stripos($check_net_use, "disconnected") !== false || stripos($check_net_use, "unavailable") !== false ||  stripos($check_net_use, "there are no entries in the list") !== false || $occurence_count != total_number_of_printers){
            ping_printer_connection();

        //     $shell_exec =  shell_exec("cmd /c ".restart_printer.""); 
        //     if($shell_exec){
        //         if(!empty($shell_exec)){
        //             return true;
                    
        //         }
                
        //     }else{
        //         return false;
        //     }
        // }else{
            return true;
        }else{
            return true;
        }
             
    }

      public function customer_name_remove(){
            sess_clear('customer_name');
        }    
      public function customer_name_add(){
            $error = false;
            $customer_name = $this->input->post('customer_name');
          
            sess_initialize('customer_name',$customer_name);
               
            sess_add('customer_name',$customer_name, 'customer_name');
            $msg = "Customer Name Added on transaction.";
           
            echo json_encode(array('error'=>$error,'msg'=>$msg,'customer_name'=>$customer_name));
     }

    public function manager_free_reasons(){
            $this->load->helper('dine/manager_helper');
            $this->load->helper('core/on_screen_key_helper');
            $data = $this->syter->spawn(null,false);
            $data['code'] = managerFreeReasonsPage();
            $data['add_css'] = array('css/pos.css','css/onscrkeys.css', 'css/cashier.css');
            $data['add_js'] = array('js/on_screen_keys.js');
            $data['load_js'] = 'dine/manager';
            $data['use_js'] = 'managerFreeReasonsJs';
            $this->load->view('load',$data);
    }

    public function discount_reasons(){
            $this->load->helper('dine/manager_helper');
            $this->load->helper('core/on_screen_key_helper');
            $data = $this->syter->spawn(null,false);
            $data['code'] = discountReasonsPage();
            $data['add_css'] = array('css/pos.css','css/onscrkeys.css', 'css/cashier.css');
            $data['add_js'] = array('js/on_screen_keys.js');
            $data['load_js'] = 'dine/manager';
            $data['use_js'] = 'discountReasonsJs';
            $this->load->view('load',$data);
    }

    public function update_menu_charge($trans_id=null){
        $this->load->model('dine/settings_model');
        $wagon = array();
        $error = null;
        $name  = 'trans_cart';
        $wagon = $this->session->userData($name);
        $row = $wagon[$trans_id];
        $charge_id = $this->input->post('charge_id');
        $row['nocharge'] = $charge_id;
        $wagon[$trans_id] = $row;
        $this->session->set_userData($name,$wagon);

        $chg = $this->settings_model->get_charges($charge_id);
        $cg = $chg[0];
        $charge_code = $cg->charge_code;

        // echo "<pre>",print_r($wagon),"</pre>";die();
        echo json_encode(array("charge_code"=>$charge_code));
    }

    public function check_charges(){
        $this->load->model('dine/settings_model');
        $ttype = $this->input->post('ttype');
        $is_takeout = $this->input->post('is_takeout');
        $charge_id = 0;
        $charge_code = '';

        if($ttype == 'dinein'){
            if($is_takeout == 0){
                if(AUTO_ADD_SERVICE_CHARGE){
                    $charge_id = SERVICE_CHARGE_ID;
                    $chg = $this->settings_model->get_charges($charge_id);
                    $cg = $chg[0];
                    $charge_code = $cg->charge_code;
                }
            }
        }elseif($ttype == 'takeout'){
            if(AUTO_ADD_SERVICE_CHARGE_TAKEOUT){
                $charge_id = SERVICE_CHARGE_TAKEOUT_ID;
                $chg = $this->settings_model->get_charges($charge_id);
                $cg = $chg[0];
                $charge_code = $cg->charge_code;
            }
        }

        // echo $charge_id;
        echo json_encode(array('charge_id'=>$charge_id,'charge_code'=>$charge_code));
            // echo "<pre>",print_r($wagon),"</pre>";die();
            // echo json_encode(array("error"=>null,"qty"=>$row['qty']));
    }

    public function add_discount_session(){
        $this->load->model('dine/settings_model');
        $this->load->model('dine/main_model');
        $counter = sess('counter');
    
        $disc_cart = array();
        if($this->session->userData('trans_multi_disc_cart')){
            $disc_cart = $this->session->userData('trans_multi_disc_cart');
        }

        $trans_cart = array();
        if($this->session->userData('trans_cart')){
            $trans_cart = $this->session->userData('trans_cart');
        }

        $trans_mod_cart = array();
        if($this->session->userData('trans_mod_cart')){
            $trans_mod_cart = $this->session->userData('trans_mod_cart');
            // echo var_dump($trans_mod_cart);
            // return false;
        }
        $trans_submod_cart = array();
        if($this->session->userData('trans_submod_cart')){
            $trans_submod_cart = $this->session->userData('trans_submod_cart');
            
        }

        // echo "<pre>",print_r($trans_cart),"</pre>";die(); 

        $trans_disc_cart = sess('trans_disc_cart');

        $disc_id = $this->input->post('disc_id');
        $name = $this->input->post('name');
        $cust_code = $this->input->post('disc_code');
        $guest = $this->input->post('guest');
        $total = $this->input->post('total');
        $openamt = $this->input->post('openamt');
        // $bday = $this->input->post('bday');
        $bday = null;
        $remarks = null;
        $items = array();

        $card_exist = false; 
        foreach($trans_disc_cart as $trans_disc){
            if(isset($trans_disc['persons'])){
                foreach($trans_disc['persons'] as $person){
                    if($person['code'] == $cust_code){ 
                        $card_exist = true;
                    }
                }
            }
        }

        if($card_exist){
            echo 'exist';

            exit;
        }

        if($this->input->post('bday'))
            $bday = $this->input->post('bday');

        if($this->input->post('remark'))
            $remarks = $this->input->post('remark');

        $where = array('disc_id'=>$disc_id);
        $discounts = $this->site_model->get_details($where,'receipt_discounts');
        $dc = $discounts[0];
        $greater = 0;
        $alcohol = 0;
        if($dc->disc_code == 'SNDISC'){

            // check if nasa customer na yun name
            $where = array('fname'=>$name,'id_number'=>$cust_code);
            $cus_det = $this->site_model->get_details($where,'customers');

            if(count($cus_det) == 0){
                //add sa customer pag senior yun code
                $sen_items = array(
                    "fname"=>$name,
                    "id_number"=>$cust_code,
                    "is_senior"=>1
                );

                $id = $this->cashier_model->add_senior_cust($sen_items);
                $this->main_model->add_trans_tbl('customers',$sen_items);
            }

            $trans_mod_cart = array();
            if($this->session->userData('trans_mod_cart')){
                $trans_mod_cart = $this->session->userData('trans_mod_cart');
                // echo var_dump($trans_mod_cart);
                // return false;
            }


            foreach($trans_cart as $t_id => $trans){
               
                if(isset($trans['cost']))
                        $cost = $trans['cost'];
                if(isset($trans['price']))
                    $cost = $trans['price'];

                if(isset($trans['modifiers'])){
                    foreach ($trans['modifiers'] as $trans_mod_id => $mod) {
                        if($t_id == $mod['line_id']){
                            $cost += $mod['price'];
                            
                            if(isset($mod['submodifiers'])){
                                foreach($mod['submodifiers'] as $sub_id => $smod){
                                    if($smod['mod_line_id'] == $mod['mod_line_id']){
                                        $cost += $smod['price'];
                                    }
                                }
                            }
                        }


                    }
                    // echo '1';
                }else{
                    if(count($trans_mod_cart) > 0){
                        // echo '2';
                        // echo "<pre>",print_r($trans_mod_cart),"</pre>";
                        foreach ($trans_mod_cart as $trans_mod_id => $mod) {
                            if($t_id == $mod['trans_id']){
                                $cost += $mod['cost'];
                            
                                if(isset($trans_submod_cart)){
                                    foreach ($trans_submod_cart as $trans_submod_id => $submod) {
                                        if($trans_mod_id == $submod['mod_line_id'])
                                            $cost += $submod['price'];
                                    }
                                }

                            }
                        }
                    }
                }


                $where = array('menu_id'=>$trans['menu_id']);
                $men = $this->site_model->get_details($where,'menus');

                if($men[0]->alcohol == 1){
                    $alcohol += $cost * $trans['qty'];
                }

            }
        }

        $total = $total - $alcohol;

        if($dc->fix == 1){
            if($dc->disc_rate == 0){
                if($openamt){
                    $discount = $openamt;
                }else{
                    echo 'addopenamt';
                    return false;
                }
            }else{
                $discount = $dc->disc_rate;
            }


            $fix_rate = $dc->disc_rate;
            if($fix_rate > $total){
                $greater = 1;
            }
        }

        if($greater == 0){

            $persons = array();
            if(isset($trans_disc_cart[$dc->disc_code]['persons'])){
                $persons = $trans_disc_cart[$dc->disc_code]['persons'];
            }


            if(count($persons) >= $guest){
                echo "guestlimit";
            }else{

                $persons[$name] = array(
                    "name"  => $name,
                    "code"  => $cust_code,
                    "bday"  => $bday,
                    "remarks"  => $remarks,
                );

                $trans_disc_cart[$dc->disc_code]['persons'] = $persons;
                sess_initialize('trans_disc_cart',$trans_disc_cart);


                $disc_cart_old = array();
                $error = "";
                if(isset($trans_disc_cart[$dc->disc_code])){
                    $disc_cart_old = $trans_disc_cart[$dc->disc_code];
                }
                if($dc->fix == 1){
                    $dtype = 'all';
                }else{
                    $dtype = 'equal';
                }

                if(isset($disc_cart_old['persons']) && count($disc_cart_old['persons']) <= $guest){
                // if(isset($disc_cart_old['persons'])){
                    $disc_cart_old['guest'] =  $guest; 
                    $disc_cart_old['disc_rate'] =  $dc->disc_rate; 
                    $disc_cart_old['disc_code'] =  $dc->disc_code; 
                    $disc_cart_old['disc_id'] =  $disc_id; 
                    $disc_cart_old['disc_type'] = $dtype; 
                    $disc_cart_old['no_tax'] =  $dc->no_tax; 
                    $disc_cart_old['fix'] =  $dc->fix; 
                    $disc_cart_old['openamt'] =  $openamt; 
                    $trans_disc_cart[$dc->disc_code] = $disc_cart_old;
                    sess_initialize('trans_disc_cart',$trans_disc_cart);
                    // echo var_dump($trans_disc_cart);
                }


                if($dc->fix == 1){
                    if($dc->disc_rate == 0){
                        if($openamt){
                            $discount = $openamt;
                        }else{
                            echo 'addopenamt';
                        }
                    }else{
                        $discount = $dc->disc_rate;
                    }


                }else{
                    $divi = $total/$guest;
                    // $divi = $total/$row['guest'];
                    $divi_less = $divi;
                    $discount = 0;
                    $lv = 0;

                    $where = array('id'=>1);
                    $set_det = $this->site_model->get_details($where,'settings');

                    if($counter['type'] != 'dinein' && $counter['type'] != 'mcb' && $dc->disc_code == 'SNDISC' && $divi > $set_det[0]->ceiling_amount && $set_det[0]->ceiling_amount > 0){
                        $divi = $set_det[0]->ceiling_amount;
                        $divi_less = $set_det[0]->ceiling_amount;
                    }

                    if($counter['type'] == 'mcb' && $dc->disc_code == 'SNDISC' && $divi > $set_det[0]->ceiling_mcb && $set_det[0]->ceiling_mcb > 0){
                        $divi = $set_det[0]->ceiling_mcb;
                        $divi_less = $set_det[0]->ceiling_mcb;
                    }

                    if($dc->disc_code == ATHLETE_CODE){
                        // if($dc->no_tax == 1){
                            $divi_less = ($divi / 1.12);
                            $lv = $divi - $divi_less;
                        // }
                        // $no_persons = count($row['persons']);
                        // foreach ($row['persons'] as $code => $per) {
                            // $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $divi_less);
                        $discount = ($dc->disc_rate / 100) * $divi_less;
                        $less_vat = 0;
                    }else{
                        if($dc->no_tax == 1){
                            $divi_less = ($divi / 1.12);
                            $lv = $divi - $divi_less;
                        }
                        // $no_persons = count($row['persons']);
                        // foreach ($row['persons'] as $code => $per) {
                            // $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $divi_less);
                        $discount = ($dc->disc_rate / 100) * $divi_less;
                        $less_vat = $lv;
                        
                    }

                    // }
                    // $tl = $divi * ( abs($row['guest'] - $no_persons) );
                    // $tdl = ($divi_less * $no_persons) - $discount;
                    // $tl2 = $divi * ( abs($row['guest'] - $ps_counter) );
                    // $vat1 = $tl2 / 1.12;
                    // $vatss = ($vat1 * 0.12);
                }
                    // echo "<pre>",print_r($less_vat),"</pre>";die();

                // $discounts = $this->settings_model->get_receipt_discounts($disc_id);
                $disc_cart[] = array('cust_name'=>$name,
                                    'cust_code'=>$cust_code,
                                    'bday'=>$bday,
                                    'remarks'=>$remarks,
                                    'disc_code'=>$dc->disc_code,
                                    'disc_rate'=>$dc->disc_rate,
                                    'no_tax'=>$dc->no_tax,
                                    'disc_name'=>$dc->disc_name,
                                    'disc_amount'=>$discount,
                                    'less_vat'=>$less_vat,
                                    'fix'=>$dc->fix,
                                    );

                sess_initialize('trans_multi_disc_cart',$disc_cart);



            }
 

        }else{
            echo 'bigger';
        }

        // foreach($disc_cart as $cid => $vals){
            
        //     $this->make->sDivRow();
        //         $this->make->sDivCol(6);
        //             $this->make->span("<font size='3'>".$vals['disc_name']."</font>");
        //         $this->make->eDivCol();
        //         $this->make->sDivCol(2);
        //             $this->make->span("<font size='3'>1</font>");
        //         $this->make->eDivCol();
        //         $this->make->sDivCol(3);
        //             $this->make->span("<font size='3'>mahirap</font>");
        //         $this->make->eDivCol();
        //          $this->make->sDivCol(1);
        //             $this->make->span(fa('fa-times fa-2x'));
        //         $this->make->eDivCol();
        //     $this->make->eDivRow();
        // }
        
        // $count_disc = count($disc_cart);
        // //}
        // $code = $this->make->code();
        // // echo $code; die();
        // echo json_encode(array('code'=>$code,'count_disc'=>$count_disc));

    }

    public function compute_discount_right(){
        $this->load->model('dine/settings_model');

        // $total = $this->input->post('total');
        // $guest = $this->input->post('guest');

        // $per_guest_total = $total/$guest;
    
        $disc_cart = array();
        if($this->session->userData('trans_multi_disc_cart')){
            $disc_cart = $this->session->userData('trans_multi_disc_cart');
        }

        $total_discount = 0;
        $total_lv = 0;
        foreach($disc_cart as $cid => $vals){
            
            $this->make->sDivRow();
                $this->make->sDivCol(7);
                    $this->make->span("<font size='3'>".$vals['disc_name']."</font>");
                $this->make->eDivCol();
                $this->make->sDivCol(2);
                    $this->make->span("<font size='3'>1</font>");
                $this->make->eDivCol();
                $this->make->sDivCol(3);
                    $this->make->span("<font size='3'>".num($vals['disc_amount'])."</font>");
                $this->make->eDivCol();
                //  $this->make->sDivCol(1);
                //     $this->make->span(fa('fa-times fa-2x'));
                // $this->make->eDivCol();
            $this->make->eDivRow();

            $total_discount += $vals['disc_amount'];
            $total_lv += $vals['less_vat'];
        }
        
        $count_disc = count($disc_cart);
        //}
        $code = $this->make->code();
        // echo $code; die();
        echo json_encode(array('code'=>$code,'count_disc'=>$count_disc,'total_discount'=>$total_discount,'total_lv'=>$total_lv));
    }

    public function reset_discount(){
        sess_clear('trans_disc_cart');
        sess_clear('trans_multi_disc_cart');
    }


    //submit to temp db
    public function submit_trans_temp($asJson=true,$submit=null,$void=false,$void_ref=null,$cart=null,$mod_cart=null,$print=false,$split_id=null,$printKitSlip=false){
            // if(LOCALSYNC){
            //     $this->load->model('core/sync_model');
            //  }
            // echo "<pre>",print_r(sess('customer_name')),"</pre>";die();
            $this->load->model('dine/cashier_model');

            //delete lagi laman kada click
            $this->cashier_model->delete_temp_all();



            $counter = sess('counter');
            $trans_cart = sess('trans_cart');
            $trans_mod_cart = sess('trans_mod_cart');
            $trans_submod_cart = sess('trans_submod_cart');
            $trans_type_cart = sess('trans_type_cart');
            $trans_disc_cart = sess('trans_disc_cart');
            $trans_charge_cart = sess('trans_charge_cart');
            $loyalty_card = sess('loyalty_card');
            $reasons = sess('reasons');
            $item_discount = sess('item_discount');
            $trans_customer_name = (!empty(sess('customer_name'))) ? sess('customer_name') : '';
            $totals  = $this->total_trans_temp(false,$cart);
            // echo "<pre>",print_r($totals),"</pre>";
            $total_amount = $totals['total'];
            $total_gross = $totals['gross'];
            $charges = $totals['charges'];
            $local_tax = $totals['local_tax'];
            $error = null;
            $act = null;
            $sales_id = null;
            $type = null;
            $type_id = SALES_TRANS;
            $print_echo = array();
            if($void === true){
                $type_id = SALES_VOID_TRANS;
            }

            if($void_ref == null || $void_ref == 0)
                $void_ref = null;

            $serve_no = 0;
            if(isset($trans_type_cart[0]['serve_no'])){
                $serve_no = $trans_type_cart[0]['serve_no'];
            }

            if(count($trans_cart) <= 0){
                $error = "Error! There are no items.";
            }
            else if(count($counter) <= 0){
                $error = "Error! Shift or User is invalid.";
            }
            else if(NEED_FOOD_SERVER && !isset($counter['waiter_id']) && $counter['type'] != 'counter' && $counter['type'] != 'takeout'){
                $error = "Select Food Server";
            }
            // else if(SERVER_NO_SETUP && $serve_no == 0 && $counter['type'] == 'counter' ){
            //     $error = "Please Select Serve No.";
            // }
            else if(SERVER_NO_SETUP && $serve_no == 0 && $counter['type'] == 'takeout' ){
                $error = "Please Select Serve No.";
            }
            else{
                // if(count($trans_disc_cart) > 0){
                //     foreach ($trans_disc_cart as $disc_id => $row) {
                //         if(!isset($row['disc_type'])){
                //             $error = "Select Discount Type. If equally Divided or All Items.";
                //         }
                //         else{
                //             if($row['disc_type'] == "")
                //                 $error = "Select Discount Type. If equally Divided or All Items.";
                //         }
                //     }
                //     if($error != null){
                //         if($asJson){
                //             echo json_encode(array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type));
                //             return false;
                //         }
                //         else{
                //             return array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type);
                //         }
                //     }
                // }


                if(is_array($cart)){
                    $trans_cart = $cart;
                }
                if(is_array($mod_cart)){
                    $trans_mod_cart = $mod_cart;
                }
                $type = $counter['type'];
                #save sa trans_sales
                $table = null;
                $guest = 0;
                
                $customer = null;
                if(isset($trans_type_cart[0]['table'])){
                    $table = $trans_type_cart[0]['table'];
                }
                if(isset($trans_type_cart[0]['guest'])){
                    $guest = $trans_type_cart[0]['guest'];
                }
                
                if(count($trans_disc_cart) > 0){
                    foreach ($trans_disc_cart as $disc_code => $dc) {
                        $guest = $dc['guest'];
                    }
                } 
                if(isset($trans_type_cart[0]['customer_id'])){
                    $customer = $trans_type_cart[0]['customer_id'];
                }
                if(count($loyalty_card) > 0){
                    foreach ($loyalty_card as $code => $row) {
                        $customer = $row['cust_id'];
                        // $loyalty = array(
                        //     "cust_id" => $row['cust_id'],
                        //     "code" => $row['code']
                        // );
                    }

                }
                $waiter = null;
                if(isset($counter['waiter_id'])){
                    $waiter = $counter['waiter_id'];
                }

                $splid = 0;
                if($split_id != null)
                    $splid = $split_id;
                 // $total_amount = number_format($total_amount, 2, '.', '');
                 $total_amount = $total_amount;
                 $trans_sales = array(
                    "sales_id"       => 1, //always 1
                    "user_id"       => $counter['user_id'],
                    "type_id"       => $type_id,
                    "shift_id"      => $counter['shift_id'],
                    "terminal_id"   => $counter['terminal_id'],
                    "type"          => $counter['type'],
                    "datetime"      => date2SqlDateTime($counter['datetime']),
                    "total_amount"  => $total_amount,
                    "void_ref"      => $void_ref,
                    "memo"          => null,
                    "table_id"      => $table,
                    "guest"         => $guest,
                    "serve_no"      => $serve_no,
                    "customer_id"   => $customer,
                    "customer_name" => $trans_customer_name,
                    "waiter_id"     => $waiter,
                    "split"         => $splid
                );

                $user = $this->session->userdata('user');
                // if(isset($counter['sales_id']) && $counter['sales_id'] != null){
                //     $sales_id = $counter['sales_id'];
                //     $this->cashier_model->update_trans_sales($trans_sales,$sales_id);

                //     $log_id = $this->logs_model->add_logs('Sales Order',$user['id'],$user['full_name']." Updated Sales Order #".$sales_id,$sales_id);
                //     // if(LOCALSYNC){
                //     //     $this->sync_model->update_trans_sales($sales_id);
                //     //     // $this->sync_model->add_logs($log_id);

                //     //     //delete items
                //     //     $this->sync_model->delete_trans_sales_menus($sales_id);
                //     //     $this->sync_model->delete_trans_sales_items($sales_id);
                //     //     $this->sync_model->delete_trans_sales_menu_modifiers($sales_id);
                //     //     $this->sync_model->delete_trans_sales_discounts($sales_id);
                //     //     $this->sync_model->delete_trans_sales_charges($sales_id);
                //     //     $this->sync_model->delete_trans_sales_tax($sales_id);
                //     //     $this->sync_model->delete_trans_sales_no_tax($sales_id);
                //     //     $this->sync_model->delete_trans_sales_zero_rated($sales_id);
                //     //     $this->sync_model->delete_trans_sales_local_tax($sales_id);
                //     // }


                //     $this->cashier_model->delete_trans_sales_menus($sales_id);
                //     $this->cashier_model->delete_trans_sales_items($sales_id);
                //     $this->cashier_model->delete_trans_sales_menu_modifiers($sales_id);
                //     $this->cashier_model->delete_trans_sales_discounts($sales_id);
                //     $this->cashier_model->delete_trans_sales_charges($sales_id);
                //     $this->cashier_model->delete_trans_sales_tax($sales_id);
                //     $this->cashier_model->delete_trans_sales_no_tax($sales_id);
                //     $this->cashier_model->delete_trans_sales_zero_rated($sales_id);
                //     $this->cashier_model->delete_trans_sales_local_tax($sales_id);
                //     $act="update";


                //     if($submit === null || $submit == 0 || $submit == null)
                //         site_alert('Transaction Updated.','success');
                // }
                // else{
                    $sales_id = $this->cashier_model->add_temp_sales($trans_sales);
                    $act="add";

                    // if(LOCALSYNC){
                    //     $this->sync_model->add_trans_sales($sales_id);
                    //     // $this->sync_model->add_logs($log_id);
                    // }
                // }
                #save sa trans_sales_menus
                $trans_sales_menu = array();
                $trans_sales_items = array();
                $total_gross = 0;

                // echo "<pre>",print_r($trans_cart),"</pre>";die();

                foreach ($trans_cart as $trans_id => $v) {

                    if($v['qty'] == 0){ //if qty is zero skip the item to resolve the splitting 0 issue @jx10292019
                        continue;
                    }
                    $remarks = $serial_key = null;
                    $nocharge = 0;
                    $rate = (isset($trans_disc_cart[$trans_id]['disc_percent'])) ?  $trans_disc_cart[$trans_id]['disc_percent'] : 0 ;
                    $percent_disc = ($v['cost'] * $v['qty']) * ($rate / 100);
                    $percent_abs = (isset($trans_disc_cart[$trans_id]['disc_absolute'])) ? $trans_disc_cart[$trans_id]['disc_absolute'] : 0;
                    $total_disc = $percent_disc + $percent_abs;

                    $is_takeout = 0;
                    if($counter['type'] == 'takeout'){
                        $is_takeout = 1;
                    }else{
                        if(isset($v['is_takeout'])){
                            $is_takeout = $v['is_takeout'];
                        }
                    }
                    if(isset($v['nocharge']) && $v['nocharge'] != 0){
                        $nocharge = $v['nocharge'];
                    }
                    if(isset($v['remarks']) && $v['remarks'] != ""){
                        $remarks = $v['remarks'];
                    }
                    $kitchen_slip_printed=0;
                    if(isset($v['kitchen_slip_printed']) && $v['kitchen_slip_printed'] != ""){
                        $kitchen_slip_printed = $v['kitchen_slip_printed'];
                    }
                    $free = $free_reason = null;
                    if(isset($v['free_user_id'])){
                        $free = $v['free_user_id'];
                    }

                     if(isset($v['free_reason'])){
                        $free_reason = $v['free_reason'];
                    }
                    

                    if(!isset($v['retail'])){
                        $where = array('menu_id'=>$v['menu_id']);
                        $m_det = $this->site_model->get_details($where,'menus');

                        $trans_sales_menu[] = array(
                            "sales_id" => $sales_id,
                            "line_id" => $trans_id,
                            "menu_id" => $v['menu_id'],
                            "menu_name" => $m_det[0]->menu_name,
                            "price" => $v['cost'],
                            "qty" => $v['qty'],
                            "no_tax" => $v['no_tax'],
                            "discount"=> 0,
                            "remarks"=>$remarks,
                            "kitchen_slip_printed"=>$kitchen_slip_printed,
                            "free_user_id" => $free,
                            "free_reason" => $free_reason,
                            "nocharge" => $nocharge,
                            "is_takeout" => $is_takeout,
                        );
                    }
                    else{
                        $where = array('item_id'=>$v['menu_id']);
                        $i_det = $this->site_model->get_details($where,'items');

                        $trans_sales_items[] = array(
                            "sales_id" => $sales_id,
                            "line_id" => $trans_id,
                            "item_id" => $v['menu_id'],
                            "item_name" => $i_det[0]->name,
                            "price" => $v['cost'],
                            "qty" => $v['qty'],
                            "no_tax" => $v['no_tax'],
                            "discount"=> 0,
                            "remarks"=>$remarks,
                            "nocharge" => $nocharge,
                            "is_takeout" => $is_takeout,
                        );
                    }
                    $total_gross += $v['qty'] *$v['cost'];
                }
                if(count($trans_sales_menu) > 0)
                {
                    $trans_id = $this->cashier_model->add_temp_sales_menus($trans_sales_menu);
                    //  if(LOCALSYNC){
                    //     $this->sync_model->add_trans_sales_menus($sales_id);
                    // }
                }
                
                if(count($trans_sales_items) > 0)
                {
                    $this->cashier_model->add_temp_sales_items($trans_sales_items);
                    // if(LOCALSYNC){
                    //     $this->sync_model->add_trans_sales_items($sales_id);
                    // }
                }
                #save sa trans_sales_menu_modifiers
                if(count($trans_mod_cart) > 0){
                    $trans_sales_menu_modifiers = array();
                    foreach ($trans_mod_cart as $trans_mod_id => $m) {
                        $kitchen_slip_printed=0;
                        if(isset($m['kitchen_slip_printed']) && $m['kitchen_slip_printed'] != ""){
                            $kitchen_slip_printed = $m['kitchen_slip_printed'];
                        }
                        if(isset($trans_cart[$m['trans_id']])){
                            //menu
                            $where = array('menu_id'=>$m['menu_id']);
                            $m_det = $this->site_model->get_details($where,'menus');

                            //mod group
                            $where = array('mod_group_id'=>$m['mod_group_id']);
                            $mg_det = $this->site_model->get_details($where,'modifier_groups');

                            //mod
                            $where = array('mod_id'=>$m['mod_id']);
                            $mod_det = $this->site_model->get_details($where,'modifiers');


                            $trans_sales_menu_modifiers[] = array(
                                "sales_id" => $sales_id,
                                "line_id" => $m['trans_id'],
                                "menu_id" => $m['menu_id'],
                                "mod_group_id" => $m['mod_group_id'],
                                "mod_id" => $m['mod_id'],
                                "price" => $m['cost'],
                                "qty" => $m['qty'],
                                "discount"=> 0,
                                "menu_name" => $m_det[0]->menu_name,
                                "mod_group_name" => $mg_det[0]->name,
                                "mod_name" => $mod_det[0]->name,
                                "kitchen_slip_printed"=>$kitchen_slip_printed
                            );
                            $total_gross += $m['qty'] *$m['cost'];
                        }
                    }
                    if(count($trans_sales_menu_modifiers) > 0)
                    {
                        $trans_id = $this->cashier_model->add_temp_sales_menu_modifiers($trans_sales_menu_modifiers);
                        // if(LOCALSYNC){
                        //     $this->sync_model->add_trans_sales_menu_modifiers($sales_id);
                        // }
                    }
                }
                #save sa trans_sales_discounts

                if(count($item_discount) > 0){
                    //for save sa trans_sales_discounts pero per item
                    $trans_sales_disc_items = array();
                    foreach($item_discount as $id => $dc){
                        $trans_sales_disc_items[] = array(
                            "sales_id"=>$sales_id,
                            "disc_id"=>$dc['disc_id'],
                            "type"=>$dc['type'],
                            "guest"=>$dc['guest'],
                            "disc_code"=>$dc['disc_code'],
                            "disc_rate"=>$dc['disc_rate'],
                            "items"=>$dc['items'],
                            "no_tax"=>$dc['no_tax'],
                            "name"=>$dc['name'],
                            "bday"=>date('Y-m-d H:i:s'),
                            "code"=>$dc['code'],
                            "amount"=>$dc['amount']
                        );

                    }
                    if(count($trans_sales_disc_items) > 0)
                    {
                        $this->cashier_model->add_temp_sales_discounts($trans_sales_disc_items);
                        //   if(LOCALSYNC){
                        //     $this->sync_model->add_trans_sales_discounts($sales_id);
                        // }
                    }
                }else{
                    #save sa trans_sales_discounts
                    $total_disc = 0;
                    if(count($trans_disc_cart) > 0){
                        $trans_sales_disc_cart = array();
                        $total = 0;
                        foreach ($trans_cart as $trans_id => $trans){
                            if(isset($trans['cost']))
                                $cost = $trans['cost'];
                            if(isset($trans['price']))
                                $cost = $trans['price'];

                            if(isset($trans['modifiers'])){
                                foreach ($trans['modifiers'] as $trans_mod_id => $mod) {
                                    if($trans_id == $mod['line_id'])
                                        $cost += $mod['price'];
                                }
                            }

                            else{
                                if(count($trans_mod_cart) > 0){
                                    foreach ($trans_mod_cart as $trans_mod_id => $mod) {
                                        if($trans_id == $mod['trans_id'])
                                            $cost += $mod['cost'];
                                    }
                                }
                            }
                            if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
                                $rate = 1.12;
                                $cost = ($cost / $rate);
                                if(isset($zero_rated)){
                                    $zero_rated += $v['qty'] * $cost;
                                }else{
                                    $zero_rated = $v['qty'] * $cost;
                                }
                            }
                            $total += $trans['qty'] * $cost;
                        }

                        foreach ($trans_disc_cart as $disc_id => $dc) {
                            $dit = "";
                            if(isset($dc['items'])){
                                foreach ($dc['items'] as $lines) {
                                    $dit .= $lines.",";
                                }
                                if($dit != "")
                                    $dit = substr($dit,0,-1);                        
                            }
                            

                            $discount = 0;
                            $rate = $dc['disc_rate'];
                            switch ($dc['disc_type']) {
                                case "equal":
                                    $divi = $total/$dc['guest'];
                                    $divi_less = $divi;

                                    if($dc['disc_code'] == ATHLETE_CODE){
                                        // if($dc['no_tax'] == 1){
                                            $divi_less = ($divi / 1.12);
                                        // }
                                        $no_persons = count($dc['persons']);
                                        // foreach ($row['persons'] as $code => $per) {
                                        $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $divi_less);
                                        $discount = ($rate / 100) * $divi_less;
                                    }else{
                                        if($dc['no_tax'] == 1){
                                            $divi_less = ($divi / 1.12);
                                        }
                                        $no_persons = count($dc['persons']);
                                        // foreach ($row['persons'] as $code => $per) {
                                        $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $divi_less);
                                        $discount = ($rate / 100) * $divi_less;
                                    }

                                    // }
                                    // $total = ($divi * $row['guest']) - $discount;

                                    break;
                                default:
                                    // $no_citizens = count($dc['persons']);
                                    // if($dc['no_tax'] == 1)
                                    //     $total = ($total / 1.12);                     
                                    // $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total);
                                    // $discount = ($rate / 100) * $total;
                                    if($dc['fix'] == 0){
                                        if(DISCOUNT_NET_OF_VAT && $row['disc_code'] != DISCOUNT_NET_OF_VAT_EX){
                                            $no_citizens = count($dc['persons']);
                                            $total_net_vat = ($total / 1.12);                     
                                            foreach ($dc['persons'] as $code => $per) {
                                                $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total_net_vat);
                                                $discount += ($rate / 100) * $total_net_vat;
                                            }
                                            $total -= $discount; 
                                        }
                                        else{
                                            $no_citizens = count($dc['persons']);

                                            // echo $no_citizens; die();
                                            if($dc['disc_code'] == ATHLETE_CODE){
                                                // if($dc['no_tax'] == 1)
                                                    $total = ($total / 1.12);                     
                                                foreach ($dc['persons'] as $code => $per) {
                                                    $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total);
                                                    $discount += ($rate / 100) * $total;
                                                }
                                            }else{
                                                if($dc['no_tax'] == 1)
                                                    $total = ($total / 1.12);                     
                                                foreach ($dc['persons'] as $code => $per) {
                                                    $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total);
                                                    $discount += ($rate / 100) * $total;
                                                }
                                            }

                                            $total -= $discount;                                        
                                        }    
                                    }
                                    else{
                                        $discs[] = array('type'=>$dc['disc_code'],'amount'=>$rate);
                                        $discount += $rate;
                                        $total -= $discount;
                                    }
                                    // }    
                            }
                            foreach ($dc['persons'] as $pcode => $oper) {
                                $dcBday = null;
                                if(isset($oper['bday']) && $oper['bday'] != "")
                                    $dcBday = date2Sql($oper['bday']);
                                $trans_sales_disc_cart[] = array(
                                    "sales_id"=>$sales_id,
                                    "disc_id"=>$dc['disc_id'],
                                    "disc_code"=>$dc['disc_code'],
                                    "disc_rate"=>$dc['disc_rate'],
                                    "no_tax"=>$dc['no_tax'],
                                    "type"=>$dc['disc_type'],
                                    "name"=>$oper['name'],
                                    "bday"=>$dcBday,
                                    "code"=>$oper['code'],
                                    "items"=>$dit,
                                    "guest"=>$dc['guest'],
                                    "amount"=>$discount
                                );
                                $total_disc += $discount;
                            }
                        }
                        if(count($trans_sales_disc_cart) > 0)
                        {
                            $this->cashier_model->add_temp_sales_discounts($trans_sales_disc_cart);
                            //   if(LOCALSYNC){
                            //     $this->sync_model->add_trans_sales_discounts($sales_id);
                            // }
                        }
                    }

                }




                // $total_disc = 0;
                // if(count($trans_disc_cart) > 0){
                //     $trans_sales_disc_cart = array();
                //     $total = 0;
                //     foreach ($trans_cart as $trans_id => $trans){
                //         if(isset($trans['cost']))
                //             $cost = $trans['cost'];
                //         if(isset($trans['price']))
                //             $cost = $trans['price'];

                //         if(isset($trans['modifiers'])){
                //             foreach ($trans['modifiers'] as $trans_mod_id => $mod) {
                //                 if($trans_id == $mod['line_id'])
                //                     $cost += $mod['price'];
                //             }
                //         }

                //         else{
                //             if(count($trans_mod_cart) > 0){
                //                 foreach ($trans_mod_cart as $trans_mod_id => $mod) {
                //                     if($trans_id == $mod['trans_id'])
                //                         $cost += $mod['cost'];
                //                 }
                //             }
                //         }
                //         if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
                //             $rate = 1.12;
                //             $cost = ($cost / $rate);
                //             if(isset($zero_rated)){
                //                 $zero_rated += $v['qty'] * $cost;
                //             }else{
                //                 $zero_rated = $v['qty'] * $cost;
                //             }
                //         }
                //         $total += $trans['qty'] * $cost;
                //     }

                //     foreach ($trans_disc_cart as $disc_id => $dc) {
                //         $dit = "";
                //         if(isset($dc['items'])){
                //             foreach ($dc['items'] as $lines) {
                //                 $dit .= $lines.",";
                //             }
                //             if($dit != "")
                //                 $dit = substr($dit,0,-1);                        
                //         }
                        

                //         $discount = 0;
                //         $rate = $dc['disc_rate'];
                //         switch ($dc['disc_type']) {
                //             case "equal":
                //                 $divi = $total/$dc['guest'];
                //                 $divi_less = $divi;
                //                 if($dc['no_tax'] == 1){
                //                     $divi_less = ($divi / 1.12);
                //                 }
                //                 $no_persons = count($dc['persons']);
                //                 // foreach ($row['persons'] as $code => $per) {
                //                 $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $divi_less);
                //                 $discount = ($rate / 100) * $divi_less;
                //                 // }
                //                 // $total = ($divi * $row['guest']) - $discount;

                //                 break;
                //             default:
                //                 // $no_citizens = count($dc['persons']);
                //                 // if($dc['no_tax'] == 1)
                //                 //     $total = ($total / 1.12);                     
                //                 // $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total);
                //                 // $discount = ($rate / 100) * $total;
                //                 if($dc['fix'] == 0){
                //                     if(DISCOUNT_NET_OF_VAT && $row['disc_code'] != DISCOUNT_NET_OF_VAT_EX){
                //                         $no_citizens = count($dc['persons']);
                //                         $total_net_vat = ($total / 1.12);                     
                //                         foreach ($dc['persons'] as $code => $per) {
                //                             $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total_net_vat);
                //                             $discount += ($rate / 100) * $total_net_vat;
                //                         }
                //                         $total -= $discount; 
                //                     }
                //                     else{
                //                         $no_citizens = count($dc['persons']);

                //                         // echo $no_citizens; die();

                //                         if($dc['no_tax'] == 1)
                //                             $total = ($total / 1.12);                     
                //                         foreach ($dc['persons'] as $code => $per) {
                //                             $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total);
                //                             $discount += ($rate / 100) * $total;
                //                         }
                //                         $total -= $discount;                                        
                //                     }    
                //                 }
                //                 else{
                //                     $discs[] = array('type'=>$dc['disc_code'],'amount'=>$rate);
                //                     $discount += $rate;
                //                     $total -= $discount;
                //                 }
                //                 // }    
                //         }
                //         foreach ($dc['persons'] as $pcode => $oper) {
                //             $dcBday = null;
                //             if(isset($oper['bday']) && $oper['bday'] != "")
                //                 $dcBday = date2Sql($oper['bday']);
                //             $trans_sales_disc_cart[] = array(
                //                 "sales_id"=>$sales_id,
                //                 "disc_id"=>$dc['disc_id'],
                //                 "disc_code"=>$dc['disc_code'],
                //                 "disc_rate"=>$dc['disc_rate'],
                //                 "no_tax"=>$dc['no_tax'],
                //                 "type"=>$dc['disc_type'],
                //                 "name"=>$oper['name'],
                //                 "bday"=>$dcBday,
                //                 "code"=>$oper['code'],
                //                 "items"=>$dit,
                //                 "guest"=>$dc['guest'],
                //                 "amount"=>$discount
                //             );
                //             $total_disc += $discount;
                //         }
                //     }
                //     if(count($trans_sales_disc_cart) > 0)
                //     {
                //         $this->cashier_model->add_temp_sales_discounts($trans_sales_disc_cart);
                //         //   if(LOCALSYNC){
                //         //     $this->sync_model->add_trans_sales_discounts($sales_id);
                //         // }
                //     }
                // }
                #save sa trans_sales_charges
                $total_charge = 0;
                if(count($trans_charge_cart) > 0){
                    $trans_sales_charge_cart = array();
                    foreach ($trans_charge_cart as $charge_id => $ch) {
                        $trans_sales_charge_cart[] = array(
                            "sales_id"=>$sales_id,
                            "charge_id"=>$charge_id,
                            "charge_code"=>$ch['code'],
                            "charge_name"=>$ch['name'],
                            "rate"=>$ch['amount'],
                            "absolute"=>$ch['absolute'],
                            "amount"=>$charges[$charge_id]['amount']
                        );
                        $total_charge += $charges[$charge_id]['amount'];
                    }
                    if(count($trans_sales_charge_cart) > 0)
                    {
                        $this->cashier_model->add_temp_sales_charges($trans_sales_charge_cart);

                        //  if(LOCALSYNC){
                        //     $this->sync_model->add_trans_sales_charges($sales_id);
                        // }
                    }
                }

                // $total_charge = 0;
                // $trans_sales_charge_cart = array();
                // foreach ($charges as $charge_id => $ch) {
                //     $trans_sales_charge_cart[] = array(
                //         "sales_id"=>$sales_id,
                //         "charge_id"=>$charge_id,
                //         "charge_code"=>$ch['code'],
                //         "charge_name"=>$ch['name'],
                //         "rate"=>$ch['rate'],
                //         "absolute"=>$ch['absolute'],
                //         "amount"=>$ch['amount']
                //     );
                //     $total_charge += $charges[$charge_id]['amount'];
                // }
                // if(count($trans_sales_charge_cart) > 0)
                // {
                //     $this->cashier_model->add_temp_sales_charges($trans_sales_charge_cart);

                //     //  if(LOCALSYNC){
                //     //     $this->sync_model->add_trans_sales_charges($sales_id);
                //     // }
                // }
                
                #SAVE SA TRANS_SALES_TAX
                // $total_amount
                // $tax = $this->get_tax_rates(false);
                // $zero_rated = 0;
                // $total = 0;
                // if(count($tax) > 0){
                //     $taxable_amount = 0;
                //     $not_taxable_amount = 0;
                //     foreach ($trans_cart as $trans_id => $v) {
                //         $cost = $v['cost'];
                //         if(count($trans_mod_cart) > 0){
                //             foreach ($trans_mod_cart as $trans_mod_id => $m) {
                //                 if($trans_id == $m['trans_id']){
                //                     $cost += $m['cost'];
                //                 }
                //             }
                //         }
                //         if($v['no_tax'] == 0){
                //             if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
                //                 // $rate = 1.12;
                //                 // $cost = ($cost / $rate);
                //                 $rate = 0.12;
                //                 $zr = ($cost * $rate);
                //                 $cost = $cost-$zr;
                //                 $zero_rated += $v['qty'] * $cost;
                //             }
                //             $total = $v['qty'] * $cost;
                //             $taxable_amount += $total;
                //             // echo $total."<br>";
                //             foreach ($trans_disc_cart as $disc_id => $dc) {
                //                 $discount = 0;
                //                 $rate = $dc['disc_rate'];
                //                 switch ($dc['disc_type']) {
                //                     case "equal":
                //                         $divi = $total/$dc['guest'];
                //                         $no_tax_persons = count($dc['persons']);
                //                         if($dc['no_tax'] == 1){
                //                             $divi_less = ($divi / 1.12);
                //                             $less_vat = $divi - $divi_less;
                //                             // $not_taxable_amount += $divi_less * $no_tax_persons;
                //                             // $taxable_amount -= $divi + $less_vat;
                //                             $no_tax = $divi_less * $no_tax_persons;
                //                             $not_taxable_amount += $no_tax;
                //                             $taxable_amount -= ($no_tax + ($less_vat * $no_tax_persons));
                //                         }else{
                //                             $disc_per_person = ($rate / 100) * $divi; 
                //                             $not_taxable_amount = 0;
                //                             $disc_persons = $disc_per_person * $no_tax_persons;
                //                             $taxable_amount -= $disc_persons;
                //                         }                             
                //                         break;
                //                     default:
                //                         $no_citizens = count($dc['persons']);
                //                         $no_cost_total = $total;
                //                         if($dc['no_tax'] == 1){
                //                             $no_cost_total = $total / 1.12;
                //                             $taxable_amount = 0;
                //                             $not_taxable_amount = $no_cost_total;
                //                         }
                //                         else{
                //                             if($dc['fix'] == 0){
                //                                 if(DISCOUNT_NET_OF_VAT && $row['disc_code'] != DISCOUNT_NET_OF_VAT_EX){
                //                                     $total_net_vat = $total / 1.12;
                //                                     $discount = ($rate / 100) * $total_net_vat;                                                    
                //                                     $taxable_amount -= $discount;
                //                                     // $taxable_amount = $total - $discount;
                //                                     $not_taxable_amount = 0;
                //                                 }
                //                                 else{
                //                                     $discount = ($rate / 100) * $total;                                                    
                //                                     $total_discount = $discount * $no_citizens;
                //                                     // $taxable_amount = $total - $discount;
                //                                     $taxable_amount -= $discount;
                //                                     $not_taxable_amount = 0;
                //                                     // echo $discount.'--'.$total_discount.'--'.$taxable_amount.'-<br><br><br>';
                //                                 }
                //                             }
                //                             else{
                //                                 $discount = $rate;
                //                                 $total_discount = $discount;
                //                                 $taxable_amount = $total_gross - $discount;
                //                                 // $taxable_amount -= $discount;
                //                                 $not_taxable_amount = 0;                                                
                //                             }
                //                         }###
                //                 }
                //             }
                //         }
                //         else{
                //           if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
                //                 // $rate = 1.12;
                //                 // $cost = ($cost / $rate);

                //                 $rate = 0.12;
                //                 $zr = ($cost * $rate);
                //                 $cost = $cost-$zr;

                //                 $zero_rated += $v['qty'] * $cost;
                //                 $not_taxable_amount += $v['qty'] * $cost;
                //           }
                //           else{
                //                 $not_taxable_amount += $cost * $v['qty'];
                //           }  
                //         }
                //     }
                //     //remove charges 
                //     $trans_sales_zero_rated[] = array(
                //         "sales_id"=>$sales_id,
                //         "amount"=>$zero_rated,
                //         // "name"=>$counter['zero_name'],
                //         // "card_no"=>$counter['zero_card_no']
                //     );

                //     if($zero_rated != 0){
                //         $trans_sales_zero_rated[0]['name'] = $counter['zero_name'];
                //         $trans_sales_zero_rated[0]['card_no'] = $counter['zero_card_no'];
                //     }

                //     if(count($trans_sales_zero_rated) > 0)
                //         $this->cashier_model->add_trans_sales_zero_rated($trans_sales_zero_rated);


                //     $trans_sales_no_tax[] = array(
                //         "sales_id"=>$sales_id,
                //         "amount"=>$not_taxable_amount
                //     );
                //     if(count($trans_sales_no_tax) > 0)
                //         $this->cashier_model->add_trans_sales_no_tax($trans_sales_no_tax);


                //     // if(LOCALSYNC){
                //     //     if(count($trans_sales_zero_rated) > 0)
                //     //         $this->sync_model->add_trans_sales_zero_rated($sales_id);

                //     //     if(count($trans_sales_no_tax) > 0)
                //     //         $this->sync_model->add_trans_sales_no_tax($sales_id);
                //     // }

                //     $am = $taxable_amount;
                //     $trans_sales_tax = array();
                //     $trans_tax = 0;
                //     foreach ($tax as $tax_id => $tx) {
                //         $rate = ($tx['rate'] / 100);
                //         $tax_value = ($am / ($rate + 1) ) * $rate;
                //         // ($am / 1.12) * .12
                //         $trans_sales_tax[] = array(
                //             "sales_id"=>$sales_id,
                //             "name"=>$tx['name'],
                //             "rate"=>$tx['rate'],
                //             "amount"=>$tax_value,
                //         );
                //         $trans_tax += $tax_value;
                //         $am -= $tax_value;
                //     }
                    
                //     if(count($trans_sales_tax) > 0)
                //     {
                //         $this->cashier_model->add_trans_sales_tax($trans_sales_tax);
                //         // if(LOCALSYNC){
                //         //     $this->sync_model->add_trans_sales_tax($sales_id);
                //         // }
                //     }



                    
                // }

                $tax = $this->get_tax_rates(false);
                $taxable_amount = $total_gross;
                // echo "<pre>",print_r($taxable_amount),"</pre>";
                $not_taxable_amount = 0;
                $zero_rated = 0;
                $diplomat_count = 0;
                $g_count = 0;
                // echo $
                if(count($tax) > 0){

                    if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
                        $rate = 1.12;
                        // $cost = ($cost / $rate);
                        // $rate = 0.12;
                        $zero_rated += $total_gross / $rate;
                        $taxable_amount -= $total_gross;
                        $not_taxable_amount += $total_gross / $rate;
                    }else{
                        
                        if(count($item_discount)>0){
                            foreach ($trans_cart as $trans_id => $v) {
                                $cost = $v['cost'];
                                $total = $v['qty'] * $cost;

                                if(isset($item_discount[$trans_id])){
                                    
                                    if($item_discount[$trans_id]['disc_code'] == 'DIPLOMAT'){
                                        $zero_rated += $total / 1.12;
                                        $not_taxable_amount += $total / 1.12;
                                        $taxable_amount -= $total;
                                    }else{
                                        $no_tx =  $item_discount[$trans_id]['no_tax'];
                                        if($no_tx == 1){
                                            $not_taxable_amount += $total / 1.12;
                                            $taxable_amount -= $total;
                                            // die('ss');
                                        }else{
                                            // $with_disc = $total - $item_discount[$trans_id]['amount'];
                                            // echo $with_disc; die();
                                            $taxable_amount -= $item_discount[$trans_id]['amount'];
                                        }
                                    }

                                }
                            }
                        }else{
                            foreach ($trans_disc_cart as $disc_id => $dc) {
                                $discount = 0;
                                $rate = $dc['disc_rate'];

                                $divi = $total_gross/$dc['guest'];
                                $no_tax_persons = count($dc['persons']);
                                $g_count = $dc['guest'];
                                foreach($dc['persons'] as $name => $val){
                                    if($dc['fix'] == 0){
                                        
                                        if($dc['disc_code'] == 'DIPLOMAT'){
                                            $divi_less = ($divi / 1.12);

                                            $zero_rated += $divi_less;
                                            $not_taxable_amount += $divi_less;
                                            $taxable_amount -= $divi;
                                            $diplomat_count++;
                                        }elseif($dc['disc_code'] == ATHLETE_CODE){
                                            $divi_less = ($divi / 1.12);
                                            $disc_per_person = ($rate / 100) * $divi_less;

                                            $taxable_amount -= $disc_per_person;

                                            // echo $taxable_amount.'aaaa';

                                        }else{
                                            if($dc['no_tax'] == 1){
                                                $divi_less = ($divi / 1.12);
                                                $less_vat = $divi - $divi_less;
                                                // $not_taxable_amount += $divi_less * $no_tax_persons;
                                                // $taxable_amount -= $divi + $less_vat;
                                                $disc_per_person = ($rate / 100) * $divi_less;

                                                $no_tax = $divi_less * $no_tax_persons;
                                                $taxable_amount -= $divi;
                                                // echo $not_taxable_amount.'aa';
                                                $not_taxable_amount += $divi - $less_vat;
                                                // echo $not_taxable_amount.'bb';
                                            }else{
                                                $disc_per_person = ($rate / 100) * $divi; 
                                                // $not_taxable_amount = 0;
                                                // $disc_persons = $disc_per_person * $no_tax_persons;
                                                $taxable_amount -= $disc_per_person;
                                            }
                                        }


                                    }else{
                                        // $disc_per_person = $divi - $rate;
                                        $disc_per_person = $rate;
                                        $taxable_amount -= $disc_per_person;
                                        // echo 'aw';
                                        // $taxable_amount -= $discount;
                                        // $not_taxable_amount = 0; 
                                    }
                                }

                                // echo $taxable_amount.'----';
                            }
                        }


                    }

                    // echo $g_count.'----'.$diplomat_count; die();
                    //remove charges 
                    if($zero_rated == 0){
                        $trans_sales_zero_rated[] = array(
                            "sales_id"=>$sales_id,
                            "amount"=>$zero_rated,
                            // "name"=>$counter['zero_name'],
                            // "card_no"=>$counter['zero_card_no']
                        );
                    }else{
                        if($g_count == $diplomat_count){
                            $trans_sales_zero_rated[] = array(
                                "sales_id"=>$sales_id,
                                "amount"=>$zero_rated - $total_disc,
                                // "name"=>$counter['zero_name'],
                                // "card_no"=>$counter['zero_card_no']
                            );
                        }else{
                            $trans_sales_zero_rated[] = array(
                                "sales_id"=>$sales_id,
                                "amount"=>$zero_rated,
                                // "name"=>$counter['zero_name'],
                                // "card_no"=>$counter['zero_card_no']
                            );
                        }

                    }

                    // echo "<pre>",print_r($trans_sales_zero_rated),"</pre>";

                    // echo "<pre>",print_r($trans_sales_no_tax),"</pre>";
                    // if($zero_rated != 0){
                    //     $trans_sales_zero_rated[0]['name'] = $counter['zero_name'];
                    //     $trans_sales_zero_rated[0]['card_no'] = $counter['zero_card_no'];
                    // }

                    if(count($trans_sales_zero_rated) > 0)
                        $this->cashier_model->add_temp_sales_zero_rated($trans_sales_zero_rated);


                    if($zero_rated == 0){
                        $trans_sales_no_tax[] = array(
                            "sales_id"=>$sales_id,
                            "amount"=>$not_taxable_amount
                        );
                    }else{
                        if($g_count == $diplomat_count){
                            $trans_sales_no_tax[] = array(
                                "sales_id"=>$sales_id,
                                "amount"=>$not_taxable_amount - $total_disc
                            );
                        }else{
                            $trans_sales_no_tax[] = array(
                                "sales_id"=>$sales_id,
                                "amount"=>$not_taxable_amount,
                            );
                        }
                    }
                    if(count($trans_sales_no_tax) > 0)
                        $this->cashier_model->add_temp_sales_no_tax($trans_sales_no_tax);


                    // if(LOCALSYNC){
                    //     if(count($trans_sales_zero_rated) > 0)
                    //         $this->sync_model->add_trans_sales_zero_rated($sales_id);

                    //     if(count($trans_sales_no_tax) > 0)
                    //         $this->sync_model->add_trans_sales_no_tax($sales_id);
                    // }
                    if($zero_rated != 0 && $total_disc != 0){
                        if($g_count == $diplomat_count){
                            $taxable_amount = 0;
                        }
                    }
                    // echo $taxable_amount;
                    $am = $taxable_amount;
                    // echo $am.'ddddddd';
                    $trans_sales_tax = array();
                    $trans_tax = 0;
                    foreach ($tax as $tax_id => $tx) {
                        $rate = ($tx['rate'] / 100);
                        $tax_value = ($am / ($rate + 1) ) * $rate;
                        // ($am / 1.12) * .12
                        $trans_sales_tax[] = array(
                            "sales_id"=>$sales_id,
                            "name"=>$tx['name'],
                            "rate"=>$tx['rate'],
                            "amount"=>$tax_value,
                        );
                        $trans_tax += $tax_value;
                        $am -= $tax_value;
                    }

                    
                    if(count($trans_sales_tax) > 0)
                    {
                        $this->cashier_model->add_temp_sales_tax($trans_sales_tax);
                        // if(LOCALSYNC){
                        //     $this->sync_model->add_trans_sales_tax($sales_id);
                        // }
                    }


                }
                ### LOCAL TAX 
                if($local_tax > 0){
                    $trans_sales_local_tax[] = array(
                        "sales_id"=>$sales_id,
                        "amount"=>$local_tax
                    );
                    if(count($trans_sales_local_tax) > 0)
                    {
                        $this->cashier_model->add_temp_sales_local_tax($trans_sales_local_tax);
                        //  if(LOCALSYNC){
                        //     $this->sync_model->add_trans_sales_local_tax($sales_id);
                        // }
                        
                    } 
                }


                //for update sa trans_Sales ng iba pang details
                $trans_sales_update = array(
                    "total_gross"       => $total_gross,
                    "total_discount" => $total_disc,
                    "total_charges" => $total_charge,
                    "zero_rated" => $zero_rated,
                    "no_tax" => $not_taxable_amount,
                    "tax" => $trans_tax,
                    "local_tax" => $local_tax,
                );
                $this->cashier_model->update_temp_sales($trans_sales_update,$sales_id);



                // if(defined('ENABLE_CHECKLIST') && ENABLE_CHECKLIST){

                //     #print
                //     $this->print_checklist($sales_id);  
                // }
                
                // if ($print == "true" || $print === true){
                //     // $set = $this->cashier_model->get_pos_settings();
                //     // $return_print_str=false,$add_reprinted=true,$splits=null,$include_footer=true
                //     // $no_prints = $set->no_of_receipt_print;
                //     // $print_echo = $this->print_sales_receipt($sales_id,false,false,true,null,true,$no_prints);
                //     $print_echo = $this->print_sales_receipt($sales_id,false);
                // }
                // if ($printKitSlip == "true" || $printKitSlip === true){

                //     $pet = $this->cashier_model->get_pos_settings();
                //     $kitchen_printer = $pet->kitchen_printer_name;
                //     if(KITCHEN_PRINTER){
                //         $kitchen_printer = KITCHEN_PRINTER;
                //     }
                //     if(count($reasons) > 0){
                        
                //         $this->print_os_removes($sales_id,$reasons);
                //     }
                //     if($kitchen_printer != ""){
                //         $this->print_os($sales_id);            
                //     }
                // }


                //linabas ko para magsave padin kahit di naka true yun printKitSlip
                // foreach ($reasons as $ctrr => $re) {
                //     $reason_id = $this->cashier_model->add_reasons($re);
                //     // if(LOCALSYNC){
                //     //  $this->sync_model->add_reasons($reason_id);
                //     // }
                // }
            }

            // if(MIGRATION_VERSION == '2'){
            //         // run_main_exec();
            //         // run_master_exec();
                 
            // }
            // echo var_dump($kitchen_printer);
            // return false;
            // $this->update_tbl_activity(null,true);
            if($asJson)
                echo json_encode(array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type));
            else
                return array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type);
        }

        public function print_sales_receipt_temp($sales_id=null,$asJson=true,$return_print_str=false,$add_reprinted=true,$splits=null,$include_footer=true,$no_prints=1,$order_slip_prints=0,$approved_by=null,$main_db=false,$openDrawer=false){
            // if(LOCALSYNC){
            //     $this->load->model('core/sync_model');
            // }
            if($main_db){
                $this->db = $this->load->database('main', TRUE);
            }
            $branch = $this->get_branch_details(false);
            $return = $this->get_order_temp(false,$sales_id);
            $order = $return['order'];
            $details = $return['details'];
            $payments = $return['payments'];
            $discounts = $return['discounts'];
            $local_tax = $return['local_tax'];
            $charges = $return['charges'];
            $tax = $return['taxes'];
            $no_tax = $return['no_tax'];
            $zero_rated = $return['zero_rated'];
            $totalsss = $this->total_trans_temp(false,$details,$discounts);
            $discs = $totalsss['discs'];
            $is_printed = $order['printed'];
            $print_str = $print_str_part1 = $print_str_part2 = $print_str_part3 = "\r\n";
            $is_billing = false;
            $open_drawer = false;
            // $wrap = wordwrap($branch['name'],PAPER_WIDTH,"|#|");
            // $exp = explode("|#|", $wrap);
            // foreach ($exp as $v) {
            //     $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
            // }
            if(defined('RECEIPT_ADDITIONAL_HEADER_BELOW_BRANCH') && !empty(RECEIPT_ADDITIONAL_HEADER_BELOW_BRANCH)){
                $print_str .= $this->align_center(RECEIPT_ADDITIONAL_HEADER_BELOW_BRANCH,PAPER_WIDTH," ")."\r\n";
            }

            // $wrap = wordwrap($branch['desc'],PAPER_WIDTH,"|#|");
            // $exp = explode("|#|", $wrap);
            // foreach ($exp as $v) {
            //     $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
            // }

            $wrap = wordwrap($branch['address'],PAPER_WIDTH,"|#|");
            $exp = explode("|#|", $wrap);
            foreach ($exp as $v) {
                $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
            }   
                // $print_str .= "\r\n";
            if($branch['tin'] != ""){
                // $print_str .= $this->append_chars('VAT REG TIN:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['tin'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
                $print_str .= $this->align_center('VAT REG TIN:'.$branch['tin'],PAPER_WIDTH," ")."\r\n";
            }
            // if($branch['accrdn'] != ""){
            //     $print_str .= $this->append_chars('ACCRDN:',"right",PAPER_DET_SUBCOL," ").$this->append_chars($branch['accrdn'],"right",PAPER_TOTAL_COL_1," ")."\r\n";
            // }
            if($branch['serial'] != ""){
                $print_str .= $this->align_center('S/N:'.$branch['serial'],PAPER_WIDTH," ")."\r\n";
                // $print_str .= $this->append_chars('SN:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['serial'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
            }
            if($branch['machine_no'] != ""){
                $print_str .= $this->append_chars('MIN:'.$branch['machine_no'],PAPER_WIDTH," ")."\r\n";
                // $print_str .= $this->append_chars('MIN:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['machine_no'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
            }
            // if($branch['permit_no'] != ""){
            //     $print_str .= $this->append_chars('PERMIT:'.$branch['permit_no'],"right",PAPER_WIDTH," ")."\r\n";
            //     // $print_str .= $this->append_chars('PERMIT:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['permit_no'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
            // }


            $print_str .= "\r\n";
              $print_str .= $this->append_chars(date('M d, Y h:i A',strtotime($order['datetime'])),"left",PAPER_WIDTH," ")."\r\n";

            // if (!empty($order['void_ref']) || $order['inactive'] == 1) {
            if ($order['ref'] != null && $order['inactive'] == 1) {
                $print_str .= $this->align_center("***** VOIDED TRANSACTION *****",PAPER_WIDTH," ")."\r\n";
                $print_str .= $order['reason']."\r\n\r\n";
            }
            $cancelled = 0;
            if ($order['ref'] == null && $order['inactive'] == 1) {
                $print_str .= $this->align_center("***** CANCELLED TRANSACTION *****",PAPER_WIDTH," ")."\r\n";
                $print_str .= $order['reason']."\r\n\r\n";
                $cancelled = 1;
            }
             // $print_str .= "\r\n".PAPER_LINE."\r\n";
            // $header_print_str = $print_str;
             // $header_print_str .= PAPER_LINE."\r\n";
                // if (!empty($payments)){
                //         $header_print_str = "Receipt # ".$order['ref']."\r\n";
                //         // $this->align_center("Receipt # ".$order['ref']." - ".strtoupper($order['type']),42," ")."\r\n";
                // }
                // else{
                //     $header_print_str = "Reference # ".$order['sales_id']."\r\n";
                //         // $this->align_center(strtoupper($order['type'])." # ".$order['sales_id'],42," ")."\r\n";
                // }
             // $header_print_str .= "\r\n".PAPER_LINE."\r\n";

           
            // $header_print_str .= PAPER_LINE."\r\n";

            // $print_str .= $this->align_center(date('Y-m-d H:i:s',strtotime($order['datetime']))." ".$order['terminal_name']." ".$order['name'],42," ")."\r\n";


            if($order['update_date']){
                // $print_str .= $this->append_chars(ucwords($order['name']),"right",PAPER_RD_COL_3_3," ").$this->append_chars(date('Y-m-d H:i:s',strtotime($order['update_date'])),"left",PAPER_TOTAL_COL_2," ")."\r\n"
                //       . $this->append_chars("Terminal ID : ".$order['terminal_code'],"right",PAPER_RD_COL_3," ").$this->append_chars("","left",PAPER_TOTAL_COL_2," ")."\r\n"
                //     ."\r\n";
                  // $print_str .= $this->append_chars("Terminal ID : ".$order['terminal_code'],"right",PAPER_RD_COL_3," ").$this->append_chars("","left",PAPER_TOTAL_COL_2," ")."\r\n";
                    // ."\r\n";
                    // .PAPER_LINE."\r\n";
            }else{
                // $print_str .= $this->append_chars(ucwords($order['name']),"right",PAPER_RD_COL_3_3," ").$this->append_chars(date('Y-m-d H:i:s',strtotime($order['datetime'])),"left",PAPER_TOTAL_COL_2," ")."\r\n"
                //       . $this->append_chars("Terminal ID : ".$order['terminal_code'],"right",PAPER_RD_COL_MID," ").$this->append_chars("","left",PAPER_TOTAL_COL_2," ")."\r\n"
                //     ."\r\n";
                // $print_str .=  $this->append_chars("Terminal ID : ".$order['terminal_code'],"right",PAPER_RD_COL_MID," ").$this->append_chars("","left",PAPER_TOTAL_COL_2," ")."\r\n"
                    // ."\r\n";
                    // .PAPER_LINE."\r\n";
                
            }
            $print_str .= "\r\n";

            if (!empty($payments)){
                 if(PRINT_VERSION=="V2"){
                    $print_str .=  $this->align_center("<bold>OFFICIAL RECEIPT</bold>",PAPER_RD_COL_MID,"  ")."\r\n";// "Receipt # ".$order['ref']." - ".strtoupper($order['type'])."\r\n";
                    $print_str .=  $this->align_center("<bold>OR #: ".$order['ref']."</bold>",PAPER_RD_COL_MID,"  ")."\r\n";// "Receipt # ".$order['ref']." - ".strtoupper($order['type'])."\r\n";

                  }else{
                    $print_str .=  $this->align_center("OFFICIAL  RECEIPT ",PAPER_RD_COL_MID,"  ")."\r\n";// "Receipt # ".$order['ref']." - ".strtoupper($order['type'])."\r\n";
                    $print_str .=  $this->align_center("OR #: ".$order['ref'],PAPER_RD_COL_MID,"  ")."\r\n";
                  }
                    // $this->align_center("Receipt # ".$order['ref']." - ".strtoupper($order['type']),42," ")."\r\n";
            } else{
                $print_str .= $this->align_center("REFERENCE",PAPER_RD_COL_MID," ");//"Reference # ".$order['sales_id']." - ".strtoupper($order['type'])."\r\n";
                $print_str .=  $this->align_center(" #: ".$order['ref'],PAPER_RD_COL_MID,"  ")."\r\n";
                    // $this->align_center(strtoupper($order['type'])." # ".$order['sales_id'],42," ")."\r\n";
            }
            if(PRINT_VERSION=="V2"){
             $print_str .=  $this->align_center("\r\n <bold>".strtoupper($order['type'])."</bold>",PAPER_RD_COL_MID," ")."\r\n";
            }else{
             $print_str .=  $this->align_center("\r\n ".strtoupper($order['type']),PAPER_RD_COL_MID," ")."\r\n";
            }
            $print_str .= $this->append_chars("Table No:  ".$order['table_name'],"left",PAPER_WIDTH," ")."\r\n";
            $print_str .= $this->append_chars("Register No:  ".$order['terminal_id'],"left",PAPER_WIDTH," ")."\r\n";
            $print_str .= $this->append_chars("Cashier Name:  ".ucwords($order['name']),"left",PAPER_WIDTH," ")."\r\n";
            $print_str .= PAPER_LINE_SINGLE."\r\n";



            $print_str .= $this->append_chars('Name:',"left",PAPER_RECEIPT_TEXT," ")
                            .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
            $print_str .= $this->append_chars('Address:',"left",PAPER_RECEIPT_TEXT," ")
                            .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
            $print_str .= $this->append_chars('TIN:',"left",PAPER_RECEIPT_TEXT," ")
                            .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
            $print_str .= $this->append_chars('Business Style:',"left",PAPER_RECEIPT_TEXT," ")
                            .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";

            $print_str .= PAPER_LINE_SINGLE."\r\n";
            //HEADER 3


            // if($order['waiter_id'] != ""){
            //     $print_str .= "FS - ".ucwords(strtolower($order['waiter_name']))."\r\n";
            // }


            // $orddetails = "";
            // if($order['table_id'] != "" || $order['table_id'] != 0)
            //     $orddetails .= $order['table_name']." ";

            // if($order['guest'] != 0)
            //     $orddetails .= "Guest #".$order['guest'];

            // if($order['serve_no'] != 0)
            //     $orddetails .= "Serve #".$order['serve_no'];

            // if($orddetails != "")
            //     $print_str .= $this->append_chars($orddetails,"left",PAPER_TOTAL_COL_2," ")."\r\n";//$this->align_center($orddetails,PAPER_WIDTH," ")."\r\n";
            // else{
            //  $print_str .= "\r\n";
            // }

            $log_user = $this->session->userdata('user');
            if (!empty($payments)) {
                if($add_reprinted){
                    if($order['printed'] >= 1){
                        $print_str .= $this->align_center('[REPRINTED]',PAPER_WIDTH," ")."\r\n";
                        $this->cashier_model->update_trans_sales(array('printed'=>$order['printed']+1),$order['sales_id']);
                        $log_id = $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Reprinted Receipt on Sales Order #".$order['sales_id']." Reference #".$order['ref'],$order['sales_id']);
                        
                    }
                    else{
                        $this->cashier_model->update_trans_sales(array('printed'=>1,'billed'=>1),$order['sales_id']);
                     
                      
                        if(!$return_print_str){
                            $log_id =  $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Printed Receipt on Sales Order #".$order['sales_id']." Reference #".$order['ref'],$order['sales_id']);
                        }
                    }
                }
                else{
                    $this->cashier_model->update_trans_sales(array('printed'=>1,'billed'=>1),$order['sales_id']);
                    if(!$return_print_str){
                         $log_id = $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Printed Receipt on Sales Order #".$order['sales_id']." Reference #".$order['ref'],$order['sales_id']);
                    }
                }
            }
            else{
                $this->cashier_model->update_trans_sales(array('billed'=>1),$order['sales_id']);
                 $log_id =  $this->logs_model->add_logs('Sales Order',$log_user['id'],$log_user['full_name']." Printed Billing on Sales Order #".$order['sales_id'],$order['sales_id']);
            }

            // if(LOCALSYNC){
            //     // if(isset($log_id)){
            //          // $this->sync_model->add_logs($log_id);
            //     // }

            //     $this->sync_model->update_trans_sales($sales_id);

            // }

            if($order['customer_id'] != ""){
                if($main_db){
                    $this->db = $this->load->database('default', TRUE);
                }
                $this->load->model('dine/customers_model');
                $customers = $this->customers_model->get_customer($order['customer_id']);
                if(count($customers) > 0){
                    $cust = $customers[0];
                    $name = strtolower($cust->fname." ".$cust->mname." ".$cust->lname." ".$cust->suffix);
                    $print_str .= "Customer : ".$this->append_chars(ucwords($name),"right",19," ")."\r\n";
                    if($order['type'] == 'delivery'){
                        $print_str .= "Contact  : ".$this->append_chars(ucwords($cust->phone),"right",19," ")."\r\n";
                        $address = strtolower($cust->street_no." ".$cust->street_address." ".$cust->city." ".$cust->region." ".$cust->zip);
                        $print_str .= "Address  : ".$this->append_chars(ucwords($address),"right",19," ")."\r\n";
                    }
                }

                if($main_db){
                    $this->db = $this->load->database('main', TRUE);
                }
            }
            if($order['type'] == 'delivery' && $order['customer_id'] != ""){
            
            }


            // $print_str .= PAPER_LINE."\r\n";          

            // $print_str .= $this->append_chars("","right",PAPER_WIDTH,"=")."\r\n";

            $pre_total = 0;
            $post_details = array();
            $post_details_nc = array();
            $discs_items = array();
            foreach ($discs as $disc) {
                if(isset($disc['items']))
                    $discs_items[$disc['type']] = $disc['items'];
            }

            // echo "<pre>",print_r($details),"</pre>";die();

            $dscTxt = array();
            foreach ($details as $line_id => $val) {
                foreach ($discs_items as $type => $dissss) {
                    if(in_array($line_id, $dissss)){
                        $qty = 1;
                        if(isset($dscTxt[$val['menu_id'].'_'.$val['price']][$type]['qty'])){
                            $qty = $dscTxt[$val['menu_id'].'_'.$val['price']][$type]['qty'] + 1;
                        }
                        $dscTxt[$val['menu_id'].'_'.$val['price']][$type] = array('txt' => '#'.$type,'qty' => $qty);
                    }
                }
            }

            foreach ($details as $line_id => $val) {

                if($val['is_takeout'] == 1){
                    if (!isset($post_details_nc[$val['menu_id'].'_'.$val['price']])) {
                        $dscsacs = array();
                        if(isset($dscTxt[$val['menu_id'].'_'.$val['price']])){
                            $dscsacs = $dscTxt[$val['menu_id'].'_'.$val['price']];
                        }
                        $remarksArr = array();
                        if($val['remarks'] != '')
                            $remarksArr = array($val['remarks']." x ".$val['qty']);
                        $post_details_nc[$val['menu_id'].'_'.$val['price']] = array(
                            'name' => $val['name'],
                            'code' => $val['code'],
                            'price' => $val['price'],
                            'no_tax' => $val['no_tax'],
                            'discount' => $val['discount'],
                            'qty' => $val['qty'],
                            'discounted'=>$dscsacs,
                            'remarks'=>$remarksArr,
                            'modifiers' => array()
                        );
                    } else {
                        if($val['remarks'] != "")
                            $post_details_nc[$val['menu_id'].'_'.$val['price']]['remarks'][]= $val['remarks']." x ".$val['qty'];
                        $post_details_nc[$val['menu_id'].'_'.$val['price']]['qty'] += $val['qty'];
                    }

                    if (empty($val['modifiers']))
                        continue;

                    $modifs = $val['modifiers'];
                    $n_modifiers = $post_details_nc[$val['menu_id'].'_'.$val['price']]['modifiers'];
                    foreach ($modifs as $vv) {
                        if (!isset($n_modifiers[$vv['id']])) {
                            $n_modifiers[$vv['id']] = array(
                                'name' => $vv['name'],
                                'price' => $vv['price'],
                                'qty' => $val['qty'],
                                'discount' => $vv['discount']
                            );
                        } else {
                            $n_modifiers[$vv['id']]['qty'] += $val['qty'];
                        }
                    }
                    $post_details_nc[$val['menu_id'].'_'.$val['price']]['modifiers'] = $n_modifiers;
                }else{
                    if (!isset($post_details[$val['menu_id'].'_'.$val['price']])) {
                        $dscsacs = array();
                        if(isset($dscTxt[$val['menu_id'].'_'.$val['price']])){
                            $dscsacs = $dscTxt[$val['menu_id'].'_'.$val['price']];
                        }
                        $remarksArr = array();
                        if($val['remarks'] != '')
                            $remarksArr = array($val['remarks']." x ".$val['qty']);
                        
                        $post_details[$val['menu_id'].'_'.$val['price']] = array(
                            'name' => $val['name'],
                            'code' => $val['code'],
                            'price' => $val['price'],
                            'no_tax' => $val['no_tax'],
                            'discount' => $val['discount'],
                            'qty' => $val['qty'],
                            'discounted'=>$dscsacs,
                            'remarks'=>$remarksArr,
                            'modifiers' => array()
                        );
                    } else {
                        if($val['remarks'] != "")
                            $post_details[$val['menu_id'].'_'.$val['price']]['remarks'][]= $val['remarks']." x ".$val['qty'];
                        $post_details[$val['menu_id'].'_'.$val['price']]['qty'] += $val['qty'];
                    }

                    if (empty($val['modifiers']))
                        continue;

                    $modifs = $val['modifiers'];
                    $n_modifiers = $post_details[$val['menu_id'].'_'.$val['price']]['modifiers'];
                    foreach ($modifs as $vv) {
                        if (!isset($n_modifiers[$vv['id']])) {
                            $n_modifiers[$vv['id']] = array(
                                'name' => $vv['name'],
                                'price' => $vv['price'],
                                'qty' => $val['qty'],
                                'discount' => $vv['discount']
                            );
                        } else {
                            $n_modifiers[$vv['id']]['qty'] += $val['qty'];
                        }
                    }
                    $post_details[$val['menu_id'].'_'.$val['price']]['modifiers'] = $n_modifiers;
                }

            }
            /* END NEW BLOCK */
            $tot_qty = 0;
              $print_str .= $this->append_chars("QTY" ,"right",PAPER_DET_COL_1," ");
               $print_str .= $this->append_chars("Item Description","right",PAPER_DET_COL_2," ").
                $this->append_chars("Amount","left",PAPER_DET_COL_3," ")."\r\n\r\n";
            foreach ($post_details as $val) {
                $tot_qty += $val['qty'];
                $print_str .= $this->append_chars($val['qty'] ."  " ,"right",PAPER_DET_COL_1," ");

                $len = strlen($val['name']);

                if($val['qty'] == 1){
                    $lgth = 21;
                }else{
                    $lgth = 16;
                }

                if($len > $lgth){
                    $arr2 = str_split($val['name'], $lgth);
                    $counter = 1;
                    foreach($arr2 as $k => $vv){
                        if($counter == 1){
                            if ($val['qty'] == 1) {
                                $print_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").
                                    $this->append_chars(number_format($val['price'],2),"left",PAPER_DET_COL_3," ")."\r\n\r\n";
                            } else {
                                $print_str .= $this->append_chars(substrwords($vv,100,"")." ".$val['price'],"right",PAPER_DET_COL_2," ").
                                    $this->append_chars(number_format($val['price'] * $val['qty'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                            }
                        }else{
                            // if ($val['qty'] == 1) {
                                $print_str .= $this->append_chars("","right",PAPER_DET_COL_1," ");
                                $print_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").
                                    $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                            // } else {
                                // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                            // }
                        }
                        $counter++;
                    }
                    
                    if ($val['qty'] == 1) {
                        $pre_total += $val['price'];
                    }else{
                        $pre_total += $val['price'] * $val['qty'];
                    }
                }else{
                    if ($val['qty'] == 1) {
                        $print_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").
                            $this->append_chars(number_format($val['price'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                        $pre_total += $val['price'];
                    } else {
                        $print_str .= $this->append_chars(substrwords($val['name'],100,"")." ".$val['price'],"right",PAPER_DET_COL_2," ").
                            $this->append_chars(number_format($val['price'] * $val['qty'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                        $pre_total += $val['price'] * $val['qty'];
                    }
                }
                if(count($val['discounted']) > 0){
                    foreach ($val['discounted'] as $dssstxt) {
                      $print_str .= "      ";
                      $print_str .= $this->append_chars($dssstxt['txt']." x ".$dssstxt['qty'],"right",PAPER_DET_COL_2," ")."\r\n";
                    }
                }
                if(isset($val['remarks']) && count($val['remarks']) > 0){
                    if(KERMIT){
                        foreach ($val['remarks'] as $rmrktxt) {
                            $print_str .= "     * ";
                            $print_str .= $this->append_chars(ucwords($rmrktxt),"right",PAPER_DET_COL_2," ")."\r\n";
                        }
                    }
                }

                if (empty($val['modifiers']))
                    continue;

                $modifs = $val['modifiers'];
                foreach ($modifs as $vv) {
                    $print_str .= "   * ".$vv['qty']." ";

                    if ($vv['qty'] == 1) {
                        $print_str .= $this->append_chars(substrwords($vv['name'],100,""),"right",PAPER_DET_SUBCOL," ")
                            .$this->append_chars(number_format($vv['price'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                        $pre_total += $vv['price'];
                    } else {
                        $print_str .= $this->append_chars(substrwords($vv['name'],100,"")." @ ".$vv['price'],"right",PAPER_DET_SUBCOL," ")
                            .$this->append_chars(number_format($vv['price'] * $vv['qty'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                        $pre_total += $vv['price'] * $vv['qty'];
                    }
                }
                

                $print_str .= "\r\n";
                //DISCOUNT PALATANDAAN
                // if(in_array($val[''], haystack))

            }

            //for no charges
            if($post_details_nc){
                // $print_str .= "\r\n";
                $print_str .= PAPER_LINE."\r\n";
                $print_str .= "          ".TAKEOUTTEXT."\r\n";
                $print_str .= PAPER_LINE."\r\n";
                foreach ($post_details_nc as $val) {
                    $tot_qty += $val['qty'];
                    $print_str .= $this->append_chars($val['qty']." ","right",PAPER_DET_COL_1," ");

                    $len = strlen($val['name']);

                    if($val['qty'] == 1){
                        $lgth = 21;
                    }else{
                        $lgth = 16;
                    }

                    if($len > $lgth){
                        $arr2 = str_split($val['name'], $lgth);
                        $counter = 1;
                        foreach($arr2 as $k => $vv){
                            if($counter == 1){
                                if ($val['qty'] == 1) {
                                    $print_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").
                                        $this->append_chars(number_format($val['price'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                                } else {
                                    $print_str .= $this->append_chars(substrwords($vv,100,"")." ".$val['price'],"right",PAPER_DET_COL_2," ").
                                        $this->append_chars(number_format($val['price'] * $val['qty'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                                }
                            }else{
                                // if ($val['qty'] == 1) {
                                    $print_str .= $this->append_chars("","right",PAPER_DET_COL_1," ");
                                    $print_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").
                                        $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                // } else {
                                    // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                    //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                // }
                            }
                            $counter++;
                        }
                        
                        if ($val['qty'] == 1) {
                            $pre_total += $val['price'];
                        }else{
                            $pre_total += $val['price'] * $val['qty'];
                        }
                    }else{
                        if ($val['qty'] == 1) {
                            $print_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").
                                $this->append_chars(number_format($val['price'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                            $pre_total += $val['price'];
                        } else {
                            $print_str .= $this->append_chars(substrwords($val['name'],100,"")." ".$val['price'],"right",PAPER_DET_COL_2," ").
                                $this->append_chars(number_format($val['price'] * $val['qty'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                            $pre_total += $val['price'] * $val['qty'];
                        }
                    }
                    if(count($val['discounted']) > 0){
                        foreach ($val['discounted'] as $dssstxt) {
                          $print_str .= "      ";
                          $print_str .= $this->append_chars($dssstxt['txt']." x ".$dssstxt['qty'],"right",PAPER_DET_COL_2," ")."\r\n";
                        }
                    }
                    if(isset($val['remarks']) && count($val['remarks']) > 0){
                        // foreach ($val['remarks'] as $rmrktxt) {
                        //     $print_str .= "     * ";
                        //     $print_str .= $this->append_chars(ucwords($rmrktxt),"right",PAPER_DET_COL_2," ")."\r\n";
                        // }
                    }

                    if (empty($val['modifiers']))
                        continue;

                    $modifs = $val['modifiers'];
                    foreach ($modifs as $vv) {
                        $print_str .= "   * ".$vv['qty']." ";

                        if ($vv['qty'] == 1) {
                            $print_str .= $this->append_chars(substrwords($vv['name'],100,""),"right",PAPER_DET_SUBCOL," ")
                                .$this->append_chars(number_format($vv['price'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                            $pre_total += $vv['price'];
                        } else {
                            $print_str .= $this->append_chars(substrwords($vv['name'],100,"")." ".$vv['price'],"right",PAPER_DET_SUBCOL," ")
                                .$this->append_chars(number_format($vv['price'] * $vv['qty'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                            $pre_total += $vv['price'] * $vv['qty'];
                        }
                    }
                    


                    //DISCOUNT PALATANDAAN
                    // if(in_array($val[''], haystack))

                }
            }

            // $print_str .= $this->append_chars("","right",PAPER_WIDTH,"=");

            // $vat = round($order['amount'] / (1 + BASE_TAX) * BASE_TAX,1);
            $vat = 0;
            if($tax > 0){
                foreach ($tax as $tx) {
                   $vat += $tx['amount'];
                }
            }
            $no_tax_amt = 0;
            foreach ($no_tax as $k=>$v) {
                $no_tax_amt += $v['amount'];
            }

            $zname = "";
            $zcard = "";
            $zero_rated_amt = 0;
            foreach ($zero_rated as $k=>$v) {
                $zero_rated_amt += $v['amount'];
                $zname = $v['name'];
                $zcard = $v['card_no'];
            }
            if($zero_rated_amt > 0){
                $no_tax_amt = 0;
            }

            $print_str .= PAPER_LINE_SINGLE."\r\n";
            // $print_str .= "\r\n".$this->append_chars(ucwords("TOTAL"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format(($pre_total),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
            // $print_str .= $this->append_chars(ucwords("TOTAL QTY"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format(($tot_qty),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
            // // if(count($discs) > 0){
            //     foreach ($discs as $ds) {
            //         $print_str .= "\r\n".$this->append_chars(strtoupper($ds['type']),"right",28," ").$this->append_chars("P (".number_format($ds['amount'],2).")","left",10," ")."\r\n";
            //     }
            // }
            // $print_str .= "\r\n";
            

            //start of not show for cancelled trans

            if($cancelled == 0){

                $total_discounts = 0;
                $total_discounts_sm = 0;

                $per_item_disc = false;
                foreach ($discounts as $dcs_ci => $dcs) {
                    if($dcs['items'] != ""){
                        $per_item_disc = true;
                    }
                }
                if($per_item_disc){
                    foreach ($discounts as $dcs_ci => $dcs) {
                        // foreach ($dcs['persons'] as $code => $dcp) {
                            // $print_str .= $this->append_chars($dcs_ci,"right",28," ").$this->append_chars('P'.num($dcp['amount']),"left",10," ");
                            // $print_str .= "\r\n".$this->append_chars($dcp['name'],"right",28," ");
                            // $print_str .= "\r\n".$this->append_chars($dcp['code'],"right",28," ")."\r\n";
                            // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                            $total_discounts += $dcs['amount'];
                            $dcAmt = $dcs['amount'];
                            // if(MALL_ENABLED && MALL == 'megamall'){
                            //     if($dcs_ci == PWDDISC){
                            //         $dcAmt = $dcAmt / 1.12;       
                            //     }
                            // }
                            $total_discounts_sm += $dcAmt;
                        // }
                    }
                    $total_discounts_non_vat = 0;
                    foreach ($discounts as $dcs_ci => $dcs) {
                       
                        // foreach ($dcs['persons'] as $code => $dcp) {
                            // $print_str .= $this->append_chars($dcs_ci,"right",28," ").$this->append_chars('P'.num($dcp['amount']),"left",10," ");
                            // $print_str .= "\r\n".$this->append_chars($dcp['name'],"right",28," ");
                            // $print_str .= "\r\n".$this->append_chars($dcp['code'],"right",28," ")."\r\n";
                            // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                            if($dcs['no_tax'] == 1){
                                $total_discounts_non_vat += $dcs['amount'];
                            }
                        // }
                    }

                }else{
                    foreach ($discounts as $dcs_ci => $dcs) {
                        foreach ($dcs['persons'] as $code => $dcp) {
                            // $print_str .= $this->append_chars($dcs_ci,"right",28," ").$this->append_chars('P'.num($dcp['amount']),"left",10," ");
                            // $print_str .= "\r\n".$this->append_chars($dcp['name'],"right",28," ");
                            // $print_str .= "\r\n".$this->append_chars($dcp['code'],"right",28," ")."\r\n";
                            // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                            $total_discounts += $dcp['amount'];
                            $dcAmt = $dcp['amount'];
                            // if(MALL_ENABLED && MALL == 'megamall'){
                            //     if($dcs_ci == PWDDISC){
                            //         $dcAmt = $dcAmt / 1.12;       
                            //     }
                            // }
                            $total_discounts_sm += $dcAmt;
                        }
                    }
                    $total_discounts_non_vat = 0;
                    foreach ($discounts as $dcs_ci => $dcs) {
                       
                        foreach ($dcs['persons'] as $code => $dcp) {
                            // $print_str .= $this->append_chars($dcs_ci,"right",28," ").$this->append_chars('P'.num($dcp['amount']),"left",10," ");
                            // $print_str .= "\r\n".$this->append_chars($dcp['name'],"right",28," ");
                            // $print_str .= "\r\n".$this->append_chars($dcp['code'],"right",28," ")."\r\n";
                            // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                            if($dcs['no_tax'] == 1){
                                $total_discounts_non_vat += $dcp['amount'];
                            }
                        }
                    }
                }

                $total_charges = 0;
                if(count($charges) > 0){
                    foreach ($charges as $charge_id => $opt) {
                        $total_charges += $opt['total_amount'];
                    }
                }
                $local_tax_amt = 0;
                if(count($local_tax) > 0){
                    foreach ($local_tax as $lt_id => $lt) {
                        $local_tax_amt += $lt['amount'];
                    }
                }
                // echo num($total_charges + $local_tax_amt);

                // echo '((('.$order['amount'].' - ('.$total_charges.' + '.$local_tax_amt.') - '.$vat.') - '.$no_tax_amt.'+'.$total_discounts_non_vat.') -'.$zero_rated_amt;


                $vat_sales = ( ( ( $order['amount'] - ($total_charges + $local_tax_amt) ) - $vat)  - $no_tax_amt + $total_discounts_non_vat ) - $zero_rated_amt;

                // echo '===== '.$vat_sales;
                // $vat_sales = ( ( ( $order['amount'] ) - $vat)  - $no_tax_amt + $total_discounts) - $zero_rated_amt;
                // echo "vat_sales= ((".$order['amount']." - ".$total_charges."))- ".$vat." )- ".$no_tax_amt." + ".$total_discounts." - ".$zero_rated_amt;
                if($vat_sales < 0){
                    $vat_sales = 0;
                }

                $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                    $print_str .= $this->append_chars("Total Amount","right",PAPER_DET_COL_2," ").
                $this->append_chars(number_format($pre_total,2),"left",PAPER_DET_COL_3," ")."\r\n";
                if(count($discounts) >0){
                $less_vat = round(($pre_total - ($order['amount'] - $total_charges + $local_tax_amt ) ) - $total_discounts,2);
                $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                
                    if($less_vat >0){

                        $print_str .= $this->append_chars(ucwords("Less VAT"),"right",PAPER_DET_COL_2," ").$this->append_chars('('.number_format($less_vat,2).')',"left",PAPER_DET_COL_3," ")."\r\n";
                    }

                  // if(count($dcs['persons']) > 0){
                  //      $print_str .= $this->append_chars(ucwords("Less VAT (12%)"),"right",28," ").$this->append_chars("(".number_format($pre_total - $no_tax_amt,2).")","left",10," ")."\r\n";
                  //  }
                }else{
                    // $print_str .= $this->append_chars("Sub-Total","right",PAPER_DET_COL_2," ").
                    // $this->append_chars(number_format($pre_total,2),"left",PAPER_DET_COL_3," ")."\r\n";
                }
                if(count($discounts) >0){
                    $hasSMPWD = false;

                    if($per_item_disc){
                        foreach ($discounts as $dcs_ci => $dcs) {
                            // foreach ($dcs['persons'] as $code => $dcp) {
                            if($dcs['disc_code'] != "DIPLOMAT"){    
                                $discRateTxt = " (".$dcs['disc_rate']."%)";
                                if($dcs['fix'] == 1){
                                    $discRateTxt = " (".$dcs['disc_rate'].")";
                                }
                                $dcAmt = $dcs['amount'];
                                // if(MALL_ENABLED && MALL == 'megamall'){
                                //     if($dcs_ci == PWDDISC){
                                //         $dcAmt = $dcAmt / 1.12; 
                                //         $hasSMPWD = true;      
                                //     }
                                // }

                                $where = array('disc_code'=>$dcs['disc_code']);
                                $det = $this->site_model->get_details($where,'receipt_discounts');

                                $discount_text = "Less ".$det[0]->disc_name." DISCOUNT";
                                $lend = strlen($discount_text);

                                $lgthd = 21;

                                if($lend > $lgthd){
                                    $arr2 = str_split($discount_text, $lgthd);
                                    $counter = 1;
                                    foreach($arr2 as $k => $vv){
                                        if($counter == 1){
                                            $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                                            $print_str .= $this->append_chars($vv,"right",PAPER_DET_COL_2," ").$this->append_chars('('.num($dcAmt).')',"left",PAPER_DET_COL_3," ")."\r\n";
                                        }else{
                                            $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                                            $print_str .= $this->append_chars($vv,"right",PAPER_DET_COL_2," ").$this->append_chars('',"left",PAPER_DET_COL_3," ")."\r\n";
                                        }
                                        $counter++;
                                    }
                                    
                                    
                                }else{
                                    $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                                    $print_str .= $this->append_chars($discount_text,"right",PAPER_DET_COL_2," ").$this->append_chars('('.num($dcAmt).')',"left",PAPER_DET_COL_3," ")."\r\n";
                                }

                                //   $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                                // $print_str .= $this->append_chars("Less ".$det[0]->disc_name." DISC","right",PAPER_DET_COL_2," ").$this->append_chars('('.num($dcAmt).")","left",PAPER_DET_COL_3," ")."\r\n";
                                
                            // }
                            }
                        }
                    }else{
                        if(count($dcs['persons']) > 0){
                            // $print_str .= "\r\n";
                            // $print_str .= PAPER_LINE."\r\n";
                            // $print_str .= "          Discount Details"."\r\n";
                            // $print_str .= PAPER_LINE."\r\n";

                            foreach ($discounts as $dcs_ci => $dcs) {
                                if($dcs_ci != "DIPLOMAT"){
                                    foreach ($dcs['persons'] as $code => $dcp) {

                                        $discRateTxt = " (".$dcp['disc_rate']."%)";
                                        if($dcs['fix'] == 1){
                                            $discRateTxt = " (".$dcp['disc_rate'].")";
                                        }
                                        $dcAmt = $dcp['amount'];
                                        // if(MALL_ENABLED && MALL == 'megamall'){
                                        //     if($dcs_ci == PWDDISC){
                                        //         $dcAmt = $dcAmt / 1.12; 
                                        //         $hasSMPWD = true;      
                                        //     }
                                        // }

                                        $where = array('disc_code'=>$dcs_ci);
                                        $det = $this->site_model->get_details($where,'receipt_discounts');
                                        $discount_text = "Less ".$det[0]->disc_name." DISCOUNT";
                                        $lend = strlen($discount_text);

                                        $lgthd = 21;
                                        
                                        if($lend > $lgthd){
                                            $arr2 = str_split($discount_text, $lgthd);
                                            $counter = 1;
                                            foreach($arr2 as $k => $vv){
                                                if($counter == 1){
                                                    $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                                                    $print_str .= $this->append_chars($vv,"right",PAPER_DET_COL_2," ").$this->append_chars('('.num($dcAmt).')',"left",PAPER_DET_COL_3," ")."\r\n";
                                                }else{
                                                    $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                                                    $print_str .= $this->append_chars($vv,"right",PAPER_DET_COL_2," ").$this->append_chars('',"left",PAPER_DET_COL_3," ")."\r\n";
                                                }
                                                $counter++;
                                            }
                                            
                                            
                                        }else{
                                            $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                                            $print_str .= $this->append_chars($discount_text,"right",PAPER_DET_COL_2," ").$this->append_chars('('.num($dcAmt).')',"left",PAPER_DET_COL_3," ")."\r\n";
                                        }
                                    
                                    }

                                }
                            }
                            // $print_str .= "\r\n";
                            // echo $pre_total." - ".$order['amount']." - ".$total_charges." - ".$total_discounts; die();
                            // $less_vat = ($pre_total - ($order['amount'] - num($total_charges + $local_tax_amt) ) ) - $total_discounts;

                            // $print_str .= $this->append_chars(ucwords("Total Discount"),"right",28," ").$this->append_chars(number_format($total_discounts,2),"left",10," ")."\r\n";
                            // $print_str .= $this->append_chars(ucwords("Total Less VAT"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format( $less_vat,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                            // if(MALL_ENABLED && MALL == 'megamall' && $hasSMPWD){
                            //     $print_str .= $this->append_chars(ucwords("Total Amount Discounted"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format( ($total_discounts_sm + $less_vat),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                            // }
                            // else{
                            //     $print_str .= $this->append_chars(ucwords("Total Amount Discounted"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format( ($total_discounts + $less_vat),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                            // }
                        }
                    }

                } 
                // $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");
                // $print_str .= $this->append_chars("Service Charge (8.5%)","right",PAPER_DET_COL_2," ").
                // $this->append_chars(number_format($total_charges,2),"left",PAPER_DET_COL_3," ")."\r\n";
                if(count($charges) > 0){
                    // $print_str .= "\r\n";
                    // $print_str .= PAPER_LINE."\r\n";
                    // $print_str .= "              CHARGES"."\r\n";
                    // $print_str .= PAPER_LINE."\r\n";
                    foreach ($charges as $charge_id => $opt) {
                        $charge_amount = $opt['total_amount'];
                        // if($opt['absolute'] == 0){
                        //     $charge_amount = ($opt['amount'] / 100) * ($order['amount'] - $vat);
                        // }
                        $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");     
                        if($opt['absolute'] == 1){
                            $print_str .= $this->append_chars($opt['name'],"right",PAPER_DET_COL_2," ").$this->append_chars(number_format($charge_amount,2),"left",PAPER_DET_COL_3," ")."\r\n";
                        }else{
                            $print_str .= $this->append_chars($opt['name'] ."(".$opt['rate']."%)","right",PAPER_DET_COL_2," ").$this->append_chars(number_format($charge_amount,2),"left",PAPER_DET_COL_3," ")."\r\n";
                        }
                // $print_str .= $this->append_chars("Service Charge (8.5%)","right",PAPER_DET_COL_2," ").
                    }
                    // $print_str .= PAPER_LINE."\r\n";
                }
                if(PRINT_VERSION == 'V2'){    
                    $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");     
                    $print_str .="<bold>";
                    $print_str .= $this->append_chars($tot_qty." Item(s) Total Due","right",PAPER_DET_COL_2," ")."</bold><bold>".
                    $this->append_chars(number_format($order['amount'],2),"left",PAPER_DET_COL_3," ")."</bold>"."\r\n";
                }else{
                    $print_str .= $this->append_chars($tot_qty." Item(s) Total Due","right",PAPER_DET_COL_2," ").
                    $this->append_chars(number_format($order['amount'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                }
                $py_ref = "";


                $print_str .= "\r\n".$this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("VATABLE SALES"),"right",PAPER_DET_COL_2," ").$this->append_chars(num($vat_sales),"left",PAPER_DET_COL_3," ")."\r\n";
                $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("VATEXEMPT"),"right",PAPER_DET_COL_2," ").$this->append_chars(number_format($no_tax_amt-$total_discounts_non_vat,2),"left",PAPER_DET_COL_3," ")."\r\n";
                $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("Zero Rated VAT"),"right",PAPER_DET_COL_2," ").$this->append_chars(number_format($zero_rated_amt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                
                if($tax > 0){
                    foreach ($tax as $tx) {
                       $print_str .=  $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars($tx['name']." Amount","right",PAPER_DET_COL_2," ").$this->append_chars(number_format(abs($tx['amount']),2),"left",PAPER_DET_COL_3," ")."\r\n";
                    }
                }


                if (!empty($payments)) {

                    // $print_str .= "\r\n";
                    // $print_str .= "\r\n"."======================================"."\r\n";
                    //   if(PRINT_VERSION=="V2"){
                    //         $print_str .= "STARTCUT==============================ENDCUT";
                    //     }
                    // $print_str .= $this->append_chars("Amount due","right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($order['amount'],2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    //   if(PRINT_VERSION=="V2"){
                    //       $print_str .= "STARTCUT==============================ENDCUT";
                    //    }
                    $pay_total = 0;
                    $gft_ctr = 0;
                    $nor_ctr = 0;
                    $py_ref = "";
                    $total_payment = 0;
                  
                    foreach ($payments as $payment_id => $opt) {
                        $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");     
                        $print_str .= $this->append_chars(ucwords($opt['payment_type']),"right",PAPER_DET_COL_2," ").
                        $this->append_chars(number_format($opt['amount'],2),"left",PAPER_DET_COL_3," ")."\r\n";
                        // $print_str .= $this->append_chars(ucwords($opt['payment_type']),"right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($opt['amount'],2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                        
                        if($opt['payment_type'] == 'check'){
                            $print_str .= $this->append_chars("     Check # ".$opt['reference'],"right",PAPER_WIDTH," ")."\r\n";
                        }else{
                            if (!empty($opt['reference']) && $opt['payment_type'] != 'deposit') {
                                $py_ref = $opt['reference'];
                                // $print_str .= $this->append_chars("     Reference ".$opt['reference'],"right",PAPER_WIDTH," ")."\r\n";
                            }
                        }

                        if($opt['payment_type'] == 'foodpanda'){
                            if (!empty($opt['approval_code']))
                                    $print_str .= $this->append_chars("  Order Code: ".$opt['approval_code'],"right",PAPER_WIDTH," ")."\r\n";
                        }else if($opt['payment_type'] == 'check'){
                            $print_str .= $this->append_chars("     Bank: ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                        }else if($opt['payment_type'] == 'picc'){
                            $print_str .= $this->append_chars("     Name: ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                        }else{
                            if (!empty($opt['card_number'])) {
                                if (!empty($opt['card_type'])) {
                                    $print_str .= $this->append_chars("  Card Type: ".$opt['card_type'],"right",PAPER_WIDTH," ")."\r\n";
                                }
                                $print_str .= $this->append_chars("  Card #: ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                                if (!empty($opt['approval_code']))
                                    $print_str .= $this->append_chars("  Approval #: ".$opt['approval_code'],"right",PAPER_WIDTH," ")."\r\n";
                            }
                        }
                        // $pay_total += $opt['amount'];
                        // if($opt['payment_type'] == 'gc'){
                        //     $gft_ctr++;
                        // }
                        // else
                        //     $nor_ctr++;
                        if($opt['payment_type'] == 'gc'){
                            if($opt['amount'] > $opt['to_pay']){
                                $total_payment  += $opt['to_pay'];
                            }else{
                                $total_payment  += $opt['amount'];
                            }
                        }
                        else{
                            $total_payment  += $opt['amount'];
                        }


                        if($opt['payment_type'] == 'cash' && $is_printed <= 0){
                            $open_drawer = true;
                        }

                        
                    }

                     if(PRINT_VERSION=="V2"){
                            $print_str .= "STARTCUT==============================ENDCUT";
                        }

                     $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ");     
                    // if($gft_ctr == 1 && $nor_ctr == 0)
                    //     $print_str .= $this->append_chars('Change',"right",PAPER_DET_COL_2," ").$this->append_chars(number_format(0,2),"left",PAPER_DET_COL_3," ")."\r\n";
                    // else
                        $print_str .= $this->append_chars('Change',"right",PAPER_DET_COL_2," ").$this->append_chars(number_format(abs($total_payment - $order['amount']),2),"left",PAPER_DET_COL_3," ")."\r\n";
                 
                        if(PRINT_VERSION=="V2"){
                          $print_str .= "STARTCUT==============================ENDCUT";
                       }
                    $print_str .= PAPER_LINE_SINGLE."\r\n";
                     $print_str .= "\r\n".$this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("VATABLE SALES"),"right",PAPER_DET_COL_2," ").$this->append_chars(num($vat_sales),"left",PAPER_DET_COL_3," ")."\r\n";
                    $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("VATEXEMPT"),"right",PAPER_DET_COL_2," ").$this->append_chars(number_format($no_tax_amt-$total_discounts_non_vat,2),"left",PAPER_DET_COL_3," ")."\r\n";
                    $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("Zero Rated VAT"),"right",PAPER_DET_COL_2," ").$this->append_chars(number_format($zero_rated_amt,2),"left",PAPER_DET_COL_3," ")."\r\n";
                    
                       if($tax > 0){
                            foreach ($tax as $tx) {
                               $print_str .=  $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars($tx['name']." Amount","right",PAPER_DET_COL_2," ").$this->append_chars(number_format(abs($tx['amount']),2),"left",PAPER_DET_COL_3," ")."\r\n";
                            }
                        }
                    $print_str .= "\r\n";
                    

                    $total_discount_snr_count = $total_discount_pwd_count = $total_discount_count = 0;
                    if($per_item_disc){
                        foreach ($discounts as $dcs_ci => $dcs) {
                                if($dcs['disc_code'] == 'SNDISC' || $dcs['disc_code'] == 'PWDISC'){
                                    // echo "<pre>",print_r($dcs['persons']),"</pre>";die();
                                    // foreach ($dcs['persons'] as $code => $dcp) {   
                                        if($dcs['disc_code'] == 'SNDISC'){
                                            $total_discount_snr_count += 1;                            
                                        } 
                                        if($dcs['disc_code'] == 'PWDISC'){

                                            $total_discount_pwd_count += 1;                            
                                        } 
                                                                       }
                                // }
                        }
                    }else{
                        foreach ($discounts as $dcs_ci => $dcs) {
                                if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                                    // echo "<pre>",print_r($dcs['persons']),"</pre>";die();
                                    foreach ($dcs['persons'] as $code => $dcp) {   
                                        if($dcs_ci == 'SNDISC'){
                                            $total_discount_snr_count += 1;                            
                                        } 
                                        if($dcs_ci == 'PWDISC'){

                                            $total_discount_pwd_count += 1;                            
                                        } 
                                                                       }
                                }
                        }
                    }

                   
                    $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("Total Guest Count"),"right",PAPER_DET_COL_2," ").$this->append_chars((($order['guest'] >0) ? $order['guest']: 1),"left",PAPER_DET_COL_3," ")."\r\n";
                    
                    if($total_discount_snr_count > 0){

                        $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("Total SC Guest Count"),"right",PAPER_DET_COL_2," ").$this->append_chars($total_discount_snr_count,"left",PAPER_DET_COL_3," ")."\r\n\r\n";
                    }

                    if($total_discount_pwd_count > 0){

                        $print_str .= $this->append_chars(" " ,"right",PAPER_DET_COL_1," ").$this->append_chars(ucwords("Total PWD Guest Count:"),"right",PAPER_DET_COL_2," ").$this->append_chars($total_discount_pwd_count,"left",PAPER_DET_COL_3," ")."\r\n\r\n";
                    }

                    


                    $print_str .= PAPER_LINE_SINGLE."\r\n\r\n";

                    if ($include_footer) {
                        $rec_footer = "";
                        if($branch['rec_footer'] != ""){
                            $wrap = str_replace ("<br>","\r\n", $branch['rec_footer'] );
                            $exp = explode("\r\n", $wrap);
                            foreach ($exp as $v) {
                                $wrap2 = wordwrap($v,35,"|#|");
                                $exp2 = explode("|#|", $wrap2);  
                                foreach ($exp2 as $v2) {
                                    $rec_footer .= $this->align_center($v2,PAPER_WIDTH," ")."\r\n";
                                }
                            }                        
                        }
                        if($order['inactive'] == 0){
                            $print_str .= $rec_footer;
                        }    
                            $print_str .= "\r\n";
                            // $print_str .= $this->align_center("POS Vendor Details",PAPER_WIDTH," ")."\r\n";
                            // $print_str .= PAPER_LINE."\r\n";
                            $print_str .= $this->align_center("PointOne Integrated Tech., Inc.",PAPER_WIDTH," ")."\r\n";
                            $print_str .= $this->align_center("1409 Prestige Tower",PAPER_WIDTH," ")."\r\n";
                            $print_str .= $this->align_center("Ortigas Center, Pasig City",PAPER_WIDTH," ")."\r\n";
                            $print_str .= $this->append_chars('TIN:',"right",PAPER_RD_COL_3," ")
                                       .  $this->append_chars('008543444-000',"left",PAPER_DET_SUBCOL," ")."\r\n";
                            if($branch['accrdn'] != ""){
                                $print_str .= $this->append_chars('Accred. No.',"right",PAPER_RD_COL_3," ")
                                       .  $this->append_chars($branch['accrdn'],"left",PAPER_DET_SUBCOL," ")."\r\n";
                                // $print_str .= $this->align_center('ACCRDN:',PAPER_WIDTH," ")."\r\n".$this->align_center($branch['accrdn'],PAPER_WIDTH," ")."\r\n";
                            }
                            $print_str .= $this->append_chars('Permit No.:',"right",PAPER_RD_COL_3," ")
                                       .  $this->append_chars($branch['permit_no'],"left",PAPER_DET_SUBCOL," ")."\r\n";
                            // $print_str .= $this->append_chars('POS Version:',"right",PAPER_RD_COL_3," ")
                            //            .  $this->append_chars('iPos ver 1.0',"left",PAPER_DET_SUBCOL," ")."\r\n";
                            $print_str .= $this->append_chars('Date Issued:',"right",PAPER_RD_COL_3," ")
                                       .  $this->append_chars('December 22, 2014',"left",PAPER_DET_SUBCOL," ")."\r\n";
                                       // .  $this->append_chars(date2Word($order['datetime']),"right",PAPER_TOTAL_COL_2," ")."\r\n";
                            $print_str .= $this->append_chars('Valid Until:',"right",PAPER_RD_COL_3," ")
                                       .  $this->append_chars(date2Word('December 22, 2025'),"left",PAPER_DET_SUBCOL," ")."\r\n";
                                       // .  $this->append_chars(date2Word( date('Y-m-d',strtotime($order['datetime'].' +5 year')) ),"right",PAPER_TOTAL_COL_2," ")."\r\n";

                        if($branch['contact_no'] != ""){
                            $print_str .= $this->align_center("For feedback, please call us at",PAPER_WIDTH," ")."\r\n"
                                         .$this->align_center($branch['contact_no'],PAPER_WIDTH," ")."\r\n";
                        }
                        if($branch['email'] != ""){
                            $print_str .= $this->align_center("Or Email us at",PAPER_WIDTH," ")."\r\n" 
                                       .$this->align_center($branch['email'],PAPER_WIDTH," ")."\r\n";
                        }
                        if($branch['website'] != ""){
                            $print_str .= $this->align_center("Please visit us at",PAPER_WIDTH," ")."\r\n"
                                         .$this->align_center($branch['website'],PAPER_WIDTH," ")."\r\n";
                        }

                        if($per_item_disc){
                            foreach ($discounts as $dcs_ci => $dcs) {
                                if($dcs['disc_code'] == 'SNDISC'){
                                    // if($dcs_ci == 'SNDISC'){
                                    $print_str .= "\r\n".$this->append_chars("Senior Citizen TIN: ".$dcs['code'],"right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("OSCA ID No.: ".$dcs['name'],"right",PAPER_TOTAL_COL_1," ");
                                    // }
                                    // if($dcs_ci == 'PWDISC'){
                                    //     $print_str .= "\r\n".$this->append_chars("PWD TIN: ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                    //     $print_str .= "\r\n".$this->append_chars("OSCA ID No.: ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                    // }
                                }elseif($dcs['disc_code'] == 'PWDISC'){
                                    $print_str .= "\r\n".$this->append_chars("PWD TIN: ".$dcs['code'],"right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("OSCA ID No.: ".$dcs['name'],"right",PAPER_TOTAL_COL_1," ");

                                }elseif($dcs['disc_code'] == 'D1018'){
                                    $print_str .= "\r\n".$this->append_chars("Name: ".$dcs['name'],"right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("Address: ","right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("VIP ID NO: ".$dcs['code'],"right",PAPER_TOTAL_COL_1," ");
                                    // $print_str .= "\r\n".$this->append_chars("VIP ID NO: ","right",PAPER_TOTAL_COL_1," ");

                                }elseif($dcs['disc_code'] == 'D1006'){
                                    $print_str .= "\r\n".$this->append_chars("Name: ".$dcs['name'],"right",PAPER_TOTAL_COL_1," ");
                                    // $print_str .= "\r\n".$this->append_chars("PWD TIN: ","right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("National Athlete ID No.: ".$dcs['code'],"right",PAPER_TOTAL_COL_1," ");
                                }elseif($dcs['disc_code'] == 'DIPLOMAT'){
                                    $print_str .= "\r\n".$this->append_chars("Name: ".$dcs['name'],"right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("Address: ","right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("TIN: ","right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("Diplomat ID No: ".$dcs['code'],"right",PAPER_TOTAL_COL_1," ");
                                }else{
                                    $print_str .= "\r\n".$this->append_chars("Name: ".$dcs['name'],"right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("ID NO.: ".$dcs['code'],"right",PAPER_TOTAL_COL_1," ");
                                }
                            }
                        }else{
                            foreach ($discounts as $dcs_ci => $dcs) {
                                if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                                    foreach ($dcs['persons'] as $code => $dcp) {
                                        // ."\r\n"
                                        // ."\r\n"
                                        if($dcs_ci == 'SNDISC'){
                                            $print_str .= "\r\n".$this->append_chars("Senior Citizen TIN: ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                            $print_str .= "\r\n".$this->append_chars("OSCA ID No.: ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                        }
                                        if($dcs_ci == 'PWDISC'){
                                            $print_str .= "\r\n".$this->append_chars("PWD TIN: ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                            $print_str .= "\r\n".$this->append_chars("OSCA ID No.: ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                        }

                                       

                                    }
                                }elseif($dcs_ci == 'D1018'){
                                             $print_str .= "\r\n".$this->append_chars("Name: ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                            $print_str .= "\r\n".$this->append_chars("Address: ","right",PAPER_TOTAL_COL_1," ");
                                            $print_str .= "\r\n".$this->append_chars("VIP ID NO: ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                            // $print_str .= "\r\n".$this->append_chars("VIP ID NO: ","right",PAPER_TOTAL_COL_1," ");

                                }elseif($dcs_ci == 'D1006'){
                                            $print_str .= "\r\n".$this->append_chars("Name: ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                            // $print_str .= "\r\n".$this->append_chars("PWD TIN: ","right",PAPER_TOTAL_COL_1," ");
                                            $print_str .= "\r\n".$this->append_chars("National Athlete ID No.: ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                         

                                }elseif($dcs['disc_code'] == 'DIPLOMAT'){
                                    $print_str .= "\r\n".$this->append_chars("Name: ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("Address: ","right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("TIN: ","right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("Diplomat ID No: ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                }else{
                                    $print_str .= "\r\n".$this->append_chars("Name: ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                    // $print_str .= "\r\n".$this->append_chars("PWD TIN: ","right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("ID NO.: ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                }

                            }
                        }


                        // if($zero_rated_amt > 0){
                        //         $print_str .= "\r\n".$this->append_chars("Name: ".$zname,"right",PAPER_TOTAL_COL_1," ");
                        //         $print_str .= "\r\n".$this->append_chars("Address: ","right",PAPER_TOTAL_COL_1," ");
                        //         $print_str .= "\r\n".$this->append_chars("TIN: ","right",PAPER_TOTAL_COL_1," ");
                        //         $print_str .= "\r\n".$this->append_chars("Diplomat ID No: ".$zcard,"right",PAPER_TOTAL_COL_1," ");
                        // }

                        if(isset($py_ref) && !empty($py_ref)){
                            $print_str .= "\r\n".$this->append_chars("Name: ","right",PAPER_TOTAL_COL_1," ");
                            $print_str .= "\r\n".$this->append_chars("Address: ","right",PAPER_TOTAL_COL_1," ");
                            $print_str .= "\r\n".$this->append_chars("TIN: ","right",PAPER_TOTAL_COL_1," ");
                            $print_str .= "\r\n".$this->append_chars("GC Serial No: ".$py_ref,"right",PAPER_TOTAL_COL_1," ");

                        }
                        // $print_str .= PAPER_LINE."\r\n";
                        if($order['inactive'] == 0){
                            $print_str .= "\r\n";
                            // if(PRINT_VERSION == 'V1'){
                            //     $print_str .= $this->append_chars('Name:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                            //            // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                            //     $print_str .= $this->append_chars('Company:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                            //                // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                            //     $print_str .= $this->append_chars('Address:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                            //                // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                            //     $print_str .= $this->append_chars('TIN:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                            //     $print_str .= $this->append_chars('Signature:',"left",PAPER_RECEIPT_TEXT," ")
                            //            .  $this->append_chars('____________________',"left",PAPER_RECEIPT_INPUT,"_")."\r\n";
                            // }else{
                            //     $print_str .= $this->append_chars('Name:',"left",PAPER_RECEIPT_TEXT," ")
                            //                .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                            //     $print_str .= $this->append_chars('Company:',"left",PAPER_RECEIPT_TEXT," ")
                            //                .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                            //     $print_str .= $this->append_chars('Address:',"left",PAPER_RECEIPT_TEXT," ")
                            //                .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                            //     $print_str .= $this->append_chars('TIN:',"left",PAPER_RECEIPT_TEXT," ")
                            //                .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                            //     $print_str .= $this->append_chars('Signature:',"left",PAPER_RECEIPT_TEXT," ")
                            //                .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                            // }


                           
                                       // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n";
                            // $print_str .= "\r\n";
                            // $print_str .= "\r\n";
                            // $print_str .= PAPER_LINE."\r\n";

                            // if($order['inactive'] == 0){
                            //     $print_str .= $rec_footer;
                            // }  
                            // $print_str .= PAPER_LINE."\r\n";
                           
                            // $print_str .= $this->align_center('This Invoice/Receipt',PAPER_WIDTH," ")."\r\n";
                            // $print_str .= $this->align_center('Shall be valid',PAPER_WIDTH," ")."\r\n";
                            // $print_str .= $this->align_center('Five(5) Years from the date of',PAPER_WIDTH," ")."\r\n";
                            // $print_str .= $this->align_center('The Permit to use.',PAPER_WIDTH," ")."\r\n";



                            // if($branch['pos_footer'] != ""){
                            //     // $print_str .= PAPER_LINE."\r\n";
                            //     $print_str .= "\r\n";
                            //     $wrap = str_replace ("<br>","\r\n", $branch['pos_footer'] );
                            //     $exp = explode("\r\n", $wrap);
                            //     foreach ($exp as $v) {
                            //         $wrap2 = wordwrap($v,35,"|#|");
                            //         $exp2 = explode("|#|", $wrap2);  
                            //         foreach ($exp2 as $v2) {
                            //             $print_str .= $this->align_center($v2,PAPER_WIDTH," ")."\r\n";
                            //         }
                            //     }
                            // }
                        }

                    }

                  
                    if (!empty($order['ref']) && $order['inactive'] == 0) {
                        // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                        $print_str .= "\r\n\r\n".$this->append_chars("_________________________________","right",PAPER_TOTAL_COL_1," ");
                        $print_str .= "\r\n".$this->append_chars("Customer Signature Over Printed Name","right",PAPER_TOTAL_COL_1," ");
                        // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                        $print_str .= "\r\n";
                    }
                    $print_str .="\r\n".$this->align_center("THIS INVOICE/RECEIPT WILL BE VALID FOR FIVE(5) YEARS FROM THE DATE OF THE PERMIT TO USE",PAPER_WIDTH," ")."\r\n";
                        // $print_str .= "\r\n".$this->append_chars("THIS INVOICE/RECEIPT WILL BE VALID FOR","right",PAPER_TOTAL_COL_1," ");
                        // $print_str .= "\r\n".$this->append_chars("FIVE(5) YEARS FROM THE DATE OF THE PERMIT","right",PAPER_TOTAL_COL_1," ");
                        //  $print_str .= "\r\n".$this->append_chars("TO USE","right",PAPER_TOTAL_COL_1," ");
                
                } 

                 
                
                #CONDITION TO NA PINADAGDAG NG TAGAYTAY - FOR SENIOR CITEZEN VIEW VAT PLUS DISCOUNT
                // if(count($discounts) >0){
                //     if(count($dcs['persons']) > 0){
                //         $print_str .= $this->append_chars(ucwords("Less VAT (12%)"),"right",28," ").$this->append_chars("(".number_format($pre_total - $no_tax_amt,2).")","left",10," ")."\r\n";
                //     }
                // }
                // else{
                //     if($tax > 0){
                //         foreach ($tax as $tx) {
                //            $print_str .= $this->append_chars($tx['name']."(".$tx['rate']."%)","right",28," ").$this->append_chars(number_format($tx['amount'],2),"left",10," ")."\r\n";
                //         }
                //     }
                // }


                #CONDITION TO NA PARA SA TAGUEGARAO
                // if($tax > 0){
                //     foreach ($tax as $tx) {
                //        $print_str .= $this->append_chars($tx['name']."(".$tx['rate']."%)","right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format(abs($tx['amount']),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                //     }
                // }
                // if(count($local_tax) > 0){
                //     $local_tax_amt = 0;
                //     foreach ($local_tax as $lt_id => $lt) {
                //         $local_tax_amt += $lt['amount'];
                //     }
                //     $print_str .= $this->append_chars(ucwords("LOCAL TAX"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format($local_tax_amt,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                // }
                // if(count($discounts) >0){
                //     $hasSMPWD = false;
                //     if(count($dcs['persons']) > 0){
                //         $print_str .= "\r\n";
                //         // $print_str .= PAPER_LINE."\r\n";
                //         $print_str .= "          Discount Details"."\r\n";
                //         // $print_str .= PAPER_LINE."\r\n";

                //         foreach ($discounts as $dcs_ci => $dcs) {
                //             foreach ($dcs['persons'] as $code => $dcp) {
                //                 $discRateTxt = " (".$dcp['disc_rate']."%)";
                //                 if($dcs['fix'] == 1){
                //                     $discRateTxt = " (".$dcp['disc_rate'].")";
                //                 }
                //                 $dcAmt = $dcp['amount'];
                //                 // if(MALL_ENABLED && MALL == 'megamall'){
                //                 //     if($dcs_ci == PWDDISC){
                //                 //         $dcAmt = $dcAmt / 1.12; 
                //                 //         $hasSMPWD = true;      
                //                 //     }
                //                 // }
                //                 if(KERMIT){
                //                     $print_str .= $this->append_chars($dcs_ci.$discRateTxt,"right",PAPER_TOTAL_COL_1," ").$this->append_chars('P'.num($dcAmt),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                //                     $print_str .= "\r\n".$this->append_chars($dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                //                     $print_str .= "\r\n".$this->append_chars($dcp['code'],"right",PAPER_TOTAL_COL_1," ")."\r\n";
                //                 }else{
                //                      $print_str .= $this->append_chars($dcs_ci.$discRateTxt,"right",PAPER_TOTAL_COL_1," ").$this->append_chars('P'.num($dcAmt),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                //                 }
                //             }
                //         }
                //         // $print_str .= "\r\n";
                //         // echo $pre_total." - ".$order['amount']." - ".$total_charges." - ".$total_discounts; die();
                //         $less_vat = round(($pre_total - ($order['amount'] - $total_charges + $local_tax_amt ) ) - $total_discounts,2);
                //         // $less_vat = ($pre_total - ($order['amount'] - num($total_charges + $local_tax_amt) ) ) - $total_discounts;

                //         // $print_str .= $this->append_chars(ucwords("Total Discount"),"right",28," ").$this->append_chars(number_format($total_discounts,2),"left",10," ")."\r\n";
                //         $print_str .= $this->append_chars(ucwords("Total Less VAT"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format( $less_vat,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                //         if(MALL_ENABLED && MALL == 'megamall' && $hasSMPWD){
                //             $print_str .= $this->append_chars(ucwords("Total Amount Discounted"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format( ($total_discounts_sm + $less_vat),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                //         }
                //         else{
                //             $print_str .= $this->append_chars(ucwords("Total Amount Discounted"),"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format( ($total_discounts + $less_vat),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                //         }
                //     }
                // }

                // if(count($charges) > 0){
                //     $print_str .= "\r\n";
                //     // $print_str .= PAPER_LINE."\r\n";
                //     // $print_str .= "              CHARGES"."\r\n";
                //     // $print_str .= PAPER_LINE."\r\n";
                //     foreach ($charges as $charge_id => $opt) {
                //         $charge_amount = $opt['total_amount'];
                //         // if($opt['absolute'] == 0){
                //         //     $charge_amount = ($opt['amount'] / 100) * ($order['amount'] - $vat);
                //         // }
                //         $print_str .= $this->append_chars($opt['name'],"right",PAPER_TOTAL_COL_1," ").$this->append_chars(number_format($charge_amount,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                //     }
                //     // $print_str .= PAPER_LINE."\r\n";
                // }

                if (!empty($payments)) {

                    // $print_str .= "\r\n";
                    // // $print_str .= "\r\n"."======================================"."\r\n";
                    //   if(PRINT_VERSION=="V2"){
                    //         $print_str .= "STARTCUT==============================ENDCUT";
                    //     }
                    // $print_str .= $this->append_chars("Amount due","right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($order['amount'],2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    //   if(PRINT_VERSION=="V2"){
                    //       $print_str .= "STARTCUT==============================ENDCUT";
                    //    }
                    // $pay_total = 0;
                    // $gft_ctr = 0;
                    // $nor_ctr = 0;
                  
                    // foreach ($payments as $payment_id => $opt) {

                    //     $print_str .= $this->append_chars(ucwords($opt['payment_type']),"right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($opt['amount'],2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                        
                    //     if($opt['payment_type'] == 'check'){
                    //         $print_str .= $this->append_chars("     Check # ".$opt['reference'],"right",PAPER_WIDTH," ")."\r\n";
                    //     }else{
                    //         if (!empty($opt['reference']) && $opt['payment_type'] != 'deposit') {
                    //             $print_str .= $this->append_chars("     Reference ".$opt['reference'],"right",PAPER_WIDTH," ")."\r\n";
                    //         }
                    //     }

                    //     if($opt['payment_type'] == 'foodpanda'){
                    //         if (!empty($opt['approval_code']))
                    //                 $print_str .= $this->append_chars("  Order Code: ".$opt['approval_code'],"right",PAPER_WIDTH," ")."\r\n";
                    //     }else if($opt['payment_type'] == 'check'){
                    //         $print_str .= $this->append_chars("     Bank: ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                    //     }else if($opt['payment_type'] == 'picc'){
                    //         $print_str .= $this->append_chars("     Name: ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                    //     }else{
                    //         if (!empty($opt['card_number'])) {
                    //             if (!empty($opt['card_type'])) {
                    //                 $print_str .= $this->append_chars("  Card Type: ".$opt['card_type'],"right",PAPER_WIDTH," ")."\r\n";
                    //             }
                    //             $print_str .= $this->append_chars("  Card #: ".$opt['card_number'],"right",PAPER_WIDTH," ")."\r\n";
                    //             if (!empty($opt['approval_code']))
                    //                 $print_str .= $this->append_chars("  Approval #: ".$opt['approval_code'],"right",PAPER_WIDTH," ")."\r\n";
                    //         }
                    //     }
                    //     $pay_total += $opt['amount'];
                    //     if($opt['payment_type'] == 'gc'){
                    //         $gft_ctr++;
                    //     }
                    //     else
                    //         $nor_ctr++;


                    //     if($opt['payment_type'] == 'cash' && $is_printed <= 0){
                    //         $open_drawer = true;
                    //     }

                        
                    // }
                    // if($gft_ctr == 1 && $nor_ctr == 0)
                    //     $print_str .= $this->append_chars("Change","right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format(0,2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    // else
                    //     $print_str .= $this->append_chars("Change","right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format(abs($pay_total - $order['amount']),2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    // $print_str .= PAPER_LINE."\r\n";

                    // if ($order['ref'] != null && $order['inactive'] == 1) {
                    //     // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                    //     $print_str .= "\r\n".$this->append_chars("_________________________________","right",PAPER_TOTAL_COL_1," ");
                    //     $print_str .= "\r\n".$this->append_chars("  Customer's Name & Signature","right",PAPER_TOTAL_COL_1," ");
                    //     // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                    //     $print_str .= "\r\n";
                    // }


                    // if ($include_footer) {
                    //     $rec_footer = "";
                    //     if($branch['rec_footer'] != ""){
                    //         $wrap = str_replace ("<br>","\r\n", $branch['rec_footer'] );
                    //         $exp = explode("\r\n", $wrap);
                    //         foreach ($exp as $v) {
                    //             $wrap2 = wordwrap($v,35,"|#|");
                    //             $exp2 = explode("|#|", $wrap2);  
                    //             foreach ($exp2 as $v2) {
                    //                 $rec_footer .= $this->align_center($v2,PAPER_WIDTH," ")."\r\n";
                    //             }
                    //         }                        
                    //     }
                    //     // if($order['inactive'] == 0){
                    //     //     $print_str .= $rec_footer;
                    //     // }    
                    //         $print_str .= "\r\n";
                    //         $print_str .= $this->align_center("POS Vendor Details",PAPER_WIDTH," ")."\r\n";
                    //         // $print_str .= PAPER_LINE."\r\n";
                    //         $print_str .= $this->align_center("PointOne Integrated Tech., Inc.",PAPER_WIDTH," ")."\r\n";
                    //         $print_str .= $this->align_center("1409 Prestige Tower",PAPER_WIDTH," ")."\r\n";
                    //         $print_str .= $this->align_center("Ortigas Center, Pasig City",PAPER_WIDTH," ")."\r\n";
                    //         $print_str .= $this->append_chars('POS Version:',"right",PAPER_RD_COL_3," ")
                    //                    .  $this->append_chars('iPos ver 1.0',"left",PAPER_DET_SUBCOL," ")."\r\n";
                    //         $print_str .= $this->append_chars('TIN:',"right",PAPER_RD_COL_3," ")
                    //                    .  $this->append_chars('008543444-000',"left",PAPER_DET_SUBCOL," ")."\r\n";
                    //         $print_str .= $this->append_chars('Date Issued:',"right",PAPER_RD_COL_3," ")
                    //                    .  $this->append_chars('December 22, 2014',"left",PAPER_DET_SUBCOL," ")."\r\n";
                    //                    // .  $this->append_chars(date2Word($order['datetime']),"right",PAPER_TOTAL_COL_2," ")."\r\n";
                    //         $print_str .= $this->append_chars('Valid Until:',"right",PAPER_RD_COL_3," ")
                    //                    .  $this->append_chars(date2Word('December 22, 2025'),"left",PAPER_DET_SUBCOL," ")."\r\n";
                    //                    // .  $this->append_chars(date2Word( date('Y-m-d',strtotime($order['datetime'].' +5 year')) ),"right",PAPER_TOTAL_COL_2," ")."\r\n";
                    //         if($branch['accrdn'] != ""){
                    //             $print_str .= $this->append_chars('ACCRDN:',"right",PAPER_RD_COL_3," ")
                    //                    .  $this->append_chars($branch['accrdn'],"left",PAPER_DET_SUBCOL," ")."\r\n";
                    //             // $print_str .= $this->align_center('ACCRDN:',PAPER_WIDTH," ")."\r\n".$this->align_center($branch['accrdn'],PAPER_WIDTH," ")."\r\n";
                    //         }

                    //     if($branch['contact_no'] != ""){
                    //         $print_str .= $this->align_center("For feedback, please call us at",PAPER_WIDTH," ")."\r\n"
                    //                      .$this->align_center($branch['contact_no'],PAPER_WIDTH," ")."\r\n";
                    //     }
                    //     if($branch['email'] != ""){
                    //         $print_str .= $this->align_center("Or Email us at",PAPER_WIDTH," ")."\r\n" 
                    //                    .$this->align_center($branch['email'],PAPER_WIDTH," ")."\r\n";
                    //     }
                    //     if($branch['website'] != ""){
                    //         $print_str .= $this->align_center("Please visit us at",PAPER_WIDTH," ")."\r\n"
                    //                      .$this->align_center($branch['website'],PAPER_WIDTH," ")."\r\n";
                    //     }
                    //     $print_str .= PAPER_LINE."\r\n";
                    //     if($order['inactive'] == 0){
                    //         $print_str .= "\r\n";
                    //         if(PRINT_VERSION == 'V1'){
                    //             $print_str .= $this->append_chars('Name:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                    //                    // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                    //             $print_str .= $this->append_chars('Company:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                    //                        // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                    //             $print_str .= $this->append_chars('Address:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                    //                        // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                    //             $print_str .= $this->append_chars('TIN:',"right",PAPER_RECEIPT_TEXT," ")."\r\n";
                    //             $print_str .= $this->append_chars('Signature:',"left",PAPER_RECEIPT_TEXT," ")
                    //                    .  $this->append_chars('____________________',"left",PAPER_RECEIPT_INPUT,"_")."\r\n";
                    //         }else{
                    //             $print_str .= $this->append_chars('Name:',"left",PAPER_RECEIPT_TEXT," ")
                    //                        .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                    //             $print_str .= $this->append_chars('Company:',"left",PAPER_RECEIPT_TEXT," ")
                    //                        .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                    //             $print_str .= $this->append_chars('Address:',"left",PAPER_RECEIPT_TEXT," ")
                    //                        .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                    //             $print_str .= $this->append_chars('TIN:',"left",PAPER_RECEIPT_TEXT," ")
                    //                        .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                    //             $print_str .= $this->append_chars('Signature:',"left",PAPER_RECEIPT_TEXT," ")
                    //                        .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n"."\r\n";
                    //         }


                           
                    //                    // .  $this->append_chars('',"right",PAPER_RECEIPT_INPUT,"_")."\r\n";
                    //         // $print_str .= "\r\n";
                    //         $print_str .= "\r\n";
                    //         $print_str .= PAPER_LINE."\r\n";

                    //         if($order['inactive'] == 0){
                    //             $print_str .= $rec_footer;
                    //         }  
                    //         // $print_str .= PAPER_LINE."\r\n";
                           
                    //         // $print_str .= $this->align_center('This Invoice/Receipt',PAPER_WIDTH," ")."\r\n";
                    //         // $print_str .= $this->align_center('Shall be valid',PAPER_WIDTH," ")."\r\n";
                    //         // $print_str .= $this->align_center('Five(5) Years from the date of',PAPER_WIDTH," ")."\r\n";
                    //         // $print_str .= $this->align_center('The Permit to use.',PAPER_WIDTH," ")."\r\n";



                    //         // if($branch['pos_footer'] != ""){
                    //         //     // $print_str .= PAPER_LINE."\r\n";
                    //         //     $print_str .= "\r\n";
                    //         //     $wrap = str_replace ("<br>","\r\n", $branch['pos_footer'] );
                    //         //     $exp = explode("\r\n", $wrap);
                    //         //     foreach ($exp as $v) {
                    //         //         $wrap2 = wordwrap($v,35,"|#|");
                    //         //         $exp2 = explode("|#|", $wrap2);  
                    //         //         foreach ($exp2 as $v2) {
                    //         //             $print_str .= $this->align_center($v2,PAPER_WIDTH," ")."\r\n";
                    //         //         }
                    //         //     }
                    //         // }
                    //     }

                    // }
                } else {
                    $is_billing = true;
                    $print_str .= "\r\n".$this->append_chars("","right",PAPER_WIDTH,"=");
                    if(PRINT_VERSION == 'V1'){
                        $print_str .= "\r\n\r\n".$this->append_chars("Billing Amount","right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($order['amount'],2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    }
                    if(is_array($splits)){
                        $print_str .= $this->append_chars("Split Amount by ".$splits['by'],"right",PAPER_TOTAL_COL_1," ").$this->append_chars("P ".number_format($splits['total'],2),"left",PAPER_TOTAL_COL_2," ")."\r\n";
                    }

                    if($per_item_disc){
                        //for senior deaitls with signature forbiliing
                        foreach ($discounts as $dcs_ci => $dcs) {
                            if($dcs['disc_code'] == 'SNDISC' || $dcs['disc_code'] == 'PWDISC'){
                                // $print_str .= PAPER_LINE."\r\n";
                                $print_str .= "\r\n";
                                $print_str .= $this->align_center("OSCA/PWD Details",PAPER_WIDTH," ")."\r\n";
                                // $print_str .= PAPER_LINE."\r\n";
                                // $print_str .= $this->align_center(PAPER_LINE,42," ");
                                break;
                            }
                        }
                        foreach ($discounts as $dcs_ci => $dcs) {
                            if($dcs['disc_code'] == 'SNDISC' || $dcs['disc_code'] == 'PWDISC'){
                                // foreach ($dcs['persons'] as $code => $dcp) {
                                    // ."\r\n"
                                    // ."\r\n"
                                    $print_str .= "\r\n".$this->append_chars("ID NO      : ".$dcs['code'],"right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("NAME       : ".$dcs['name'],"right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("ADDRESS    : ","right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("SIGNATURE  : ","right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("             ____________________","right",PAPER_TOTAL_COL_1," ")."\r\n";
                                    // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                                // }
                            }
                        }
                    }else{
                        //for senior deaitls with signature forbiliing
                        foreach ($discounts as $dcs_ci => $dcs) {
                            if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                                // $print_str .= PAPER_LINE."\r\n";
                                $print_str .= "\r\n";
                                $print_str .= $this->align_center("OSCA/PWD Details",PAPER_WIDTH," ")."\r\n";
                                // $print_str .= PAPER_LINE."\r\n";
                                // $print_str .= $this->align_center(PAPER_LINE,42," ");
                                break;
                            }
                        }
                        foreach ($discounts as $dcs_ci => $dcs) {
                            if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                                foreach ($dcs['persons'] as $code => $dcp) {
                                    // ."\r\n"
                                    // ."\r\n"
                                    $print_str .= "\r\n".$this->append_chars("ID NO      : ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("NAME       : ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("ADDRESS    : ","right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("SIGNATURE  : ","right",PAPER_TOTAL_COL_1," ");
                                    $print_str .= "\r\n".$this->append_chars("             ____________________","right",PAPER_TOTAL_COL_1," ")."\r\n";
                                    // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                                }
                            }
                        }
                    }


                    if ($include_footer) {
                        // $print_str .= "\r\n\r\n";
                        if($branch['contact_no'] != ""){
                            $print_str .= $this->align_center("For feedback, please call us at",PAPER_WIDTH," ")."\r\n"
                                         .$this->align_center($branch['contact_no'],PAPER_WIDTH," ")."\r\n";
                        }
                        if($branch['email'] != ""){
                            $print_str .= $this->align_center("Or Email us at",PAPER_WIDTH," ")."\r\n" 
                                       .$this->align_center($branch['email'],PAPER_WIDTH," ")."\r\n";
                        }
                        if($branch['website'] != "")
                            $print_str .= $this->align_center("Please visit us at \r\n".$branch['website'],PAPER_WIDTH," ")."\r\n";
                    }

                }

                if (!empty($payments)) {
                    // $print_str .= "\r\n";
                    // foreach ($discounts as $dcs_ci => $dcs) {
                    //     if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                    //         // $print_str .= PAPER_LINE."\r\n";
                    //         $print_str .= $this->align_center("OSCA/PWD Details",PAPER_WIDTH," ")."\r\n";
                    //         // $print_str .= PAPER_LINE."\r\n";
                    //         // $print_str .= $this->align_center(PAPER_LINE,42," ");
                    //         break;
                    //     }
                    // }
                    // foreach ($discounts as $dcs_ci => $dcs) {
                    //     if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                    //         foreach ($dcs['persons'] as $code => $dcp) {
                    //             // ."\r\n"
                    //             // ."\r\n"
                    //             $print_str .= "\r\n".$this->append_chars("ID NO      : ".$dcp['code'],"right",PAPER_TOTAL_COL_1," ");
                    //             $print_str .= "\r\n".$this->append_chars("NAME       : ".$dcp['name'],"right",PAPER_TOTAL_COL_1," ");
                    //             $print_str .= "\r\n".$this->append_chars("ADDRESS    : ","right",PAPER_TOTAL_COL_1," ");
                    //             $print_str .= "\r\n".$this->append_chars("SIGNATURE  : ","right",PAPER_TOTAL_COL_1," ");
                    //             $print_str .= "\r\n".$this->append_chars("             ____________________","right",PAPER_TOTAL_COL_1," ")."\r\n";
                    //             // $print_str .= "\r\n".$this->append_chars(asterisks($dcp['code']),"right",28," ")."\r\n";
                    //         }
                    //     }
                    // }
                    // foreach ($discounts as $dcs_ci => $dcs) {
                    //     if($dcs_ci == 'SNDISC' || $dcs_ci == 'PWDISC'){
                    //         // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                    //         break;
                    //     }
                    // }

                    // if($zero_rated_amt != 0){
                    //     $print_str .= $this->align_center("Diplomat Details",PAPER_WIDTH," ")."\r\n";
                    //     foreach ($zero_rated as $k=>$v) {
                    //         // $zero_rated_amt += $v['amount'];
                    //         $print_str .= "\r\n".$this->append_chars("ID NO      : ".$v['card_no'],"right",PAPER_TOTAL_COL_1," ");
                    //         $print_str .= "\r\n".$this->append_chars("NAME       : ".$v['name'],"right",PAPER_TOTAL_COL_1," ");
                    //         $print_str .= "\r\n".$this->append_chars("ADDRESS    : ","right",PAPER_TOTAL_COL_1," ");
                    //         $print_str .= "\r\n".$this->append_chars("SIGNATURE  : ","right",PAPER_TOTAL_COL_1," ");
                    //         $print_str .= "\r\n".$this->append_chars("             ____________________","right",PAPER_TOTAL_COL_1," ")."\r\n";   
                    //     }

                    // }

                }

                if($approved_by != null){
                    // $app = $this->site_model->get_user_details($approved_by);
                    // $approver = $app->fname." ".$app->mname." ".$app->lname." ".$app->suffix;
                    // // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                    // $print_str .= "\r\n".$this->append_chars("Approved By : ".$approver,"right",PAPER_TOTAL_COL_1," ");
                    // $print_str .= "\r\n".$this->append_chars("             ____________________","right",PAPER_TOTAL_COL_1," ")."\r\n";
                    // $print_str .= $this->align_center(PAPER_LINE,PAPER_WIDTH," ");
                }

            }
            //end of showing for cancelled trans



            if ($return_print_str) {
                return $print_str;
            }
            // echo "<pre>".$print_str."</pre>";
            // return false;

            if(PRINT_VERSION && PRINT_VERSION == 'V2'){

                if(isset($order['ref'])){
                    $order_ref = $order['ref'];
                }else{
                    $order_ref = "";
                }
                // if(BILLING_PRINTER){
                //     if(BILLING_PRINTER != "DEFAULT"){
                // echo $print_str;die();
                         $this->do_print_receipt_v2($print_str,$order['amount'],$is_billing,$open_drawer,$order_ref,$branch['name']);  
                //     }
                // }

                if($openDrawer){
                    $pet = $this->cashier_model->get_pos_settings();
                    $open_drawer_printer = $pet->open_drawer_printer;
                    // if($open_drawer_printer != ""){
                    //     $this->do_print_receipt_v2($print_str);  
                    //     // $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".$open_drawer_printer."\"  ";   
                    // }            
                }
            }else{
                // $this->do_print_os($print_str,$printer['printer'],$printer['no']);  

                $filename = "sales.txt";
                $fp = fopen($filename, "w+");
                fwrite($fp,$print_str);
                fclose($fp);

                $batfile = "print.bat";
                $fh1 = fopen($batfile,'w+');
                $root = dirname(BASEPATH);
                $battxt ="NOTEPAD /P \"".realpath($root."/".$filename)."\"";

                if(BILLING_PRINTER){
                    if(BILLING_PRINTER != "DEFAULT"){
                        $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".BILLING_PRINTER."\"  ";   
                    }
                }

                if($openDrawer){
                    $pet = $this->cashier_model->get_pos_settings();
                    $open_drawer_printer = $pet->open_drawer_printer;
                    if($open_drawer_printer != ""){
                        $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".$open_drawer_printer."\"  ";   
                    }            
                }

                fwrite($fh1, $battxt);
                fclose($fh1);
                session_write_close();
                // exec($filename);
                for ($i=0; $i < $no_prints; $i++) { 
                    exec($batfile);
                }
                session_start();
                unlink($filename);
                unlink($batfile);
            }

            if($order_slip_prints > 0){
                $this->print_order_slip($header_print_str,$post_details,$order_slip_prints);            
            }


            if ($asJson)
                echo json_encode(array('msg'=>'Receipt # '.(!empty($order['ref']) ? $order['ref'] : $sales_id).' has been printed'));
            else
                return array('msg'=>'Receipt # '.(!empty($order['ref']) ? $order['ref'] : $sales_id).' has been printed');
        }

        public function get_order_temp($asJson=true,$sales_id=null){
            /*
             * -------------------------------------------
             *   Load receipt data
             * -------------------------------------------
            */
            $this->load->model('dine/cashier_model');
            $orders = $this->cashier_model->get_temp_sales($sales_id);
            // echo $sales_id; 
            // echo "<pre>",print_r($orders),"</pre>";die();
            $order = array();
            $details = array();
            $details2 = array();
            foreach ($orders as $res) {
                $order = array(
                    "sales_id"=>$res->sales_id,
                    'ref'=>$res->trans_ref,
                    "type"=>$res->type,
                    "table_id"=>$res->table_id,
                    "table_name"=>$res->table_name,
                    "guest"=>$res->guest,
                    "serve_no"=>$res->serve_no,
                    "user_id"=>$res->user_id,
                    "customer_id"=>$res->customer_id,
                    "customer_name"=>$res->customer_name,
                    "name"=>$res->username,
                    "terminal_id"=>$res->terminal_id,
                    "terminal_name"=>$res->terminal_name,
                    "terminal_code"=>$res->terminal_code,
                    "shift_id"=>$res->shift_id,
                    "datetime"=>$res->datetime,
                    "update_date"=>$res->update_date,
                    "amount"=>$res->total_amount,
                    "balance"=>round($res->total_amount,2) - round($res->total_paid,2),
                    "paid"=>$res->paid,
                    "printed"=>$res->printed,
                    "inactive"=>$res->inactive,
                    "waiter_id"=>$res->waiter_id,
                    "void_ref"=>$res->void_ref,
                    "reason"=>$res->reason,
                    "waiter_name"=>ucwords(strtolower($res->waiterfname." ".$res->waitermname." ".$res->waiterlname." ".$res->waitersuffix)),
                    "waiter_username"=>ucwords(strtolower($res->waiterusername)),
                    // "memo"=>ucwords(strtolower($res->memo))
                    // "pay_type"=>$res->pay_type,
                    // "pay_amount"=>$res->pay_amount,
                    // "pay_ref"=>$res->pay_ref,
                    // "pay_card"=>$res->pay_card,
                );
            }
            $order_menus = $this->cashier_model->get_temp_sales_menus(null,array("temp_sales_menus.sales_id"=>$sales_id));
            // echo "<pre>",print_r($order_menus),"</pre>";die();
            $order_items = $this->cashier_model->get_temp_sales_items(null,array("temp_sales_items.sales_id"=>$sales_id));
            $order_mods = $this->cashier_model->get_temp_sales_menu_modifiers(null,array("temp_sales_menu_modifiers.sales_id"=>$sales_id));
            $sales_discs = $this->cashier_model->get_temp_sales_discounts(null,array("temp_sales_discounts.sales_id"=>$sales_id));
            $sales_tax = $this->cashier_model->get_temp_sales_tax(null,array("temp_sales_tax.sales_id"=>$sales_id));
            $sales_payments = $this->cashier_model->get_temp_sales_payments(null,array("temp_sales_payments.sales_id"=>$sales_id));
            $sales_no_tax = $this->cashier_model->get_temp_sales_no_tax(null,array("temp_sales_no_tax.sales_id"=>$sales_id));
            $sales_zero_rated = $this->cashier_model->get_temp_sales_zero_rated(null,array("temp_sales_zero_rated.sales_id"=>$sales_id));
            $sales_charges = $this->cashier_model->get_temp_sales_charges(null,array("temp_sales_charges.sales_id"=>$sales_id));
            $sales_local_tax = $this->cashier_model->get_temp_sales_local_tax(null,array("temp_sales_local_tax.sales_id"=>$sales_id));
            $pays = array();
            foreach ($sales_payments as $py) {
                $pays[$py->payment_id] = array(
                        "sales_id"      => $py->sales_id,
                        "payment_type"  => $py->payment_type,
                        "amount"        => $py->amount,
                        "to_pay"        => $py->to_pay,
                        "reference"     => $py->reference,
                        "card_type"     => $py->card_type,
                        "card_number"   => $py->card_number,
                        "approval_code"   => $py->approval_code,
                        "user_id"       => $py->user_id,
                        "datetime"      => $py->datetime,
                    );
            }
            foreach ($order_menus as $men) {
                $details[$men->line_id] = array(
                    "id"=>$men->sales_menu_id,
                    "menu_id"=>$men->menu_id,
                    "name"=>$men->menu_name,
                    "code"=>$men->menu_code,
                    "price"=>$men->price,
                    "qty"=>$men->qty,
                    "no_tax"=>$men->no_tax,
                    "discount"=>$men->discount,
                    "remarks"=>$men->remarks,
                    "free_user_id"=>$men->free_user_id,
                    "nocharge"=>$men->nocharge,
                    "is_takeout"=>$men->is_takeout,
                    "kitchen_slip_printed"=>$men->kitchen_slip_printed
                );
                $mods = array();
                foreach ($order_mods as $mod) {
                    if($mod->line_id == $men->line_id){
                        $mods[$mod->sales_mod_id] = array(
                            "id"=>$mod->mod_id,
                            "sales_mod_id"=>$mod->sales_mod_id,
                            "mod_group_id"=>$mod->mod_group_id,
                            "line_id"=>$mod->line_id,
                            "name"=>$mod->mod_name,
                            "price"=>$mod->price,
                            "qty"=>$mod->qty,
                            "discount"=>$mod->discount,
                            "kitchen_slip_printed"=>$mod->kitchen_slip_printed
                        );
                    }
                }
                $details[$men->line_id]['modifiers'] = $mods;
            }

            //for new os print
            foreach ($order_menus as $men) {

                if(isset($details2[$men->menu_id])){
                    // $details2[$men->menu_id]['qty'] += $men->qty;
                    // if($details2[$men->menu_id]['remarks'] != ""){
                    //     $details2[$men->menu_id]['remarks'] .= ', '.$men->remarks;
                    // }else{
                    //     $details2[$men->menu_id]['remarks'] = $men->remarks;   
                    // }
                    $dets = $details2[$men->menu_id]['dets'];
                    $dets[$men->line_id] = array(
                        "qty"=>$men->qty,
                        "remarks"=>$men->remarks,
                        "line_id"=>$men->line_id,
                        "id"=>$men->sales_menu_id,
                        "kitchen_slip_printed"=>$men->kitchen_slip_printed 
                    );
                    $details2[$men->menu_id]['dets'] = $dets;

                }else{
                    $details2[$men->menu_id] = array(
                        "menu_id"=>$men->menu_id,
                        "name"=>$men->menu_name,
                        "code"=>$men->menu_code,
                        "price"=>$men->price
                    );
                    $dets = array();
                    $dets[$men->line_id] = array(
                        "qty"=>$men->qty,
                        "remarks"=>$men->remarks,
                        "line_id"=>$men->line_id,
                        "id"=>$men->sales_menu_id,
                        "kitchen_slip_printed"=>$men->kitchen_slip_printed 
                    );
                    $details2[$men->menu_id]['dets'] = $dets;
                }

                $mods = array();
                foreach ($order_mods as $mod) {
                    if($mod->line_id == $men->line_id){
                        $mods[$mod->sales_mod_id] = array(
                            "id"=>$mod->mod_id,
                            "sales_mod_id"=>$mod->sales_mod_id,
                            "mod_group_id"=>$mod->mod_group_id,
                            "line_id"=>$mod->line_id,
                            "name"=>$mod->mod_name,
                            "price"=>$mod->price,
                            "qty"=>$mod->qty,
                            "discount"=>$mod->discount,
                            "kitchen_slip_printed"=>$mod->kitchen_slip_printed
                        );
                    }
                }
                // $details[$men->line_id]['modifiers'] = $mods;
                $details2[$men->menu_id]['dets'][$men->line_id]['modifiers'] = $mods;
            }


            // echo "<pre>",print_r($details2),"</pre>";die();


            foreach ($order_items as $men){
                $details[$men->line_id] = array(
                    "id"=>$men->sales_item_id,
                    "menu_id"=>$men->item_id,
                    "name"=>$men->name,
                    "code"=>$men->code,
                    "price"=>$men->price,
                    "qty"=>$men->qty,
                    "no_tax"=>$men->no_tax,
                    "discount"=>$men->discount,
                    "remarks"=>$men->remarks,
                    "nocharge"=>$men->nocharge,
                    "is_takeout"=>$men->is_takeout,
                    "retail"=>1
                );
            }
            ### CHANGED #############
            $per_item_disc = false;
            foreach ($sales_discs as $dc) {
                if($dc->items != ""){
                    $per_item_disc = true;
                }
            }
            // var_dump($per_item_disc); die();
            if($per_item_disc){
                $discounts = array();
                $persons = array();
                foreach ($sales_discs as $dc) {
                    $discounts[$dc->items] = array(
                            "no_tax"  => $dc->no_tax,
                            "guest" => $dc->guest,
                            "disc_rate" => $dc->disc_rate,
                            "disc_id" => $dc->disc_id,
                            "disc_code" => $dc->disc_code,
                            "disc_type" => $dc->type,
                            "amount" => $dc->amount,
                            "fix" => $dc->fix,
                            "name" => $dc->name,
                            "code" => $dc->code,
                            "bday" => $dc->bday,
                            "items" => $dc->items,
                            // "persons" => array()
                    );
                }
            }else{
                $discounts = array();
                $persons = array();
                foreach ($sales_discs as $dc) {
                    $discounts[$dc->disc_code] = array(
                            "no_tax"  => $dc->no_tax,
                            "guest" => $dc->guest,
                            "disc_rate" => $dc->disc_rate,
                            "disc_id" => $dc->disc_id,
                            "disc_code" => $dc->disc_code,
                            "disc_type" => $dc->type,
                            "fix" => $dc->fix,
                            "items" => $dc->items,
                            "persons" => array()
                    );
                }
                foreach ($sales_discs as $dc) {
                    $pcode = $dc->code;
                    $bday = "";
                    if($dc->bday != "")
                        $bday = sql2Date($dc->bday);
                    $person = array(
                        "name"  => $dc->name,
                        "code"  => $dc->code,
                        "bday"  => $bday,
                        "amount" => $dc->amount,
                        "disc_rate" => $dc->disc_rate,
                    );
                    if(isset($discounts[$dc->disc_code])){
                        $dscp =  $discounts[$dc->disc_code]['persons'];
                        $dscp[$pcode] = $person;
                        $discounts[$dc->disc_code]['persons'] = $dscp;
                    }
                }
            }
            ### CHANGED #############
            $tax = array();
            foreach ($sales_tax as $tx) {
                $tax[$tx->sales_tax_id] = array(
                        "sales_id"  => $tx->sales_id,
                        "name"  => $tx->name,
                        "rate" => $tx->rate,
                        "amount" => $tx->amount
                    );
            }
            $no_tax = array();
            foreach ($sales_no_tax as $nt) {
                $no_tax[$nt->sales_no_tax_id] = array(
                    "sales_id" => $nt->sales_id,
                    "amount" => $nt->amount,
                );
            }
            $zero_rated = array();
            foreach ($sales_zero_rated as $zt) {
                $zero_rated[$zt->sales_zero_rated_id] = array(
                    "sales_id" => $zt->sales_id,
                    "amount" => $zt->amount,
                    "name" => $zt->name,
                    "card_no" => $zt->card_no
                );
            }
            $local_tax = array();
            foreach ($sales_local_tax as $lt) {
                $local_tax[$lt->sales_local_tax_id] = array(
                    "sales_id" => $lt->sales_id,
                    "amount" => $lt->amount,
                );
            }
            $charges = array();
            foreach ($sales_charges as $ch) {
                $charges[$ch->charge_id] = array(
                        "name"  => $ch->charge_name,
                        "code"  => $ch->charge_code,
                        "amount"  => $ch->rate,
                        "absolute" => $ch->absolute,
                        "total_amount" => $ch->amount,
                        "rate"=>$ch->rate
                    );
            }
            if($asJson)
                echo json_encode(array('order'=>$order,"details"=>$details,"discounts"=>$discounts,"taxes"=>$tax,"no_tax"=>$no_tax,"zero_rated"=>$zero_rated,"payments"=>$pays,"charges"=>$charges,"local_tax"=>$local_tax,"details2"=>$details2));
            else
                return array('order'=>$order,"details"=>$details,"discounts"=>$discounts,"taxes"=>$tax,"no_tax"=>$no_tax,"zero_rated"=>$zero_rated,"payments"=>$pays,"charges"=>$charges,"local_tax"=>$local_tax,"details2"=>$details2);
        }

        public function total_trans_temp($asJson=true,$cart=null,$disc_cart=null,$charge_cart=null,$zero_rated=null){
            $counter = sess('counter');
            $zero_r = 0;
            // if(is_array($zero_rated)){
            //      // && isset($zero_rated['amount']) && $zero_rated['amount'] > 0
            //      foreach ($zero_rated as $zid => $opt) {
            //          if($opt['amount'] > 0){
            //             $counter['zero_rated'] = 1;
            //             break;
            //          }
            //      }            
            // }
            $trans_cart = array();
            if($this->session->userData('trans_cart')){
                $trans_cart = $this->session->userData('trans_cart');
            }
            $trans_mod_cart = array();
            if($this->session->userData('trans_mod_cart')){
                $trans_mod_cart = $this->session->userData('trans_mod_cart');
                // echo var_dump($trans_mod_cart);
                // return false;
            }
            if(is_array($cart)){
                $trans_cart = $cart;
            }

            // echo '<pre>',print_r($trans_cart),'</pre>';

            $total = 0;
            $gross = 0;
            $discount = 0;
            $zero_rated = 0;
            $vat_sales = 0;
            $non_vat_sales = 0;
            $cart_total_qty = 0;
            $total_no_charge = 0;
            $charge_used = array();
            if(count($trans_cart) > 0){
                foreach ($trans_cart as $trans_id => $trans){
                    if(isset($trans['cost']))
                        $cost = $trans['cost'];
                    if(isset($trans['price']))
                        $cost = $trans['price'];

                    if(isset($trans['modifiers'])){
                        foreach ($trans['modifiers'] as $trans_mod_id => $mod) {
                            if($trans_id == $mod['line_id'])
                                $cost += $mod['price'];
                        }
                    }

                    else{
                        if(count($trans_mod_cart) > 0){
                            foreach ($trans_mod_cart as $trans_mod_id => $mod) {
                                if($trans_id == $mod['trans_id'])
                                    $cost += $mod['cost'];
                            }
                        }
                    }
                    if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
                        $rate = 0.12;
                        // $cost = num(($cost / $rate),2);
                        // $cost = ($cost / $rate);
                        $zr = ($cost * $rate);
                        $cost = $cost-$zr;
                        $zero_rated += $trans['qty'] * $cost;
                        $zero_r = 1;
                    }
                    $total += $trans['qty'] * $cost;
                    if(isset($trans['nocharge']) && $trans['nocharge'] != 0){
                        // $total_no_charge += $trans['qty'] * $cost;
                        // echo 'pumasok';
                        $charge_used[$trans['nocharge']] = array('charge_id'=>$trans['nocharge']);
                    }
                    // echo $trans['nocharge'].'BRBR';
                    $cart_total_qty += $trans['qty'];
                }
            }
            // echo $total_zero_lv; die();


            $gross = $total;
            $trans_disc_cart = sess('trans_disc_cart');
            if(is_array($disc_cart)){
                $trans_disc_cart = $disc_cart;
            }
            // echo '<pre>',print_r(sess('item_discount')),'</pre>'; die();
            $discs = array();
            $less_vat = 0;
            $vatss = 0;
            $ps_counter = 0;

            $item_discount_cart = sess('item_discount');
            // if(is_array($disc_cart)){
            //     $item_discount_cart = $disc_cart;
            // }
            $per_item_disc = false;
            if(is_array($disc_cart)){
                foreach ($disc_cart as $key => $value) {
                    if($value['items'] != ""){
                        $per_item_disc = true;
                    }
                }
            }else{
                if($item_discount_cart){
                    $per_item_disc = true;
                }
            }

            if($per_item_disc){

                //for line discount
                if(is_array($disc_cart)){
                    $item_discount_cart = $disc_cart;
                }
                // echo '<pre>',print_r($item_discount_cart),'</pre>';
                if(count($item_discount_cart) > 0){

                    foreach($item_discount_cart as $id => $val){
                        $discount += $val['amount'];

                        $row = $trans_cart[$id];
                        
                        if(isset($row['cost']))
                            $cost = $row['cost'];
                        if(isset($row['price']))
                            $cost = $row['price'];

                        $total_amt = $row['qty'] * $cost;

                        if($val['no_tax'] == 1){
                            $to_disc = $total_amt / 1.12;
                            $less_v = $to_disc * 0.12;
                            // $rate = $val->disc_rate / 100;
                            // $discount = $to_disc * $rate;
                            // $total_disc = $less_v + $discount;
                        }else{
                            $less_v = 0;
                        }

                        $less_vat += $less_v;
                        $vatss += $less_v;

                    }


                }

            }else{

                //for lahatan disocunt
                if(count($trans_disc_cart) > 0 ){
                    $error_disc = 0;
                    foreach ($trans_disc_cart as $disc_id => $row) {
                        if(!isset($row['disc_type'])){
                            $error_disc = 1;
                        }
                        else{
                            if($row['disc_type'] == "")
                                $error_disc = 1;
                        }
                    }
                    if($error_disc == 0){
                        foreach ($trans_disc_cart as $disc_id => $row) {
                            $rate = $row['disc_rate'];
                            $guests = $row['guest'];

                            if($row['disc_type'] == 'equal'){
                                $no_persons = count($row['persons']);
                                $ps_counter += $no_persons;
                            }
                        }
                    }
                }
     
                // echo $ps_counter.'ssss';
     
                if(count($trans_disc_cart) > 0 ){
                    $error_disc = 0;
                    foreach ($trans_disc_cart as $disc_id => $row) {
                        if(!isset($row['disc_type'])){
                            $error_disc = 1;
                        }
                        else{
                            if($row['disc_type'] == "")
                                $error_disc = 1;
                        }
                    }
                    if($error_disc == 0){
                        foreach ($trans_disc_cart as $disc_id => $row) {
                            // echo $total." ==== ";
                            // echo '<pre>',print_r($row['persons']),'</pre>';
                            if(count($row['persons']) > 0){
                                $rate = $row['disc_rate'];
                                $guests = $row['guest'];
                                switch ($row['disc_type']) {
                                    case "equal":
                                            $divi = $total/$row['guest'];
                                            $divi_less = $divi;
                                            $lv = 0;

                                            if($row['disc_code'] == ATHLETE_CODE){
                                                $divi_less = ($divi / 1.12);
                                                $lv = $divi - $divi_less;

                                                $no_persons = count($row['persons']);
                                                foreach ($row['persons'] as $code => $per) {
                                                    $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $divi_less);
                                                    $discount += ($rate / 100) * $divi_less;
                                                    // $less_vat += $lv;
                                                }

                                            }else{
                                                if($row['no_tax'] == 1){
                                                    $divi_less = ($divi / 1.12);
                                                    $lv = $divi - $divi_less;
                                                }
                                                $no_persons = count($row['persons']);
                                                foreach ($row['persons'] as $code => $per) {
                                                    $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $divi_less);
                                                    $discount += ($rate / 100) * $divi_less;
                                                    $less_vat += $lv;
                                                }
                                                $tl = $divi * ( abs($row['guest'] - $no_persons) );
                                                $tdl = ($divi_less * $no_persons) - $discount;
                                                $tl2 = $divi * ( abs($row['guest'] - $ps_counter) );
                                                $vat1 = $tl2 / 1.12;
                                                $vatss = ($vat1 * 0.12);
                                            }


                                            // echo $vatss.'eeeee-';
                                            // $total = $tl + $tdl;
                                            // $total = ($divi * $row['guest']) - $discount;
                                            break;
                                    default:
                                        if($row['fix'] == 0){
                                            if(DISCOUNT_NET_OF_VAT && $row['disc_code'] != DISCOUNT_NET_OF_VAT_EX){
                                                $no_citizens = count($row['persons']);
                                                $total_net_vat = ($total / 1.12);                     
                                                foreach ($row['persons'] as $code => $per) {
                                                    $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $total_net_vat);
                                                    $discount += ($rate / 100) * $total_net_vat;
                                                }
                                                // $total -= $discount;
                                            }
                                            else{

                                                if($row['disc_code'] == ATHLETE_CODE){
                                                    $no_citizens = count($row['persons']);
                                                    // if($row['no_tax'] == 1)
                                                    $total = ($total / 1.12);                     
                                                    
                                                    foreach ($row['persons'] as $code => $per) {
                                                        $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $total);
                                                        $discount += ($rate / 100) * $total;
                                                    }
                                                }else{
                                                    $no_citizens = count($row['persons']);
                                                    if($row['no_tax'] == 1)
                                                        $total = ($total / 1.12);                     
                                                    
                                                    foreach ($row['persons'] as $code => $per) {
                                                        $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $total);
                                                        $discount += ($rate / 100) * $total;
                                                    }
                                                    // $total -= $discount;
                                                }    
                                            }
                                        }
                                        else{
                                            $discs[] = array('type'=>$row['disc_code'],'amount'=>$rate);
                                            $discount += $rate;
                                            // $total -= $discount;
                                        }

                                }
                            }
                            // echo $discount."<br>";
                        }
                    }
                }

            }


            
            // echo $total."<br>";
            // echo $less_vat."<br>";
            // echo $discount."<br>";
            $total -= $discount + $less_vat;
            $total_for_charge = $total - $less_vat;
            // echo $total;    
            $trans_charge_cart = sess('trans_charge_cart');
            if(is_array($charge_cart)){
                $trans_charge_cart = $charge_cart;
            }
            #CHARGES
            $charges = array();
            $total_charges = 0;
            $net_total = $total;

            if(ADD_CHARGES_NET_OF_VAT){
                $amount_cmpt = ($gross / 1.12);              
            }
            else{
                $amount_cmpt = $net_total;                
            }
            #
            #GET VATABLE AMOUNT (FOR SM)
            #
                if(MALL_ENABLED && MALL == 'megamall'){
                    $discountt = 0;
                    $taxable_amount = 0;
                    $not_taxable_amount = 0;
                    $discss = array();
                    $item_count = count($trans_cart);
                    foreach ($trans_cart as $trans_id => $v) {
                        if(isset($v['cost']))
                            $cost = $v['cost'];
                        if(isset($v['price']))
                            $cost = $v['price'];
                        ####################
                        if(isset($v['modifiers'])){
                            foreach ($v['modifiers'] as $trans_mod_id => $m) {
                                if($trans_id == $m['line_id']){
                                    $cost += $m['price'];
                                }
                            }
                        }
                        else{
                            if(count($trans_mod_cart) > 0){
                                foreach ($trans_mod_cart as $trans_mod_id => $m) {
                                    if($trans_id == $m['trans_id']){
                                        $cost += $m['cost'];
                                    }
                                }
                            }
                        }
                        ####################
                        foreach ($trans_disc_cart as $disc_id => $row) {
                            $rate = $row['disc_rate'];
                            switch ($row['disc_type']) {
                                case "equal":
                                        // $divi = $cost/$row['guest'];
                                        // $discount = ($rate / 100) * $divi;
                                        // $cost -= $discount;

                                        $divi = $cost/$row['guest'];
                                        $divi_less = $divi;
                                        if($row['no_tax'] == 1){
                                            $divi_less = ($divi / 1.12);
                                        }
                                        $no_persons = count($row['persons']);
                                        foreach ($row['persons'] as $code => $per) {
                                            $discss[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $divi_less);
                                            $discountt += ($rate / 100) * $divi_less;
                                        }
                                        $tl = $divi * ( abs($row['guest'] - $no_persons) );
                                        $tdl = ($divi_less * $no_persons) - $discountt;
                                        $cost = $tl - $tdl;
                                        // $cost = ($divi * $row['guest']) - $discount;
                                        break;
                                default:
                                    if($row['fix'] == 0){
                                        $no_citizens = count($row['persons']);
                                        if($row['no_tax'] == 1)
                                            $cost = ($cost / 1.12);                     
                                        foreach ($row['persons'] as $code => $per) {
                                            $discss[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $cost);
                                            $discountt += ($rate / 100) * $cost;
                                        }
                                        $cost -= $discountt;
                                    }
                                    else{
                                        $rate = $rate/$item_count;
                                        $discss[] = array('type'=>$row['disc_code'],'amount'=>$rate);
                                        $discountt = $rate; 
                                        $cost -= $discountt;

                                    }
                                    // $discount = ($rate / 100) * $cost;
                                    // $cost -= $discount;
                            }
                        }

                        if($v['no_tax'] == 0){
                            $taxable_amount += $cost * $v['qty'];
                        }
                        else{
                            $not_taxable_amount += $cost * $v['qty'];
                        }
                    }
                    if($not_taxable_amount > 0){
                        $has_no_tax_disc = false;
                        foreach ($trans_disc_cart as $disc_id => $row) {
                            if($row['no_tax'] == 1){
                                $has_no_tax_disc = true;
                                break;
                            }    
                        }    
                        if($has_no_tax_disc){
                            $amount_cmpt = $net_total;                       
                        }
                        else{
                            $amount_cmpt = ($taxable_amount/1.12) + $not_taxable_amount;
                        }
                    }
                    else{
                        if($taxable_amount > 0){
                            $amount_cmpt = ($taxable_amount/1.12);
                        }
                        else{
                            $amount_cmpt = $net_total;                                    
                        }
                    }
                }
            #
            # END GET VATABLE AMOUNT (FOR SM)
            # 
            // echo $total_no_charge;

            // if(count($charge_used) > 0 ){
            //     foreach ($charge_used as $charge_id => $opt) {
            //         $char_res = $this->site_model->get_tbl('charges',array('charge_id'=>$charge_id),array(),null,true);
            //         $char_no_tax = $char_res[0]->no_tax;
            //         $charge_amount = $char_res[0]->amount;
            //         $is_absolute = $char_res[0]->absolute;

            //         if($is_absolute == 0){

            //         }
            //     }
            // }
            // echo '<pre>',print_r($trans_cart),'</pre>'; die();
            $is_absolute = 0;
            // if(count($trans_cart) > 0){
            //     foreach ($trans_cart as $trans_id => $trans){
            //         if(isset($trans['cost']))
            //             $cost = $trans['cost'];
            //         if(isset($trans['price']))
            //             $cost = $trans['price'];

            //         if(isset($trans['modifiers'])){
            //             foreach ($trans['modifiers'] as $trans_mod_id => $mod) {
            //                 if($trans_id == $mod['line_id'])
            //                     $cost += $mod['price'];
            //             }
            //         }

            //         else{
            //             if(count($trans_mod_cart) > 0){
            //                 foreach ($trans_mod_cart as $trans_mod_id => $mod) {
            //                     if($trans_id == $mod['trans_id'])
            //                         $cost += $mod['cost'];
            //                 }
            //             }
            //         }
            //         if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
            //             // $rate = 0.12;
            //             $rate = 1.12;
            //             // $cost = num(($cost / $rate),2);
            //             $cost = ($cost / $rate);
            //             // $zr = ($cost * $rate);
            //             // $cost = $cost-$zr;
            //             $zero_rated += $trans['qty'] * $cost;
            //             $zero_r = 1;
            //         }
            //         $total_per_menu = $trans['qty'] * $cost;
            //         if(isset($trans['nocharge']) && $trans['nocharge'] != 0){
            //             // echo 'sssaaaa';
            //             $char_res = $this->site_model->get_tbl('charges',array('charge_id'=>$trans['nocharge']),array(),null,true);
            //             $char_no_tax = $char_res[0]->no_tax;
            //             $charge_amount = $char_res[0]->charge_amount;
            //             $is_absolute = $char_res[0]->absolute;

            //             if($is_absolute == 0){

            //                 if($char_no_tax == 1){
            //                                 // echo 'dddd';
            //                     //taxable
            //                     $to_check = array();
            //                     if($per_item_disc){
            //                         $to_check = $item_discount_cart;
            //                     }else{
            //                         $to_check = $trans_disc_cart;
            //                     }


            //                     if(count($to_check) > 0 ){
            //                         $error_disc = 0;
            //                         foreach ($trans_disc_cart as $disc_id => $row) {
            //                             if(!isset($row['disc_type'])){
            //                                 $error_disc = 1;
            //                             }
            //                             else{
            //                                 if($row['disc_type'] == "")
            //                                     $error_disc = 1;
            //                             }
            //                         }

            //                         if($error_disc == 0){
            //                             $has_no_tax_disc = false;
            //                             $disc_per_menu = 0;
            //                             $lv_per_menu = 0;
            //                             $vatss_per_menu = 0;
            //                             if($per_item_disc){
            //                                 if(count($item_discount_cart) > 0){

            //                                     foreach($item_discount_cart as $id => $val){
            //                                         // echo $val['amount'];
            //                                         if($trans_id == $id){
            //                                             $disc_per_menu = $val['amount'];
            //                                             // $row = $trans_cart[$id];
                                                        
            //                                             // if(isset($row['cost']))
            //                                             //     $cost = $row['cost'];
            //                                             // if(isset($row['price']))
            //                                             //     $cost = $row['price'];

            //                                             // $total_amt = $row['qty'] * $cost;

            //                                             if($val['no_tax'] == 1){
            //                                                 $to_disc = $total_per_menu / 1.12;
            //                                                 $less_v = $to_disc * 0.12;
            //                                                 $has_no_tax_disc = true;
            //                                                 // $rate = $val->disc_rate / 100;
            //                                                 // $discount = $to_disc * $rate;
            //                                                 // $total_disc = $less_v + $discount;
            //                                             }else{
            //                                                 $less_v = 0;
            //                                             }

            //                                             $lv_per_menu = $less_v;
            //                                         }

            //                                     }

            //                                 }

            //                             }else{
            //                                 foreach ($trans_disc_cart as $disc_id => $row) {
            //                                     if($row['no_tax'] == 1){
            //                                         $has_no_tax_disc = true;
            //                                         // break;
            //                                     }


            //                                     if(count($row['persons']) > 0){
            //                                         $rate = $row['disc_rate'];
            //                                         $guests = $row['guest'];
            //                                         switch ($row['disc_type']) {
            //                                             case "equal":
            //                                                     $divi = $total_per_menu/$row['guest'];
            //                                                     $divi_less = $divi;
            //                                                     $lv = 0;
            //                                                     if($row['no_tax'] == 1){
            //                                                         $divi_less = ($divi / 1.12);
            //                                                         $lv = $divi - $divi_less;
            //                                                     }
            //                                                     $no_persons = count($row['persons']);
            //                                                     foreach ($row['persons'] as $code => $per) {
            //                                                         $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $divi_less);
            //                                                         $disc_per_menu += ($rate / 100) * $divi_less;
            //                                                         $lv_per_menu += $lv;
            //                                                     }
            //                                                     $tl = $divi * ( abs($row['guest'] - $no_persons) );
            //                                                     $tdl = ($divi_less * $no_persons) - $disc_per_menu;
            //                                                     $tl2 = $divi * ( abs($row['guest'] - $ps_counter) );
            //                                                     $vat1 = $tl2 / 1.12;
            //                                                     $vatss_per_menu = ($vat1 * 0.12);

            //                                                     // echo $vatss.'eeeee-';
            //                                                     // $total = $tl + $tdl;
            //                                                     // $total = ($divi * $row['guest']) - $discount;
            //                                                     break;
            //                                             default:
            //                                                 if($row['fix'] == 0){
            //                                                     if(DISCOUNT_NET_OF_VAT && $row['disc_code'] != DISCOUNT_NET_OF_VAT_EX){
            //                                                         $no_citizens = count($row['persons']);
            //                                                         $total_net_vat = ($total_per_menu / 1.12);                     
            //                                                         foreach ($row['persons'] as $code => $per) {
            //                                                             $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $total_net_vat);
            //                                                             $disc_per_menu += ($rate / 100) * $total_net_vat;
            //                                                         }
            //                                                         // $total -= $discount;
            //                                                     }
            //                                                     else{
            //                                                         $no_citizens = count($row['persons']);
            //                                                         if($row['no_tax'] == 1)
            //                                                             $total_per_menu = ($total_per_menu / 1.12);                     
                                                                    
            //                                                         foreach ($row['persons'] as $code => $per) {
            //                                                             $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $total_per_menu);
            //                                                             $disc_per_menu += ($rate / 100) * $total_per_menu;
            //                                                         }
            //                                                         // $total -= $discount;
            //                                                     }
            //                                                 }
            //                                                 else{
            //                                                     $discs[] = array('type'=>$row['disc_code'],'amount'=>$rate);
            //                                                     $disc_per_menu += $rate;
            //                                                     // $total -= $discount;
            //                                                 }

            //                                         }
            //                                     }    


            //                                 }
            //                             }
            //                             // var_dump($has_no_tax_disc);
            //                             $total_per_menu -= $disc_per_menu + $lv_per_menu;
            //                             if($has_no_tax_disc){
            //                                 $charge_amount = ($charge_amount / 100) * ($total_per_menu - $vatss_per_menu);         
            //                                 // echo $charge_amount." -- ".$lv_per_menu.'AAAAA';
            //                             }
            //                             else{
            //                                 $charge_amount = ($charge_amount / 100) * (($total_per_menu)/1.12);
            //                                 // echo 'ssss';
            //                             }
                                        
            //                         }else{
            //                             $charge_amount = ($charge_amount / 100) * (($total_per_menu)/1.12);
            //                         }

            //                     }else{
            //                         if($zero_r == 1){
            //                             // echo $total." - ".$total_no_charge." - ".$total_zero_lv; die();
            //                             $charge_amount = ($charge_amount / 100) * ($total_per_menu);
            //                         }else{
            //                             // $charge_amount = ($opt['amount'] / 100) * ($total/1.12);
            //                             $charge_amount = ($charge_amount / 100) * (($total_per_menu)/1.12);
            //                         }
            //                     }

            //                 }else{

            //                     if(count($trans_disc_cart) > 0 ){
            //                         $error_disc = 0;
            //                         foreach ($trans_disc_cart as $disc_id => $row) {
            //                             if(!isset($row['disc_type'])){
            //                                 $error_disc = 1;
            //                             }
            //                             else{
            //                                 if($row['disc_type'] == "")
            //                                     $error_disc = 1;
            //                             }
            //                         }

            //                         if($error_disc == 0){
            //                             $has_no_tax_disc = false;
            //                             foreach ($trans_disc_cart as $disc_id => $row) {
            //                                 if($row['no_tax'] == 1){
            //                                     $has_no_tax_disc = true;
            //                                     break;
            //                                 }    
            //                             }
            //                             // var_dump($has_no_tax_disc);
            //                             if($has_no_tax_disc){
            //                                 // echo $total." -- ".$vatss.'AAAAA';
            //                                 $charge_amount = ($charge_amount / 100) * ($total_per_menu);         
            //                             }
            //                             else{
            //                                 //discount na di senior or pwd
            //                                 $charge_amount = ($charge_amount / 100) * ($total_per_menu);
            //                             }
                                        
            //                         }else{
            //                             $charge_amount = ($charge_amount / 100) * (($total_per_menu));
            //                         }

            //                     }else{
            //                         if($zero_r == 1){
            //                             $charge_amount = ($charge_amount / 100) * ($total_per_menu);
            //                         }else{
            //                             // $charge_amount = ($opt['amount'] / 100) * ($total/1.12);
            //                             $charge_amount = ($charge_amount / 100) * ($total_per_menu);
            //                         }
            //                     }

            //                 }


            //             }

            //             if(isset($charges[$trans['nocharge']])){
            //                 $row = $charges[$trans['nocharge']];
            //                 $row['amount'] += $charge_amount;
            //                 $charges[$trans['nocharge']] = $row;
            //             }else{
            //                 $charges[$trans['nocharge']] = array(
            //                     'code'=>$char_res[0]->charge_code,
            //                     'name'=>$char_res[0]->charge_name,
            //                     'amount'=>$charge_amount,
            //                     'rate'=>$char_res[0]->charge_amount,
            //                     'absolute'=>$char_res[0]->absolute,
            //                 );
            //             }

            //             if($is_absolute == 1){
            //                 $charges[$trans['nocharge']] = array(
            //                     'code'=>$char_res[0]->charge_code,
            //                     'name'=>$char_res[0]->charge_name,
            //                     'amount'=>$charge_amount,
            //                     'rate'=>$char_res[0]->charge_amount,
            //                     'absolute'=>$char_res[0]->absolute,
            //                 );
            //             }
            //             $total_charges += $charge_amount;
            //         }
            //     }
            //     $total += $total_charges;

            //     // $total_charges += $charge_amount;
            // }
            // echo '<pre>',print_r($trans_disc_cart),'</pre>';
            // die('jed');
            // echo $total; die();

            $withtakeout = 0;
            $total_for_takeout = 0;
            $total_for_dinein = 0;
            $ps_counter = 0;
            foreach ($trans_cart as $trans_id => $v) {
                if($v['is_takeout'] == 1){
                    $withtakeout = 1;
                    if(isset($v['cost']))
                        $cost = $v['cost'];
                    if(isset($v['price']))
                        $cost = $v['price'];
                    $total_per = $v['qty'] * $cost;
                    $total_for_takeout += $total_per;
                }else{
                    if(isset($v['cost']))
                        $cost = $v['cost'];
                    if(isset($v['price']))
                        $cost = $v['price'];
                    $total_per = $v['qty'] * $cost;
                    $total_for_dinein += $total_per;
                }

            }
            
            //to get the discount and less vat of for dinein

            // echo $withtakeout.'aaaaa';
            if($withtakeout == 0){
                if(count($trans_charge_cart) > 0 ){
                    // echo $am."<br>";
                    foreach ($trans_charge_cart as $charge_id => $opt) {
                        $char_res = $this->site_model->get_tbl('charges',array('charge_id'=>$charge_id),array(),null,true);
                        $char_no_tax = $char_res[0]->no_tax;
                        $charge_amount = $opt['amount'];
                        if($opt['absolute'] == 0){

                            if($char_no_tax == 1){

                                // $charge_amount = ($opt['amount'] / 100) * $am;
                                // echo '<pre>',print_r($trans_disc_cart),'</pre>';
                                //Modified by Jed 11/28/2017
                                //wrong charges pag may discounts
                                if($per_item_disc){
                                    $charge_total = 0;
                                    foreach ($trans_cart as $trans_id => $v) {
                                        if(isset($v['cost']))
                                            $cost = $v['cost'];
                                        if(isset($v['price']))
                                            $cost = $v['price'];
                                        $total_per = $v['qty'] * $cost;

                                        if(isset($item_discount_cart[$trans_id])){
                                            
                                            if($item_discount_cart[$trans_id]['disc_code'] == 'DIPLOMAT'){

                                                // if($item_discount_cart[$trans_id]['no_tax'] == 1){
                                                    $to_disc = $total_per / 1.12;
                                                    $lessv = $to_disc * 0.12;
                                                    // $rate = $val->disc_rate / 100;
                                                    // $discount = $to_disc * $rate;
                                                    // $total_disc = $less_v + $discount;
                                                // }else{
                                                //     $less_v = 0;
                                                // }

                                                    // echo $total.' --- '.$lessv;
                                                $charge_total += ($opt['amount'] / 100) * ($total_per - $lessv);
                                            }else{
                                                $no_tx =  $item_discount_cart[$trans_id]['no_tax'];
                                                if($no_tx == 1){
                                                    $to_disc = $total_per / 1.12;
                                                    $lessv = $to_disc * 0.12;
                                                    $charge_total += ($opt['amount'] / 100) * ($total_per - $total_no_charge - $lessv);
                                                    // die('ss');
                                                }else{
                                                    $charge_total += ($opt['amount'] / 100) * (($total_per - $item_discount_cart[$trans_id]['amount'])/1.12);
                                                }
                                            }

                                        }else{
                                            $charge_total += ($opt['amount'] / 100) * (($total_per - $total_no_charge)/1.12);
                                        }
                                    }

                                    $charge_amount = $charge_total;

                                }else{

                                    // $charge_amount = ($opt['amount'] / 100) * $am;
                                    // echo '<pre>',print_r($trans_disc_cart),'</pre>';
                                    //Modified by Jed 11/28/2017
                                    //wrong charges pag may discounts
                                    if(count($trans_disc_cart) > 0 ){
                                        $error_disc = 0;
                                        foreach ($trans_disc_cart as $disc_id => $row) {
                                            if(!isset($row['disc_type'])){
                                                $error_disc = 1;
                                            }
                                            else{
                                                if($row['disc_type'] == "")
                                                    $error_disc = 1;
                                            }
                                        }

                                        if($error_disc == 0){
                                            $has_no_tax_disc = false;
                                            foreach ($trans_disc_cart as $disc_id => $row) {
                                                if($row['no_tax'] == 1){
                                                    $has_no_tax_disc = true;
                                                    break;
                                                }    
                                            }
                                            // var_dump($has_no_tax_disc);
                                            if($has_no_tax_disc){
                                                // echo $total." -- ".$vatss.'AAAAA';
                                                $charge_amount = ($opt['amount'] / 100) * ($total - $total_no_charge - $vatss);         
                                            }
                                            else{
                                                $charge_amount = ($opt['amount'] / 100) * (($total - $total_no_charge)/1.12);
                                            }
                                            
                                        }else{
                                            $charge_amount = ($opt['amount'] / 100) * (($total - $total_no_charge)/1.12);
                                        }

                                    }else{
                                        if($zero_r == 1){
                                            // echo $total." - ".$total_no_charge." - ".$total_zero_lv; die();
                                            $charge_amount = ($opt['amount'] / 100) * ($total - $total_no_charge);
                                        }else{
                                            // $charge_amount = ($opt['amount'] / 100) * ($total/1.12);
                                            $charge_amount = ($opt['amount'] / 100) * (($total - $total_no_charge)/1.12);
                                        }
                                    }
                                }

                            }else{


                                // if(count($trans_disc_cart) > 0 ){
                                //     $error_disc = 0;
                                //     foreach ($trans_disc_cart as $disc_id => $row) {
                                //         if(!isset($row['disc_type'])){
                                //             $error_disc = 1;
                                //         }
                                //         else{
                                //             if($row['disc_type'] == "")
                                //                 $error_disc = 1;
                                //         }
                                //     }

                                //     if($error_disc == 0){
                                //         $has_no_tax_disc = false;
                                //         foreach ($trans_disc_cart as $disc_id => $row) {
                                //             if($row['no_tax'] == 1){
                                //                 $has_no_tax_disc = true;
                                //                 break;
                                //             }    
                                //         }
                                //         // var_dump($has_no_tax_disc);
                                //         if($has_no_tax_disc){
                                //             // echo $total." -- ".$vatss.'AAAAA';
                                //             $charge_amount = ($opt['amount'] / 100) * ($total - $total_no_charge + $discount);         
                                //         }
                                //         else{
                                //             //discount na di senior or pwd
                                //             $charge_amount = ($opt['amount'] / 100) * ($total - $total_no_charge + $discount);
                                //         }
                                        
                                //     }else{
                                //         $charge_amount = ($opt['amount'] / 100) * (($total - $total_no_charge) + $discount);
                                //     }

                                // }else{
                                //     if($zero_r == 1){
                                //         $charge_amount = ($opt['amount'] / 100) * ($total - $total_no_charge);
                                //     }else{
                                //         // $charge_amount = ($opt['amount'] / 100) * ($total/1.12);
                                //         $charge_amount = ($opt['amount'] / 100) * (($total - $total_no_charge));
                                //     }
                                // }

                                if($total != 0){
                                    $charge_amount = ($opt['amount'] / 100) * $gross;

                                }else{
                                     $charge_amount = 0;
                                }


                            }


                        }
                        $charges[$charge_id] = array('code'=>$opt['code'],
                                           'name'=>$opt['name'],
                                           'amount'=>$charge_amount,
                                           );
                        $total_charges += $charge_amount;
                    }
                    $total += $total_charges;
                }

            }else{

                $dinein_disc = 0;
                $dinein_lessv = 0;
                $dinein_vatss = 0;

                if($per_item_disc){

                    //to get the discount and less vat of for dinein
                    //for line discount
                    if(is_array($disc_cart)){
                        $item_discount_cart = $disc_cart;
                    }
                    // echo '<pre>',print_r($item_discount_cart),'</pre>';
                    if(count($item_discount_cart) > 0){

                        foreach($item_discount_cart as $id => $val){

                            $row = $trans_cart[$id];
                            if($row['is_takeout'] == 0){
                                $dinein_disc += $val['amount'];
                                
                                if(isset($row['cost']))
                                    $cost = $row['cost'];
                                if(isset($row['price']))
                                    $cost = $row['price'];

                                $total_amt = $row['qty'] * $cost;

                                if($val['disc_code'] == ATHLETE_CODE){
                                    $to_disc = $total_amt / 1.12;
                                    $less_v = 0;
                                }else{
                                    if($val['no_tax'] == 1){
                                        $to_disc = $total_amt / 1.12;
                                        $less_v = $to_disc * 0.12;
                                        // $rate = $val->disc_rate / 100;
                                        // $discount = $to_disc * $rate;
                                        // $total_disc = $less_v + $discount;
                                    }else{
                                        $less_v = 0;
                                    }
                                }

                                $dinein_lessv += $less_v;
                                $dinein_vatss += $less_v;

                            }


                        }


                    }

                }else{

                    //for lahatan disocunt
                    if(count($trans_disc_cart) > 0 ){
                        $error_disc = 0;
                        foreach ($trans_disc_cart as $disc_id => $row) {
                            if(!isset($row['disc_type'])){
                                $error_disc = 1;
                            }
                            else{
                                if($row['disc_type'] == "")
                                    $error_disc = 1;
                            }
                        }
                        if($error_disc == 0){
                            foreach ($trans_disc_cart as $disc_id => $row) {
                                $rate = $row['disc_rate'];
                                $guests = $row['guest'];

                                if($row['disc_type'] == 'equal'){
                                    $no_persons = count($row['persons']);
                                    $ps_counter += $no_persons;
                                }
                            }
                        }
                    }
         
                    // echo $ps_counter.'ssss';
         
                    if(count($trans_disc_cart) > 0 ){
                        $error_disc = 0;
                        foreach ($trans_disc_cart as $disc_id => $row) {
                            if(!isset($row['disc_type'])){
                                $error_disc = 1;
                            }
                            else{
                                if($row['disc_type'] == "")
                                    $error_disc = 1;
                            }
                        }
                        if($error_disc == 0){
                            foreach ($trans_disc_cart as $disc_id => $row) {
                                // echo $total." ==== ";
                                // echo '<pre>',print_r($row['persons']),'</pre>';
                                if(count($row['persons']) > 0){
                                    $rate = $row['disc_rate'];
                                    $guests = $row['guest'];
                                    switch ($row['disc_type']) {
                                        case "equal":
                                                $divi = $total_for_dinein/$row['guest'];
                                                $divi_less = $divi;
                                                $lv = 0;

                                                if($row['disc_code'] == ATHLETE_CODE){
                                                    $divi_less = ($divi / 1.12);
                                                    $lv = $divi - $divi_less;

                                                    $no_persons = count($row['persons']);
                                                    foreach ($row['persons'] as $code => $per) {
                                                        $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $divi_less);
                                                        $dinein_disc += ($rate / 100) * $divi_less;
                                                        // $less_vat += $lv;
                                                    }

                                                }else{
                                                    if($row['no_tax'] == 1){
                                                        $divi_less = ($divi / 1.12);
                                                        $lv = $divi - $divi_less;
                                                    }
                                                    $no_persons = count($row['persons']);
                                                    foreach ($row['persons'] as $code => $per) {
                                                        $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $divi_less);
                                                        $dinein_disc += ($rate / 100) * $divi_less;
                                                        // $less_vat += $lv;
                                                        $dinein_lessv += $lv;
                                                    }
                                                    $tl = $divi * ( abs($row['guest'] - $no_persons) );
                                                    $tdl = ($divi_less * $no_persons) - $dinein_disc;
                                                    $tl2 = $divi * ( abs($row['guest'] - $ps_counter) );
                                                    $vat1 = $tl2 / 1.12;
                                                    $dinein_vatss = ($vat1 * 0.12);
                                                }


                                                // echo $vatss.'eeeee-';
                                                // $total = $tl + $tdl;
                                                // $total = ($divi * $row['guest']) - $discount;
                                                break;
                                        default:
                                            if($row['fix'] == 0){
                                                if(DISCOUNT_NET_OF_VAT && $row['disc_code'] != DISCOUNT_NET_OF_VAT_EX){
                                                    $no_citizens = count($row['persons']);
                                                    $total_net_vat = ($total_for_dinein / 1.12);                     
                                                    foreach ($row['persons'] as $code => $per) {
                                                        $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $total_net_vat);
                                                        $dinein_disc += ($rate / 100) * $total_net_vat;
                                                    }
                                                    // $total -= $discount;
                                                }
                                                else{

                                                    if($row['disc_code'] == ATHLETE_CODE){
                                                        $no_citizens = count($row['persons']);
                                                        // if($row['no_tax'] == 1)
                                                        $total_for_dinein = ($total_for_dinein / 1.12);                     
                                                        
                                                        foreach ($row['persons'] as $code => $per) {
                                                            $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $total_for_dinein);
                                                            $dinein_disc += ($rate / 100) * $total_for_dinein;
                                                        }
                                                    }else{
                                                        $no_citizens = count($row['persons']);
                                                        if($row['no_tax'] == 1)
                                                            $total_for_dinein = ($total_for_dinein / 1.12);                     
                                                        
                                                        foreach ($row['persons'] as $code => $per) {
                                                            $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $total_for_dinein);
                                                            $dinein_disc += ($rate / 100) * $total_for_dinein;
                                                        }
                                                        // $total -= $discount;
                                                    }    
                                                }
                                            }
                                            else{
                                                $discs[] = array('type'=>$row['disc_code'],'amount'=>$rate);
                                                $dinein_disc += $rate;
                                                // $total -= $discount;
                                            }

                                    }
                                }
                                // echo $discount."<br>";
                            }
                        }
                    }

                }

                $total_for_dinein -= $dinein_disc + $dinein_lessv;


                        //compute for charges
                // if(count($trans_charge_cart) > 0 ){
                    // echo $am."<br>";
                    // foreach ($trans_charge_cart as $charge_id => $opt) {
                $char_res = $this->site_model->get_tbl('charges',array('charge_id'=>1),array(),null,true);
                $char_no_tax = $char_res[0]->no_tax;
                $char_abs = $char_res[0]->absolute;
                $charge_amount = $char_res[0]->charge_amount;

                if($char_abs == 0){

                    if($char_no_tax == 1){

                        // $charge_amount = ($opt['amount'] / 100) * $am;
                        // echo '<pre>',print_r($trans_disc_cart),'</pre>';
                        //Modified by Jed 11/28/2017
                        //wrong charges pag may discounts
                        if($per_item_disc){
                            $charge_total = 0;
                            foreach ($trans_cart as $trans_id => $v) {
                                if($v['is_takeout'] == 0){

                                    if(isset($v['cost']))
                                        $cost = $v['cost'];
                                    if(isset($v['price']))
                                        $cost = $v['price'];
                                    $total_per = $v['qty'] * $cost;

                                    if(isset($item_discount_cart[$trans_id])){
                                        
                                        if($item_discount_cart[$trans_id]['disc_code'] == 'DIPLOMAT'){

                                            // if($item_discount_cart[$trans_id]['no_tax'] == 1){
                                                $to_disc = $total_per / 1.12;
                                                $lessv = $to_disc * 0.12;
                                                // $rate = $val->disc_rate / 100;
                                                // $discount = $to_disc * $rate;
                                                // $total_disc = $less_v + $discount;
                                            // }else{
                                            //     $less_v = 0;
                                            // }

                                                // echo $total.' --- '.$lessv;
                                            $charge_total += ($charge_amount / 100) * ($total_per - $lessv);
                                        }else{
                                            $no_tx =  $item_discount_cart[$trans_id]['no_tax'];
                                            if($no_tx == 1){
                                                $to_disc = $total_per / 1.12;
                                                $lessv = $to_disc * 0.12;
                                                $charge_total += ($charge_amount / 100) * ($total_per - $total_no_charge - $lessv);
                                                // die('ss');
                                            }else{
                                                $charge_total += ($charge_amount / 100) * (($total_per - $item_discount_cart[$trans_id]['amount'])/1.12);
                                            }
                                        }

                                    }else{
                                        $charge_total += ($charge_amount / 100) * (($total_per - $total_no_charge)/1.12);
                                    }
                                }
                            }

                            $charge_amount = $charge_total;

                        }else{



                            // $charge_amount = ($opt['amount'] / 100) * $am;
                            // echo '<pre>',print_r($trans_disc_cart),'</pre>';
                            //Modified by Jed 11/28/2017
                            //wrong charges pag may discounts
                            if(count($trans_disc_cart) > 0 ){
                                $error_disc = 0;
                                foreach ($trans_disc_cart as $disc_id => $row) {
                                    if(!isset($row['disc_type'])){
                                        $error_disc = 1;
                                    }
                                    else{
                                        if($row['disc_type'] == "")
                                            $error_disc = 1;
                                    }
                                }

                                if($error_disc == 0){
                                    $has_no_tax_disc = false;
                                    foreach ($trans_disc_cart as $disc_id => $row) {
                                        if($row['no_tax'] == 1){
                                            $has_no_tax_disc = true;
                                            break;
                                        }    
                                    }
                                    // var_dump($has_no_tax_disc);
                                    if($has_no_tax_disc){
                                        // echo $total_for_dinein." -- ".$vatss.'AAAAA'; 
                                        $charge_amount = ($charge_amount / 100) * ($total_for_dinein - $total_no_charge - $dinein_vatss);         
                                    }
                                    else{
                                        $charge_amount = ($charge_amount / 100) * (($total_for_dinein - $total_no_charge)/1.12);
                                    }
                                    
                                }else{
                                    $charge_amount = ($charge_amount / 100) * (($total_for_dinein - $total_no_charge)/1.12);
                                }

                            }else{
                                if($zero_r == 1){
                                    // echo $total." - ".$total_no_charge." - ".$total_zero_lv; die();
                                    $charge_amount = ($charge_amount / 100) * ($total_for_dinein - $total_no_charge);
                                }else{
                                    // $charge_amount = ($opt['amount'] / 100) * ($total/1.12);
                                    $charge_amount = ($charge_amount / 100) * (($total_for_dinein - $total_no_charge)/1.12);
                                }
                            }
                        }

                    }else{


                        $charge_amount = ($charge_amount / 100) * $total_for_dinein;

                    }


                }
                $charges[1] = array('code'=>$char_res[0]->charge_code,
                                   'name'=>$char_res[0]->charge_name,
                                   'amount'=>$charge_amount,
                                   );

                $total_charges += $charge_amount;


                //for takeout
                $char_res = $this->site_model->get_tbl('charges',array('charge_id'=>3),array(),null,true);
                $char_no_tax = $char_res[0]->no_tax;
                $char_abs = $char_res[0]->absolute;
                $charge_amount = $char_res[0]->charge_amount;

                if($char_abs == 0){

                    if($char_no_tax == 1){

                        // $charge_amount = ($opt['amount'] / 100) * $am;
                        // echo '<pre>',print_r($trans_disc_cart),'</pre>';
                        //Modified by Jed 11/28/2017
                        //wrong charges pag may discounts
                        if($per_item_disc){
                            $charge_total = 0;
                            foreach ($trans_cart as $trans_id => $v) {
                                if($v['is_takeout'] == 1){

                                    if(isset($v['cost']))
                                        $cost = $v['cost'];
                                    if(isset($v['price']))
                                        $cost = $v['price'];
                                    $total_per = $v['qty'] * $cost;

                                    if(isset($item_discount_cart[$trans_id])){
                                        
                                        if($item_discount_cart[$trans_id]['disc_code'] == 'DIPLOMAT'){

                                            // if($item_discount_cart[$trans_id]['no_tax'] == 1){
                                                $to_disc = $total_per / 1.12;
                                                $lessv = $to_disc * 0.12;
                                                // $rate = $val->disc_rate / 100;
                                                // $discount = $to_disc * $rate;
                                                // $total_disc = $less_v + $discount;
                                            // }else{
                                            //     $less_v = 0;
                                            // }

                                                // echo $total.' --- '.$lessv;
                                            $charge_total += ($opt['amount'] / 100) * ($total_per - $lessv);
                                        }else{
                                            $no_tx =  $item_discount_cart[$trans_id]['no_tax'];
                                            if($no_tx == 1){
                                                $to_disc = $total_per / 1.12;
                                                $lessv = $to_disc * 0.12;
                                                $charge_total += ($charge_amount / 100) * ($total_per - $total_no_charge - $lessv);
                                                // die('ss');
                                            }else{
                                                $charge_total += ($charge_amount / 100) * (($total_per - $item_discount_cart[$trans_id]['amount'])/1.12);
                                            }
                                        }

                                    }else{
                                        $charge_total += ($charge_amount / 100) * (($total_per - $total_no_charge)/1.12);
                                    }
                                }
                            }

                            $charge_amount = $charge_total;

                        }else{

                            // $charge_amount = ($opt['amount'] / 100) * $am;
                            // echo '<pre>',print_r($trans_disc_cart),'</pre>';
                            //Modified by Jed 11/28/2017
                            //wrong charges pag may discounts
                            if(count($trans_disc_cart) > 0 ){
                                $error_disc = 0;
                                foreach ($trans_disc_cart as $disc_id => $row) {
                                    if(!isset($row['disc_type'])){
                                        $error_disc = 1;
                                    }
                                    else{
                                        if($row['disc_type'] == "")
                                            $error_disc = 1;
                                    }
                                }

                                if($error_disc == 0){
                                    $has_no_tax_disc = false;
                                    foreach ($trans_disc_cart as $disc_id => $row) {
                                        if($row['no_tax'] == 1){
                                            $has_no_tax_disc = true;
                                            break;
                                        }    
                                    }
                                    // var_dump($has_no_tax_disc);
                                    if($has_no_tax_disc){
                                        // echo $total." -- ".$vatss.'AAAAA';
                                        $charge_amount = ($charge_amount / 100) * ($total_for_takeout - $total_no_charge - $vatss);         
                                    }
                                    else{
                                        $charge_amount = ($charge_amount / 100) * (($total_for_takeout - $total_no_charge)/1.12);
                                    }
                                    
                                }else{
                                    $charge_amount = ($charge_amount / 100) * (($total_for_takeout - $total_no_charge)/1.12);
                                }

                            }else{
                                if($zero_r == 1){
                                    // echo $total." - ".$total_no_charge." - ".$total_zero_lv; die();
                                    $charge_amount = ($charge_amount / 100) * ($total_for_takeout - $total_no_charge);
                                }else{
                                    // $charge_amount = ($opt['amount'] / 100) * ($total/1.12);
                                    $charge_amount = ($charge_amount / 100) * (($total_for_takeout - $total_no_charge)/1.12);
                                }
                            }
                        }

                    }else{


                        $charge_amount = ($charge_amount / 100) * $total_for_takeout;

                    }


                }
                $charges[3] = array('code'=>$char_res[0]->charge_code,
                                   'name'=>$char_res[0]->charge_name,
                                   'amount'=>$charge_amount,
                                   );

                $total_charges += $charge_amount;


                    // }
                $total += $total_charges;
                // }
            }

            // echo 'aaaaaa<pre>',print_r($charges),'</pre>sssss<br><br>';

            $loc_res = $this->site_model->get_tbl('settings',array(),array(),null,true,'local_tax',null,1);
            $local_tax = $loc_res[0]->local_tax;
            $lt_amt = 0;
            if($local_tax > 0){
                // $lt_amt = ($local_tax / 100) * $net_total;
                $lt_amt = ($local_tax / 100) * $amount_cmpt;
                $total += $lt_amt;
            }
            if($asJson)
                echo json_encode(array('total'=>$total,'discount'=>$discount,'discs'=>$discs,'charge'=>$total_charges,'charges'=>$charges,'zero_rated'=>$zero_rated,'local_tax'=>$lt_amt,'cart_total_qty'=>$cart_total_qty,'gross'=>$gross));
            else
                return array('total'=>$total,'discount'=>$discount,'discs'=>$discs,'charge'=>$total_charges,'charges'=>$charges,'zero_rated'=>$zero_rated,'local_tax'=>$lt_amt,'cart_total_qty'=>$cart_total_qty,'gross'=>$gross);
        }


        //for discount per item
        public function discount_item($trans_id=null){

            $trans_disc_cart = sess('trans_disc_cart');
            $disc_id = $this->input->post('disc_id');
            $disc_code = $this->input->post('disc_code');
            $disc_remarks = $this->input->post('disc_remarks');

            //get details of disc
            $where = array('disc_id'=>$disc_id);
            $det_d = $this->site_model->get_details($where,'receipt_discounts');

            $wagon = array();
            $error = null;
            $name  = 'trans_cart';
            $wagon = $this->session->userData($name);
            $row = $wagon[$trans_id];
            // $char = $this->input->post('operator');
            // $val = $this->input->post('value');
            
            $total_amt = $row['qty'] * $row['cost'];

            if($disc_code == ATHLETE_CODE){
                $to_disc = $total_amt / 1.12;
                $less_v = 0;
                $rate = $det_d[0]->disc_rate / 100;
                $discount = $to_disc * $rate;
                $total_disc = $less_v + $discount;
            }else{
                if($det_d[0]->fix == 1){
                    $discount = $det_d[0]->disc_rate;
                    $total_disc = $discount;
                }else{
                    if($det_d[0]->no_tax == 1){
                        $to_disc = $total_amt / 1.12;
                        $less_v = $to_disc * 0.12;
                        $rate = $det_d[0]->disc_rate / 100;
                        $discount = $to_disc * $rate;
                        $total_disc = $less_v + $discount;
                    }else{
                        $rate = $det_d[0]->disc_rate / 100;
                        $discount = $total_amt * $rate;
                        $total_disc = $discount;
                    }
                }
            }


            // echo $total_disc; die();
            $disc = array();
            if($this->session->userData('item_discount')){
                $disc = $this->session->userData('item_discount');
            }

            $selected = $this->session->userData('selected_person');
            // echo "<pre>",print_r($selected),"</pre>";die();

            $disc[$trans_id] = array(
                                    'discount'=>$discount,
                                    // 'less_vat'=>$less_v,
                                    'disc_id'=>$disc_id,
                                    'type'=>'equal',
                                    'disc_code'=>$disc_code,
                                    'remarks'=>$disc_remarks,
                                    'disc_rate'=>$det_d[0]->disc_rate,
                                    'items'=>$trans_id,
                                    'amount'=>$discount,
                                    'no_tax'=>$det_d[0]->no_tax,
                                    'name'=>$selected['sname'],
                                    'bday'=>null,
                                    'code'=>$selected['code'],
                                    'total_dsc'=>$total_disc,
                                    'guest'=>1,
            );
            
            // echo "<pre>",print_r($disc),"</pre>";die();
            $new_amt = $total_amt - $total_disc;
            // switch($char){
            //     case "times":
            //         $row['qty'] *= $val;
            //         break;
            //     case "equal":
            //         $row['qty'] = $val;
            //         break;
            //     case "plus";
            //         $row['qty'] += $val;
            //         break;
            //     case "minus";
            //         $row['qty'] -= $val;
            //         if($row['qty'] <= 0)
            //             $row['qty'] = 1;
            //         break;
            // }
            // $wagon[$trans_id] = $row;
            $this->session->set_userData('item_discount',$disc);
            echo json_encode(array("error"=>null,"discounted_amt"=>round($new_amt,2)));
        } 

        public function delete_item_discount($trans_id=null){
            $wagon = array();
            $error = null;
            $name  = 'item_discount';
            $id = null;
            $row = null;
            $wagon = $this->session->userData($name);
            foreach ($wagon as $key => $det) {
                if($key == $trans_id){
                    unset($wagon[$key]);
                }
            }

            // echo "<pre>",print_r($wagon),"</pre>";die();

            $this->session->set_userData($name,$wagon);
            // echo json_encode(array("items"=>$row,"id"=>$id));
        }  


        public function select_discount_person(){
            $code = $this->input->post('code');
            $sname = $this->input->post('sname');
            $remarks = $this->input->post('remarks');
            // $bday = $this->input->post('bday');

            $selected = array(
                'code'=>$code,
                'sname'=>$sname,
                'remarks'=>$remarks,
                // 'bday'=>$bday,
            );

            $this->session->set_userData('selected_person',$selected);
        }

        public function check_discount(){
            $button = $this->input->post('button');
            // $bday = $this->input->post('bday');
            $error = "";
            if($button == 'alldisc'){
                $item_discount = sess('item_discount');
                // echo "<pre>",print_r($item_discount),"</pre>";
                if(count($item_discount)>0){
                    $error = "Cannot add discount. Line discount already added.";
                }
            }else{
                $trans_disc_cart = sess('trans_disc_cart');
                // echo "<pre>",print_r($trans_disc_cart),"</pre>";
                if(count($trans_disc_cart)>0){
                    $error = "Cannot add discount. Total discount already added.";
                }
            }
            echo json_encode(array("error"=>$error));
        }

    public function tables_other($type='takeout'){
        $this->load->model('site/site_model');
        $this->load->model('dine/cashier_model');
        $this->load->helper('dine/cashier_helper');
        $this->load->helper('core/on_screen_key_helper');
        $data = $this->syter->spawn(null);
        sess_clear('trans_type_cart');
        $data['code'] = tablesOtherPage($type);

        $data['add_css'] = array('css/cashier.css','css/onscrkeys.css','css/rtag.css');
        $data['add_js'] = array('js/on_screen_keys.js');
        $data['load_js'] = 'dine/cashier.php';
        $data['use_js'] = 'tablesOtherJs';
        $data['noNavbar'] = true;
        $this->load->view('cashier',$data);
    }

    public function get_tables_other($asJson=true,$tbl_id=null,$type='dinein'){
        $this->load->model('dine/cashier_model');
        $tbl = array();
        $occ = array();
        $comb = array();

        if($tbl_id == 'null'){
            $tbl_id = null;
        }
        $set_date = date("Y-m-d");
        // echo $type; die();
        $occ_tbls = $this->cashier_model->get_occupied_rtables_other($tbl_id,$type,$set_date);
        // echo "<pre>",print_r($tbl),"</pre>";die();
        $billed = array();
        foreach ($occ_tbls as $det) {
          $occ[] = $det->table_id;
        }
        foreach ($occ_tbls as $det) {
          if($det->billed == 1)
            $billed[] = $det->table_id;
        }

        $occ_com = $this->cashier_model->get_combined_tables(null);
        foreach ($occ_com as $detc) {
          $comb[] = $detc->combined_tbl_id;
        }

        // echo 'ssss'; die();
        $tables = $this->cashier_model->get_tables_other($tbl_id,$type);
        // echo $this->cashier_model->db->last_query(); die();
        // echo "<pre>",print_r($tables),"</pre>";die();
        foreach ($tables as $res) {
            $status = 'green';
            if(in_array($res->tbl_id, $occ)){
                if(in_array($res->tbl_id, $billed)){
                    $status = 'orange';
                }
                else
                    $status = 'red';
            }
            if(in_array($res->tbl_id, $comb)){
                $status = 'red';
            }
            $tbl[$res->tbl_id] = array(
                "name"=> $res->name,
                "top"=> $res->top,
                "left"=> $res->left,
                "stat"=> $status
            );
        }


        if($asJson)
            echo json_encode($tbl);
        else
            return $tbl;
    }
    public function get_tbl_status_other($asJson=true){
        $tbls = $this->get_tables_other(false);
        if($asJson)
            echo json_encode($tbls);
        else
            return $tbl;
    }
    function get_table_orders_other($asJson=true,$tbl_id=null){
        $this->load->model('dine/cashier_model');
        $this->load->model('site/site_model');
        $user = $this->session->userdata('user');
        $role_id = $user['role_id'];

        $args = array();
        $args["trans_sales.trans_ref  IS NULL"] = array('use'=>'where','val'=>null,'third'=>false);
        $args["trans_sales.inactive"] = 0;
        $args["trans_sales.table_id"] = $tbl_id;
        $orders = $this->cashier_model->get_trans_sales(null,$args);
        $time = $this->site_model->get_db_now();
        $this->make->sDivRow();
        $ord=array();
        foreach ($orders as $res) {
            $status = "open";
            if($res->trans_ref != "")
                $status = "settled";
            $ord[$res->sales_id] = array(
                "type"=>$res->type,
                "status"=>$status,
                "user_id"=>$res->user_id,
                "name"=>$res->username,
                "terminal_id"=>$res->terminal_id,
                "terminal_name"=>$res->terminal_name,
                "shift_id"=>$res->shift_id,
                "datetime"=>$res->datetime,
                "amount"=>$res->total_amount
            );
            $this->make->sDivCol(4,'left',0);
                    $this->make->sDiv(array('class'=>'order-btn','id'=>'order-btn-'.$res->sales_id,'ref'=>$res->sales_id));
                        if($res->trans_ref == null){
                            $this->make->sBox('default',array('class'=>'box-solid'));
                        }else{
                            $this->make->sBox('default',array('class'=>'box-solid bg-green'));
                        }
                            $this->make->sBoxBody();
                                $this->make->sDivRow();
                                    $this->make->sDivCol(6);
                                        $this->make->sDiv(array('style'=>'margin-left:20px;'));
                                            $this->make->H(5,strtoupper($res->type)." #".$res->sales_id,array("style"=>'font-weight:700;'));
                                            if($res->trans_ref == null){
                                                $this->make->H(5,strtoupper($res->username),array("style"=>'color:#888'));
                                                $this->make->H(5,strtoupper($res->terminal_name),array("style"=>'color:#888'));
                                            }else{
                                                $this->make->H(5,strtoupper($res->username),array("style"=>'color:#fff'));
                                                $this->make->H(5,strtoupper($res->terminal_name),array("style"=>'color:#fff'));
                                            }
                                            $this->make->H(5,tagWord(strtoupper(ago($res->datetime,$time) ) ) );
                                        $this->make->eDiv();
                                    $this->make->eDivCol();
                                    $this->make->sDivCol(6);
                                        $this->make->H(4,'Order Total',array('class'=>'text-center'));
                                        $this->make->H(3,num($res->total_amount),array('class'=>'text-center'));
                                    $this->make->eDivCol();
                                $this->make->eDivRow();
                                $this->make->sDivRow();
                                    if(ORDER_SLIP_PRINTER_SETUP){
                                        if(LOCAVORE || KERMIT){
                                            $this->make->sDivCol(6);
                                                $this->make->button(fa('fa-print fa-lg fa-fw').' RePrint Order Slip',array('id'=>'btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-teal disabled'));
                                            $this->make->eDivCol();
                                        }else{
                                            $this->make->sDivCol(6);
                                                $this->make->button(fa('fa-print fa-lg fa-fw').' RePrint Order Slip',array('id'=>'print-os-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-teal'));
                                            $this->make->eDivCol();
                                        }
                                        // if(ORDERING_STATION){
                                        //     if(LOCAVORE){
                                        //         $this->make->sDivCol(4);
                                        //             $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange disabled'));
                                        //         $this->make->eDivCol();
                                        //     }else{
                                        //         $this->make->sDivCol(4);
                                        //             $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange','locavore'=>'no'));
                                        //         $this->make->eDivCol();
                                        //     }
                                        // }else{
                                        //     if($role_id == SERVER_ID){
                                        //         if(LOCAVORE){
                                        //             $this->make->sDivCol(4);
                                        //                 $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange disabled'));
                                        //             $this->make->eDivCol();
                                        //         }else{
                                        //             $this->make->sDivCol(4);
                                        //                 $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange','locavore'=>'no'));
                                        //             $this->make->eDivCol();
                                        //         }
                                        //     }else{
                                        //         if(LOCAVORE){
                                        //             $this->make->sDivCol(4);
                                        //                 $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange','locavore'=>'yes'));
                                        //             $this->make->eDivCol();
                                        //         }else{
                                        //             $this->make->sDivCol(4);
                                        //                 $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange','locavore'=>'no'));
                                        //             $this->make->eDivCol();
                                        //         }
                                        //     }
                                        // }
                                        $this->make->sDivCol(6);
                                            $this->make->button(fa('fa-print fa-lg fa-fw').' Print Billing',array('id'=>'print-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-green'));
                                        $this->make->eDivCol();
                                    }
                                    else{
                                        // if(ORDERING_STATION){
                                        //     if(LOCAVORE){
                                        //         $this->make->sDivCol(6);
                                        //             $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange disabled'));
                                        //         $this->make->eDivCol();
                                        //     }else{
                                        //         $this->make->sDivCol(6);
                                        //             $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange','locavore'=>'no'));
                                        //         $this->make->eDivCol();
                                        //     }
                                        // }else{
                                        //     if($role_id == SERVER_ID){
                                        //         if(LOCAVORE){
                                        //             $this->make->sDivCol(6);
                                        //                 $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange disabled'));
                                        //             $this->make->eDivCol();
                                        //         }else{
                                        //             $this->make->sDivCol(6);
                                        //                 $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange','locavore'=>'no'));
                                        //             $this->make->eDivCol();
                                        //         }
                                        //     }else{
                                        //         if(LOCAVORE){
                                        //             $this->make->sDivCol(6);
                                        //                 $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange','locavore'=>'yes'));
                                        //             $this->make->eDivCol();
                                        //         }else{
                                        //             $this->make->sDivCol(6);
                                        //                 $this->make->button(fa('fa-exchange fa-lg fa-fw').' Transfer Table',array('id'=>'transfer-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-orange','locavore'=>'no'));
                                        //             $this->make->eDivCol();
                                        //         }
                                        //     }
                                        // }
                                        $this->make->sDivCol(12);
                                            $this->make->button(fa('fa-print fa-lg fa-fw').' Print Billing',array('id'=>'print-btn-'.$res->sales_id,'ref'=>$res->sales_id,'class'=>'transfer-btns btn-block tables-btn-green'));
                                        $this->make->eDivCol();
                                    }
                                $this->make->eDivRow();
                            $this->make->eBoxBody();
                        $this->make->eBox();
                    $this->make->eDiv();
            $this->make->eDivCol();
        }
        $this->make->eDivRow();
        $code = $this->make->code();
        echo json_encode(array('code'=>$code,'ids'=>$ord));
    }
    public function check_tables(){
        $this->load->model('dine/cashier_model');
        
        $type = $this->input->post('type');

        $tables = $this->cashier_model->get_tables_other(null,$type);
        $status = false;
        if($tables){
            $status = true;
        }

        echo json_encode(array('status'=>$status));
        
    }

    public function inventory_check_menu(){
        $this->load->model('dine/menu_model');
        $this->load->model('dine/cashier_model');
        $this->load->model('site/site_model');
        $this->load->helper('dine/cashier_helper');
        // if(SHOW_NEW_SUBCATEGORY){
        //     $menus = $this->menu_model->get_menus_new(null,null,true);
        // }else{
        // $menus = $this->menu_model->get_menus(null,null,true);
        // // }
        // $now = $this->site_model->get_db_now();
        // $day = strtolower(date('D',strtotime($now)));
        // $time = strtolower(date('H:i:s',strtotime($now)));
        // $json = array();
        // if(count($menus) > 0){
        //     $ids = array();
        //     $mnschds = array();
        //     foreach ($menus as $res) {
        //         $check_reorder = 0;
        //         if(CHECK_REORDER){
        //             $check_reorder = 1;
        //         }

        //         $menu_oh = 0;
        //         if($check_reorder == 1){
        //             //get total qty sales
        //             $joinm = array();
        //             $tablem = "trans_sales_menus";
        //             $selectm = "sum(trans_sales_menus.qty) as total_qty";
        //             // $selectm_s = "sum(qty) as menu_sales_qty";
        //             $joinm["trans_sales"] = array('content'=>"trans_sales.sales_id = trans_sales_menus.sales_id");

        //             $ordermm = null;
        //             $groupmm = null;
        //             // $to = date('Y-m-d');
        //             $args4['trans_sales.type_id'] = 10;
        //             $args4['trans_sales.inactive'] = '0';
        //             // $args4['trans_sales.trans_ref is not null'] = null;
        //             // $args4["DATE(trans_sales.datetime) = '".$to."'"] = array('use'=>'where','val'=>null,'third'=>false);
        //             $args4['trans_sales_menus.menu_id'] = $res->menu_id;
        //             // $this->site_model->db = $this->load->database('main', TRUE);
        //             $get_menus_sales = $this->site_model->get_tbl($tablem,$args4,$ordermm,$joinm,true,$selectm,$groupmm); 
        //             $qty_sales = 0;
        //             if($get_menus_sales){
        //                 $qty_sales = $get_menus_sales[0]->total_qty;
        //             }

        //             // echo $qty_sales;
        //             // for menu move total qty
        //             $argst = array();
        //             $join = array();
        //             $table  = "menu_moves";
        //             $select = "sum(menu_moves.qty) as total_qty_moves";
        //             $argst['menu_moves.item_id'] = $res->menu_id;

        //             $argst['menu_moves.inactive'] = 0;
        //             $order = null;
        //             $group = null;
                    
        //             $this->site_model->db = $this->load->database('default', TRUE);
        //             $items = $this->site_model->get_tbl($table,$argst,$order,$join,true,$select,$group);
        //             $qty_moves = 0;
        //             if($items){
        //                 $qty_moves = $items[0]->total_qty_moves;
        //             }

        //             $menu_oh = $qty_moves - $qty_sales;
        //         }

        //         //get settings if allow negative inv
        //         $set = $this->cashier_model->get_pos_settings();

        //         // $this->site_model->db = $this->load->database('default', TRUE);

        //         $json[$res->menu_id] = array(
        //             "id"=>$res->menu_id,
        //             "name"=>$res->menu_name,
        //             "category"=>$res->menu_cat_id,
        //             "cost"=>$res->cost,
        //             "no_tax"=>$res->no_tax,
        //             "free"=>$res->free,
        //             "sched"=>$res->menu_sched_id,
        //             "menu_oh"=>$menu_oh,
        //             "neg_inv"=>$set->neg_inv,
        //             "reorder_qty"=>$res->reorder_qty,
        //             "check_reorder"=>$check_reorder,
        //         );

        //         // echo "<pre>",print_r($json),"</pre>";

        //         $ids[] = $res->menu_id;
        //         if($res->menu_sched_id != 0 || $res->menu_sched_id != "")
        //             $mnschds[] = $res->menu_sched_id;
        //     }
        //     #########################
        //     ### SCHEDULE
        //     #########################
                                 
        //     #########################
        //     ### PROMO
        //     #########################
                
        // }
        // usort($json, function($a, $b) {
        //     return strcmp($a["name"], $b["name"]);
        // });

        // echo "<pre>",print_r($json),"</pre>";
        // echo json_encode($json);
        $data['code'] = makeViewInvCheck();
        $data['add_css'] = array('css/cashier.css','css/onscrkeys.css','css/virtual_keyboard.css');
        $data['add_js'] = array('js/on_screen_keys.js','js/jquery.keyboard.extension-navigation.min.js','js/jquery.keyboard.min.js');
        $data['load_js'] = 'dine/cashier.php';
        $data['use_js'] = 'invCheckJS';
        $this->load->view('load',$data);
    }

    public function get_menus_check_inv(){
        $this->load->model('dine/menu_model');
        $this->load->model('dine/cashier_model');
        $this->load->model('site/site_model');
        $this->load->helper('dine/cashier_helper');

        $search = $this->input->post('search');
        // if(SHOW_NEW_SUBCATEGORY){
        //     $menus = $this->menu_model->get_menus_new(null,null,true);
        // }else{
        $menus = $this->menu_model->get_menus(null,null,true,$search);
        // }
        $now = $this->site_model->get_db_now();
        $day = strtolower(date('D',strtotime($now)));
        $time = strtolower(date('H:i:s',strtotime($now)));
        $json = array();
        if(count($menus) > 0){
            $ids = array();
            $mnschds = array();
            foreach ($menus as $res) {
                $check_reorder = 0;
                if(CHECK_REORDER){
                    $check_reorder = 1;
                }

                $menu_oh = 0;
                if($check_reorder == 1){
                    //get total qty sales
                    $joinm = array();
                    $tablem = "trans_sales_menus";
                    $selectm = "sum(trans_sales_menus.qty) as total_qty";
                    // $selectm_s = "sum(qty) as menu_sales_qty";
                    $joinm["trans_sales"] = array('content'=>"trans_sales.sales_id = trans_sales_menus.sales_id");

                    $ordermm = null;
                    $groupmm = null;
                    $to = date('Y-m-d');
                    $args4['trans_sales.type_id'] = 10;
                    $args4['trans_sales.inactive'] = '0';
                    // $args4['trans_sales.trans_ref is not null'] = null;
                    $args4["DATE(trans_sales.datetime) = '".$to."'"] = array('use'=>'where','val'=>null,'third'=>false);
                    $args4['trans_sales_menus.menu_id'] = $res->menu_id;
                    // $this->site_model->db = $this->load->database('main', TRUE);
                    $get_menus_sales = $this->site_model->get_tbl($tablem,$args4,$ordermm,$joinm,true,$selectm,$groupmm); 
                    $qty_sales = 0;
                    if($get_menus_sales){
                        $qty_sales = $get_menus_sales[0]->total_qty;
                    }

                    // echo $qty_sales;
                    // for menu move total qty
                    $argst = array();
                    $join = array();
                    $table  = "menu_moves";
                    $select = "sum(menu_moves.qty) as total_qty_moves";
                    $argst["DATE(menu_moves.reg_date) = '".$to."'"] = array('use'=>'where','val'=>null,'third'=>false);
                    $argst['menu_moves.item_id'] = $res->menu_id;

                    $argst['menu_moves.inactive'] = 0;
                    $order = null;
                    $group = null;
                    
                    $this->site_model->db = $this->load->database('default', TRUE);
                    $items = $this->site_model->get_tbl($table,$argst,$order,$join,true,$select,$group);
                    $qty_moves = 0;
                    if($items){
                        $qty_moves = $items[0]->total_qty_moves;
                    }

                    $menu_oh = $qty_moves - $qty_sales;
                }

                //get settings if allow negative inv
                $set = $this->cashier_model->get_pos_settings();

                // $this->site_model->db = $this->load->database('default', TRUE);

                $json[$res->menu_id] = array(
                    "id"=>$res->menu_id,
                    "name"=>$res->menu_name,
                    "category"=>$res->menu_cat_id,
                    "cost"=>$res->cost,
                    "no_tax"=>$res->no_tax,
                    "free"=>$res->free,
                    "sched"=>$res->menu_sched_id,
                    "menu_oh"=>$menu_oh,
                    "neg_inv"=>$set->neg_inv,
                    "reorder_qty"=>$res->reorder_qty,
                    "check_reorder"=>$check_reorder,
                    "menu_sold"=>$qty_sales,
                    "menu_recevied"=>$qty_moves,
                );

                // echo "<pre>",print_r($json),"</pre>";

                $ids[] = $res->menu_id;
                if($res->menu_sched_id != 0 || $res->menu_sched_id != "")
                    $mnschds[] = $res->menu_sched_id;
            }
            #########################
            ### SCHEDULE
            #########################
                                 
            #########################
            ### PROMO
            #########################
                
        }
        usort($json, function($a, $b) {
            return strcmp($a["name"], $b["name"]);
        });
        $code = '';
        $this->make->sDivRow();
            // $this->make->H(3,'Table is currently in use. Choose from the following options to continue.',array('class'=>'headline text-center text-uppercase','style'=>'padding:12px;'));
            $this->make->sTable(array('class'=>'table reportTBL'));
                $this->make->sTableHead();
                    $this->make->sRow();
                        $this->make->th('Menu Name');
                        $this->make->th('Category');
                        $this->make->th('Beginning Quantity');
                        $this->make->th('Quantity Sold');
                        $this->make->th('Quantity On Hand');
                    $this->make->eRow();
                $this->make->eTableHead();
                $this->make->sTableBody();
                    foreach ($json as $menu_id => $vals) {
                        $where = array('menu_cat_id'=>$vals['category']);
                        $details = $this->site_model->get_details($where,'menu_categories');


                        $this->make->sRow();
                            $this->make->td($vals['name']);
                            $this->make->td($details[0]->menu_cat_name);
                            // $this->make->td($vals['reorder_qty']);
                            $this->make->td($vals['menu_recevied']);
                            $this->make->td($vals['menu_sold']);
                            $this->make->td($vals['menu_oh']);
                        $this->make->eRow();
                    }    
                $this->make->eTableBody();
            $this->make->eTable();
        $this->make->eDivRow();
        $code = $this->make->code();
        
        echo json_encode(array('code'=>$code));

        // echo "<pre>",print_r($json),"</pre>";
        // echo json_encode($json);
        // $data['code'] = makeViewInvCheck();
        // $data['add_css'] = array('css/cashier.css','css/onscrkeys.css','css/virtual_keyboard.css');
        // $data['add_js'] = array('js/on_screen_keys.js','js/jquery.keyboard.extension-navigation.min.js','js/jquery.keyboard.min.js');
        // $data['load_js'] = 'dine/cashier.php';
        // $data['use_js'] = 'invCheckJS';
        // $this->load->view('load',$data);
    }

    public function check_charge_cart(){
        $trans_charge_cart = sess('trans_charge_cart');
        if(isset($trans_charge_cart[3])){
            echo 'added';
        }else{
            echo 'add';
        }

        
    }
    function set_schedule()
    {
        $this->load->model('dine/menu_model');
        $this->load->model('dine/cashier_model');
        $this->load->model('site/site_model');
        $this->load->helper('dine/cashier_helper');
        $data = $this->syter->spawn('customers');
        $tablem = "trans_sales";
        $selectm = "table_id";
        $ordermm = null;
        $groupmm = null;
        $args = array();
        $args['trans_sales.paid'] = 0;
        $args['trans_sales.inactive'] = 0;
        $joinm = array();
        $get_ts_tbl_id = $this->site_model->get_tbl($tablem,$args,$ordermm,$joinm,true,$selectm,$groupmm);
        $get_tbls = array();
        foreach ($get_ts_tbl_id as $ts_key => $ts_v) {
            $get_tbls[] = $ts_v->table_id;
        }
        $tbl_id_got = array();
            $argst = array();
            $argst['inactive'] = '0';
            $argst['trans_type'] = 'dinein';
        if($get_tbls){
            $get_tbl_id = $this->cashier_model->get_table_id_ts($get_tbls,$argst);
        // echo "hehe <pre>",print_r($get_tbl_id),"</pre>";die();
        }else{
            $get_tbl_id = $this->cashier_model->get_table_id_ts(null,$argst);
            // echo $this->cashier_model->db->last_query();die();
        // echo "haha <pre>",print_r($get_tbl_id),"</pre>";die();
        }
            foreach ($get_tbl_id as $gt_k => $gt_val) {
                $tbl_id_got[$gt_val->name]=$gt_val->tbl_id;
               
        }
        // die();
        $data['code'] = set_calendar($tbl_id_got);
        $data['load_js'] = 'dine/cashier.php';
        $data['use_js'] = 'setCalendarJs';
        // $data['add_css'] = array('css/cashier.css','css/virtual_keyboard.css','css/fullcalendar/fullcalendar.min.css');
        $data['add_css'] = array('css/virtual_keyboard.css', 'css/cashier.css','js/typeaheadmap/typeaheadmap.css','css/fullcalendar/fullcalendar.min.css');
        $data['add_js'] = array('js/jquery.keyboard.extension-navigation.min.js','js/jquery.keyboard.min.js','js/jquery.scannerdetection.js','js/typeaheadmap/typeaheadmap.js');

        $this->load->view('cashier',$data);
    }
    public function tables_reservation($type='reservation'){
        $this->load->model('site/site_model');
        $this->load->model('dine/cashier_model');
        $this->load->helper('dine/cashier_helper');
        $this->load->helper('core/on_screen_key_helper');
        $data = $this->syter->spawn(null);
        sess_clear('trans_type_cart');
        // echo "<pre>",print_r($this->session),"</pre>";die();
        $date_selected = $this->session->userdata('date_schedule');
        $time_selected = $this->session->userdata('time_schedule');
        $cust_id       = $this->session->userdata('cust_id');
        // echo $cust_id;die();
        $data['code'] = reserveTablesPage($type,$date_selected,$time_selected,$cust_id);

        $data['add_css'] = array('css/cashier.css','css/onscrkeys.css','css/rtag.css');
        $data['add_js'] = array('js/on_screen_keys.js');
        $data['load_js'] = 'dine/cashier.php';
        $data['use_js'] = 'reserveTablesJs';
        $data['noNavbar'] = true;
        $this->load->view('cashier',$data);
    }
    function get_calendar_events(){
        $user_id = "";

        // if(isset($_SESSION['customer_id'])){
        //     $user_id = $_SESSION['customer_id'];
        // }

        $js_data = array();
        $items = $this->cashier_model->get_calendar_events();
        if(!empty($items)){
            // $schedule_raw = explode(" ", $items[0]->schedule_date); 
            // $sched_date = $schedule_raw[0];
            $sched_time = $items[0]->set_time;
            // $qr_code_id = $items[0]->sale_id;
            $js_data = array("sched_time"=>$sched_time);
        }
        // echo "<pre>",print_r($js_data),"</pre>";die();
        echo json_encode($js_data);
    }
    function get_location_details(){
        // $interval_sched = $this->session->userdata('interval_sched');
        $date_selected = $this->input->post("dateSelected");

        $location_data_raw = $this->cashier_model->get_locations_solo('MAX');
        $get_time_slot = $this->cashier_model->get_time_slot($date_selected);
        // echo "<pre>",print_r($selected_time),"</pre>";die();
        $selected_time = array();
        foreach ($get_time_slot as $key => $value) {
            $start = date('H:i',strtotime($value->set_time));
            $last = date('H:i',strtotime('+14 minutes',strtotime($value->set_time)));
            $selected_time[] = [$start, $last];
        }
            // echo "<pre>",print_r($selected_time),"</pre>";
        // echo "<pre>",print_r($interval_sched),"</pre>";die();
        $location_data = $location_data_raw[0];
        $time = explode(':', '00:15');
        $interval_sched_min = ($time[0]*60) + ($time[1]);
        // echo "<pre>",print_r($interval_sched_min),"</pre>";die();
        echo json_encode(array("store_open"=>$location_data->store_open,"store_close"=>$location_data->store_close,"interval_sched"=>$interval_sched_min,"selected_time"=>$selected_time));
    }
    function set_schedule_data()
    {
         $this->load->model('dine/settings_model');

        $date_selected = $this->input->post("date_selected");
        $time_selected = $this->input->post("time_selected");
        // $antigen = $this->input->post("antigen");
        $this->session->set_userData("date_schedule", $date_selected );
        $this->session->set_userData("time_schedule", $time_selected );
        $select = "customers_bank.set_time,customers_bank.set_date";
        // $args['bank_id'] = $id;
        $args = array();
        $join = array();
        // $join["customers"] = array('content'=>"customers_bank.cust_id = customers.cust_id");
        // $join["terminals"] = array('content'=>"customers_bank.pos_id = terminals.terminal_id");
         // $time_selected = "09:00 AM";
        // echo $time_selected;die();

        $time_format = date("H:i:s", strtotime($time_selected));
        $args['set_date'] = date('Y-m-d',strtotime($date_selected));
        $args['inactive'] = 0;
        // $args["(('".$time_format ."' <= set_time && '".date('H:i', strtotime($time_format.'+3 hours'))."' <= ADDTIME(set_time, '03:00:00') && '".date('H:i', strtotime($time_format.'+3 hours'))."' < set_time && '".date('H:i', strtotime($time_format.'+3 hours'))."' < ADDTIME(set_time, '03:00:00') ) 
        //  || 
        //        ('".$time_format ."' > set_time && '".$time_format."' < ADDTIME(set_time, '03:00:00') && '".date('H:i', strtotime($time_format.'+3 hours'))."' > ADDTIME(set_time, '03:00:00')) || 
        //        ('".$time_format ."' > set_time && '".$time_format."' < ADDTIME(set_time, '03:00:00') && '".date('H:i', strtotime($time_format.'+3 hours'))."' < ADDTIME(set_time, '03:00:00')))"] = array('use'=>'where','val'=>null,'third'=>false);
        

        $time_result = $this->site_model->get_tbl('customers_bank',$args,array(),$join,true,$select);
            $sql = $this->db->last_query();
        // echo "<pre>",print_r($sql),"</pre>";die();
        $table_list = $this->settings_model->get_tables_other(null);
        $error = 0;


        // foreach ($time_result as $tk => $time_val) {
        //     $tr = date('H:i A',strtotime($time_val->set_time));
        //     $dr = date('m/d/Y',strtotime($time_val->set_date));
        // // echo '<pre>', print_r($dr),"</pre>";die();
        //     if($tr == $time_selected && $dr == $date_selected){
        //         // echo $tr. ' haha'.$time_selected;die();
        //     // echo '<pre>', print_r($tr),"</pre>";die();
        //         $error = 1;
        //         // echo '<script>alert("Welcome to Geeks for Geeks")</script>';
        //     }
        // }

        $ctr = 0;
        foreach($time_result as $det){
                if($time_format <= $det->set_time && date('H:i',strtotime($time_format . ' + 3 hours')) <= date('H:i',strtotime($det->set_time . ' + 3 hours')) && date('H:i',strtotime($time_format . ' + 3 hours')) < $det->set_time && date('H:i',strtotime($time_format . ' + 3 hours')) < date('H:i',strtotime($det->set_time . ' + 3 hours'))){
                    $ctr++;
                }

                elseif($time_format > $det->set_time && $time_format < date('H:i',strtotime($det->set_time . ' + 3 hours')) && date('H:i',strtotime($time_format . ' + 3 hours')) > date('H:i',strtotime($det->set_time . ' + 3 hours'))){
                    $ctr++;
                }

                elseif($time_format > $det->set_time && $time_format < date('H:i',strtotime($det->set_time . ' + 3 hours'))  && date('H:i',strtotime($time_format . ' + 3 hours')) < date('H:i',strtotime($det->set_time . ' + 3 hours'))){
                    $ctr++;
                }
                elseif($time_format == $det->set_time){
                    $ctr++;
                }

        }

        if($time_result && count($table_list)==$ctr){
        // if($time_result && count($table_list)==count($time_result)){
            $error = 1;
        }

        // echo $error;die();
        // $this->session->set_userData("antigen", $antigen );
        echo json_encode(array('date_schedule'=>$date_selected,'time_schedule'=>$time_selected,'msg'=>$error));
    }
    public function rcounter($type=null,$sales_id=null){
        $this->load->model('site/site_model');
        $this->load->model('dine/cashier_model');
        $this->load->helper('dine/cashier_helper');
        $data = $this->syter->spawn(null);
        $loaded = null;
        $order = array();
        $app_type = $type;
        $loc_res = $this->site_model->get_tbl('settings',array(),array(),null,true,'*',null,1);
        $local_tax = $loc_res[0]->local_tax;
        $kitchen_printer = "";
        if(iSetObj($loc_res[0],'kitchen_printer_name') != ""){
            $kitchen_printer = iSetObj($loc_res[0],'kitchen_printer_name');
        }

        if($sales_id != null){
            $order = $this->get_order(false,$sales_id);
            $trans = $this->load_trans(false,$order);
            $time = $trans['datetime'];
            $type = $type." #".$order['order']['sales_id'];
            $loaded = "loaded";
        }
        else{
            $trans = $this->new_trans(false,$type);
            $time = $trans['datetime'];
        }
        if(isset($order['order']))
            $order = $order['order'];
        $typeCN = sess('trans_type_cart');

        if(isset($typeCN[0]['table'])){
            $error = $this->check_tbl_activity($typeCN[0]['table'],false);
            if($error == ""){
                $this->update_tbl_activity($typeCN[0]['table']);

                // if(LOCALSYNC){

                //     $this->sync_model->update_table_activity($typeCN[0]['table']);
                // }
            }
            else{
                site_alert($error,'error');
                header("Location:".base_url()."cashier");
            }
        }

        $data['code'] = counterPage($type,$time,$loaded,$order,$typeCN,$local_tax,$kitchen_printer,$app_type);
        // $data['add_css'] = 'css/cashier.css';
        $data['add_css'] = array('css/virtual_keyboard.css', 'css/cashier.css');
        $data['add_js'] = array('js/jquery.keyboard.extension-navigation.min.js','js/jquery.keyboard.min.js','js/jquery.scannerdetection.js');
        // $data['add_js'] = array('js/jquery.keyboard.extension-navigation.min.js','js/jquery.keyboard.min.js');
        $data['load_js'] = 'dine/cashier.php';
        $data['use_js'] = 'counterJs';
        $data['noNavbar'] = true;
        $this->load->view('cashier_counter',$data);
    }
    public function rsubmit_trans($asJson=true,$submit=null,$void=false,$void_ref=null,$cart=null,$mod_cart=null,$print=false,$split_id=null,$printKitSlip=false){
        // if(LOCALSYNC){
        //     $this->load->model('core/sync_model');
        //  }
        // echo "<pre>",print_r(sess('customer_name')),"</pre>";die();
        $this->load->model('dine/cashier_model');
        $counter = sess('counter');
        // echo "<pre>",print_r($this->session),"</pre>";die();
        $cust_id = $this->session->userdata('cust_id');
        $date_schedule = $this->session->userdata('date_schedule');
        $time_schedule = $this->session->userdata('time_schedule');
        $trans_cart = sess('trans_cart');
        $trans_mod_cart = sess('trans_mod_cart');
        $trans_type_cart = sess('trans_type_cart');
        $trans_disc_cart = sess('trans_disc_cart');
        $trans_charge_cart = sess('trans_charge_cart');
        $loyalty_card = sess('loyalty_card');
        $reasons = sess('reasons');
        $item_discount = sess('item_discount');
        $trans_customer_name = (!empty(sess('customer_name'))) ? sess('customer_name') : '';
        $totals  = $this->total_trans(false,$cart);
        $total_amount = $totals['total'];
        $total_gross = $totals['gross'];
        $charges = $totals['charges'];
        $local_tax = $totals['local_tax'];
        $error = null;
        $act = null;
        $sales_id = null;
        $type = null;
        $type_id = SALES_TRANS;
        $print_echo = array();
        if($void === true){
            $type_id = SALES_VOID_TRANS;
        }

        if($void_ref == null || $void_ref == 0)
            $void_ref = null;

        $serve_no = 0;
        if(isset($trans_type_cart[0]['serve_no'])){
            $serve_no = $trans_type_cart[0]['serve_no'];
        }

        if(count($trans_cart) <= 0){
            $error = "Error! There are no items.";
        }
        else if(count($counter) <= 0){
            $error = "Error! Shift or User is invalid.";
        }
        // else if(NEED_FOOD_SERVER && !isset($counter['waiter_id']) && $counter['type'] != 'counter' && $counter['type'] != 'takeout'){
        else if(NEED_FOOD_SERVER && !isset($counter['waiter_id']) && $counter['type'] == 'dinein'){
            $error = "Select Food Server";
        }
        // else if(SERVER_NO_SETUP && $serve_no == 0 && $counter['type'] == 'counter' ){
        //     $error = "Please Select Serve No.";
        // }
        // else if(SERVER_NO_SETUP && $serve_no == 0 && $counter['type'] == 'takeout' ){
        //     $error = "Please Select Serve No.";
        // }
        else{
            if(count($trans_disc_cart) > 0){
                foreach ($trans_disc_cart as $disc_id => $row) {
                    if(!isset($row['disc_type'])){
                        $error = "Select Discount Type. If equally Divided or All Items.";
                    }
                    else{
                        if($row['disc_type'] == "")
                            $error = "Select Discount Type. If equally Divided or All Items.";
                    }
                }
                if($error != null){
                    if($asJson){
                        echo json_encode(array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type));
                        return false;
                    }
                    else{
                        return array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type);
                    }
                }
            }


            if(is_array($cart)){
                $trans_cart = $cart;
            }
            if(is_array($mod_cart)){
                $trans_mod_cart = $mod_cart;
            }
            $type = $counter['type'];
            #save sa trans_sales
            $table = null;
            $guest = 0;
            
            $customer = null;
            if(isset($trans_type_cart[0]['table'])){
                $table = $trans_type_cart[0]['table'];
            }
            if(isset($trans_type_cart[0]['guest'])){
                $guest = $trans_type_cart[0]['guest'];
            }
            
            if(count($trans_disc_cart) > 0){
                foreach ($trans_disc_cart as $disc_code => $dc) {
                    $guest = $dc['guest'];
                }
            } 
            if(isset($trans_type_cart[0]['customer_id'])){
                $customer = $trans_type_cart[0]['customer_id'];
            }
            if(count($loyalty_card) > 0){
                foreach ($loyalty_card as $code => $row) {
                    $customer = $row['cust_id'];
                    // $loyalty = array(
                    //     "cust_id" => $row['cust_id'],
                    //     "code" => $row['code']
                    // );
                }

            }
            $waiter = null;
            if(isset($counter['waiter_id'])){
                $waiter = $counter['waiter_id'];
            }
            $ds_1            = date_create($date_schedule);
            $set_date_1      = date_format($ds_1,"Y-m-d");
            $time_1          = date('H:i', strtotime($time_schedule));
            if($counter['type'] == 'reservation'){
                $dt = $set_date_1." ".$time_1;
            }else{
                $dt = date2SqlDateTime($counter['datetime']);
            }
            // echo "<pre>",print_r($dt),"</pre>";die();
            $splid = 0;
            if($split_id != null)
                $splid = $split_id;
             // $total_amount = number_format($total_amount, 2, '.', '');
             $total_amount = $total_amount;
             $trans_sales = array(
                "user_id"       => $counter['user_id'],
                "type_id"       => $type_id,
                "shift_id"      => $counter['shift_id'],
                "terminal_id"   => $counter['terminal_id'],
                "type"          => $counter['type'],
                "datetime"      => $dt,
                "total_amount"  => $total_amount,
                "void_ref"      => $void_ref,
                "memo"          => null,
                "table_id"      => $table,
                "guest"         => $guest,
                "serve_no"      => $serve_no,
                "customer_id"   => $customer,
                "customer_name" => $trans_customer_name,
                "waiter_id"     => $waiter,
                "split"         => $splid
            );
             // echo "<pre>",print_r($trans_sales),"</pre>";die();
            $user = $this->session->userdata('user');
            if(isset($counter['sales_id']) && $counter['sales_id'] != null){
                $sales_id = $counter['sales_id'];
                $this->cashier_model->update_trans_sales($trans_sales,$sales_id);

                $log_id = $this->logs_model->add_logs('Sales Order',$user['id'],$user['full_name']." Updated Sales Order #".$sales_id,$sales_id);
                // if(LOCALSYNC){
                //     $this->sync_model->update_trans_sales($sales_id);
                //     // $this->sync_model->add_logs($log_id);

                //     //delete items
                //     $this->sync_model->delete_trans_sales_menus($sales_id);
                //     $this->sync_model->delete_trans_sales_items($sales_id);
                //     $this->sync_model->delete_trans_sales_menu_modifiers($sales_id);
                //     $this->sync_model->delete_trans_sales_discounts($sales_id);
                //     $this->sync_model->delete_trans_sales_charges($sales_id);
                //     $this->sync_model->delete_trans_sales_tax($sales_id);
                //     $this->sync_model->delete_trans_sales_no_tax($sales_id);
                //     $this->sync_model->delete_trans_sales_zero_rated($sales_id);
                //     $this->sync_model->delete_trans_sales_local_tax($sales_id);
                // }


                $this->cashier_model->delete_trans_sales_menus($sales_id);
                $this->cashier_model->delete_trans_sales_items($sales_id);
                $this->cashier_model->delete_trans_sales_menu_modifiers($sales_id);
                $this->cashier_model->delete_trans_sales_discounts($sales_id);
                $this->cashier_model->delete_trans_sales_charges($sales_id);
                $this->cashier_model->delete_trans_sales_tax($sales_id);
                $this->cashier_model->delete_trans_sales_no_tax($sales_id);
                $this->cashier_model->delete_trans_sales_zero_rated($sales_id);
                $this->cashier_model->delete_trans_sales_local_tax($sales_id);
                $act="update";


                if($submit === null || $submit == 0 || $submit == null)
                    site_alert('Transaction Updated.','success');
            }
            else{
                $sales_id = $this->cashier_model->add_trans_sales($trans_sales);
                $log_id = $this->logs_model->add_logs('Sales Order',$user['id'],$user['full_name']." Added New Sales Order #".$sales_id,$sales_id);
                $act="add";

                // if(LOCALSYNC){
                //     $this->sync_model->add_trans_sales($sales_id);
                //     // $this->sync_model->add_logs($log_id);
                // }
            }
            #save sa trans_sales_menus
            $trans_sales_menu = array();
            $trans_sales_items = array();
            $total_gross = 0;

            // echo "<pre>",print_r($trans_cart),"</pre>";die();

            foreach ($trans_cart as $trans_id => $v) {

                if($v['qty'] == 0){ //if qty is zero skip the item to resolve the splitting 0 issue @jx10292019
                    continue;
                }
                $remarks = $serial_key = null;
                $nocharge = 0;
                $rate = (isset($trans_disc_cart[$trans_id]['disc_percent'])) ?  $trans_disc_cart[$trans_id]['disc_percent'] : 0 ;
                $percent_disc = ($v['cost'] * $v['qty']) * ($rate / 100);
                $percent_abs = (isset($trans_disc_cart[$trans_id]['disc_absolute'])) ? $trans_disc_cart[$trans_id]['disc_absolute'] : 0;
                $total_disc = $percent_disc + $percent_abs;

                // $is_takeout = 0;
                // if($counter['type'] == 'takeout'){
                //     $is_takeout = 1;
                // }else{
                //     if(isset($v['is_takeout'])){
                        $is_takeout = $v['is_takeout'];
                //     }
                // }
                if(isset($v['nocharge']) && $v['nocharge'] != 0){
                    $nocharge = $v['nocharge'];
                }
                if(isset($v['remarks']) && $v['remarks'] != ""){
                    $remarks = $v['remarks'];
                }
                $kitchen_slip_printed=0;
                if(isset($v['kitchen_slip_printed']) && $v['kitchen_slip_printed'] != ""){
                    $kitchen_slip_printed = $v['kitchen_slip_printed'];
                }
                $free = $free_reason = null;
                if(isset($v['free_user_id'])){
                    $free = $v['free_user_id'];
                }

                 if(isset($v['free_reason'])){
                    $free_reason = $v['free_reason'];
                }
                

                if(!isset($v['retail'])){
                    $where = array('menu_id'=>$v['menu_id']);
                    $m_det = $this->site_model->get_details($where,'menus');

                    $trans_sales_menu[] = array(
                        "sales_id" => $sales_id,
                        "line_id" => $trans_id,
                        "menu_id" => $v['menu_id'],
                        "menu_name" => $m_det[0]->menu_name,
                        "price" => $v['cost'],
                        "qty" => $v['qty'],
                        "no_tax" => $v['no_tax'],
                        "discount"=> 0,
                        "remarks"=>$remarks,
                        "kitchen_slip_printed"=>$kitchen_slip_printed,
                        "free_user_id" => $free,
                        "free_reason" => $free_reason,
                        "nocharge" => $nocharge,
                        "is_takeout" => $is_takeout,
                    );
                }
                else{
                    $where = array('item_id'=>$v['menu_id']);
                    $i_det = $this->site_model->get_details($where,'items');

                    $trans_sales_items[] = array(
                        "sales_id" => $sales_id,
                        "line_id" => $trans_id,
                        "item_id" => $v['menu_id'],
                        "item_name" => $i_det[0]->name,
                        "price" => $v['cost'],
                        "qty" => $v['qty'],
                        "no_tax" => $v['no_tax'],
                        "discount"=> 0,
                        "remarks"=>$remarks,
                        "nocharge" => $nocharge,
                        "is_takeout" => $is_takeout,
                    );
                }
                $total_gross += $v['qty'] *$v['cost'];
            }
            if(count($trans_sales_menu) > 0)
            {
                $trans_id = $this->cashier_model->add_trans_sales_menus($trans_sales_menu);
                //  if(LOCALSYNC){
                //     $this->sync_model->add_trans_sales_menus($sales_id);
                // }
            }
            
            if(count($trans_sales_items) > 0)
            {
                $this->cashier_model->add_trans_sales_items($trans_sales_items);
                // if(LOCALSYNC){
                //     $this->sync_model->add_trans_sales_items($sales_id);
                // }
            }
            #save sa trans_sales_menu_modifiers
            if(count($trans_mod_cart) > 0){
                $trans_sales_menu_modifiers = array();
                foreach ($trans_mod_cart as $trans_mod_id => $m) {
                    $kitchen_slip_printed=0;
                    if(isset($m['kitchen_slip_printed']) && $m['kitchen_slip_printed'] != ""){
                        $kitchen_slip_printed = $m['kitchen_slip_printed'];
                    }
                    if(isset($trans_cart[$m['trans_id']])){
                        //menu
                        $where = array('menu_id'=>$m['menu_id']);
                        $m_det = $this->site_model->get_details($where,'menus');

                        //mod group
                        $where = array('mod_group_id'=>$m['mod_group_id']);
                        $mg_det = $this->site_model->get_details($where,'modifier_groups');

                        //mod
                        $where = array('mod_id'=>$m['mod_id']);
                        $mod_det = $this->site_model->get_details($where,'modifiers');


                        $trans_sales_menu_modifiers[] = array(
                            "sales_id" => $sales_id,
                            "line_id" => $m['trans_id'],
                            "menu_id" => $m['menu_id'],
                            "mod_group_id" => $m['mod_group_id'],
                            "mod_id" => $m['mod_id'],
                            "price" => $m['cost'],
                            "qty" => $m['qty'],
                            "discount"=> 0,
                            "menu_name" => $m_det[0]->menu_name,
                            "mod_group_name" => $mg_det[0]->name,
                            "mod_name" => $mod_det[0]->name,
                            "kitchen_slip_printed"=>$kitchen_slip_printed
                        );
                        $total_gross += $m['qty'] *$m['cost'];
                    }
                }
                if(count($trans_sales_menu_modifiers) > 0)
                {
                    $trans_id = $this->cashier_model->add_trans_sales_menu_modifiers($trans_sales_menu_modifiers);
                    // if(LOCALSYNC){
                    //     $this->sync_model->add_trans_sales_menu_modifiers($sales_id);
                    // }
                }
            }

            if(count($item_discount) > 0){
                //for save sa trans_sales_discounts pero per item
                $trans_sales_disc_items = array();
                foreach($item_discount as $id => $dc){
                    $trans_sales_disc_items[] = array(
                        "sales_id"=>$sales_id,
                        "disc_id"=>$dc['disc_id'],
                        "type"=>$dc['type'],
                        "guest"=>$dc['guest'],
                        "disc_code"=>$dc['disc_code'],
                        "disc_rate"=>$dc['disc_rate'],
                        "items"=>$dc['items'],
                        "no_tax"=>$dc['no_tax'],
                        "name"=>$dc['name'],
                        "bday"=>date('Y-m-d H:i:s'),
                        "code"=>$dc['code'],
                        "remarks"=>$dc['remarks'],
                        "amount"=>$dc['amount']
                    );

                }
                if(count($trans_sales_disc_items) > 0)
                {
                    $this->cashier_model->add_trans_sales_discounts($trans_sales_disc_items);
                    //   if(LOCALSYNC){
                    //     $this->sync_model->add_trans_sales_discounts($sales_id);
                    // }
                }
            }else{
                #save sa trans_sales_discounts
                $total_disc = 0;
                if(count($trans_disc_cart) > 0){
                    $trans_sales_disc_cart = array();
                    $total = 0;
                    foreach ($trans_cart as $trans_id => $trans){
                        if(isset($trans['cost']))
                            $cost = $trans['cost'];
                        if(isset($trans['price']))
                            $cost = $trans['price'];

                        if(isset($trans['modifiers'])){
                            foreach ($trans['modifiers'] as $trans_mod_id => $mod) {
                                if($trans_id == $mod['line_id'])
                                    $cost += $mod['price'];
                            }
                        }

                        else{
                            if(count($trans_mod_cart) > 0){
                                foreach ($trans_mod_cart as $trans_mod_id => $mod) {
                                    if($trans_id == $mod['trans_id'])
                                        $cost += $mod['cost'];
                                }
                            }
                        }
                        if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
                            $rate = 1.12;
                            $cost = ($cost / $rate);
                            if(isset($zero_rated)){
                                $zero_rated += $v['qty'] * $cost;
                            }else{
                                $zero_rated = $v['qty'] * $cost;
                            }
                        }
                        $total += $trans['qty'] * $cost;
                    }

                    foreach ($trans_disc_cart as $disc_id => $dc) {
                        $dit = "";
                        if(isset($dc['items'])){
                            foreach ($dc['items'] as $lines) {
                                $dit .= $lines.",";
                            }
                            if($dit != "")
                                $dit = substr($dit,0,-1);                        
                        }
                        

                        $discount = 0;
                        $rate = $dc['disc_rate'];
                        switch ($dc['disc_type']) {
                            case "equal":
                                $divi = $total/$dc['guest'];
                                $divi_less = $divi;

                                if($dc['disc_code'] == ATHLETE_CODE){
                                    // if($dc['no_tax'] == 1){
                                        $divi_less = ($divi / 1.12);
                                    // }
                                    $no_persons = count($dc['persons']);
                                    // foreach ($row['persons'] as $code => $per) {
                                    $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $divi_less);
                                    $discount = ($rate / 100) * $divi_less;
                                }else{
                                    if($dc['no_tax'] == 1){
                                        $divi_less = ($divi / 1.12);
                                    }
                                    $no_persons = count($dc['persons']);
                                    // foreach ($row['persons'] as $code => $per) {
                                    $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $divi_less);
                                    $discount = ($rate / 100) * $divi_less;
                                }

                                // }
                                // $total = ($divi * $row['guest']) - $discount;

                                break;
                            default:
                                // $no_citizens = count($dc['persons']);
                                // if($dc['no_tax'] == 1)
                                //     $total = ($total / 1.12);                     
                                // $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total);
                                // $discount = ($rate / 100) * $total;
                                if($dc['fix'] == 0){
                                    if(DISCOUNT_NET_OF_VAT && $row['disc_code'] != DISCOUNT_NET_OF_VAT_EX){
                                        $no_citizens = count($dc['persons']);
                                        $total_net_vat = ($total / 1.12);                     
                                        foreach ($dc['persons'] as $code => $per) {
                                            $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total_net_vat);
                                            $discount += ($rate / 100) * $total_net_vat;
                                        }
                                        $total -= $discount; 
                                    }
                                    else{
                                        $no_citizens = count($dc['persons']);

                                        // echo $no_citizens; die();
                                        if($dc['disc_code'] == ATHLETE_CODE){
                                            // if($dc['no_tax'] == 1)
                                                $total = ($total / 1.12);                     
                                            foreach ($dc['persons'] as $code => $per) {
                                                $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total);
                                                $discount += ($rate / 100) * $total;
                                            }
                                        }else{
                                            if($dc['no_tax'] == 1)
                                                $total = ($total / 1.12);                     
                                            foreach ($dc['persons'] as $code => $per) {
                                                $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total);
                                                $discount += ($rate / 100) * $total;
                                            }
                                        }

                                        $total -= $discount;                                        
                                    }    
                                }
                                else{
                                    $discs[] = array('type'=>$dc['disc_code'],'amount'=>$rate);
                                    $discount += $rate;
                                    $total -= $discount;
                                }
                                // }    
                        }
                        foreach ($dc['persons'] as $pcode => $oper) {
                            $dcBday = null;
                            $dcremark = null;
                            if(isset($oper['bday']) && $oper['bday'] != "")
                                $dcBday = $oper['bday'];

                            if(isset($oper['remarks']) && $oper['remarks'] != "")
                                $dcremark = $oper['remarks'];

                            $trans_sales_disc_cart[] = array(
                                "sales_id"=>$sales_id,
                                "disc_id"=>$dc['disc_id'],
                                "disc_code"=>$dc['disc_code'],
                                "disc_rate"=>$dc['disc_rate'],
                                "no_tax"=>$dc['no_tax'],
                                "type"=>$dc['disc_type'],
                                "name"=>$oper['name'],
                                "bday"=>$dcBday,
                                "code"=>$oper['code'],
                                "remarks"=>$dcremark,
                                "items"=>$dit,
                                "guest"=>$dc['guest'],
                                "amount"=>$discount
                            );
                            $total_disc += $discount;
                        }
                    }
                    if(count($trans_sales_disc_cart) > 0)
                    {
                        $this->cashier_model->add_trans_sales_discounts($trans_sales_disc_cart);
                        //   if(LOCALSYNC){
                        //     $this->sync_model->add_trans_sales_discounts($sales_id);
                        // }
                    }
                }

            }


            
            // save sa trans_sales_charges
            $total_charge = 0;
            if(count($trans_charge_cart) > 0){
                $trans_sales_charge_cart = array();
                foreach ($trans_charge_cart as $charge_id => $ch) {
                    $trans_sales_charge_cart[] = array(
                        "sales_id"=>$sales_id,
                        "charge_id"=>$charge_id,
                        "charge_code"=>$ch['code'],
                        "charge_name"=>$ch['name'],
                        "rate"=>$ch['amount'],
                        "absolute"=>$ch['absolute'],
                        "amount"=>$charges[$charge_id]['amount']
                    );
                    $total_charge += $charges[$charge_id]['amount'];
                }
                if(count($trans_sales_charge_cart) > 0)
                {
                    $this->cashier_model->add_trans_sales_charges($trans_sales_charge_cart);

                    //  if(LOCALSYNC){
                    //     $this->sync_model->add_trans_sales_charges($sales_id);
                    // }
                }
            }

            // echo "<pre>",print_r($trans_disc_cart),"</pre>";die();
            $tax = $this->get_tax_rates(false);
            $taxable_amount = $total_gross;
            $not_taxable_amount = 0;
            $zero_rated = 0;
            $diplomat_count = 0;
            $g_count = 0;
            if(count($tax) > 0){

                if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
                    $rate = 1.12;
                    // $cost = ($cost / $rate);
                    // $rate = 0.12;
                    $zero_rated += $total_gross / $rate;
                    $taxable_amount -= $total_gross;
                    $not_taxable_amount += $total_gross / $rate;
                }else{
                    
                    if(count($item_discount)>0){
                        foreach ($trans_cart as $trans_id => $v) {
                            $cost = $v['cost'];
                            $total = $v['qty'] * $cost;

                            if(isset($item_discount[$trans_id])){
                                
                                if($item_discount[$trans_id]['disc_code'] == 'DIPLOMAT'){
                                    $zero_rated += $total / 1.12;
                                    $not_taxable_amount += $total / 1.12;
                                    $taxable_amount -= $total;
                                }else{
                                    $no_tx =  $item_discount[$trans_id]['no_tax'];
                                    if($no_tx == 1){
                                        $not_taxable_amount += $total / 1.12;
                                        $taxable_amount -= $total;
                                        // die('ss');
                                    }else{
                                        // $with_disc = $total - $item_discount[$trans_id]['amount'];
                                        // echo $with_disc; die();
                                        $taxable_amount -= $item_discount[$trans_id]['amount'];
                                    }
                                }

                            }
                        }
                    }else{
                        foreach ($trans_disc_cart as $disc_id => $dc) {
                            $discount = 0;
                            $rate = $dc['disc_rate'];

                            $divi = $total_gross/$dc['guest'];
                            $no_tax_persons = count($dc['persons']);
                            $g_count = $dc['guest'];
                            foreach($dc['persons'] as $name => $val){
                                if($dc['fix'] == 0){
                                    
                                    if($dc['disc_code'] == 'DIPLOMAT'){
                                        $divi_less = ($divi / 1.12);

                                        $zero_rated += $divi_less;
                                        $not_taxable_amount += $divi_less;
                                        $taxable_amount -= $divi;
                                        $diplomat_count++;
                                    }elseif($dc['disc_code'] == ATHLETE_CODE){
                                        $divi_less = ($divi / 1.12);
                                        $disc_per_person = ($rate / 100) * $divi_less;

                                        $taxable_amount -= $disc_per_person;

                                    }else{
                                        if($dc['no_tax'] == 1){
                                            $divi_less = ($divi / 1.12);
                                            $less_vat = $divi - $divi_less;
                                            // $not_taxable_amount += $divi_less * $no_tax_persons;
                                            // $taxable_amount -= $divi + $less_vat;
                                            $disc_per_person = ($rate / 100) * $divi_less;

                                            $no_tax = $divi_less * $no_tax_persons;
                                            $taxable_amount -= $divi;
                                            // echo $not_taxable_amount.'aa';
                                            $not_taxable_amount += $divi - $less_vat;
                                            // echo $not_taxable_amount.'bb';
                                        }else{
                                            $disc_per_person = ($rate / 100) * $divi; 
                                            // $not_taxable_amount = 0;
                                            // $disc_persons = $disc_per_person * $no_tax_persons;
                                            $taxable_amount -= $disc_per_person;
                                        }
                                    }


                                }else{
                                    // $disc_per_person = $divi - $rate;
                                    $disc_per_person = $rate;
                                    $taxable_amount -= $disc_per_person;
                                    // $taxable_amount -= $discount;
                                    // $not_taxable_amount = 0; 
                                }
                            }

                            
                        }
                    }


                }

                // echo $not_taxable_amount; die();
                //remove charges 
                if($zero_rated == 0){
                    $trans_sales_zero_rated[] = array(
                        "sales_id"=>$sales_id,
                        "amount"=>$zero_rated,
                        // "name"=>$counter['zero_name'],
                        // "card_no"=>$counter['zero_card_no']
                    );
                }else{
                    if($g_count == $diplomat_count){
                        $trans_sales_zero_rated[] = array(
                            "sales_id"=>$sales_id,
                            "amount"=>$zero_rated - $total_disc,
                            // "name"=>$counter['zero_name'],
                            // "card_no"=>$counter['zero_card_no']
                        );
                    }else{
                        $trans_sales_zero_rated[] = array(
                            "sales_id"=>$sales_id,
                            "amount"=>$zero_rated,
                            // "name"=>$counter['zero_name'],
                            // "card_no"=>$counter['zero_card_no']
                        );
                    }

                }


                if(count($trans_sales_zero_rated) > 0)
                    $this->cashier_model->add_trans_sales_zero_rated($trans_sales_zero_rated);


                if($zero_rated == 0){
                    $trans_sales_no_tax[] = array(
                        "sales_id"=>$sales_id,
                        "amount"=>$not_taxable_amount
                    );
                }else{
                    if($g_count == $diplomat_count){
                        $trans_sales_no_tax[] = array(
                            "sales_id"=>$sales_id,
                            "amount"=>$not_taxable_amount - $total_disc
                        );
                    }else{
                        $trans_sales_no_tax[] = array(
                            "sales_id"=>$sales_id,
                            "amount"=>$not_taxable_amount,
                        );
                    }
                }

                if(count($trans_sales_no_tax) > 0)
                    $this->cashier_model->add_trans_sales_no_tax($trans_sales_no_tax);

                if($zero_rated != 0 && $total_disc != 0){
                    if($g_count == $diplomat_count){
                        $taxable_amount = 0;
                    }
                }
                $am = $taxable_amount;
                $trans_sales_tax = array();
                $trans_tax = 0;
                foreach ($tax as $tax_id => $tx) {
                    $rate = ($tx['rate'] / 100);
                    $tax_value = ($am / ($rate + 1) ) * $rate;
                    // ($am / 1.12) * .12
                    $trans_sales_tax[] = array(
                        "sales_id"=>$sales_id,
                        "name"=>$tx['name'],
                        "rate"=>$tx['rate'],
                        "amount"=>$tax_value,
                    );
                    $trans_tax += $tax_value;
                    $am -= $tax_value;
                }
                
                if(count($trans_sales_tax) > 0)
                {
                    $this->cashier_model->add_trans_sales_tax($trans_sales_tax);
                    // if(LOCALSYNC){
                    //     $this->sync_model->add_trans_sales_tax($sales_id);
                    // }
                }


            }
            ### LOCAL TAX 
            if($local_tax > 0){
                $trans_sales_local_tax[] = array(
                    "sales_id"=>$sales_id,
                    "amount"=>$local_tax
                );
                if(count($trans_sales_local_tax) > 0)
                {
                    $this->cashier_model->add_trans_sales_local_tax($trans_sales_local_tax);
                    //  if(LOCALSYNC){
                    //     $this->sync_model->add_trans_sales_local_tax($sales_id);
                    // }
                    
                } 
            }


            //for update sa trans_Sales ng iba pang details
            $trans_sales_update = array(
                "total_gross"       => $total_gross,
                "total_discount" => $total_disc,
                "total_charges" => $total_charge,
                "zero_rated" => $zero_rated,
                "no_tax" => $not_taxable_amount,
                "tax" => $trans_tax,
                "local_tax" => $local_tax,
            );
            $this->cashier_model->update_trans_sales($trans_sales_update,$sales_id);



            if(defined('ENABLE_CHECKLIST') && ENABLE_CHECKLIST){

                #print
                $this->print_checklist($sales_id);  
            }
            
            if ($print == "true" || $print === true){
                $print_echo = $this->print_sales_receipt($sales_id,false);
            }
            if ($printKitSlip == "true" || $printKitSlip === true){

                $pet = $this->cashier_model->get_pos_settings();
                $kitchen_printer = $pet->kitchen_printer_name;
                if(KITCHEN_PRINTER){
                    $kitchen_printer = KITCHEN_PRINTER;
                }
                if(count($reasons) > 0){
                    
                    $this->print_os_removes($sales_id,$reasons);
                }
                if($kitchen_printer != ""){
                    $this->print_os($sales_id);            
                }
            }


            //linabas ko para magsave padin kahit di naka true yun printKitSlip
            foreach ($reasons as $ctrr => $re) {
                $reason_id = $this->cashier_model->add_reasons($re);
                // if(LOCALSYNC){
                //  $this->sync_model->add_reasons($reason_id);
                // }
            }
        }
        // print Acknowledgement pauli
        // include_once (dirname(__FILE__) . "/custs_bank.php");
        $customers_bank_update = array(
                "sales_id"       => $sales_id
            );
        $ds            = date_create($date_schedule);
        $set_date      = date_format($ds,"Y-m-d");
        $time          = date('H:i', strtotime($time_schedule));
        // echo $sales_id. ' -' .$time_schedule. '-'.$cust_id. '-'.$set_date. '- <pre>',print_r($customers_bank_update),'</pre>';die();
        $this->cashier_model->update_customer_bank($customers_bank_update,$cust_id,$set_date,$time);
        // $this->cashier_model->db->last_query();die();
        $js_rcp='';
        if(PRINT_VERSION && PRINT_VERSION == 'V3'){
            $js_rcp = $this->print_rdeposit($cust_id,true,$date_schedule,$time_schedule);
        }else{
            $this->print_rdeposit($cust_id,true,$date_schedule,$time_schedule);
        }
        
        // sess_clear('trans_type_cart');
        if(MIGRATION_VERSION == '2'){
                // run_main_exec();
                // run_master_exec();
             
        }
        // echo var_dump($kitchen_printer);
        // return false;
        $this->update_tbl_activity(null,true);
        if($asJson)
            echo json_encode(array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type,'js_rcp'=>$js_rcp));
        else
            return array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type,'js_rcp'=>$js_rcp);
    }
    public function print_rdeposit($id=null,$asJson=false,$date_schedule=null,$time_schedule=null){
        $header = $this->print_rheader();
        $print_str = $header['print_str'];
        $branch = $header['branch'];
        $select = "customers_bank.*,users.username,customers.fname,customers.mname,customers.lname,customers.suffix,terminals.terminal_code";
        $args['bank_id'] = $id;
        $join["users"] = array('content'=>"customers_bank.user_id = users.id");
        $join["customers"] = array('content'=>"customers_bank.cust_id = customers.cust_id");
        $join["terminals"] = array('content'=>"customers_bank.pos_id = terminals.terminal_id");
        $result = $this->site_model->get_tbl('customers_bank',$args,array(),$join,true,$select);
        // echo $this->site_model->db->last_query();die();
        // echo "<pre>",print_r($result),"</pre>";die();
        if(count($result) > 0 ){
            $trans = $result[0];
            $print_str .= append_chars(strtoupper($trans->username),'right',19," ").append_chars(date2SqlDateTime($trans->datetime),'left',19," ")."\r\n";
            $print_str .= "Terminal ID : ".($trans->terminal_code)."\r\n";
            $print_str .= "======================================"."\r\n";
            $print_str .= align_center('Acknowledgement Receipt - Deposit',38," ")."\r\n";
            $print_str .= align_center("Transaction # ".$trans->trans_ref,38," ")."\r\n";
            $print_str .= align_center("Reference # ".$trans->ref_no,38," ")."\r\n";
            $print_str .= "======================================"."\r\n";
            $print_str .= "\r\n";
            $customer_name = ucwords(strtolower($trans->fname." ".$trans->mname." ".$trans->lname." ".$trans->suffix));
            $print_str .= append_chars(substrwords("Customer: ",18,""),"right",12," ").$customer_name;
            $print_str .= "\r\n";
            $print_str .= append_chars(substrwords("Reservation Date: ",18,""),"right",12," ").$date_schedule;
            $print_str .= "\r\n";
            $print_str .= append_chars(substrwords("Reservation Time: ",18,""),"right",12," ").$time_schedule;
            $print_str .= "\r\n";
            $print_str .= "\r\n";
            $print_str .= "Amount Details \r\n";
            $print_str .= append_chars(strtoupper($trans->amount_type),"right",27," ").append_chars("P ".num($trans->amount,2),"right",10," ")."\r\n";
            if($trans->card_type != "")
                $print_str .= append_chars("  Card Type    : ".$trans->card_type,"right",38," ")."\r\n";
            if($trans->card_no != "")
                $print_str .= append_chars("  Card No.     : ".$trans->card_no,"right",38," ")."\r\n";
            if($trans->approval_code != "")
                $print_str .= append_chars("  Approval Code: ".$trans->approval_code,"right",38," ")."\r\n";
            $print_str .= "\r\n";
            $print_str .= "======================================"."\r\n";
            $print_str .= "\r\n";
            if($branch['contact_no'] != ""){
                $print_str .= align_center("For feedback, please call us at",38," ")."\r\n"
                             .align_center($branch['contact_no'],38," ")."\r\n";
            }
            if($branch['email'] != ""){
                $print_str .= align_center("Or Email us at",38," ")."\r\n" 
                             .align_center($branch['email'],38," ")."\r\n";
            }
            if($branch['website'] != "")
                $print_str .= align_center("Please visit us at \r\n".$branch['website'],38," ")."\r\n";

        }
        // echo $print_str;die();
        if(PRINT_VERSION && PRINT_VERSION == 'V3'){
            return $this->html_print($print_str);
        }else{
            $this->do_print($print_str,$asJson);
        }
        
    }
    public function print_header(){
        $this->load->model('dine/setup_model');
        $branch_details = $this->setup_model->get_branch_details();
        $branch = array();
        foreach ($branch_details as $bv) {
            $branch = array(
                'id' => $bv->branch_id,
                'res_id' => $bv->res_id,
                'branch_code' => $bv->branch_code,
                'name' => $bv->branch_name,
                'branch_desc' => $bv->branch_desc,
                'contact_no' => $bv->contact_no,
                'delivery_no' => $bv->delivery_no,
                'address' => $bv->address,
                'base_location' => $bv->base_location,
                'currency' => $bv->currency,
                'inactive' => $bv->inactive,
                'tin' => $bv->tin,
                'machine_no' => $bv->machine_no,
                'bir' => $bv->bir,
                'permit_no' => $bv->permit_no,
                'serial' => $bv->serial,
                'accrdn' => $bv->accrdn,
                'email' => $bv->email,
                'website' => $bv->website,
                'store_open' => $bv->store_open,
                'store_close' => $bv->store_close,
                "pos_footer"=>$bv->pos_footer,
                "rec_footer"=>$bv->rec_footer,
            );
        }
        $userdata = $this->session->userdata('user');
        $print_str = "\r\n\r\n";
        $wrap = wordwrap($branch['name'],35,"|#|");
        $exp = explode("|#|", $wrap);
        foreach ($exp as $v) {
            $print_str .= align_center($v,38," ")."\r\n";
        }
        $wrap = wordwrap($branch['address'],35,"|#|");
        $exp = explode("|#|", $wrap);
        foreach ($exp as $v) {
            $print_str .= align_center($v,38," ")."\r\n";
        }
        $print_str .= 
         align_center('TIN: '.$branch['tin'],38," ")."\r\n"
        .align_center('ACCRDN: '.$branch['accrdn'],38," ")."\r\n"
        // .$this->align_center('BIR # '.$branch['bir'],42," ")."\r\n"
        .align_center('MIN: '.$branch['machine_no'],38," ")."\r\n"
        // .align_center('SN: '.$branch['serial'],38," ")."\r\n"
        .align_center('PERMIT: '.$branch['permit_no'],38," ")."\r\n";
        $print_str .= "======================================"."\r\n";
        return array("print_str"=>$print_str,"branch"=>$branch);
    }
    public function print_rheader(){
        $this->load->model('dine/setup_model');
        $branch_details = $this->setup_model->get_branch_details();
        $branch = array();
        foreach ($branch_details as $bv) {
            $branch = array(
                'id' => $bv->branch_id,
                'res_id' => $bv->res_id,
                'branch_code' => $bv->branch_code,
                'name' => $bv->branch_name,
                'branch_desc' => $bv->branch_desc,
                'contact_no' => $bv->contact_no,
                'delivery_no' => $bv->delivery_no,
                'address' => $bv->address,
                'base_location' => $bv->base_location,
                'currency' => $bv->currency,
                'inactive' => $bv->inactive,
                'tin' => $bv->tin,
                'machine_no' => $bv->machine_no,
                'bir' => $bv->bir,
                'permit_no' => $bv->permit_no,
                'serial' => $bv->serial,
                'accrdn' => $bv->accrdn,
                'email' => $bv->email,
                'website' => $bv->website,
                'store_open' => $bv->store_open,
                'store_close' => $bv->store_close,
                "pos_footer"=>$bv->pos_footer,
                "rec_footer"=>$bv->rec_footer,
            );
        }
        $userdata = $this->session->userdata('user');
        $print_str = "\r\n\r\n";
        $wrap = wordwrap($branch['name'],35,"|#|");
        $exp = explode("|#|", $wrap);
        foreach ($exp as $v) {
            $print_str .= align_center($v,38," ")."\r\n";
        }
        $wrap = wordwrap($branch['address'],35,"|#|");
        $exp = explode("|#|", $wrap);
        foreach ($exp as $v) {
            $print_str .= align_center($v,38," ")."\r\n";
        }
        // $print_str .= 
        //  align_center('TIN: '.$branch['tin'],38," ")."\r\n"
        // .align_center('ACCRDN: '.$branch['accrdn'],38," ")."\r\n"
        // // .$this->align_center('BIR # '.$branch['bir'],42," ")."\r\n"
        // .align_center('MIN: '.$branch['machine_no'],38," ")."\r\n"
        // // .align_center('SN: '.$branch['serial'],38," ")."\r\n"
        // .align_center('PERMIT: '.$branch['permit_no'],38," ")."\r\n";
        $print_str .= "======================================"."\r\n";
        return array("print_str"=>$print_str,"branch"=>$branch);
    }
    public function do_print($print_str=null,$asJson=false){
        if (!$asJson) {
        // echo 'haha';die();
            // echo "<pre style='background-color:#fff'>$print_str</pre>";
            echo json_encode(array("code"=>"<pre style='background-color:#fff'>$print_str</pre>"));
        }
        else{
        // echo $print_str;die();
            $filename = "report.txt";
            $fp = fopen($filename, "w+");
            fwrite($fp,$print_str);
            fclose($fp);

            $batfile = "print.bat";
            $fh1 = fopen($batfile,'w+');
            $root = dirname(BASEPATH);

            fwrite($fh1, "NOTEPAD /P \"".realpath($root."/".$filename)."\"");
            fclose($fh1);
            session_write_close();
            // exec($filename);
            exec($batfile);
            session_start();
            unlink($filename);
            unlink($batfile);  
        }
    }


    public function get_menu_submodifiers($mod_id=null,$trans_id=null,$other=null){
            $this->load->model('dine/menu_model');
            $this->load->model('dine/mods_model');
            $ttype = $this->input->post('ttype');
            $menu_submods = $this->menu_model->get_menu_submodifiers(null,$mod_id);
            $branch_color = $this->menu_model->get_branch_color(null);
            $b_color = "";
            foreach ($branch_color as $bc => $bc_val) {
                $b_color = $bc_val->branch_color;
                if(empty($bc_val->branch_color)){
                    $branch_text_color = '#333';
                }else{
                    $branch_text_color = $bc_val->branch_text_color;
                }
            }
            $group = array();
            $grouping = array();
            // $grp = array();
            $dflts = array();
            $grp_ctr = 1;
            if(count($menu_submods) > 0){
                foreach ($menu_submods as $res) {

                    $price = $res->cost;
                    if($ttype != 'dinein' && $ttype != 'reservation'){
                        $where = array('mod_sub_id'=>$res->mod_sub_id,'trans_type'=>$ttype);
                        $cost_det = $this->site_model->get_details($where,'modifier_sub_prices');

                        if(count($cost_det) > 0){
                            $price = $cost_det[0]->price;
                        }
                    }

                    $grp_id = str_replace(' ', '', $res->group);

                    $qty = 1;
                    if(isset($res->qty)){
                        $qty = $res->qty;
                    }

                    if(!isset($grouping[$res->group])){
                        $grouping[$res->group] = array(
                            'group_name' => $res->group,
                            'qty' => $qty,
                            'auto_cnt' => 0,
                            'group_id' => $grp_id
                        );
                    }

                    $group[$res->mod_sub_id] = array(
                        "name"=>$res->name,
                        "price"=>$price,
                        "branch_text_color"=>$branch_text_color,
                        'bcolor'=>$b_color,
                        'group'=>$res->group,
                        'group_id' => $grp_id
                        // "multiple"=>$res->multiple,
                        // "min_no"=>$res->min_no
                    );


                    // $grp[] = $res->mod_group_id;


                    if($res->is_auto == 1){
                        
                        $row = $grouping[$res->group];
                        $row['auto_cnt'] = $row['auto_cnt'] + 1;
                        $grouping[$res->group] = $row;



                        $name  = 'trans_submod_cart';
                        $wagon = array();
                        if($this->session->userData($name)){
                            $wagon = $this->session->userData($name);
                        }


                        $name2  = 'trans_mod_cart';
                        $wagon2 = array();
                        $row_mod = array();
                        $mqty = 1;
                        if($this->session->userData($name2)){
                            $wagon2 = $this->session->userData($name2);
                            $row_mod = $wagon2[$other];

                            $mqty = $row_mod['qty'];
                        }



                        $err = null;

                        $defaults = array(
                            'trans_id'=>$trans_id,
                            'mod_sub_id'=>$res->mod_sub_id,
                            'mod_id'=>$mod_id,
                            'mod_line_id'=>$other,
                            // 'menu_id'=>$menu_id,
                            'name'=>$res->name,
                            // 'mandatory'=>$mod_grp['mandatory'],
                            // 'multiple'=>$mod_grp['multiple'],
                            // 'name'=>$mod['name'],
                            'price'=>$price,
                            "bcolor"=>$b_color,
                            "branch_text_color"=>$branch_text_color,
                            'group'=>$res->group,
                            'group_id' => $grp_id,
                            'qty'=>$mqty
                        ); 

                        if(count($wagon) > 0){
                            // foreach ($wagon as $key => $det) {
                            // # code...
                            //     if($defaults['group'] == $det['group'] && $det['mod_line_id'] == $defaults['mod_line_id']){
                            //         $err = 'You can select 1 item per group';
                            //         break;
                            //     }
                            // }


                            if($err == null){
                                $wagon[] = $defaults;
                                $dflts[] = $defaults;
                            }

                        }else{
                            $wagon[] = $defaults;
                            $dflts[] = $defaults;
                        }

                        $maxid = max(array_keys($wagon));
                        $this->session->set_userData($name,$wagon);
                    }




                }
                // $details = $this->mods_model->get_modifier_group_details(null,$grp);
                // $dets = array();
                // foreach ($details as $det) {
                //     if($det->mod_inactive == 0){
                //         $dets=array(
                //             "name"=>$det->mod_name,
                //             "cost"=>$det->mod_cost,
                //             "default"=>$det->default
                //         );
                        
                //         $group[$det->mod_group_id]['details'][$det->mod_id] = $dets;
                //     }
                // }
                
                


            }
            // echo "<pre>",print_r($group),"</pre>";die();

            ksort($grouping);

            echo json_encode(array('group'=>$group,'dflts'=>$dflts,'grouping'=>$grouping));
        }
        public function get_tables_other2($asJson=true,$tbl_id=null,$type='reservation'){
        $this->load->model('dine/cashier_model');
        $tbl = array();
        $occ = array();
        $set_date = date("Y-m-d");
        if($tbl_id == 'null'){
            $tbl_id = null;
        }
            // $tbl_id = 3;
            $type = 'dinein';
        // echo $type;
         // die();
        $occ_tbls = $this->cashier_model->get_occupied_rtables_other($tbl_id,$set_date);
        $billed = array();
        foreach ($occ_tbls as $det) {
          $occ[] = $det->table_id;
        }
        foreach ($occ_tbls as $det) {
          if($det->billed == 1)
            $billed[] = $det->table_id;
        }
        // echo 'ssss'; die();
        $tables = $this->cashier_model->get_tables_other($tbl_id,$type);
        // echo "<pre>",print_r($tables),"</pre>";die();
        // echo $this->cashier_model->db->last_query(); die();
        // echo "<pre>",print_r($tables),"</pre>";die();
        foreach ($tables as $res) {
            $status = 'green';
            if(in_array($res->tbl_id, $occ)){
                if(in_array($res->tbl_id, $billed)){
                    $status = 'orange';
                }
                else
                    $status = 'red';
            }
            $tbl[$res->tbl_id] = array(
                "name"=> $res->name,
                "top"=> $res->top,
                "left"=> $res->left,
                "stat"=> $status
            );
        }


        if($asJson)
            echo json_encode($tbl);
        else
            return $tbl;
    }
    public function get_tbl_status_other2($asJson=true){
        $tbls = $this->get_tables_other2(false);
        if($asJson)
            echo json_encode($tbls);
        else
            return $tbl;
    }
    public function get_rtables($asJson=true,$tbl_id=null){
        $this->load->model('dine/cashier_model');
        // print_r($this->input->post('type'));exit;
        $tbl = array();
        $occ = array();
        $_POST['type']='reservation';
        if($this->input->post('type')=='reservation'){
            $set_date = date('Y-m-d',strtotime($this->session->userdata('date_schedule')));
            $time_selected = date('H:i',strtotime($this->session->userdata('time_schedule')));
        }else{
            $set_date = date("Y-m-d");
        }
        
        // $set_time = date("H:i:s");
        // $occ_tbls = $this->cashier_model->get_reserveDateTime($set_date);
        $occ_tbls = $this->cashier_model->get_occupied_rtables(null,$set_date);
        $billed = array();
        foreach ($occ_tbls as $det) {
        //     $args["set_time >= '".$time_format."'"] = array('use'=>'where','val'=>null,'third'=>false);
        // $args["ADDTIME(set_time, '03:00:00') < '".strtotime($time_format . ' + 3 hours')."'"] = array('use'=>'where','val'=>null,'third'=>false);

        //     args["('".$time_format ."' <= set_time && '".date('H:i', strtotime($time_format.'+3 hours'))."' <= ADDTIME(set_time, '03:00:00')) 
        // && '".date('H:i', strtotime($time_format.'+3 hours'))."' > set_time || 
        //        ('".$time_format ."' > set_time && '".$time_format."' < ADDTIME(set_time, '03:00:00') && '".date('H:i', strtotime($time_format.'+3 hours'))."' > ADDTIME(set_time, '03:00:00')) || 
        //        ('".$time_format ."' > set_time && '".$time_format."' < ADDTIME(set_time, '03:00:00') && '".date('H:i', strtotime($time_format.'+3 hours'))."' < ADDTIME(set_time, '03:00:00'))"] = array('use'=>'where','val'=>null,'third'=>false);
            // echo  $time_selected .' '. date('H:i',strtotime($time_selected . ' + 3 hours'));
            if($this->input->post('type')=='reservation'){
                if($time_selected <= $det->set_time && date('H:i',strtotime($time_selected . ' + 3 hours')) <= date('H:i',strtotime($det->set_time . ' + 3 hours')) && date('H:i',strtotime($time_selected . ' + 3 hours')) > $det->set_time){
                    $occ[] = $det->table_id;
                }

                elseif($time_selected > $det->set_time && $time_selected < date('H:i',strtotime($det->set_time . ' + 3 hours')) && date('H:i',strtotime($time_selected . ' + 3 hours')) > date('H:i',strtotime($det->set_time . ' + 3 hours'))){
                    $occ[] = $det->table_id;
                }

                elseif($time_selected > $det->set_time && $time_selected < date('H:i',strtotime($det->set_time . ' + 3 hours'))  && date('H:i',strtotime($time_selected . ' + 3 hours')) < date('H:i',strtotime($det->set_time . ' + 3 hours'))){
                    $occ[] = $det->table_id;
                }

                elseif($time_selected == $det->set_time){
                   $occ[] = $det->table_id;
                }

            }else{
                $occ[] = $det->table_id;
            }
          
          
        }
        foreach ($occ_tbls as $det) {
          if($det->billed == 1)
            $billed[] = $det->table_id;
        }
        $tables = $this->cashier_model->get_tables();
        foreach ($tables as $res) {
            $status = 'green';
            if(in_array($res->tbl_id, $occ)){
                if(in_array($res->tbl_id, $billed)){
                    $status = 'orange';
                }
                else
                    $status = 'red';
            }
        // echo "<pre>",print_r($status),"</pre>";die();
            $tbl[$res->tbl_id] = array(
                "name"=> $res->name,
                "top"=> $res->top,
                "left"=> $res->left,
                "stat"=> $status
            );
        }
        if($asJson)
            echo json_encode($tbl);
        else
            return $tbl;
    }
    public function get_rtbl_status($asJson=true){
        $tbls = $this->get_rtables(false);
        if($asJson)
            echo json_encode($tbls);
        else
            return $tbl;
    }  
    public function update_set_date($sdate=null,$stime=null,$sid=null){
        // echo "<pre>",print_r($_POST),"</pre>";die();
        $this->load->model('dine/settings_model');
        $date_schedule = $this->input->post('date_selected');
        $time_schedule = $this->input->post('time_selected');
        $sales_id = $this->input->post('sales_id');
        $ref_no = $this->input->post('ref_no');
        $cust_id = $this->input->post('cust_id');
        $select = "customers_bank.set_time,customers_bank.set_date";
        $cust_amount = $this->input->post('cust_amount');
        $add_deposit = $this->input->post('add_deposit');
        $tbl_id = $this->input->post('tbl_id');
        $t_cust_depo = 0;
        $t_cust_depo = $cust_amount + $add_deposit;
        // $args['bank_id'] = $id;
        $args = array();
        $join = array();
        // $join["customers"] = array('content'=>"customers_bank.cust_id = customers.cust_id");
        // $join["terminals"] = array('content'=>"customers_bank.pos_id = terminals.terminal_id");
         // $time_selected = "09:00 AM";
        // echo $time_selected;die();

        $time_format = date("H:i:s", strtotime($time_schedule));
        $args['set_date'] = date('Y-m-d',strtotime($date_schedule));
        // $args["(('".$time_format ."' <= set_time && '".date('H:i', strtotime($time_format.'+3 hours'))."' <= ADDTIME(set_time, '03:00:00') && '".date('H:i', strtotime($time_format.'+3 hours'))."' < set_time && '".date('H:i', strtotime($time_format.'+3 hours'))."' < ADDTIME(set_time, '03:00:00') ) 
        //  || 
        //        ('".$time_format ."' > set_time && '".$time_format."' < ADDTIME(set_time, '03:00:00') && '".date('H:i', strtotime($time_format.'+3 hours'))."' > ADDTIME(set_time, '03:00:00')) || 
        //        ('".$time_format ."' > set_time && '".$time_format."' < ADDTIME(set_time, '03:00:00') && '".date('H:i', strtotime($time_format.'+3 hours'))."' < ADDTIME(set_time, '03:00:00')))"] = array('use'=>'where','val'=>null,'third'=>false);
        

        $time_result = $this->site_model->get_tbl('customers_bank',$args,array(),$join,true,$select);
            $sql = $this->db->last_query();
        $table_list = $this->settings_model->get_tables_other(null);
        $error = 0;


        // foreach ($time_result as $tk => $time_val) {
        //     $tr = date('H:i A',strtotime($time_val->set_time));
        //     $dr = date('m/d/Y',strtotime($time_val->set_date));
        // // echo '<pre>', print_r($dr),"</pre>";die();
        //     if($tr == $time_selected && $dr == $date_selected){
        //         // echo $tr. ' haha'.$time_selected;die();
        //     // echo '<pre>', print_r($tr),"</pre>";die();
        //         $error = 1;
        //         // echo '<script>alert("Welcome to Geeks for Geeks")</script>';
        //     }
        // }

        $ctr = 0;
        foreach($time_result as $det){
                if($time_format <= $det->set_time && date('H:i',strtotime($time_format . ' + 3 hours')) <= date('H:i',strtotime($det->set_time . ' + 3 hours')) && date('H:i',strtotime($time_format . ' + 3 hours')) < $det->set_time && date('H:i',strtotime($time_format . ' + 3 hours')) < date('H:i',strtotime($det->set_time . ' + 3 hours'))){
                    $ctr++;
                }

                elseif($time_format > $det->set_time && $time_format < date('H:i',strtotime($det->set_time . ' + 3 hours')) && date('H:i',strtotime($time_format . ' + 3 hours')) > date('H:i',strtotime($det->set_time . ' + 3 hours'))){
                    $ctr++;
                }

                elseif($time_format > $det->set_time && $time_format < date('H:i',strtotime($det->set_time . ' + 3 hours'))  && date('H:i',strtotime($time_format . ' + 3 hours')) < date('H:i',strtotime($det->set_time . ' + 3 hours'))){
                    $ctr++;
                }
                elseif($time_format == $det->set_time){
                    $ctr++;
                }

        }

        if($time_result && count($table_list)==$ctr){
        // if($time_result && count($table_list)==count($time_result)){
            $error = 1;
        }else if(date('Y-m-d',strtotime($date_schedule)) < date('Y-m-d')){
            $error = 2;
        }else{
            $ds            = date_create($date_schedule);
            $set_date      = date_format($ds,"Y-m-d");
            $time          = date('H:i', strtotime($time_schedule));
            // $cust_id = $this->session->userdata('cust_id');
            $customers_bank_update = array(
                    "set_date"       => $set_date,
                    "set_time"       => $time,
                    "amount"       => $t_cust_depo,
                );
            // echo $sales_id. ' -' .$time_schedule. '-'.$cust_id. '-'.$set_date. '- <pre>',print_r($customers_bank_update),'</pre>';die();
            $this->cashier_model->update_customer_bank_time($customers_bank_update,$cust_id,$ref_no);
            $dt = $set_date." ".$time;
            if($sales_id){
                if(!empty($tbl_id)){
                    $ts_dt_update = array(
                            "datetime"       => $dt,
                            "table_id"       => $tbl_id,
                        );
                }else{
                    $ts_dt_update = array(
                            "datetime"       => $dt,
                            // "table_id"       => $tbl_id,
                        );
                }
                $this->cashier_model->update_ts_dt($ts_dt_update,$sales_id);
            }
            // echo $this->cashier_model->db->last_query();die();
            $error = 0;
        }
        echo json_encode(array('date_schedule'=>$date_schedule,'time_schedule'=>$time_schedule,'msg'=>$error));

        
    }

    public function get_series($code=null){
        
         if (preg_match('/^(\D*?)(\d+)(.*)/', $code, $result) == 1)
        {
            $code_v2 = $code;

            list($all, $prefix, $number, $postfix) = $result;  
           

            if($postfix == null){
                $dig_count = strlen($number); // How many digits? eg. 0003 = 4
                $fmt = '%0' . $dig_count . 'd'; // Make a format string - leading zeroes
                $nextval =  sprintf($fmt, intval($number + 1)); // Add one on, and put prefix back on

                $new_ref=$prefix.$nextval.$postfix;
            }else{
                // $code=$postfix;
                // $posf =  list($all, $prefix, $number, $postfix) = $result;  
                $posf =explode('-', $postfix);
                $number = $posf[count($posf)-1];

                $dig_count = strlen($number); // How many digits? eg. 0003 = 4
                $fmt = '%0' . $dig_count . 'd'; // Make a format string - leading zeroes
                $nextval =  sprintf($fmt, intval($number + 1)); // Add one on, and put prefix back on

                $new_list = explode('-', $code);

                unset($new_list[count($new_list)-1]);

                $new_list[] = $nextval;

                $new_ref=implode('-', $new_list);
            }
            
           // echo ;exit;
            // if(is_numeric($code)){
                

                // if(!is_numeric($postfix)){
                //     $new_ref= ++$code;
                //     // echo $new_ref;
                // }

            // }else{
            //      $new_ref= ++$code;
            // }
            // elseif(strlen($code) != strlen(intval($code))){
            //     $new_ref=$prefix.$nextval.$postfix;
            // }

            // if($new_ref==$code){
            //     $new_ref= ++$code;
            // }
            
        }
        else{
            $new_ref=$code;
        }

        return $new_ref;
    }

    function test(){
         $search = '2000500001';
        $search_to = '2000500004';
        $series=$search;
         while($series <= $search_to){
            echo $series;
                    $series = str_replace("-", "", $this->get_series($series));
                    // $return = $this->gift_cards_model->get_gift_card_info($series,false);

                    // if ($return[0]->inactive == 1)
                    // echo json_encode(array('error'=>'Gift card has already been used'));

                   
                }

    }

     public function discount_item_qty($trans_id=-1,$menu_id=-1){

            $trans_disc_cart = sess('trans_disc_cart');
            // $disc_id = $this->input->post('disc_id');
            // $disc_code = $this->input->post('disc_code');
            // $disc_remarks = $this->input->post('disc_remarks');
            // $promo_qty = $this->input->post('promo_qty');
            // $disc_qty = $this->input->post('disc_qty');
            // $rate = $this->input->post('rate')/100;



            //get details of disc
            // $where = array('disc_id'=>$disc_id);
            // $det_d = $this->site_model->get_details($where,'receipt_discounts');

            $wagon = array();
            $error = null;
            $name  = 'trans_cart';

            $wagon = $this->session->userData($name);
           

            // print_r($trans_id);exit;
            // $row = $wagon[$trans_id];
            if($trans_id != -1){
                 $wagon = $this->session->userData($name);
                 $row = $wagon[$trans_id];
                 $menu_id = $row['menu_id'];
            }

            $promos = $this->cashier_model->get_menu_promos($menu_id);

            if(!$promos){
                return false;
            }

            $prs = array();
            $prm = array();
            foreach ($promos as $pr) {
                $prs[] = $pr->promo_id;
                $prm[$pr->item_id][] = array('id'=>$pr->promo_id,'val'=>$pr->value,'abs'=>(int)$pr->absolute);
            }

            $time = $this->site_model->get_db_now();
            $day = strtolower(date('D',strtotime($time)));
            $sched = $this->cashier_model->get_menu_promo_schedule($prs,$day,date2SqlDateTime($time));
            $schs = array();
            foreach ($sched as $sc) {
                $schs[] = $sc->promo_id;
            }


            foreach ($prm[$menu_id] as $p) {
                if(in_array($p['id'], $schs)){
                    if($pr->promo_qty == $pr->disc_qty){
                        if($p['abs'] == 1){
                            
                        }
                        else{
                            $opt['cost'] -=  ($pr->value / 100) * $opt['cost'];
                        }
                    }

                    $cost = 0;
                    $disc_id = $pr->promo_id;
                    $disc_code = $pr->promo_code;
                    $disc_remarks = '';
                    $promo_qty = $pr->promo_qty;
                    $disc_qty = $pr->disc_qty;
                    $rate = $pr->value/100;
                    
                    break;
                }
            }####

            $total_qty = 0;
            $ctr = 0;
            foreach($wagon as $i => $cart){              

                if($cart['menu_id'] == $menu_id){
                    $cost = $cart['cost'];
                     if($ctr == 0){
                        $trans_id = $i;
                     }
                    $total_qty += $cart['qty'];

                    $ctr++;
                }
            }
            
            // $char = $this->input->post('operator');
            // $val = $this->input->post('value');
            if($total_qty < $promo_qty){               
                $this->remove_item_disc($menu_id);
               return false;
            }
            echo 'cde';
            // exit;
            $total_amt = round((int)($total_qty / $promo_qty)*$disc_qty)* $cost;

            // $to_disc = $total_amt / 1.12;
            $less_v = 0;
            
            $discount = $total_amt * $rate;
            $total_disc = $less_v + $discount;


            // echo $total_disc; die();
            $disc = array();
            if($this->session->userData('item_discount')){
                $disc = $this->session->userData('item_discount');
            }

            $selected = $this->session->userData('selected_person');
            // echo "<pre>",print_r($selected),"</pre>";die();

            $disc[$trans_id] = array(
                                    'discount'=>$discount,
                                    // 'less_vat'=>$less_v,
                                    'disc_id'=>$disc_id,
                                    'type'=>'equal',
                                    'disc_code'=>'QTYDISC',
                                    'remarks'=>$disc_remarks,
                                    'disc_rate'=>$rate,
                                    'items'=>$trans_id,
                                    'amount'=>$discount,
                                    'no_tax'=>0,
                                    'name'=>$selected['sname'],
                                    'bday'=>null,
                                    'code'=>$selected['code'],
                                    'total_dsc'=>$total_disc,
                                    'guest'=>1,
                                    'menu_id'=>$menu_id
            );
            
            // echo "<pre>",print_r($disc),"</pre>";die();
            $new_amt = $total_amt - $total_disc;
            // switch($char){
            //     case "times":
            //         $row['qty'] *= $val;
            //         break;
            //     case "equal":
            //         $row['qty'] = $val;
            //         break;
            //     case "plus";
            //         $row['qty'] += $val;
            //         break;
            //     case "minus";
            //         $row['qty'] -= $val;
            //         if($row['qty'] <= 0)
            //             $row['qty'] = 1;
            //         break;
            // }
            // $wagon[$trans_id] = $row;

            // unset($this->session->userData('item_discount')[$trans_id]);
            $this->remove_item_disc($menu_id);
            $this->session->set_userData('item_discount',$disc);            

            // $wagon = $this->session->userData('item_discount');
            // unset($wagon[0]);
            // print_r($wagon);
            // exit;
            echo json_encode(array("error"=>null,"discounted_amt"=>$discount .' set'));
        }

        function promo_item_qty($trans_id=-1,$ttype=''){           

            $name  = 'trans_cart';

            $wagon = $this->session->userData($name);
            $row = $wagon[$trans_id];
            $menu_id = $row['menu_id'];

            $promos = $this->cashier_model->get_promo_free_menu($menu_id);
            $promos_amt = $this->cashier_model->get_promo_free_menu(null,1);
            $promos_menu = $this->cashier_model->get_promo_free_menu(null,null,$menu_id);

            $promos = (object) array_merge((array)$promos,(array)$promos_amt,$promos_menu);
            
            $prs = array();
            $prm = array();

            if(!$promos){
                return false;
            }

            
            $time = $this->site_model->get_db_now();
            $day = strtolower(date('D',strtotime($time)));
            $sched = $this->cashier_model->get_promo_free_menu_schedule($prs,$day,date2SqlDateTime($time));

            $schs = array();
            foreach ($sched as $sc) {
                $schs[] = $sc->menu_sched_id;
            }

            $nwagon = array();
            $line_refs = array();
            $refs_list = array();
            $is_promo=false;

            foreach($wagon as $line => $cart){ 
                if(isset($cart['ref_trans_id'])){
                    $lrefs = explode(',', $cart['ref_trans_id']);
                    foreach($lrefs as $lref){
                        $refs_list[] = $lref;
                        
                    } 
                }

                if(isset($cart['is_promo']) && $cart['is_promo']==1){
                    $is_promo =  true;
                }
            }
            foreach($wagon as $line => $cart){ 
                if(isset($cart['ref_trans_id'])){    // print_r($cart['ref_trans_id']);exit;
                    $lrefs = explode(',', $cart['ref_trans_id']);
                    foreach($lrefs as $lref){
                        if(in_array($trans_id, $lrefs)){  
                            $line_refs[] =  array('line_ref'=>$lref,'line'=>$line);
                        }
                        
                        // if($lref == $trans_id){                   
                            // $refs_list[] = $lref;
                        // }
                        
                    }
                    
                }
// print_r($refs_list);exit;
                if(in_array($cart['menu_id'],array_keys($nwagon)) && !in_array($line, $refs_list) && !isset($cart['is_promo'])){
                    $nwagon[$cart['menu_id']]['qty'] +=  $cart['qty'];
                    $nwagon[$cart['menu_id']]['line_ids'] .=','.$line ;
                }else if(!in_array($line, $refs_list) && !isset($cart['is_promo'])){
                    $nwagon[$cart['menu_id']] = $cart;
                    $nwagon[$cart['menu_id']]['line_ids'] = $line;
                }  
                

            }
            // print_r($promos);exit;
            $promo_exist=false;
            $single_promo = false;
            $qty = 0;
            $id = '';

            foreach ($promos as $pr) {
                if($pr->menu_amount > 0  && !$is_promo){
                    if($pr->promo_option == 1){


                        $totals = $this->total_trans(false);

                        if($pr->menu_category_id != ''){
                            $totals['total'] = $this->cat_total($pr->menu_category_id);
                        }

                        if($totals['total'] < $pr->amount){
                            $promo_exist=true;
                        }

                        if(!$promo_exist && $row['menu_id'] == $pr->menu_id){
                            $free_menu = $pr->menu_id;

                            // $menus = $this->menu_model->get_menus($pr->menu_id);
                            // $res = $menus[0];
                            $wagon[$trans_id]['cost']=$pr->menu_amount;
                            $wagon[$trans_id]['is_promo']=1;
                            $wagon[$trans_id]['promo_type']=$pr->promo_option;
                            $wagon[$trans_id]['free_promo_amount']=$pr->amount;
                            $wagon[$trans_id]['menu_category_id']=$pr->menu_category_id;
                            $wagon[$trans_id]['pf_id']=$pr->pf_id;
                            $this->session->set_userData($name,$wagon);

                            $single_promo = true;
                                
                            echo json_encode(array('price'=>$pr->menu_amount));
                            return false;

                        }
                    }else if($pr->promo_option==2){ 
                        $has_menu = explode(',', $pr->has_menu_id);
                        $has_qty = explode(',', $pr->has_menu_qty);
                        $menu_list = array();
                        $multi_line = false;

                        $has_qty_total = 0;
                        $wagon_qty_total = 0;

                        foreach($has_qty as $hqty){
                            $has_qty_total += $hqty;
                        }

                        foreach($wagon as $line => $cart){
                            foreach($has_menu as $h=>$h_menu){
                                if($cart['menu_id'] == $h_menu && $cart['qty'] > $has_qty[$h] && $pr->menu_id == $h_menu){
                                        $menu_list[$h_menu]=$has_qty[$h];
                                         // $wagon_qty_total += $cart['qty']/$has_qty[$h];
                                         $trans_ids[] = $line; 
                                }else if($cart['menu_id'] == $h_menu && $cart['qty'] >= $has_qty[$h]){
                                        $menu_list[$h_menu]=$has_qty[$h];
                                         // $wagon_qty_total += $cart['qty']/$has_qty[$h];
                                         $trans_ids[] = $line;          
                                }else if($pr->menu_id == $h_menu && $pr->menu_id == $cart['menu_id']){
                                    $multi_line = true;
                                }

                                // echo $cart['menu_id'] .' '. $h_menu;
                            }
                        }
                        // echo count($has_menu);exit;
                        $menus = $this->menu_model->get_menus($pr->menu_id);
                        $res = $menus[0];

 
                        if(!$multi_line && count($menu_list) == count($has_menu)){

                            foreach($wagon as $line=>$cart){ 
                                if($cart['menu_id'] == $pr->menu_id && $cart['qty'] > $menu_list[$cart['menu_id']]){
                                    // echo json_encode(array('id'=>1,'items'=> $wagon[0],'ref_line'=>0,'ref_qty'=>1));exit; 
                                    $wagon[$line]['qty']= $cart['qty']-$pr->qty;

                                    $id = max(array_keys($wagon))+1;
                                    $wagon[] = array(
                                                    "menu_id"=>$res->menu_id,
                                                    "name"=>$res->menu_name,
                                                    "qty"=>1,
                                                    "cost"=>$pr->menu_amount,
                                                    "no_tax"=>$res->no_tax,
                                                    "free"=>1,
                                                    "sched"=>$res->menu_sched_id,                                                    
                                                    'type'=>'free-menu',
                                                    'ref_trans_id'=>$trans_id,
                                                    'is_takeout'=>$ttype,
                                                    'is_promo'=>1,
                                                    'promo_type'=>$pr->promo_option,                                                    
                                                    'menu_category_id'=>$pr->menu_category_id,
                                                    'pf_id'=>$pr->pf_id,
                                                );

                                    $this->session->set_userData($name,$wagon);

                                    $single_promo = true;

                                    echo json_encode(array('id'=>$id,'items'=> $wagon[$id],'ref_line'=>$line,'ref_qty'=>$wagon[$line]['qty']));

                                    return false;
                                }
                            }                            
                        }else{
                             $menu_list = array();
                             foreach($nwagon as $mid => $cart){
                                foreach($has_menu as $h=>$h_menu){
                                    if($cart['menu_id'] == $h_menu && $cart['qty'] > $has_qty[$h] ){
                                            $menu_list[$h_menu]=$h_menu;
                                             // $wagon_qty_total += $cart['qty']/$has_qty[$h];
                                             $trans_ids = explode(',', $cart['line_ids']);                                         
                                    }
                                    else if($cart['menu_id'] == $h_menu && $cart['qty'] >= $has_qty[$h] && $pr->menu_id != $cart['menu_id']){
                                            $menu_list[$h_menu]=$h_menu;
                                             // $wagon_qty_total += $cart['qty']/$has_qty[$h];
                                             $trans_ids = explode(',', $cart['line_ids']);                                         
                                    }
                                }
                            } 
                                 // print_r($nwagon);
                            if(in_array($pr->sched_id, $schs) && count($menu_list) == count($has_menu) && $pr->menu_id == $wagon[$trans_id]['menu_id']){
                               
                                $wagon[$trans_id]['cost'] = $pr->menu_amount;
                                $wagon[$trans_id]['is_promo'] = 1;
                                $wagon[$trans_id]['promo_type'] = $pr->promo_option;
                                $wagon[$trans_id]['pf_id'] = $pr->pf_id;

                                $this->session->set_userData($name,$wagon);

                                $single_promo = true;

                                echo json_encode(array('id'=>$trans_id,'price'=>$pr->menu_amount));
                                return false;
                            }  
                        }
                    } 
                    
                }else if(!$single_promo){
                    if($pr->promo_option == 1  && !$is_promo){
                        $totals = $this->total_trans(false);

                        if(!in_array($pr->menu_category_id, array('',0))){
                            $totals['total'] = $this->cat_total($pr->menu_category_id);
                        }

                        // if($totals['total'] < $pr->amount){
                        //     $promo_exist=true;
                        // }

                        // if(!$promo_exist && !$refs_list){
                        // echo $pr->value;
                        if($totals['total'] >= $pr->amount && $pr->value > 0){
                            $disc_cart = $this->session->userData('discount_cart');
                            $disc_amt = $totals['total']/1.12 * ($pr->value/100);
                            $disc_cart['PROMODISC'] = array(
                                    'discount'=>$disc_amt,
                                    // 'less_vat'=>$less_v,
                                    'disc_id'=>81,
                                    'disc_type'=>'equal',
                                    'disc_code'=>'PROMODISC',
                                    'remarks'=>'',
                                    'disc_rate'=>$pr->value,
                                    // 'items'=>0,
                                    'amount'=>$disc_amt,
                                    'no_tax'=>0,
                                    'name'=>'',
                                    'bday'=>null,
                                    'code'=>'',
                                    'total_dsc'=>$disc_amt,
                                    'guest'=>1,
                                    'persons'=>array(1),
                                    'fix'=>1,
                                    'no_tax'=>0,
                            );
                                // print_r($disc);
                            $single_promo = true;
                            $this->session->set_userData('trans_disc_cart',$disc_cart);
                            // print_r($this->session->userData('trans_disc_cart'));
                            $counter = $this->session->userData('counter');
                            $counter['pf_id'] = $pr->pf_id;
                            $counter['percent_disc'] = $pr->value;
                            $this->session->set_userData('counter',$counter);

                             echo json_encode(array('percent_disc'=>$pr->value));
                        }
                        else if($totals['total'] >= $pr->amount){
                            $free_menu = $pr->menu_id;

                            $menus = $this->menu_model->get_menus($pr->menu_id);
                            $res = $menus[0];
                                
                            if(in_array($pr->sched_id, $schs)){
                                $id = max(array_keys($wagon))+1;
                                $wagon[] = array(
                                                "menu_id"=>$res->menu_id,
                                                "name"=>'FREE '.$res->menu_name,
                                                "qty"=>$pr->qty,
                                                "cost"=>0,
                                                "no_tax"=>$res->no_tax,
                                                "free"=>1,
                                                "sched"=>$res->menu_sched_id,                                                    
                                                'type'=>'free-menu',
                                                // 'ref_trans_id'=>$trans_id,
                                                'is_takeout'=>$ttype,
                                                'is_promo'=>1,
                                                'promo_type'=>$pr->promo_option,
                                                'free_promo_amount'=>$pr->amount,
                                                'pf_id'=>$pr->pf_id
                                            );
                                $qty =  $pr->qty;
                                 $this->session->set_userData($name,$wagon);
                            }
                        }
                        
                    }else if($pr->promo_option==2){
                        $has_menu = explode(',', $pr->has_menu_id);
                        $has_qty = explode(',', $pr->has_menu_qty);
                        $menu_list = array();

                        $has_qty_total = 0;
                        $wagon_qty_total = 0;

                        foreach($has_qty as $hqty){
                            $has_qty_total += $hqty;
                        }
                      

                        if($line_refs){
                            $has_menus = array();
                            foreach($wagon as $line => $cart){
                                foreach($line_refs as $lref){
                                    $id = $lref['line'];
                                    $menu_has_qty = $has_qty[array_search($cart['menu_id'], $has_menu)];
                                    if($line == $lref['line_ref'] && $cart['qty'] >= $menu_has_qty){
                                        // if(isset($has_menus[$cart['menu_id']])){
                                        //     $has_menus[$cart['menu_id']] += $cart['qty']/$menu_has_qty; 
                                        // }else{
                                            $menu_list[$cart['menu_id']]=$cart['menu_id'];
                                            $has_menus[$cart['menu_id']] = $cart['qty']/$menu_has_qty; 
                                        // }
                                                                           
                                    }
                                }
                            }  

                            foreach($has_menus as $hm){
                                if($hm < $wagon_qty_total || $wagon_qty_total == 0){
                                    $wagon_qty_total = $hm;
                                }
                            } 

                            if($pr->amount == 0 && count($menu_list) == count($has_menu)){
                                $wagon[$id]['qty'] =  $wagon_qty_total*$pr->qty;
                                $qty =    $wagon_qty_total;
                            }
                            
                            $promo_exist = true;


                        }
                        
                        $free_menu = $pr->menu_id;
                       
                        $menus = $this->menu_model->get_menus($pr->menu_id);
                        $res = $menus[0];

                        
                        if(!$promo_exist && $pr->menu_amount == 0){ 
                            $wagon_qty_total = 0;
                            $trans_ids = array();
                            
                            $multi_line = false;
                            foreach($wagon as $line => $cart){
                                foreach($has_menu as $h=>$h_menu){
                                    if($cart['menu_id'] == $h_menu && $cart['qty'] >= $has_qty[$h] && !in_array($line, $refs_list) && !isset($cart['is_promo'])){
                                            $menu_list[$h_menu]=$h_menu;
                                             // $wagon_qty_total += $cart['qty']/$has_qty[$h];
                                             $trans_ids[] = $line;                                         
                                    }elseif($cart['menu_id'] == $h_menu && !in_array($line, $refs_list) && !isset($cart['is_promo'])){
                                        $multi_line = true;
                                    }
                                }
                            }  

                            if($multi_line){
                                foreach($nwagon as $mid => $cart){
                                    foreach($has_menu as $h=>$h_menu){
                                        if($cart['menu_id'] == $h_menu && $cart['qty'] >= $has_qty[$h] && isset($cart['line_ids'])){
                                                $menu_list[$h_menu]=$h_menu;
                                                 // $wagon_qty_total += $cart['qty']/$has_qty[$h];
                                                 $trans_ids = explode(',', $cart['line_ids']);                                         
                                        }
                                    }
                                }  
                            }

                            if(in_array($pr->sched_id, $schs) && count($menu_list) == count($has_menu)){
                                $id = max(array_keys($wagon))+1;
                                $wagon[] = array(
                                                "menu_id"=>$res->menu_id,
                                                "name"=>'FREE '.$res->menu_name,
                                                "qty"=>$row['qty']*$pr->qty,
                                                "cost"=>$pr->menu_amount,
                                                "no_tax"=>$res->no_tax,
                                                "free"=>1,
                                                "sched"=>$res->menu_sched_id,                                                    
                                                'type'=>'free-menu',
                                                'ref_trans_id'=>implode(',',$trans_ids),                                                
                                                'is_takeout'=>$ttype,
                                                'is_promo'=>1,
                                                'promo_type'=>$pr->promo_option,
                                                'pf_id'=>$pr->pf_id,

                                            );
                                $qty =  $row['qty']*$pr->qty;
                            }
                            
                        }   
                    }
                    
                   
                    $this->session->set_userData($name,$wagon);
                   
                   

                    if($id != ''){
                        $promo_menu = array('id'=>$id,'free_menu'=>$free_menu,'items'=> $wagon[$id]);

                       if($promo_exist){
                            $promo_menu['qty'] = $qty;
                       }

                       if(isset($trans_ids)){
                            $promo_menu['sel_trans_id'] = $trans_ids[0];
                       }

                        echo json_encode($promo_menu);
                        return;  
                    }
                }
            }
               
        
        }

        function cat_total($cat_id){
            $name  = 'trans_cart';

            $wagon = $this->session->userData($name);
            $cat_total = 0;
            foreach($wagon as $cart){
                $menu = $this->site_model->get_tbl('menus',array('menu_id'=>$cart['menu_id']));

                if($menu && $menu[0]->menu_cat_id == $cat_id){
                    $cat_total += $cart['qty'] * $cart['cost'];
                }
            }

            return $cat_total;
        }

        function delete_promo($trans_id){
            $name  = 'trans_cart';

            $wagon = $this->session->userData($name);
            
            foreach($wagon as $i=>$cart){
                if(isset($cart['free_promo_amount']) && $cart['free_promo_amount'] > 0){
                    $promo = $this->site_model->get_tbl('promo_free',array('pf_id'=>$cart['pf_id']));
                    $pr = $promo[0];
                    $totals = $this->total_trans(false);

                    if($pr->menu_category_id != ''){
                        $cat_total = $this->cat_total($pr->menu_category_id);
                        $totals['total'] = $cat_total;
                    }

                    if($totals['total'] < $cart['free_promo_amount']){
                        unset($wagon[$i]);
                        $this->session->set_userData($name,$wagon);

                        echo $i;
                        return;
                    }                   

                    
                }else if(isset($cart['ref_trans_id']) && in_array($trans_id, explode(',',$cart['ref_trans_id']))){
                    // if($cart['promo_type'] == 1){
                    //     $totals = $this->total_trans(false);
                    // }else{
                        unset($wagon[$i]);
                        $this->session->set_userData($name,$wagon);
                    // }                    

                    echo $i;
                    return;
                }elseif(isset($cart['pf_id'])){
                    $promo = $this->site_model->get_tbl('promo_free',array('pf_id'=>$cart['pf_id']));

                    if($promo){
                        $pr=$promo[0];
                        $has_menu = explode(',', $pr->has_menu_id);
                        $has_qty = explode(',', $pr->has_menu_qty);
                        $menu_list = array();

                        $has_qty_total = 0;
                        $wagon_qty_total = 0;

                        foreach($wagon as $x=>$cart2){
                            if($i != $x){
                                foreach($has_menu as $h=>$h_menu){
                                        if($cart2['menu_id'] == $h_menu){
                                            if(isset($menu_list[$h_menu])){
                                                $menu_list[$h_menu]+=$cart['qty'];                                                         
                                            }else{
                                                $menu_list[$h_menu]=$cart['qty'];  
                                            }
                                        }
                                    }
                            }

                        }

                        $ctr = 0;
                        if(count($menu_list) == count($has_menu)){
                            foreach($menu_list as $y=>$mqty ){
                                foreach($has_menu as $h=>$h_menu){
                                    if($y == $h_menu && $mqty>= $has_qty[$h]){
                                        $ctr++;
                                    }
                                }
                            }

                        }

                        if($ctr < count($has_menu)){
                            echo $i;

                            return;
                        }

                        
                    }
                }
            }

            echo -1;
        }

        function remove_item_disc($menu_id){
            $item_discount = $this->session->userData('item_discount');

            if($item_discount){
                 foreach($item_discount as $i=>$item_disc){
                    if(isset($item_disc['menu_id']) && $item_disc['menu_id'] == $menu_id){
                         unset($item_discount[$i]);

                         print_r(count($item_discount). ' test');
                    }
                   
                }

                $this->session->unset_userdata('item_discount');
                $this->session->set_userData('item_discount',$item_discount);



                echo count($item_discount) .' abc';
                
            }
        }

        function wagon(){
            $wagon = $this->session->userData('trans_cart');
            // unset($wagon[0]);
            print_r($wagon);
        } 

//     public function series($string='2000-5-99'){
// //         $this->load->library('alphanumericidincrementor');

// //          $testId2 = new AlphaNumericIdIncrementor('J0-9');
// // echo($testId2->getId() . '<br />'); // A03
// // echo($testId2->getNextId() . '<br />'); // A04

//        $last_char=substr($string,-1);
//     $rest=substr($string, 0, -1);
//     switch ($last_char) {
//         case '':
//             $next= 'A';
//             break;
//         case 'Z':
//             $next = '0';
//             $unique = increment($rest);
//             $rest = $unique;
//             break;
//         case '9':
//             $next= 'A';
//             break;
//         default:
//             $next = ++$last_char;
//             break;
//     }
//     $string=$rest.$next;

//     echo $string;
//     return $string;
// }
    public function printer_setup($type=null,$sales_id=null){
        // echo 'hhaha';die();
        $this->load->model('site/site_model');
        $this->load->model('dine/cashier_model');
        $this->load->helper('dine/cashier_helper');
        $data = $this->syter->spawn(null);
        $loaded = null;
        $order = array();
        $app_type = $type;
        $loc_res = $this->site_model->get_tbl('settings',array(),array(),null,true,'*',null,1);
        $local_tax = $loc_res[0]->local_tax;
        $kitchen_printer = "";
        if(iSetObj($loc_res[0],'kitchen_printer_name') != ""){
            $kitchen_printer = iSetObj($loc_res[0],'kitchen_printer_name');
        }
        // printer new setup
        $pr = array();
        $prints = $this->site_model->get_tbl('printer_setup',array(),array(),null,true,'*',null,1);
        foreach ($prints as $prt => $pr_val) {
            $pr = array('kitchen_printer'=>$pr_val->kitchen_printer,'beverage_printer'=>$pr_val->beverage_printer,'extra_printer'=>$pr_val->extra_printer);
        }

        // echo "<pre>",print_r($pr),"</pre>";die();
        $data['code'] = printerSetupPage($pr);
        // $data['add_css'] = 'css/cashier.css';
        $data['add_css'] = array('css/virtual_keyboard.css', 'css/cashier.css');
        $data['add_js'] = array('js/jquery.keyboard.extension-navigation.min.js','js/jquery.keyboard.min.js','js/jquery.scannerdetection.js');
        // $data['add_js'] = array('js/jquery.keyboard.extension-navigation.min.js','js/jquery.keyboard.min.js');
        $data['load_js'] = 'dine/cashier.php';
        $data['use_js'] = 'printerSetupJS';
        $data['noNavbar'] = true;
        $this->load->view('load',$data);
    }
    public function print_setup_edit_db(){
        // echo 'haha';die();
        $this->load->model('dine/cashier_model');

        // $kitchen_printer = $this->input->post('kitchen_printer');
        // $beverage_printer = $this->input->post('beverage_printer');
        // $extra_printer = $this->input->post('extra_printer');
        // echo $kitchen_printer." ".$beverage_printer." ".$extra_printer;die();
        $items = array(            
            "kitchen_printer"=>$this->input->post('kitchen_printer'),
            "beverage_printer"=>$this->input->post('beverage_printer'),
            "extra_printer"=>$this->input->post('extra_printer'),
        );
        $this->cashier_model->update_printer_setup($items,1); 
        // echo $this->cashier_model->db->last_query();die();
    }

    public function check_printer_online(){
        $this->load->model('dine/setup_model');
        sess_clear('message_printer');
        $error = "";
        $message = "Cannot print on";
        $ping_error = 0;
        // echo 'aw'; die();

        if(PRINTER_DB){

            $printers = $this->setup_model->get_printers(null,'0');

            foreach ($printers as $key => $value) {
                # code...

                // $kit_address = KITCHEN_IP;
                $address = $value->ip_address;
                $output = array();

                if(strtolower(PHP_OS)=='winnt'){
                    $command = "ping -n 1 $address";
                    exec($command, $output, $status);
                }else{
                    $command = "ping -c 1 $address";
                    exec($command, $output, $status);
                }

                // var_dump($output);
                $ping = 'pinged';
                $reply = $output[2];
                
                if (strpos($reply, 'host unreachable') !== false) {
                    $ping = 'notpinged';
                }

                if (strpos($reply, 'Request timed out') !== false) {
                    $ping = 'notpinged';
                }
                if($ping != 'pinged'){
                    $message .= " ".$value->printer_name." Printer.";
                    $ping_error++;
                }
            }


            $this->session->set_userdata('message_printer',$message);
        }

        echo json_encode(array('message'=>$message,'ping_error'=>$ping_error));
        

    }

    public function printer_option(){
        // echo $sales_id.'asfasfsafasdf'; die();
        $this->load->model('site/site_model');
        $this->load->model('dine/cashier_model');
        $this->load->model('dine/setup_model');
        $this->load->helper('dine/cashier_helper');
        $data = $this->syter->spawn(null);
        $loaded = null;
        
        // $loc_res = $this->site_model->get_tbl('settings',array(),array(),null,true,'*',null,1);
        // $local_tax = $loc_res[0]->local_tax;
        // $kitchen_printer = "";
        // if(iSetObj($loc_res[0],'kitchen_printer_name') != ""){
        //     $kitchen_printer = iSetObj($loc_res[0],'kitchen_printer_name');
        // }

        $message = "";
        $message_printer = sess('message_printer');
        if(isset($message_printer)){
            $message = $message_printer;
        }
        
        $printers = $this->setup_model->get_printers(null,'active');

        $data['code'] = printerOptionPage($printers,$message);
        // $data['add_css'] = 'css/cashier.css';
        $data['add_css'] = array('css/virtual_keyboard.css', 'css/cashier.css');
        $data['add_js'] = array('js/jquery.keyboard.extension-navigation.min.js','js/jquery.keyboard.min.js','js/jquery.scannerdetection.js');
        // $data['add_js'] = array('js/jquery.keyboard.extension-navigation.min.js','js/jquery.keyboard.min.js');
        $data['load_js'] = 'dine/cashier.php';
        $data['use_js'] = 'printerSetupJS2';
        $data['noNavbar'] = true;
        $this->load->view('load',$data);

    }

    public function print_setup_update_db(){
        // echo 'haha';die();
        $this->load->model('dine/setup_model');
        $this->load->model('dine/site_model');
        $this->load->model('dine/main_model');

        $prints = $this->input->post('printer');

        // echo "<pre>",print_r($prints),"</pre>";die();

        // $val = $this->input->post('val');
        // $kitchen_printer = $this->input->post('kitchen_printer');
        // $beverage_printer = $this->input->post('beverage_printer');
        // $extra_printer = $this->input->post('extra_printer');
        // echo $kitchen_printer." ".$beverage_printer." ".$extra_printer;die();

        foreach($prints as $printer_id => $vv){
            $where = array('id'=>$vv);
            $m_det = $this->site_model->get_details($where,'printers');

            // echo $printer_id;
            // echo $vv;

            // // echo $m
            $items = array(            
                "print_on"=>$vv,
                "ip_address"=>$m_det[0]->ip_address,
                "printer_name_assigned"=>$m_det[0]->printer_name_assigned,
                // "extra_printer"=>$this->input->post('extra_printer'),
            );
            $this->setup_model->update_printer_setup($items,$printer_id); 
            $this->main_model->update_tbl('printers','id',$items,$printer_id);
        }
        // die();

        // echo $this->cashier_model->db->last_query();die();
    }

    public function count_trans_menu($menu_id=null,$asJson=true){
     
           
        $wagon = $this->session->userData('trans_cart');

        $total_qty = 0;

        if($menu_id != ''){
            if($wagon){
                foreach($wagon as $i => $cart){              

                    if($cart['menu_id'] == $menu_id){
                         $total_qty += $cart['qty'];
                    }
                }
            }
            
        }else{
            $char =  $this->input->post('operator');
            $val = $this->input->post('value');
            $trans_id = $this->input->post('trans_id');

            //  $char =  'plus';
            // $val = 1;
            // $trans_id = 0;

            $row = $wagon[$trans_id];
            switch($char){
                case "times":
                    $row['qty'] *= $val;
                    break;
                case "equal":
                    $row['qty'] = $val;
                    break;
                case "plus";
                    $row['qty'] += $val;
                    break;
                case "minus";
                    $row['qty'] -= $val;
                    if($row['qty'] <= 0)
                        $row['qty'] = 1;
                    break;
            }

            $menu_id = $row['menu_id'];
            foreach($wagon as $i => $cart){              

                if($cart['menu_id'] == $row['menu_id'] && $trans_id == $i){
                     $total_qty +=  $row['qty'];
                }elseif($cart['menu_id'] == $row['menu_id']){
                    $total_qty += $cart['qty'];
                }
            }
        }


        $this->load->model('dine/menu_model');
        $menu = $this->menu_model->get_menus($menu_id,null);
        
        if($asJson){
            echo json_encode(array('menu_id'=>$menu_id,'qty'=>$total_qty,'menu_qty'=>$menu[0]->menu_qty));
        }else{
            return $total_qty;
        }
        
    }
    public function rsubmit_table_trans($asJson=true,$submit=null,$void=false,$void_ref=null,$cart=null,$mod_cart=null,$print=false,$split_id=null,$printKitSlip=false){
        // if(LOCALSYNC){
        //     $this->load->model('core/sync_model');
        //  }
        // echo "<pre>",print_r(sess('customer_name')),"</pre>";die();
        $this->load->model('dine/cashier_model');
        $counter = sess('counter');
        // echo "<pre>",print_r($_POST),"</pre>";die();
        $cust_id = $this->session->userdata('cust_id');
        $date_schedule = $this->session->userdata('date_schedule');
        $time_schedule = $this->session->userdata('time_schedule');
        $trans_cart = sess('trans_cart');
        $trans_mod_cart = sess('trans_mod_cart');
        $trans_type_cart = sess('trans_type_cart');
        $trans_disc_cart = sess('trans_disc_cart');
        $trans_charge_cart = sess('trans_charge_cart');
        $loyalty_card = sess('loyalty_card');
        $reasons = sess('reasons');
        $item_discount = sess('item_discount');
        $trans_customer_name = (!empty(sess('customer_name'))) ? sess('customer_name') : '';
        $totals  = $this->total_trans(false,$cart);
        $total_amount = $totals['total'];
        $total_gross = $totals['gross'];
        $charges = $totals['charges'];
        $local_tax = $totals['local_tax'];
        $error = null;
        $act = null;
        $sales_id = null;
        $type = null;
        $type_id = SALES_TRANS;
        $print_echo = array();
        if($void === true){
            $type_id = SALES_VOID_TRANS;
        }

        if($void_ref == null || $void_ref == 0)
            $void_ref = null;

        $serve_no = 0;
        if(isset($trans_type_cart[0]['serve_no'])){
            $serve_no = $trans_type_cart[0]['serve_no'];
        }
        $time = $this->site_model->get_db_now();
        $user = $this->session->userdata('user');
        $get_shift = $this->clock_model->get_shift_id(null,$user['id']);
        $shift_id = 0;
        if(count($get_shift) > 0){
            $shift_id = $get_shift[0]->shift_id;
        }
        $counter = array(
            "datetime"=> $time,
            "sales_id"=> null,
            "shift_id"=> $shift_id,
            "terminal_id"=> TERMINAL_ID,
            "user_id"=> $user['id'],
            "type"=> $type
        );

        // if(count($trans_cart) <= 0){
        //     $error = "Error! There are no items.";
        // }
        // else if(count($counter) <= 0){
        //     $error = "Error! Shift or User is invalid.";
        // }
        // // else if(NEED_FOOD_SERVER && !isset($counter['waiter_id']) && $counter['type'] != 'counter' && $counter['type'] != 'takeout'){
        // else if(NEED_FOOD_SERVER && !isset($counter['waiter_id']) && $counter['type'] == 'dinein'){
        //     $error = "Select Food Server";
        // }
        // else if(SERVER_NO_SETUP && $serve_no == 0 && $counter['type'] == 'counter' ){
        //     $error = "Please Select Serve No.";
        // }
        // else if(SERVER_NO_SETUP && $serve_no == 0 && $counter['type'] == 'takeout' ){
        //     $error = "Please Select Serve No.";
        // }
        // else{
            if(count($trans_disc_cart) > 0){
                foreach ($trans_disc_cart as $disc_id => $row) {
                    if(!isset($row['disc_type'])){
                        $error = "Select Discount Type. If equally Divided or All Items.";
                    }
                    else{
                        if($row['disc_type'] == "")
                            $error = "Select Discount Type. If equally Divided or All Items.";
                    }
                }
                if($error != null){
                    if($asJson){
                        echo json_encode(array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type));
                        return false;
                    }
                    else{
                        return array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type);
                    }
                }
            }


            if(is_array($cart)){
                $trans_cart = $cart;
            }
            if(is_array($mod_cart)){
                $trans_mod_cart = $mod_cart;
            }
            $type = 'reservation';
            #save sa trans_sales
            $table = null;
            $guest = 0;
            
            $customer = null;
            if(isset($trans_type_cart[0]['table'])){
                $table = $trans_type_cart[0]['table'];
            }
            if(isset($trans_type_cart[0]['guest'])){
                $guest = $trans_type_cart[0]['guest'];
            }
            
            if(count($trans_disc_cart) > 0){
                foreach ($trans_disc_cart as $disc_code => $dc) {
                    $guest = $dc['guest'];
                }
            } 
            if(isset($trans_type_cart[0]['customer_id'])){
                $customer = $trans_type_cart[0]['customer_id'];
            }
            if(count($loyalty_card) > 0){
                foreach ($loyalty_card as $code => $row) {
                    $customer = $row['cust_id'];
                    // $loyalty = array(
                    //     "cust_id" => $row['cust_id'],
                    //     "code" => $row['code']
                    // );
                }

            }
            $waiter = null;
            if(isset($counter['waiter_id'])){
                $waiter = $counter['waiter_id'];
            }
            $ds_1            = date_create($date_schedule);
            $set_date_1      = date_format($ds_1,"Y-m-d");
            $time_1          = date('H:i', strtotime($time_schedule));
            // if($counter['type'] == 'reservation'){
                $dt = $set_date_1." ".$time_1;
            // }else{
            //     $dt = date2SqlDateTime($counter['datetime']);
            // }
            // echo "<pre>",print_r($dt),"</pre>";die();
            $splid = 0;
            if($split_id != null)
                $splid = $split_id;
             // $total_amount = number_format($total_amount, 2, '.', '');
             $total_amount = $total_amount;
             $trans_sales = array(
                "user_id"       => $counter['user_id'],
                "type_id"       => $type_id,
                "shift_id"      => $counter['shift_id'],
                "terminal_id"   => $counter['terminal_id'],
                "type"          => 'reservation',
                "datetime"      => $dt,
                "total_amount"  => $total_amount,
                "void_ref"      => $void_ref,
                "memo"          => null,
                "table_id"      => $this->input->post('table'),
                "guest"         => $this->input->post('guest'),
                "serve_no"      => $serve_no,
                "customer_id"   => $customer,
                "customer_name" => $trans_customer_name,
                "waiter_id"     => $waiter,
                "split"         => $splid
            );
             // echo "<pre>",print_r($trans_sales),"</pre>";die();
            $user = $this->session->userdata('user');
            if(isset($counter['sales_id']) && $counter['sales_id'] != null){
                $sales_id = $counter['sales_id'];
                echo "<pre>",print_r($sales_id),"</pre>";die();
                $this->cashier_model->update_trans_sales($trans_sales,$sales_id);

                $log_id = $this->logs_model->add_logs('Sales Order',$user['id'],$user['full_name']." Updated Sales Order #".$sales_id,$sales_id);
                // if(LOCALSYNC){
                //     $this->sync_model->update_trans_sales($sales_id);
                //     // $this->sync_model->add_logs($log_id);

                //     //delete items
                //     $this->sync_model->delete_trans_sales_menus($sales_id);
                //     $this->sync_model->delete_trans_sales_items($sales_id);
                //     $this->sync_model->delete_trans_sales_menu_modifiers($sales_id);
                //     $this->sync_model->delete_trans_sales_discounts($sales_id);
                //     $this->sync_model->delete_trans_sales_charges($sales_id);
                //     $this->sync_model->delete_trans_sales_tax($sales_id);
                //     $this->sync_model->delete_trans_sales_no_tax($sales_id);
                //     $this->sync_model->delete_trans_sales_zero_rated($sales_id);
                //     $this->sync_model->delete_trans_sales_local_tax($sales_id);
                // }


                $this->cashier_model->delete_trans_sales_menus($sales_id);
                $this->cashier_model->delete_trans_sales_items($sales_id);
                $this->cashier_model->delete_trans_sales_menu_modifiers($sales_id);
                $this->cashier_model->delete_trans_sales_discounts($sales_id);
                $this->cashier_model->delete_trans_sales_charges($sales_id);
                $this->cashier_model->delete_trans_sales_tax($sales_id);
                $this->cashier_model->delete_trans_sales_no_tax($sales_id);
                $this->cashier_model->delete_trans_sales_zero_rated($sales_id);
                $this->cashier_model->delete_trans_sales_local_tax($sales_id);
                $act="update";


                if($submit === null || $submit == 0 || $submit == null)
                    site_alert('Transaction Updated.','success');
            }
            else{
                $sales_ids = $this->cashier_model->add_trans_sales($trans_sales);
                $log_id = $this->logs_model->add_logs('Sales Order',$user['id'],$user['full_name']." Added New Sales Order #".$sales_ids,$sales_ids);
                $act="add";

                // if(LOCALSYNC){
                //     $this->sync_model->add_trans_sales($sales_id);
                //     // $this->sync_model->add_logs($log_id);
                // }
            }
            #save sa trans_sales_menus
        //     $trans_sales_menu = array();
        //     $trans_sales_items = array();
        //     $total_gross = 0;

        //     // echo "<pre>",print_r($trans_cart),"</pre>";die();

        //     foreach ($trans_cart as $trans_id => $v) {

        //         if($v['qty'] == 0){ //if qty is zero skip the item to resolve the splitting 0 issue @jx10292019
        //             continue;
        //         }
        //         $remarks = $serial_key = null;
        //         $nocharge = 0;
        //         $rate = (isset($trans_disc_cart[$trans_id]['disc_percent'])) ?  $trans_disc_cart[$trans_id]['disc_percent'] : 0 ;
        //         $percent_disc = ($v['cost'] * $v['qty']) * ($rate / 100);
        //         $percent_abs = (isset($trans_disc_cart[$trans_id]['disc_absolute'])) ? $trans_disc_cart[$trans_id]['disc_absolute'] : 0;
        //         $total_disc = $percent_disc + $percent_abs;

        //         // $is_takeout = 0;
        //         // if($counter['type'] == 'takeout'){
        //         //     $is_takeout = 1;
        //         // }else{
        //         //     if(isset($v['is_takeout'])){
        //                 $is_takeout = $v['is_takeout'];
        //         //     }
        //         // }
        //         if(isset($v['nocharge']) && $v['nocharge'] != 0){
        //             $nocharge = $v['nocharge'];
        //         }
        //         if(isset($v['remarks']) && $v['remarks'] != ""){
        //             $remarks = $v['remarks'];
        //         }
        //         $kitchen_slip_printed=0;
        //         if(isset($v['kitchen_slip_printed']) && $v['kitchen_slip_printed'] != ""){
        //             $kitchen_slip_printed = $v['kitchen_slip_printed'];
        //         }
        //         $free = $free_reason = null;
        //         if(isset($v['free_user_id'])){
        //             $free = $v['free_user_id'];
        //         }

        //          if(isset($v['free_reason'])){
        //             $free_reason = $v['free_reason'];
        //         }
                

        //         if(!isset($v['retail'])){
        //             $where = array('menu_id'=>$v['menu_id']);
        //             $m_det = $this->site_model->get_details($where,'menus');

        //             $trans_sales_menu[] = array(
        //                 "sales_id" => $sales_id,
        //                 "line_id" => $trans_id,
        //                 "menu_id" => $v['menu_id'],
        //                 "menu_name" => $m_det[0]->menu_name,
        //                 "price" => $v['cost'],
        //                 "qty" => $v['qty'],
        //                 "no_tax" => $v['no_tax'],
        //                 "discount"=> 0,
        //                 "remarks"=>$remarks,
        //                 "kitchen_slip_printed"=>$kitchen_slip_printed,
        //                 "free_user_id" => $free,
        //                 "free_reason" => $free_reason,
        //                 "nocharge" => $nocharge,
        //                 "is_takeout" => $is_takeout,
        //             );
        //         }
        //         else{
        //             $where = array('item_id'=>$v['menu_id']);
        //             $i_det = $this->site_model->get_details($where,'items');

        //             $trans_sales_items[] = array(
        //                 "sales_id" => $sales_id,
        //                 "line_id" => $trans_id,
        //                 "item_id" => $v['menu_id'],
        //                 "item_name" => $i_det[0]->name,
        //                 "price" => $v['cost'],
        //                 "qty" => $v['qty'],
        //                 "no_tax" => $v['no_tax'],
        //                 "discount"=> 0,
        //                 "remarks"=>$remarks,
        //                 "nocharge" => $nocharge,
        //                 "is_takeout" => $is_takeout,
        //             );
        //         }
        //         $total_gross += $v['qty'] *$v['cost'];
        //     }
        //     if(count($trans_sales_menu) > 0)
        //     {
        //         $trans_id = $this->cashier_model->add_trans_sales_menus($trans_sales_menu);
        //         //  if(LOCALSYNC){
        //         //     $this->sync_model->add_trans_sales_menus($sales_id);
        //         // }
        //     }
            
        //     if(count($trans_sales_items) > 0)
        //     {
        //         $this->cashier_model->add_trans_sales_items($trans_sales_items);
        //         // if(LOCALSYNC){
        //         //     $this->sync_model->add_trans_sales_items($sales_id);
        //         // }
        //     }
        //     #save sa trans_sales_menu_modifiers
        //     if(count($trans_mod_cart) > 0){
        //         $trans_sales_menu_modifiers = array();
        //         foreach ($trans_mod_cart as $trans_mod_id => $m) {
        //             $kitchen_slip_printed=0;
        //             if(isset($m['kitchen_slip_printed']) && $m['kitchen_slip_printed'] != ""){
        //                 $kitchen_slip_printed = $m['kitchen_slip_printed'];
        //             }
        //             if(isset($trans_cart[$m['trans_id']])){
        //                 //menu
        //                 $where = array('menu_id'=>$m['menu_id']);
        //                 $m_det = $this->site_model->get_details($where,'menus');

        //                 //mod group
        //                 $where = array('mod_group_id'=>$m['mod_group_id']);
        //                 $mg_det = $this->site_model->get_details($where,'modifier_groups');

        //                 //mod
        //                 $where = array('mod_id'=>$m['mod_id']);
        //                 $mod_det = $this->site_model->get_details($where,'modifiers');


        //                 $trans_sales_menu_modifiers[] = array(
        //                     "sales_id" => $sales_id,
        //                     "line_id" => $m['trans_id'],
        //                     "menu_id" => $m['menu_id'],
        //                     "mod_group_id" => $m['mod_group_id'],
        //                     "mod_id" => $m['mod_id'],
        //                     "price" => $m['cost'],
        //                     "qty" => $m['qty'],
        //                     "discount"=> 0,
        //                     "menu_name" => $m_det[0]->menu_name,
        //                     "mod_group_name" => $mg_det[0]->name,
        //                     "mod_name" => $mod_det[0]->name,
        //                     "kitchen_slip_printed"=>$kitchen_slip_printed
        //                 );
        //                 $total_gross += $m['qty'] *$m['cost'];
        //             }
        //         }
        //         if(count($trans_sales_menu_modifiers) > 0)
        //         {
        //             $trans_id = $this->cashier_model->add_trans_sales_menu_modifiers($trans_sales_menu_modifiers);
        //             // if(LOCALSYNC){
        //             //     $this->sync_model->add_trans_sales_menu_modifiers($sales_id);
        //             // }
        //         }
        //     }

        //     if(count($item_discount) > 0){
        //         //for save sa trans_sales_discounts pero per item
        //         $trans_sales_disc_items = array();
        //         foreach($item_discount as $id => $dc){
        //             $trans_sales_disc_items[] = array(
        //                 "sales_id"=>$sales_id,
        //                 "disc_id"=>$dc['disc_id'],
        //                 "type"=>$dc['type'],
        //                 "guest"=>$dc['guest'],
        //                 "disc_code"=>$dc['disc_code'],
        //                 "disc_rate"=>$dc['disc_rate'],
        //                 "items"=>$dc['items'],
        //                 "no_tax"=>$dc['no_tax'],
        //                 "name"=>$dc['name'],
        //                 "bday"=>date('Y-m-d H:i:s'),
        //                 "code"=>$dc['code'],
        //                 "remarks"=>$dc['remarks'],
        //                 "amount"=>$dc['amount']
        //             );

        //         }
        //         if(count($trans_sales_disc_items) > 0)
        //         {
        //             $this->cashier_model->add_trans_sales_discounts($trans_sales_disc_items);
        //             //   if(LOCALSYNC){
        //             //     $this->sync_model->add_trans_sales_discounts($sales_id);
        //             // }
        //         }
        //     }else{
        //         #save sa trans_sales_discounts
        //         $total_disc = 0;
        //         if(count($trans_disc_cart) > 0){
        //             $trans_sales_disc_cart = array();
        //             $total = 0;
        //             foreach ($trans_cart as $trans_id => $trans){
        //                 if(isset($trans['cost']))
        //                     $cost = $trans['cost'];
        //                 if(isset($trans['price']))
        //                     $cost = $trans['price'];

        //                 if(isset($trans['modifiers'])){
        //                     foreach ($trans['modifiers'] as $trans_mod_id => $mod) {
        //                         if($trans_id == $mod['line_id'])
        //                             $cost += $mod['price'];
        //                     }
        //                 }

        //                 else{
        //                     if(count($trans_mod_cart) > 0){
        //                         foreach ($trans_mod_cart as $trans_mod_id => $mod) {
        //                             if($trans_id == $mod['trans_id'])
        //                                 $cost += $mod['cost'];
        //                         }
        //                     }
        //                 }
        //                 if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
        //                     $rate = 1.12;
        //                     $cost = ($cost / $rate);
        //                     if(isset($zero_rated)){
        //                         $zero_rated += $v['qty'] * $cost;
        //                     }else{
        //                         $zero_rated = $v['qty'] * $cost;
        //                     }
        //                 }
        //                 $total += $trans['qty'] * $cost;
        //             }

        //             foreach ($trans_disc_cart as $disc_id => $dc) {
        //                 $dit = "";
        //                 if(isset($dc['items'])){
        //                     foreach ($dc['items'] as $lines) {
        //                         $dit .= $lines.",";
        //                     }
        //                     if($dit != "")
        //                         $dit = substr($dit,0,-1);                        
        //                 }
                        

        //                 $discount = 0;
        //                 $rate = $dc['disc_rate'];
        //                 switch ($dc['disc_type']) {
        //                     case "equal":
        //                         $divi = $total/$dc['guest'];
        //                         $divi_less = $divi;

        //                         if($dc['disc_code'] == ATHLETE_CODE){
        //                             // if($dc['no_tax'] == 1){
        //                                 $divi_less = ($divi / 1.12);
        //                             // }
        //                             $no_persons = count($dc['persons']);
        //                             // foreach ($row['persons'] as $code => $per) {
        //                             $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $divi_less);
        //                             $discount = ($rate / 100) * $divi_less;
        //                         }else{
        //                             if($dc['no_tax'] == 1){
        //                                 $divi_less = ($divi / 1.12);
        //                             }
        //                             $no_persons = count($dc['persons']);
        //                             // foreach ($row['persons'] as $code => $per) {
        //                             $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $divi_less);
        //                             $discount = ($rate / 100) * $divi_less;
        //                         }

        //                         // }
        //                         // $total = ($divi * $row['guest']) - $discount;

        //                         break;
        //                     default:
        //                         // $no_citizens = count($dc['persons']);
        //                         // if($dc['no_tax'] == 1)
        //                         //     $total = ($total / 1.12);                     
        //                         // $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total);
        //                         // $discount = ($rate / 100) * $total;
        //                         if($dc['fix'] == 0){
        //                             if(DISCOUNT_NET_OF_VAT && $row['disc_code'] != DISCOUNT_NET_OF_VAT_EX){
        //                                 $no_citizens = count($dc['persons']);
        //                                 $total_net_vat = ($total / 1.12);                     
        //                                 foreach ($dc['persons'] as $code => $per) {
        //                                     $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total_net_vat);
        //                                     $discount += ($rate / 100) * $total_net_vat;
        //                                 }
        //                                 $total -= $discount; 
        //                             }
        //                             else{
        //                                 $no_citizens = count($dc['persons']);

        //                                 // echo $no_citizens; die();
        //                                 if($dc['disc_code'] == ATHLETE_CODE){
        //                                     // if($dc['no_tax'] == 1)
        //                                         $total = ($total / 1.12);                     
        //                                     foreach ($dc['persons'] as $code => $per) {
        //                                         $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total);
        //                                         $discount += ($rate / 100) * $total;
        //                                     }
        //                                 }else{
        //                                     if($dc['no_tax'] == 1)
        //                                         $total = ($total / 1.12);                     
        //                                     foreach ($dc['persons'] as $code => $per) {
        //                                         $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total);
        //                                         $discount += ($rate / 100) * $total;
        //                                     }
        //                                 }

        //                                 $total -= $discount;                                        
        //                             }    
        //                         }
        //                         else{
        //                             $discs[] = array('type'=>$dc['disc_code'],'amount'=>$rate);
        //                             $discount += $rate;
        //                             $total -= $discount;
        //                         }
        //                         // }    
        //                 }
        //                 foreach ($dc['persons'] as $pcode => $oper) {
        //                     $dcBday = null;
        //                     $dcremark = null;
        //                     if(isset($oper['bday']) && $oper['bday'] != "")
        //                         $dcBday = $oper['bday'];

        //                     if(isset($oper['remarks']) && $oper['remarks'] != "")
        //                         $dcremark = $oper['remarks'];

        //                     $trans_sales_disc_cart[] = array(
        //                         "sales_id"=>$sales_id,
        //                         "disc_id"=>$dc['disc_id'],
        //                         "disc_code"=>$dc['disc_code'],
        //                         "disc_rate"=>$dc['disc_rate'],
        //                         "no_tax"=>$dc['no_tax'],
        //                         "type"=>$dc['disc_type'],
        //                         "name"=>$oper['name'],
        //                         "bday"=>$dcBday,
        //                         "code"=>$oper['code'],
        //                         "remarks"=>$dcremark,
        //                         "items"=>$dit,
        //                         "guest"=>$dc['guest'],
        //                         "amount"=>$discount
        //                     );
        //                     $total_disc += $discount;
        //                 }
        //             }
        //             if(count($trans_sales_disc_cart) > 0)
        //             {
        //                 $this->cashier_model->add_trans_sales_discounts($trans_sales_disc_cart);
        //                 //   if(LOCALSYNC){
        //                 //     $this->sync_model->add_trans_sales_discounts($sales_id);
        //                 // }
        //             }
        //         }

        //     }


            
        //     // save sa trans_sales_charges
        //     $total_charge = 0;
        //     if(count($trans_charge_cart) > 0){
        //         $trans_sales_charge_cart = array();
        //         foreach ($trans_charge_cart as $charge_id => $ch) {
        //             $trans_sales_charge_cart[] = array(
        //                 "sales_id"=>$sales_id,
        //                 "charge_id"=>$charge_id,
        //                 "charge_code"=>$ch['code'],
        //                 "charge_name"=>$ch['name'],
        //                 "rate"=>$ch['amount'],
        //                 "absolute"=>$ch['absolute'],
        //                 "amount"=>$charges[$charge_id]['amount']
        //             );
        //             $total_charge += $charges[$charge_id]['amount'];
        //         }
        //         if(count($trans_sales_charge_cart) > 0)
        //         {
        //             $this->cashier_model->add_trans_sales_charges($trans_sales_charge_cart);

        //             //  if(LOCALSYNC){
        //             //     $this->sync_model->add_trans_sales_charges($sales_id);
        //             // }
        //         }
        //     }

        //     // echo "<pre>",print_r($trans_disc_cart),"</pre>";die();
        //     $tax = $this->get_tax_rates(false);
        //     $taxable_amount = $total_gross;
        //     $not_taxable_amount = 0;
        //     $zero_rated = 0;
        //     $diplomat_count = 0;
        //     $g_count = 0;
        //     if(count($tax) > 0){

        //         if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
        //             $rate = 1.12;
        //             // $cost = ($cost / $rate);
        //             // $rate = 0.12;
        //             $zero_rated += $total_gross / $rate;
        //             $taxable_amount -= $total_gross;
        //             $not_taxable_amount += $total_gross / $rate;
        //         }else{
                    
        //             if(count($item_discount)>0){
        //                 foreach ($trans_cart as $trans_id => $v) {
        //                     $cost = $v['cost'];
        //                     $total = $v['qty'] * $cost;

        //                     if(isset($item_discount[$trans_id])){
                                
        //                         if($item_discount[$trans_id]['disc_code'] == 'DIPLOMAT'){
        //                             $zero_rated += $total / 1.12;
        //                             $not_taxable_amount += $total / 1.12;
        //                             $taxable_amount -= $total;
        //                         }else{
        //                             $no_tx =  $item_discount[$trans_id]['no_tax'];
        //                             if($no_tx == 1){
        //                                 $not_taxable_amount += $total / 1.12;
        //                                 $taxable_amount -= $total;
        //                                 // die('ss');
        //                             }else{
        //                                 // $with_disc = $total - $item_discount[$trans_id]['amount'];
        //                                 // echo $with_disc; die();
        //                                 $taxable_amount -= $item_discount[$trans_id]['amount'];
        //                             }
        //                         }

        //                     }
        //                 }
        //             }else{
        //                 foreach ($trans_disc_cart as $disc_id => $dc) {
        //                     $discount = 0;
        //                     $rate = $dc['disc_rate'];

        //                     $divi = $total_gross/$dc['guest'];
        //                     $no_tax_persons = count($dc['persons']);
        //                     $g_count = $dc['guest'];
        //                     foreach($dc['persons'] as $name => $val){
        //                         if($dc['fix'] == 0){
                                    
        //                             if($dc['disc_code'] == 'DIPLOMAT'){
        //                                 $divi_less = ($divi / 1.12);

        //                                 $zero_rated += $divi_less;
        //                                 $not_taxable_amount += $divi_less;
        //                                 $taxable_amount -= $divi;
        //                                 $diplomat_count++;
        //                             }elseif($dc['disc_code'] == ATHLETE_CODE){
        //                                 $divi_less = ($divi / 1.12);
        //                                 $disc_per_person = ($rate / 100) * $divi_less;

        //                                 $taxable_amount -= $disc_per_person;

        //                             }else{
        //                                 if($dc['no_tax'] == 1){
        //                                     $divi_less = ($divi / 1.12);
        //                                     $less_vat = $divi - $divi_less;
        //                                     // $not_taxable_amount += $divi_less * $no_tax_persons;
        //                                     // $taxable_amount -= $divi + $less_vat;
        //                                     $disc_per_person = ($rate / 100) * $divi_less;

        //                                     $no_tax = $divi_less * $no_tax_persons;
        //                                     $taxable_amount -= $divi;
        //                                     // echo $not_taxable_amount.'aa';
        //                                     $not_taxable_amount += $divi - $less_vat;
        //                                     // echo $not_taxable_amount.'bb';
        //                                 }else{
        //                                     $disc_per_person = ($rate / 100) * $divi; 
        //                                     // $not_taxable_amount = 0;
        //                                     // $disc_persons = $disc_per_person * $no_tax_persons;
        //                                     $taxable_amount -= $disc_per_person;
        //                                 }
        //                             }


        //                         }else{
        //                             // $disc_per_person = $divi - $rate;
        //                             $disc_per_person = $rate;
        //                             $taxable_amount -= $disc_per_person;
        //                             // $taxable_amount -= $discount;
        //                             // $not_taxable_amount = 0; 
        //                         }
        //                     }

                            
        //                 }
        //             }


        //         }

        //         // echo $not_taxable_amount; die();
        //         //remove charges 
        //         if($zero_rated == 0){
        //             $trans_sales_zero_rated[] = array(
        //                 "sales_id"=>$sales_id,
        //                 "amount"=>$zero_rated,
        //                 // "name"=>$counter['zero_name'],
        //                 // "card_no"=>$counter['zero_card_no']
        //             );
        //         }else{
        //             if($g_count == $diplomat_count){
        //                 $trans_sales_zero_rated[] = array(
        //                     "sales_id"=>$sales_id,
        //                     "amount"=>$zero_rated - $total_disc,
        //                     // "name"=>$counter['zero_name'],
        //                     // "card_no"=>$counter['zero_card_no']
        //                 );
        //             }else{
        //                 $trans_sales_zero_rated[] = array(
        //                     "sales_id"=>$sales_id,
        //                     "amount"=>$zero_rated,
        //                     // "name"=>$counter['zero_name'],
        //                     // "card_no"=>$counter['zero_card_no']
        //                 );
        //             }

        //         }


        //         if(count($trans_sales_zero_rated) > 0)
        //             $this->cashier_model->add_trans_sales_zero_rated($trans_sales_zero_rated);


        //         if($zero_rated == 0){
        //             $trans_sales_no_tax[] = array(
        //                 "sales_id"=>$sales_id,
        //                 "amount"=>$not_taxable_amount
        //             );
        //         }else{
        //             if($g_count == $diplomat_count){
        //                 $trans_sales_no_tax[] = array(
        //                     "sales_id"=>$sales_id,
        //                     "amount"=>$not_taxable_amount - $total_disc
        //                 );
        //             }else{
        //                 $trans_sales_no_tax[] = array(
        //                     "sales_id"=>$sales_id,
        //                     "amount"=>$not_taxable_amount,
        //                 );
        //             }
        //         }

        //         if(count($trans_sales_no_tax) > 0)
        //             $this->cashier_model->add_trans_sales_no_tax($trans_sales_no_tax);

        //         if($zero_rated != 0 && $total_disc != 0){
        //             if($g_count == $diplomat_count){
        //                 $taxable_amount = 0;
        //             }
        //         }
        //         $am = $taxable_amount;
        //         $trans_sales_tax = array();
        //         $trans_tax = 0;
        //         foreach ($tax as $tax_id => $tx) {
        //             $rate = ($tx['rate'] / 100);
        //             $tax_value = ($am / ($rate + 1) ) * $rate;
        //             // ($am / 1.12) * .12
        //             $trans_sales_tax[] = array(
        //                 "sales_id"=>$sales_id,
        //                 "name"=>$tx['name'],
        //                 "rate"=>$tx['rate'],
        //                 "amount"=>$tax_value,
        //             );
        //             $trans_tax += $tax_value;
        //             $am -= $tax_value;
        //         }
                
        //         if(count($trans_sales_tax) > 0)
        //         {
        //             $this->cashier_model->add_trans_sales_tax($trans_sales_tax);
        //             // if(LOCALSYNC){
        //             //     $this->sync_model->add_trans_sales_tax($sales_id);
        //             // }
        //         }


        //     }
        //     ### LOCAL TAX 
        //     if($local_tax > 0){
        //         $trans_sales_local_tax[] = array(
        //             "sales_id"=>$sales_id,
        //             "amount"=>$local_tax
        //         );
        //         if(count($trans_sales_local_tax) > 0)
        //         {
        //             $this->cashier_model->add_trans_sales_local_tax($trans_sales_local_tax);
        //             //  if(LOCALSYNC){
        //             //     $this->sync_model->add_trans_sales_local_tax($sales_id);
        //             // }
                    
        //         } 
        //     }


        //     //for update sa trans_Sales ng iba pang details
        //     $trans_sales_update = array(
        //         "total_gross"       => $total_gross,
        //         "total_discount" => $total_disc,
        //         "total_charges" => $total_charge,
        //         "zero_rated" => $zero_rated,
        //         "no_tax" => $not_taxable_amount,
        //         "tax" => $trans_tax,
        //         "local_tax" => $local_tax,
        //     );
        //     $this->cashier_model->update_trans_sales($trans_sales_update,$sales_id);



        //     if(defined('ENABLE_CHECKLIST') && ENABLE_CHECKLIST){

        //         #print
        //         $this->print_checklist($sales_id);  
        //     }
            
        //     if ($print == "true" || $print === true){
        //         $print_echo = $this->print_sales_receipt($sales_id,false);
        //     }
        //     if ($printKitSlip == "true" || $printKitSlip === true){

        //         $pet = $this->cashier_model->get_pos_settings();
        //         $kitchen_printer = $pet->kitchen_printer_name;
        //         if(KITCHEN_PRINTER){
        //             $kitchen_printer = KITCHEN_PRINTER;
        //         }
        //         if(count($reasons) > 0){
                    
        //             $this->print_os_removes($sales_id,$reasons);
        //         }
        //         if($kitchen_printer != ""){
        //             $this->print_os($sales_id);            
        //         }
        //     }


        //     //linabas ko para magsave padin kahit di naka true yun printKitSlip
        //     foreach ($reasons as $ctrr => $re) {
        //         $reason_id = $this->cashier_model->add_reasons($re);
        //         // if(LOCALSYNC){
        //         //  $this->sync_model->add_reasons($reason_id);
        //         // }
        //     }
        // }
        // // print Acknowledgement pauli
        // // include_once (dirname(__FILE__) . "/custs_bank.php");
        $customers_bank_update = array(
                "sales_id"       => $sales_id
            );
        $ds            = date_create($date_schedule);
        $set_date      = date_format($ds,"Y-m-d");
        $time          = date('H:i', strtotime($time_schedule));
        // echo $sales_id. ' -' .$time_schedule. '-'.$cust_id. '-'.$set_date. '- <pre>',print_r($customers_bank_update),'</pre>';die();
        $this->cashier_model->update_customer_bank($customers_bank_update,$cust_id,$set_date,$time);
        // // $this->cashier_model->db->last_query();die();
        // $this->print_rdeposit($cust_id,true,$date_schedule,$time_schedule);
        // // sess_clear('trans_type_cart');
        // if(MIGRATION_VERSION == '2'){
        //         // run_main_exec();
        //         // run_master_exec();
             
        // }
        // echo var_dump($kitchen_printer);
        // return false;
        $this->update_tbl_activity(null,true);
        if($asJson)
            echo json_encode(array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type));
        else
            return array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type);

        redirect(base_url()."cashier",'refresh');
    }
    public function print_void_reservation($ref_no=null,$asJson=true,$return_print_str=false,$add_reprinted=true,$splits=null,$include_footer=true,$no_prints=1,$order_slip_prints=0,$approved_by=null,$main_db=false,$openDrawer=false){
            // if(LOCALSYNC){
            //     $this->load->model('core/sync_model');
            // }
            // if($main_db){
            //     $this->db = $this->load->database('main', TRUE);
            // }
            $branch = $this->get_branch_details(false);
            $get_det_reserve = $this->cashier_model->get_reservation_details($ref_no);
            $print_str = "\r\n";

            $wrap = wordwrap($branch['name'],PAPER_WIDTH,"|#|");
            $exp = explode("|#|", $wrap);
            foreach ($exp as $v) {
                $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
            }

            // $wrap = wordwrap($branch['desc'],PAPER_WIDTH,"|#|");
            // $exp = explode("|#|", $wrap);
            // foreach ($exp as $v) {
            //     $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
            // }

            $wrap = wordwrap($branch['address'],PAPER_WIDTH,"|#|");
            $exp = explode("|#|", $wrap);
            foreach ($exp as $v) {
                $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
            }

            if($branch['tin'] != ""){
                // $print_str .= $this->append_chars('VAT REG TIN:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['tin'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
                $print_str .= $this->append_chars('VAT REG TIN:'.$branch['tin'],"right",PAPER_WIDTH," ")."\r\n";
            }
            // if($branch['accrdn'] != ""){
            //     $print_str .= $this->append_chars('ACCRDN:',"right",PAPER_DET_SUBCOL," ").$this->append_chars($branch['accrdn'],"right",PAPER_TOTAL_COL_1," ")."\r\n";
            // }
            if($branch['machine_no'] != ""){
                $print_str .= $this->append_chars('MIN:'.$branch['machine_no'],"right",PAPER_WIDTH," ")."\r\n";
                // $print_str .= $this->append_chars('MIN:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['machine_no'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
            }
            if($branch['permit_no'] != ""){
                $print_str .= $this->append_chars('PERMIT:'.$branch['permit_no'],"right",PAPER_WIDTH," ")."\r\n";
                // $print_str .= $this->append_chars('PERMIT:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['permit_no'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
            }
            if($branch['serial'] != ""){
                $print_str .= $this->append_chars('SN:'.$branch['serial'],"right",PAPER_WIDTH," ")."\r\n";
                // $print_str .= $this->append_chars('SN:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['serial'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
            }

            $print_str .= $this->align_center("***** VOIDED TRANSACTION *****",PAPER_WIDTH," ")."\r\n";
            foreach ($get_det_reserve as $get_det => $det_vals) {
                # code...
            $print_str .= $this->append_chars(ucwords($det_vals->username),"right",PAPER_RD_COL_MID," ").$this->append_chars(date('Y-m-d H:i:s',strtotime($det_vals->datetime)),"left",PAPER_TOTAL_COL_2," ")."\r\n"."Terminal ID : T00001"
                ."\r\n";
            $print_str .= $this->append_chars(ucwords('Reservation Date/Time:'),"right",PAPER_RD_COL_MID," ").$this->append_chars($det_vals->set_date." ".date('h:i A',strtotime($det_vals->set_time)),"left",PAPER_TOTAL_COL_2," ")
                ."\r\n";
            $print_str .= $this->append_chars(ucwords('Reservation #:'),"right",PAPER_RD_COL_MID," ").$this->append_chars($det_vals->ref_no,"left",PAPER_TOTAL_COL_2," ")
                ."\r\n";
            $print_str .= $this->append_chars(ucwords('Credit Note #:'),"right",PAPER_RD_COL_MID," ").$this->append_chars($det_vals->credit_note_no,"left",PAPER_TOTAL_COL_2," ")
                ."\r\n";
            $print_str .= $this->append_chars(ucwords('Refund Amount:'),"right",PAPER_RD_COL_MID," ").$this->append_chars($det_vals->credit_amount,"left",PAPER_TOTAL_COL_2," ")
                ."\r\n";
                // .PAPER_LINE."\r\n";
            }

            $print_str .= $this->align_center("***** NOTHING FOLLOWS *****",PAPER_WIDTH," ")."\r\n";
                



            if ($return_print_str) {
                return $print_str;
            }
            // echo "<pre>".$print_str."</pre>";
            // return false;
            $js_rcps = array();
            if(PRINT_VERSION && PRINT_VERSION == 'V2'){


                // if(BILLING_PRINTER){
                //     if(BILLING_PRINTER != "DEFAULT"){
                         $this->do_print_receipt_v2($print_str);  
                //     }
                // }

                if($openDrawer){
                    $pet = $this->cashier_model->get_pos_settings();
                    $open_drawer_printer = $pet->open_drawer_printer;
                    // if($open_drawer_printer != ""){
                    //     $this->do_print_receipt_v2($print_str);  
                    //     // $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".$open_drawer_printer."\"  ";   
                    // }            
                }
            }if(PRINT_VERSION && PRINT_VERSION == 'V3'){                
                $js_rcp = $this->html_print($print_str); 
                if(BILLING_PRINTER){
                    if(BILLING_PRINTER != "DEFAULT"){
                       $js_rcps[] = array('printer'=>BILLING_PRINTER,'value'=>$js_rcp);  
                    }
                }

                if($openDrawer){
                    $pet = $this->cashier_model->get_pos_settings();
                    $open_drawer_printer = $pet->open_drawer_printer;
                    if($open_drawer_printer != ""){
                        $js_rcps[] = array('printer'=>$open_drawer_printer,'value'=>$js_rcp);
                    }            
                }
            }else{
                // $this->do_print_os($print_str,$printer['printer'],$printer['no']);  

                $filename = "sales.txt";
                $fp = fopen($filename, "w+");
                fwrite($fp,$print_str);
                fclose($fp);

                $batfile = "print.bat";
                $fh1 = fopen($batfile,'w+');
                $root = dirname(BASEPATH);
                $battxt ="NOTEPAD /P \"".realpath($root."/".$filename)."\"";

                if(BILLING_PRINTER){
                    if(BILLING_PRINTER != "DEFAULT"){
                        $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".BILLING_PRINTER."\"  ";   
                    }
                }

                if($openDrawer){
                    $pet = $this->cashier_model->get_pos_settings();
                    $open_drawer_printer = $pet->open_drawer_printer;
                    if($open_drawer_printer != ""){
                        $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".$open_drawer_printer."\"  ";   
                    }            
                }

                fwrite($fh1, $battxt);
                fclose($fh1);
                session_write_close();
                // exec($filename);
                for ($i=0; $i < $no_prints; $i++) { 
                    exec($batfile);
                }
                session_start();
                unlink($filename);
                unlink($batfile);
            }

            return array('js_rcps'=>$js_rcps);
            // if($order_slip_prints > 0){
            //     $this->print_order_slip($header_print_str,$post_details,$order_slip_prints);            
            // }

            // if ($asJson)
            //     echo json_encode(array('msg'=>'Receipt # '.(!empty($order['ref']) ? $order['ref'] : $sales_id).' has been printed'));
            // else
            //     return array('msg'=>'Receipt # '.(!empty($order['ref']) ? $order['ref'] : $sales_id).' has been printed');
        }

    public function search_payments($sales_id=null){
        $this->load->model('dine/cashier_model');
        
        $payment_session = array();
        if($this->session->userData('payment_session')){
            $payment_session = $this->session->userData('payment_session');
        }

        $val = strtolower($this->input->post('val'));
        $found = array();
        $ctr = 1;
        foreach($payment_session as $id => $v){

            // echo $v['text'].'---';
            if(strpos(strtolower($v['text']), $val) !== false){

                if($ctr < 4){
                    $found[$id] = array('stext'=>$v['text'],'is_new'=>$v['is_new']);
                }
                
                $ctr++;
                
                // echo 'find--';
            }else{
                // echo 'we--';
            }
        }

        // die();
        // echo "<pre>",print_r($found),"</pre>";die(); 
        echo json_encode(array('found'=>$found));


    }

    public function search_discs($sales_id=null){
        $this->load->model('dine/cashier_model');
        
        $disc_session = array();
        if($this->session->userData('disc_session')){
            $disc_session = $this->session->userData('disc_session');
        }

        $val = strtolower($this->input->post('val'));
        $found = array();
        foreach($disc_session as $id => $v){

            // echo $v['text'].'---';
            if(strpos(strtolower($v['text']), $val) !== false){

                
                $found[$id] = array('text'=>$v['text'],'fix'=>$v['fix'],'rate'=>$v['rate'],'disc_code'=>$v['disc_code']);
                
                // echo 'find--';
            }else{
                // echo 'we--';
            }
        }

        // die();
        // echo "<pre>",print_r($found),"</pre>";die(); 
        echo json_encode(array('found'=>$found));

    }

    public function select_brands(){
        $this->load->helper('dine/cashier_helper');

        $brands = $this->cashier_model->get_brands();

        $branch = $this->get_branch_details(false);
        $def_brand = $branch['brand'];

        if($this->session->userData('brand_session')){
            $def_brand = $this->session->userData('brand_session');
        }


        $data['code'] = makeBrandform($brands,$def_brand);
        $data['add_css'] = array('css/cashier.css','css/onscrkeys.css','css/virtual_keyboard.css','js/typeaheadmap/typeaheadmap.css');
        $data['add_js'] = array('js/on_screen_keys.js','js/jquery.keyboard.extension-navigation.min.js','js/jquery.keyboard.min.js','js/typeaheadmap/typeaheadmap.js');
        $data['load_js'] = 'dine/cashier.php';
        // $data['use_js'] = 'selBrandJs';
        $data['use_js'] = 'selBrandJs';
        $this->load->view('load',$data);
    }

    public function update_brand_sess(){
        $brand = $this->input->post('hid-brand');

        // echo $this->input->post('hid-brand'); die();
        $this->session->set_userData('brand_session',$brand);

        $where = array('id'=>$brand);
        $bdet = $this->site_model->get_details($where,'brands');
        // $tbl_id = $details[0]->table_id;

        $brand_name = $bdet[0]->brand_name;

        echo $brand_name;
        
    }

    //check online order

    public function online_orders($terminal='my',$status='open',$types='all',$now='all_trans',$search_id='none',$server_id='0',$last_id=null){
            $this->load->model('dine/cashier_model');
            $this->load->model('site/site_model');
            $args = array(
                "trans_sales.trans_ref"=>null,
                // "trans_sales.terminal_id"=>TERMINAL_ID,
                // "trans_sales.type_id"=>SALES_TRANS,
                "trans_sales.inactive"=>0,
            );

            $args["`trans_sales`.`app_sale_id`  IS NOT NULL"] = array('use'=>'where','val'=>null,'third'=>false);

            $this->db = $this->load->database('default',true);
            if($terminal != 'my')
                unset($args["trans_sales.terminal_id"]);
          
            
            $orders = $this->cashier_model->get_trans_sales(null,$args);
            $code = "";
            $ids = array();
            $time = $this->site_model->get_db_now();
            $ord=array();
            $combine_cart = sess('trans_combine_cart');
            foreach ($orders as $res) {
                if($res->trans_ref == null and $res->inactive == 0){
                    $status = "open";
                }else if($res->trans_ref != null and $res->inactive == 0){
                    $status = "settled";
                }else{
                    $status = "voided";
                }
                $ord[$res->sales_id] = array(
                    "type"=>$res->type,
                    "status"=>$status,
                    "user_id"=>$res->user_id,
                    "name"=>$res->username,
                    "terminal_id"=>$res->terminal_id,
                    "terminal_name"=>$res->terminal_name,
                    "shift_id"=>$res->shift_id,
                    "datetime"=>$res->datetime,
                    "amount"=>$res->total_amount
                );
                    $this->make->sDivCol(6,'left',0);
                        $this->make->sDiv(array('class'=>'order-btn','id'=>'order-btn-'.$res->sales_id,'ref'=>$res->sales_id));
                            if($res->trans_ref == null and $res->inactive == 0){
                                $this->make->sBox('default',array('class'=>'box-solid'));
                            }else if($res->trans_ref != null and $res->inactive == 0){
                                $this->make->sBox('default',array('class'=>'box-solid bg-green'));
                            }else{
                                $this->make->sBox('default',array('class'=>'box-solid','style'=>'background-color: #ed4959;'));
                            }
                                $this->make->sBoxBody();
                                    $this->make->sDivRow();
                                        $this->make->sDivCol(6);
                                            $splitTxt = '';
                                            if($res->split != 0){
                                                if($res->sales_id == $res->split){
                                                    $splitTxt = fa('fa-code fa-lg fa-fw');
                                                }
                                                else{
                                                    $splitTxt = '(From ORDER #'.$res->split.')';
                                                }
                                            }
                                            $this->make->H(5,"ORDER #".$res->sales_id." ".$splitTxt,array("style"=>'font-weight:700;'));
                                            if($res->trans_ref == null and $res->inactive == 0){
                                                $this->make->H(5,strtoupper($res->username),array("style"=>'color:#888'));
                                                // $this->make->H(6,'FS - '.strtoupper($res->waiterfname." ".$res->waitermname." ".$res->waiterlname." ".$res->waitersuffix),array("style"=>'color:#888'));
                                                $this->make->H(6,strtoupper($res->terminal_name),array("style"=>'color:#888'));
                                            }else if($res->trans_ref != null and $res->inactive == 0){
                                                $this->make->H(5,strtoupper($res->username),array("style"=>'color:#fff'));
                                                // $this->make->H(6,'FS - '.strtoupper($res->waiterfname." ".$res->waitermname." ".$res->waiterlname." ".$res->waitersuffix),array("style"=>'color:#fff'));
                                                $this->make->H(6,strtoupper($res->terminal_name),array("style"=>'color:#fff'));
                                            }else{
                                                $this->make->H(5,strtoupper($res->username),array("style"=>'color:#fff'));
                                                // $this->make->H(6,'FS - '.strtoupper($res->waiterfname." ".$res->waitermname." ".$res->waiterlname." ".$res->waitersuffix),array("style"=>'color:#fff'));
                                                $this->make->H(6,strtoupper($res->terminal_name),array("style"=>'color:#fff'));
                                            }
                                            if($res->reason != null)
                                                $this->make->H(6,'('.ucwords($res->reason).')',array("style"=>'color:#fff'));
                                            $this->make->H(5,tagWord(strtoupper(ago($res->datetime,$time) ) ) );
                                        $this->make->eDivCol();
                                        $this->make->sDivCol(6);
                                            $this->make->H(4,'Order Total',array('class'=>'text-center'));
                                            $this->make->H(3,num($res->total_amount),array('class'=>'text-center'));
                                            $tbl_n = "";
                                            if($res->table_id != ""){
                                                $tbl_n = " - ".strtoupper($res->table_name);
                                            }
                                            $this->make->H(5,strtoupper($res->type).$tbl_n,array('class'=>'text-center','style'=>'font-weight:bold;text-shadow: 1px 3px 5px rgba(0, 0, 0, 0.5);-webkit-font-smoothing: antialiased !important;opacity: 0.8;'));
                                        $this->make->eDivCol();
                                    $this->make->eDivRow();

                                $this->make->eBoxBody();
                            $this->make->eBox();
                        $this->make->eDiv();
                    $this->make->eDivCol();
                $ids[] = $res->sales_id;
            }
            //}
            $code = $this->make->code();
            echo json_encode(array('code'=>$code,'ids'=>$ord,'has'=>1));
        }

    function check_app_sales($asJson=true){
        $this->load->model('core/master_model');
        $this->load->model('dine/mods_model');

        $sales_count = $this->master_model->check_app_sales();

        if($asJson){
            echo $sales_count;
        }else{
            return $sales_count;
        }
        
    }

    public function paymaya($sales_id){
        require APPPATH . "libraries/Paymaya/PayMayaSDK.php";
        require APPPATH . "libraries/Paymaya/API/Checkout.php";
        require APPPATH . "libraries/Paymaya/API/Customization.php";
        require APPPATH . "libraries/Paymaya/API/Webhook.php";
        require APPPATH . "libraries/Paymaya/Core/CheckoutAPIManager.php";
        require APPPATH . "libraries/Paymaya/Core/Constants.php";
        require APPPATH . "libraries/Paymaya/Core/HTTPConfig.php";
        require APPPATH . "libraries/Paymaya/Core/HTTPConnection.php";
        require APPPATH . "libraries/Paymaya/Model/Checkout/Address.php";
        require APPPATH . "libraries/Paymaya/Model/Checkout/Buyer.php";
        require APPPATH . "libraries/Paymaya/Model/Checkout/Contact.php";
        require APPPATH . "libraries/Paymaya/Model/Checkout/Item.php";
        require APPPATH . "libraries/Paymaya/Model/Checkout/ItemAmount.php";
        require APPPATH . "libraries/Paymaya/Model/Checkout/ItemAmountDetails.php";

        PayMaya\PayMayaSDK::getInstance()->initCheckout(pym_public_key, pym_secret_key, pym_environment);

        //trigger exception in a "try" block
        try {
            $customization = new PayMaya\API\Customization();
            $customization->get();
            $customization->customTitle = 'IPos';
            $customization->set();
            
            $order = $this->get_order(false,$sales_id);
                // echo "<pre>",print_r($order),"</pre>";die(); 
            $ord = $order['order'];
            $det = $order['details'];
            $discs = $order['discounts'];
            $charges = $order['charges'];
            $zero_rated = $order['zero_rated'];

            $itemCheckout = new PayMaya\API\Checkout();

            //  $address = new PayMaya\Model\Checkout\Address();
            // $address->line1 = "6th Floor, LaunchPad Building";
            // $address->line2 = "Reliance Street";
            // $address->city = "Mandaluyong City";
            // $address->state = "Metro Manila";
            // $address->zipCode = "12345";
            // $address->countryCode = "PH";

            // $contact = new PayMaya\Model\Checkout\Contact();
            // $contact->phone = "+63(2)1234567890";
            // $contact->email = "paymayabuyer1@gmail.com";

            $buyer = new PayMaya\Model\Checkout\Buyer();
            $buyer->firstName = $ord['c_fname'];
            // $buyer->middleName = "Reyes";
            $buyer->lastName = $ord['c_lname'];
            // $buyer->contact = $contact;
            // $buyer->shippingAddress = $address;
            // $buyer->billingAddress = $address;

            $itemCheckout->buyer = $buyer;



    // http://localhost/ipos_max/cashier/paymaya
            $charge_amount = 0;
            if($charges){
                foreach($charges as $charge){
                    $charge_amount += round($charge['total_amount'],2);
                }                
            }

            $discount_amount = 0;
            if($discs){
                foreach($discs as $disc){
                    if(isset($disc['persons'])){
                        foreach($disc['persons'] as $person){
                            $discount_amount += round($person['amount'],2);
                        }                        
                    }else{
                        $discount_amount += round($disc['amount'],2);
                    }                    
                }                
            }
            

            $item_amount = 0;

            foreach ($det as $menu_id => $opt) {
                 if(isset($opt['modifiers']) && count($opt['modifiers']) > 0){
                    foreach ($opt['modifiers'] as $mod_id => $mod) {
                        $opt['price'] += $mod['price'];

                        if(isset($mod['submodifiers']) && count($mod['submodifiers']) > 0){
                            foreach ($mod['submodifiers'] as $sub_id => $submod) {
                                
                                if($submod['mod_line_id'] == $mod['mod_line_id']){
                                   $opt['price'] += $submod['price'];
                                }
                            }
                        }


                    }
                }


                $itemAmountDetails = new PayMaya\Model\Checkout\ItemAmountDetails();
                $itemAmountDetails->shippingFee = 0;
                $itemAmountDetails->tax = "0";
                $itemAmountDetails->subtotal =  $opt['price'];

                $itemAmount = new PayMaya\Model\Checkout\ItemAmount();
                $itemAmount->currency = "PHP";
                $itemAmount->value = $opt['price'];
                $itemAmount->details = $itemAmountDetails;

                $item = new PayMaya\Model\Checkout\Item();
                $item->value = $opt['price'];
                $item->name = $opt['name'];
                $item->code = $opt['code'];
                $item->description = '';
                $item->quantity = $opt['qty'];
                $item->amount = $itemAmount;
                $item->totalAmount = $itemAmount;
                // $ord['amount'] = $opt['price']+$charge_amount;
                $item_amount += $opt['price'];
                $itms[] = $item;
            }
// exit;
            // if($charge_amount > 0){
            //     $itemAmountDetails = new PayMaya\Model\Checkout\ItemAmountDetails();
            //     $itemAmountDetails->shippingFee = 0;
            //     $itemAmountDetails->tax = "0";
            //     $itemAmountDetails->subtotal =  $charge_amount;

            //     $itemAmount = new PayMaya\Model\Checkout\ItemAmount();
            //     $itemAmount->currency = "PHP";
            //     $itemAmount->value = $charge_amount;
            //     $itemAmount->details = $itemAmountDetails;

            //     $item = new PayMaya\Model\Checkout\Item();
            //     $item->value = $charge_amount;
            //     $item->name = 'Other Charges';
            //     $item->code = 'Other Charges';
            //     $item->description = '';
            //     $item->quantity = 1;
            //     $item->amount = $itemAmount;
            //     $item->totalAmount = $itemAmount;
            //     // $ord['amount'] = $opt['price']+$charge_amount;
            //     $item_amount += $charge_amount;
            //     $itms[] = $item;
            // }

            $itemCheckout->items = $itms;
            // $itemCheckout->items = array($itms);

            $totalAmountDetails = new PayMaya\Model\Checkout\ItemAmountDetails();
            $totalAmountDetails->serviceCharge = $charge_amount;
            $totalAmountDetails->discount = $discount_amount;
            $totalAmountDetails->tax = "0";
            $totalAmountDetails->subtotal =  $item_amount;

            $totalAmount = new PayMaya\Model\Checkout\ItemAmount();
            $totalAmount->currency = "PHP";
            $totalAmount->value = round($ord['amount'],2);
            $totalAmount->details = $totalAmountDetails;
            $itemCheckout->totalAmount = $totalAmount;

            // The requestReferenceNumber is an identifier for the customer's order.
            $itemCheckout->requestReferenceNumber = BRANCH_CODE .'_'. $sales_id;

            // Redirect URLs are used to direct the customer to the correct
            // page based on the transaction outcome.
            // Redirect URLs should not be used to set the status of an order
            // to "paid" as the customer might quit the browser prior the redirection.

            $encrypt = urlencode($this->encrypt->encode($sales_id));

            $enc = str_replace('%','~~',$encrypt);

            $itemCheckout->redirectUrl = array(
                "success" => base_url() . "cashier/settle/".$enc."?status=success",
                "failure" => base_url() . "cashier/paymaya_failed/".$enc,
                "cancel" => base_url() . "cashier/paymaya_failed/".$enc
            );

            $itemCheckout->execute();
            $itemCheckout->retrieve();

            $this->session->set_userData('online_payment_ref',$itemCheckout->id);
            
            // Uncomment to redirect the user to the Checkout page.
            header("Location:" . $itemCheckout->url);

            echo json_encode(array('url'=>$itemCheckout->url));

            // echo "Checkout ID:  $itemCheckout->id \n"; // Checkout ID
            // echo "Checkout URL: $itemCheckout->url \n"; // Checkout URL

            exit;
        }

        //catch exception
        catch(Exception $e) {
            $this->paymaya_failed($sales_id,'error2');
        }

    }

    function paymaya_failed($sales_id,$error='error1'){
        $this->session->set_userData('online_payment_ref',$error);
        
        header("Location:" .  base_url() . "cashier/settle/".$sales_id);
    }

     public function submit_trans_even($asJson=true,$submit=null,$void=false,$void_ref=null,$print=false,$sales_id=null,$printKitSlip=false){
          
            $this->load->model('dine/cashier_model');

            $sales_ids = array();

            $order = $this->site_model->get_tbl('trans_sales',array('sales_id ='=>$sales_id));
            $order_menus = $this->site_model->get_tbl('trans_sales_menus',array('sales_id ='=>$sales_id));
            $order_items = $this->site_model->get_tbl('trans_sales_items',array('sales_id ='=>$sales_id));
            $order_mods = $this->site_model->get_tbl('trans_sales_menu_modifiers',array('sales_id ='=>$sales_id));
            $order_submods = $this->site_model->get_tbl('trans_sales_menu_submodifiers',array('sales_id ='=>$sales_id));
            $sales_discs = $this->site_model->get_tbl('trans_sales_discounts',array('sales_id ='=>$sales_id));
            $sales_tax = $this->site_model->get_tbl('trans_sales_tax',array('sales_id ='=>$sales_id));
            $sales_no_tax = $this->site_model->get_tbl('trans_sales_no_tax',array('sales_id ='=>$sales_id));
            $sales_zero_rated = $this->site_model->get_tbl('trans_sales_zero_rated',array('sales_id ='=>$sales_id));
            $sales_charges = $this->site_model->get_tbl('trans_sales_charges',array('sales_id ='=>$sales_id));
            $sales_local_tax = $this->site_model->get_tbl('trans_sales_local_tax',array('sales_id ='=>$sales_id));

            $order = $order[0];
            $guest = $order->guest;

            $error = null;
            $act = null;
            $type = null;
            $type_id = SALES_TRANS;
            $print_echo = array();
            if($void === true){
                $type_id = SALES_VOID_TRANS;
            }

            if($void_ref == null || $void_ref == 0)
                $void_ref = null;

           

            if(count($order_menus) <= 0){
                $error = "Error! There are no items.";
            }
            else if(count($order) <= 0){
                $error = "Error! Shift or User is invalid.";
            }
            // else if(NEED_FOOD_SERVER && !isset($counter['waiter_id']) && $counter['type'] != 'counter' && $counter['type'] != 'takeout'){
            else if(NEED_FOOD_SERVER && !isset($order['waiter_id']) && $order['type'] == 'dinein'){
                $error = "Select Food Server";
            }
            // else if(SERVER_NO_SETUP && $serve_no == 0 && $counter['type'] == 'counter' ){
            //     $error = "Please Select Serve No.";
            // }
            // else if(SERVER_NO_SETUP && $serve_no == 0 && $counter['type'] == 'takeout' ){
            //     $error = "Please Select Serve No.";
            // }
            else{              
                 $user = $this->session->userdata('user');


               //for update sa trans_Sales ng iba pang details
                // $trans_sales = array(
                //         "user_id"       => $order->user_id,
                //         "type_id"       => $type_id,
                //         "shift_id"      => $order->shift_id,
                //         "terminal_id"   => $order->terminal_id,
                //         "type"          => $order->type,
                //         "datetime"      => $order->datetime,
                //         "total_amount"  => $order->total_amount/$guest,
                //         "void_ref"      => $void_ref,
                //         "memo"          => null,
                //         "table_id"      => $order->table_id,
                //         "guest"         => $order->guest,
                //         "serve_no"      => $order->serve_no,
                //         "customer_id"   => $order->customer_id,
                //         "customer_name" => $order->customer_name,
                //         "waiter_id"     => $order->waiter_id,
                //         "split"         => $order->split,
                //         "total_gross"   => $order->total_gross/$guest,
                //         "total_discount" => $order->total_discount/$guest,
                //         "total_charges" => $order->total_charges/$guest,
                //         "zero_rated"    => $order->zero_rated/$guest,
                //         "no_tax"        => $order->no_tax/$guest,
                //         "tax"           => $order->tax/$guest,
                //         "local_tax"     => $order->local_tax/$guest
                //     );  
                 
                $order->total_amount = $order->total_amount/$guest;
                $order->total_gross = $order->total_gross/$guest;
                $order->total_discount = $order->total_discount/$guest;
                $order->total_charges = $order->total_charges/$guest;
                $order->zero_rated = $order->zero_rated/$guest;
                $order->no_tax = $order->no_tax/$guest;
                $order->tax = $order->tax/$guest;
                $order->local_tax = $order->local_tax/$guest;

                 for($i=0;$i<$guest;$i++){                                                        

                    if($i == 0){
                        $this->cashier_model->update_trans_sales((array)$order,$sales_id);
                        // echo $this->db->last_query();

                        $log_id = $this->logs_model->add_logs('Sales Order',$user['id'],$user['full_name']." Updated Sales Order #".$sales_id,$sales_id);

                        $this->cashier_model->delete_trans_sales_menus($sales_id);
                        $this->cashier_model->delete_trans_sales_items($sales_id);
                        $this->cashier_model->delete_trans_sales_menu_modifiers($sales_id);
                        $this->cashier_model->delete_trans_sales_menu_submodifiers($sales_id);
                        $this->cashier_model->delete_trans_sales_discounts($sales_id);
                        $this->cashier_model->delete_trans_sales_charges($sales_id);
                        $this->cashier_model->delete_trans_sales_tax($sales_id);
                        $this->cashier_model->delete_trans_sales_no_tax($sales_id);
                        $this->cashier_model->delete_trans_sales_zero_rated($sales_id);
                        $this->cashier_model->delete_trans_sales_local_tax($sales_id);
                        $act="update";

                    }else{
                        $order->sales_id='';
                        // $order->total_amount=$order->total_amount/$guest;
                        $sales_id = $this->cashier_model->add_trans_sales((array)$order);
                        $log_id = $this->logs_model->add_logs('Sales Order',$user['id'],$user['full_name']." Added New Sales Order #".$sales_id,$sales_id);
                        $act="add";
                    }

                    $sales_ids[] = $sales_id;

                    if($order_menus){
                        $list = array();

                        foreach ($order_menus as $menu) { //print_r($ta);exit;
                            // echo $menu->price . '<br />';
                            $menu->sales_menu_id = '';
                            $menu->price = $i == 0 ? $menu->price/$guest : $menu->price;
                            $menu->sales_id = $sales_id;

                            $list[] = (array)$menu;                            
                        }

                        $this->cashier_model->add_trans_sales_menus($list);
                    }

                    if($order_items){
                        $list = array();
                        foreach ($order_items as $item) {
                            $item->sales_item_id = '';
                            $item->price = $i == 0 ? $item->price/$guest : $item->price;
                            $item->sales_id = $sales_id;                            

                            $list[] = (array)$item;
                        }

                        $this->cashier_model->add_trans_sales_items($list);
                    }

                    if($order_mods){
                        $list = array();
                        foreach ($order_mods as $mod) {
                            $mod->sales_mod_id = '';
                            $mod->price = $i == 0 ? $mod->price/$guest : $mod->price;
                            $mod->sales_id = $sales_id;

                            $list[] = (array)$mod;                           
                        }

                        $this->cashier_model->add_trans_sales_menu_modifiers($list);
                    }

                    if($order_submods){
                        $list = array();
                        foreach ($order_submods as $submod) {
                            $submod->sales_submod_id = '';
                            $submod->price = $i == 0 ? $submod->price/$guest : $submod->price;
                            $submod->sales_id = $sales_id;

                            $list[] = (array)$submod;  
                            
                        }

                        $this->cashier_model->add_trans_sales_menu_submodifiers($list);
                    }

                    if($sales_discs){
                        $list = array();
                        foreach ($sales_discs as $discount) {
                            $discount->trans_sales_discounts = '';
                            $discount->amount = $i == 0 ? $discount->amount/$guest : $discount->amount;
                            $discount->sales_id = $sales_id;                            

                            $list[] = (array)$discount;  
                        }

                        $this->cashier_model->add_trans_sales_discounts($list);
                    }

                    if($sales_tax){
                        $list = array();
                        foreach ($sales_tax as $tax) {
                            $tax->sales_tax_id = '';
                            $tax->amount = $i == 0 ? $tax->amount/$guest : $tax->amount;
                            $tax->sales_id = $sales_id;

                            $list[] = (array)$tax;                              
                        }

                        $this->cashier_model->add_trans_sales_tax($list);
                    }

                    if($sales_charges){
                        $list = array();
                        foreach ($sales_charges as $charge) {
                            $charge->sales_charge_id = '';
                            $charge->amount = $i == 0 ? $charge->amount/$guest : $charge->amount;
                            $charge->amount = $sales_id;

                            $list[] = (array)$charge;                            
                        }

                        $this->cashier_model->add_trans_sales_charges($list);
                    }

                    if($sales_no_tax){
                        $list = array();
                        foreach ($sales_no_tax as $no_tax) {
                            $no_tax->sales_no_tax_id = '';
                            $no_tax->amount = $i == 0 ? $no_tax->amount/$guest : $no_tax->amount;
                            $no_tax->sales_id = $sales_id;

                            $list[] = (array)$no_tax; 
                            
                        }

                        $this->cashier_model->add_trans_sales_no_tax($list);
                    }

                    if($sales_zero_rated){
                        $list = array();
                        foreach ($sales_zero_rated as $zero_rated) {
                            $zero_rated->sales_zero_rated_id = '';
                            $zero_rated->amount = $i == 0 ? $zero_rated->amount/$guest : $zero_rated->amount;
                            $zero_rated->sales_id = $sales_id;

                            $list[] = (array)$zero_rated;
                            
                        }

                        $this->cashier_model->add_trans_sales_zero_rated($list);
                    } 

                    if($sales_local_tax){
                         $list = array();
                        foreach ($sales_local_tax as $local_tax) {
                            $local_tax->sales_local_tax_id = '';
                            $local_tax->amount = $i == 0 ? $local_tax->amount/$guest : $local_tax->amount;
                            $local_tax->sales_id = $sales_id;

                            $list[] = (array)$local_tax;
                            
                        }

                        $this->cashier_model->add_trans_sales_local_tax($list);
                    } 
                    
                 }

              
                $this->update_tbl_activity(null,true);
                
                return $sales_ids;

            }
        }

        function check_modifier($id){
            $wagon = $this->session->userData('trans_cart');
            $mods = $this->session->userData('trans_mod_cart');
            $modsubs = $this->session->userData('trans_submod_cart');

            $row = $wagon[$id];

            $menu_mods = $this->menu_model->get_menu_modifiers($row['menu_id']);            
            
            $rmodcount = 0;
            $rsubmodcount = 0;
            $modcount = 0;
            $multiple = 0;
            $subs = array();
            
            $submodcount = 0; 
            foreach($menu_mods as $menu_mod){
                if($menu_mod->mandatory == 1){
                    $rmodcount += $menu_mod->multiple;
                }
                
                foreach($mods as $i=>$mod){    
                               
                    if($menu_mod->mod_group_id ==  $mod['mod_group_id'] && $mod['trans_id'] == $id && $mod['mandatory'] == 1){
                        // print_r($mods);exit;
                        
                         $subs = array();
                         $multiple = $menu_mod->multiple;
                         $modcount++;

                         $menu_submods = $this->menu_model->get_menu_submodifiers(null,$mod['mod_id']);
                         // print_r($menu_submods);exit;                           
                         // echo $this->db->last_query();exit;
                         foreach($menu_submods as $menu_submod){
                            if(!in_array($menu_submod->group, $subs)){
                                $subs[] = $menu_submod->group;
                            }
                         }

                         $rsubmodcount += count($subs);
                         // print_r($subs);exit;
                         // echo $mod['mod_id'];exit;
                         if($menu_submods){
                            foreach($modsubs as $modsub){
                                if(in_array($modsub['group'], $subs) && $modsub['mod_line_id'] == $i){                      
                                    // echo 1;          
                                    $submodcount++;
                                }
                             }
                         }
                         
                    }
                }
            }
            // print_r($rmodcount);exit;
            // print_r($multiple * $row['qty']);exit;
            if($modcount == $rmodcount * $row['qty'] && count($subs) == 0){
                 echo json_encode(array('status'=>1,'return'=>'menus'));
            }elseif($modcount ==$multiple * $row['qty'] && count($subs) > 0){
                // echo $rsubmodcount * $multiple;
                // echo count($subs) * $multiple;
                // print_r($submodcount);exit;
                // print_r($multiple);exit;
                if($rsubmodcount == $submodcount){
                    echo json_encode(array('status'=>1,'return'=>'menus'));
                }

            }elseif($modcount != $multiple * $row['qty'] && $rsubmodcount == $submodcount){
                    // echo 1;
                    echo json_encode(array('status'=>1,'return'=>'mods'));
            }         
            
        }

    public function get_customer_dets($asJson=true){
        // $this->load->model('dine/settings_model');
        $type = $this->input->post('type');
        $val = $this->input->post('val');
        // echo $type; die();
        if($type == 'id'){
            $where = array('id_number'=>$val);
            $det = $this->site_model->get_details($where,'customers');
            echo $det ? $det[0]->fname." ".$det[0]->lname : '';
        }else{
            // $where = array('fname'=>$val);
            $where = array('trim(concat(if(fname is null,"",fname)," ",if(lname is null,"",lname)))='=>$val);
            // $where = array('trim(concat(fname," ",lname))='=>$val);
            $det = $this->site_model->get_details($where,'customers');
            // echo $det ? $det[0]->cust_id : '';
            $cust_id = '';
            $credit_limit = 0;
            $credit = 0;
            $balance = 0;
            if(count($det) > 0){
                $cust_id = $det[0]->cust_id;
                $credit_limit = $det[0]->credit_limit;


                //get sum ng wala pang bayad
                $args['trans_sales.customer_id'] = $cust_id;
                $args['trans_sales.type_id'] = SALES_TRANS;
                $args['trans_sales.inactive'] = 0;
                $args["trans_sales.trans_ref  IS NOT NULL"] = array('use'=>'where','val'=>null,'third'=>false);
                $args['trans_sales.terminal_id'] = TERMINAL_ID;
                $args["trans_sales.ar_payment_amount is null"] = array('use'=>'where','val'=>null,'third'=>false);
                // $this->site_model->db = $this->load->database('main', TRUE);
                $result = $this->site_model->get_tbl('trans_sales',$args,array(),null,true,'sum(trans_sales.total_amount) as not_paid');

                $not_paid = $result[0]->not_paid;



                //get sum ng di pa kumpleto bayad
                $args2['trans_sales.customer_id'] = $cust_id;
                $args2['trans_sales.type_id'] = SALES_TRANS;
                $args2['trans_sales.inactive'] = 0;
                $args2["trans_sales.trans_ref  IS NOT NULL"] = array('use'=>'where','val'=>null,'third'=>false);
                $args2['trans_sales.terminal_id'] = TERMINAL_ID;
                $args2["trans_sales.ar_payment_amount < total_amount"] = array('use'=>'where','val'=>null,'third'=>false);
                // $this->site_model->db = $this->load->database('main', TRUE);
                $result2 = $this->site_model->get_tbl('trans_sales',$args2,array(),null,true,'sum(trans_sales.total_amount - trans_sales.ar_payment_amount) as not_fully_paid');

                $not_fully_paid = $result2[0]->not_fully_paid;
                
                $credit = $not_paid + $not_fully_paid;

                $balance = $credit_limit - $credit;

                // echo $balance;

            }

            echo json_encode(array('cust_id'=>$cust_id,'credit'=>num($credit,2),'balance'=>$balance,'balancetxt'=>num($balance,2)));
        }

    }

    public function get_trans_type($asJson=true){
        $page = $this->input->post('page');
        $set = $this->cashier_model->get_pos_settings();

        $upto = $page * TRANS_TYPE_COUNT_BUTTONS;
        $fromto = $upto - (TRANS_TYPE_COUNT_BUTTONS - 1);

        // echo $page; die();

        $trans_buttons = array();

        $ids = explode(',',$set->controls);
        $ctr = 1;
        $error = '';
        foreach($ids as $value){

            if($ctr >= $fromto && $ctr <= $upto){




                $text = explode('=>',$value);
                if($text[0] == 1){
                    $texts='dine-in';
                }elseif($text[0] == 8){
                    $texts='foodpanda';
                }
                // elseif($text[0] == 19){
                //  $texts='lala';
                // }
                else{
                    $texts=$text[1];
                }

                if($texts == 'takeout'){
                    $text[1] = TAKEOUTTEXT;
                }

                if($texts == 'dinein' || $texts == 'dine-in' || $texts == 'dine in'){
                    $text[1] = DINEINTEXT;
                }


                // if($texts == 'counter'){
                //     $text[1] = COUNTERTEXT;
                // }
                // echo $text[1];
                // if($texts == 'to go'){
                    
                //  $CI->make->button(strtoupper($text[1]),array('id'=>'takeout-btn','class'=>'new-order-btns btn-block cpanel-btn-blue'));
                // }else{
                //  $CI->make->button(strtoupper($text[1]),array('id'=>$texts.'-btn','class'=>'new-order-btns btn-block cpanel-btn-violet'));

                // }
                $new_trans_type = "old_trans_type";
                if(strtolower($text[0]) == $text[1]){
                    $new_trans_type = "new_trans_type";
                }


                $trans_buttons[$ctr] = array(
                    'text'=>strtoupper($text[1]),
                    'text_id'=>$texts,
                    'new_trans_type'=>$new_trans_type
                );

            }

            $ctr++;
        }

        if(count($trans_buttons) > 0){

        }else{
            $error = 'nobuttons';
        }
        // echo "<pre>",print_r($trans_buttons),"</pre>";die(); 

        echo json_encode(array('buttons'=>$trans_buttons,'error'=>$error));
    }
    public function get_trans_type_search($asJson=true){
        // $val = $this->input->post('val');
        $set = $this->cashier_model->get_pos_settings();
        $val = strtolower($this->input->post('val'));

        $page = 1;

        $upto = $page * TRANS_TYPE_COUNT_BUTTONS;
        $fromto = $upto - (TRANS_TYPE_COUNT_BUTTONS - 1);

        // echo $page; die();

        $trans_buttons = array();
        $search_buttons = array();

        $ids = explode(',',$set->controls);
        $ctr = 1;
        $error = '';
        foreach($ids as $value){

            $text = explode('=>',$value);
            if($text[0] == 1){
                $texts='dine-in';
            }elseif($text[0] == 8){
                $texts='foodpanda';
            }
            // elseif($text[0] == 19){
            //  $texts='lala';
            // }
            else{
                $texts=$text[1];
            }

            if($texts == 'takeout'){
                $text[1] = TAKEOUTTEXT;
            }

            if($texts == 'dinein' || $texts == 'dine-in' || $texts == 'dine in'){
                $text[1] = DINEINTEXT;
            }


            // if($texts == 'counter'){
            //     $text[1] = COUNTERTEXT;
            // }
            // echo $text[1];
            // if($texts == 'to go'){
                
            //  $CI->make->button(strtoupper($text[1]),array('id'=>'takeout-btn','class'=>'new-order-btns btn-block cpanel-btn-blue'));
            // }else{
            //  $CI->make->button(strtoupper($text[1]),array('id'=>$texts.'-btn','class'=>'new-order-btns btn-block cpanel-btn-violet'));

            // }
            $new_trans_type = "old_trans_type";
            if(strtolower($text[0]) == $text[1]){
                $new_trans_type = "new_trans_type";
            }


            if(strpos(strtolower($text[1]), $val) !== false){
                $search_buttons[$ctr] = array(
                    'text'=>strtoupper($text[1]),
                    'text_id'=>$texts,
                    'new_trans_type'=>$new_trans_type
                );
                $ctr++;
            }

        }


        foreach($search_buttons as $iid => $vv){

            if($iid <= 12){
                $trans_buttons[$iid] = array(
                    'text'=>strtoupper($vv['text']),
                    'text_id'=>$vv['text_id'],
                    'new_trans_type'=>$vv['new_trans_type']
                );
            }

        }




        if(count($trans_buttons) > 0){

        }else{
            $error = 'nobuttons';
        }
        // echo "<pre>",print_r($trans_buttons),"</pre>";die(); 


        // $disc_session = array();
        // if($this->session->userData('disc_session')){
        //     $disc_session = $this->session->userData('disc_session');
        // }

        // $val = strtolower($this->input->post('val'));
        // $found = array();
        // foreach($disc_session as $id => $v){

        //     // echo $v['text'].'---';
        //     if(strpos(strtolower($v['text']), $val) !== false){

                
        //         $found[$id] = array('text'=>$v['text'],'fix'=>$v['fix'],'rate'=>$v['rate'],'disc_code'=>$v['disc_code']);
                
        //         // echo 'find--';
        //     }else{
        //         // echo 'we--';
        //     }
        // }

        // die();
        // echo "<pre>",print_r($found),"</pre>";die(); 
        // echo json_encode(array('found'=>$found));

        echo json_encode(array('buttons'=>$trans_buttons,'error'=>$error));
    }

    //Discount on settle page
    public function add_discount_settle(){
        $this->load->model('dine/settings_model');
        $this->load->model('dine/main_model');
        $counter = sess('counter');
    
        $disc_cart = array();
        if($this->session->userData('trans_multi_disc_cart')){
            $disc_cart = $this->session->userData('trans_multi_disc_cart');
        }

        $trans_cart = array();
        if($this->session->userData('trans_cart')){
            $trans_cart = $this->session->userData('trans_cart');
        }

        // echo "<pre>",print_r($trans_cart),"</pre>";die(); 

        $trans_disc_cart = sess('trans_disc_cart');

        $disc_id = $this->input->post('disc_id');
        $name = $this->input->post('name');
        $cust_code = $this->input->post('disc_code');
        $guest = $this->input->post('guest');
        $total = $this->input->post('total');
        $openamt = $this->input->post('openamt');
        // $bday = $this->input->post('bday');
        $bday = null;
        $remarks = null;
        $items = array();

        if($this->input->post('bday'))
            $bday = $this->input->post('bday');

        if($this->input->post('remark'))
            $remarks = $this->input->post('remark');

        $where = array('disc_id'=>$disc_id);
        $discounts = $this->site_model->get_details($where,'receipt_discounts');
        $dc = $discounts[0];
        $greater = 0;
        $alcohol = 0;
        if($dc->disc_code == 'SNDISC'){

            // check if nasa customer na yun name
            $where = array('fname'=>$name);
            $cus_det = $this->site_model->get_details($where,'customers');

            if(count($cus_det) == 0){
                //add sa customer pag senior yun code
                $sen_items = array(
                    "fname"=>$name,
                    "is_senior"=>1
                );

                $id = $this->cashier_model->add_senior_cust($sen_items);
                $this->main_model->add_trans_tbl('customers',$sen_items);
            }

            $trans_mod_cart = array();
            if($this->session->userData('trans_mod_cart')){
                $trans_mod_cart = $this->session->userData('trans_mod_cart');
                // echo var_dump($trans_mod_cart);
                // return false;
            }


            foreach($trans_cart as $t_id => $trans){
               
                if(isset($trans['cost']))
                        $cost = $trans['cost'];
                if(isset($trans['price']))
                    $cost = $trans['price'];

                if(isset($trans['modifiers'])){
                    foreach ($trans['modifiers'] as $trans_mod_id => $mod) {
                        if($trans_id == $mod['line_id']){
                            $cost += $mod['price'];
                            
                            if(isset($mod['submodifiers'])){
                                foreach($mod['submodifiers'] as $sub_id => $smod){
                                    if($smod['mod_line_id'] == $mod['mod_line_id']){
                                        $cost += $smod['price'];
                                    }
                                }
                            }
                        }


                    }
                    // echo '1';
                }else{
                    if(count($trans_mod_cart) > 0){
                        // echo '2';
                        foreach ($trans_mod_cart as $trans_mod_id => $mod) {
                            if($trans_id == $mod['trans_id']){
                                $cost += $mod['cost'];
                            
                                if(isset($trans_submod_cart)){
                                    foreach ($trans_submod_cart as $trans_submod_id => $submod) {
                                        if($trans_mod_id == $submod['mod_line_id'])
                                            $cost += $submod['price'];
                                    }
                                }

                            }
                        }
                    }
                }


                $where = array('menu_id'=>$trans['menu_id']);
                $men = $this->site_model->get_details($where,'menus');

                if($men[0]->alcohol == 1){
                    $alcohol += $cost * $trans['qty'];
                }

            }
        }

        $total = $total - $alcohol;

        if($dc->fix == 1){
            if($dc->disc_rate == 0){
                if($openamt){
                    $discount = $openamt;
                }else{
                    echo 'addopenamt';
                    return false;
                }
            }else{
                $discount = $dc->disc_rate;
            }


            $fix_rate = $dc->disc_rate;
            if($fix_rate > $total){
                $greater = 1;
            }
        }

        if($greater == 0){

            $persons = array();
            if(isset($trans_disc_cart[$dc->disc_code]['persons'])){
                $persons = $trans_disc_cart[$dc->disc_code]['persons'];
            }


            if(count($persons) >= $guest){
                echo "guestlimit";
            }else{

                $persons[$name] = array(
                    "name"  => $name,
                    "code"  => $cust_code,
                    "bday"  => $bday,
                    "remarks"  => $remarks,
                );

                $trans_disc_cart[$dc->disc_code]['persons'] = $persons;
                sess_initialize('trans_disc_cart',$trans_disc_cart);


                $disc_cart_old = array();
                $error = "";
                if(isset($trans_disc_cart[$dc->disc_code])){
                    $disc_cart_old = $trans_disc_cart[$dc->disc_code];
                }
                if($dc->fix == 1){
                    $dtype = 'all';
                }else{
                    $dtype = 'equal';
                }

                if(isset($disc_cart_old['persons']) && count($disc_cart_old['persons']) <= $guest){
                // if(isset($disc_cart_old['persons'])){
                    $disc_cart_old['guest'] =  $guest; 
                    $disc_cart_old['disc_rate'] =  $dc->disc_rate; 
                    $disc_cart_old['disc_code'] =  $dc->disc_code; 
                    $disc_cart_old['disc_id'] =  $disc_id; 
                    $disc_cart_old['disc_type'] = $dtype; 
                    $disc_cart_old['no_tax'] =  $dc->no_tax; 
                    $disc_cart_old['fix'] =  $dc->fix; 
                    $disc_cart_old['openamt'] =  $openamt; 
                    $trans_disc_cart[$dc->disc_code] = $disc_cart_old;
                    sess_initialize('trans_disc_cart',$trans_disc_cart);
                    // echo var_dump($trans_disc_cart);
                }


                if($dc->fix == 1){
                    if($dc->disc_rate == 0){
                        if($openamt){
                            $discount = $openamt;
                        }else{
                            echo 'addopenamt';
                        }
                    }else{
                        $discount = $dc->disc_rate;
                    }


                }else{
                    $divi = $total/$guest;
                    // $divi = $total/$row['guest'];
                    $divi_less = $divi;
                    $discount = 0;
                    $lv = 0;

                    $where = array('id'=>1);
                    $set_det = $this->site_model->get_details($where,'settings');

                    if($counter['type'] != 'dinein' && $counter['type'] != 'mcb' && $dc->disc_code == 'SNDISC' && $divi > $set_det[0]->ceiling_amount && $set_det[0]->ceiling_amount > 0){
                        $divi = $set_det[0]->ceiling_amount;
                        $divi_less = $set_det[0]->ceiling_amount;
                    }

                    if($counter['type'] == 'mcb' && $dc->disc_code == 'SNDISC' && $divi > $set_det[0]->ceiling_mcb && $set_det[0]->ceiling_mcb > 0){
                        $divi = $set_det[0]->ceiling_mcb;
                        $divi_less = $set_det[0]->ceiling_mcb;
                    }

                    if($dc->disc_code == ATHLETE_CODE){
                        // if($dc->no_tax == 1){
                            $divi_less = ($divi / 1.12);
                            $lv = $divi - $divi_less;
                        // }
                        // $no_persons = count($row['persons']);
                        // foreach ($row['persons'] as $code => $per) {
                            // $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $divi_less);
                        $discount = ($dc->disc_rate / 100) * $divi_less;
                        $less_vat = 0;
                    }else{
                        if($dc->no_tax == 1){
                            $divi_less = ($divi / 1.12);
                            $lv = $divi - $divi_less;
                        }
                        // $no_persons = count($row['persons']);
                        // foreach ($row['persons'] as $code => $per) {
                            // $discs[] = array('type'=>$row['disc_code'],'amount'=>($rate / 100) * $divi_less);
                        $discount = ($dc->disc_rate / 100) * $divi_less;
                        $less_vat = $lv;
                        
                    }

                    // }
                    // $tl = $divi * ( abs($row['guest'] - $no_persons) );
                    // $tdl = ($divi_less * $no_persons) - $discount;
                    // $tl2 = $divi * ( abs($row['guest'] - $ps_counter) );
                    // $vat1 = $tl2 / 1.12;
                    // $vatss = ($vat1 * 0.12);
                }
                    // echo "<pre>",print_r($less_vat),"</pre>";die();

                // $discounts = $this->settings_model->get_receipt_discounts($disc_id);
                $disc_cart[] = array('cust_name'=>$name,
                                    'cust_code'=>$cust_code,
                                    'bday'=>$bday,
                                    'remarks'=>$remarks,
                                    'disc_code'=>$dc->disc_code,
                                    'disc_rate'=>$dc->disc_rate,
                                    'no_tax'=>$dc->no_tax,
                                    'disc_name'=>$dc->disc_name,
                                    'disc_amount'=>$discount,
                                    'less_vat'=>$less_vat,
                                    'fix'=>$dc->fix,
                                    );

                sess_initialize('trans_multi_disc_cart',$disc_cart);



            }
 

        }else{
            echo 'bigger';
        }

        

    }

    public function reset_discount_settle(){
        sess_clear('trans_disc_cart');
        sess_clear('trans_multi_disc_cart');

        $counter = sess('counter');
        // print_r($counter);exit;
        $this->site_model->delete_tbl('trans_sales_discounts',array('sales_id'=>$counter['sales_id']));
    }

    public function load_brands(){
        $this->load->helper('dine/cashier_helper');

        $brands = $this->cashier_model->get_brands();

        $branch = $this->get_branch_details(false);
        $def_brand = $branch['brand'];
        $where = array('id'=>$def_brand);
        $bdet = $this->site_model->get_details($where,'brands');
        $branch['name'] = $bdet[0]->brand_name;

        if($this->session->userData('brand_session')){
            $def_brand = $this->session->userData('brand_session');
            $where = array('id'=>$def_brand);
            $bdet = $this->site_model->get_details($where,'brands');
            $branch['name'] = $bdet[0]->brand_name;
        }


        // echo base_url().'uploads/brands/'.$def_brand.'.jpg';

        // echo $def_brand;

        $file_pth = 'uploads/brands/'.$def_brand.'.jpg';

        if (is_file($file_pth)) {
            // echo $def_brand;
           echo json_encode(array('brand_img'=>$file_pth,'brand'=>$branch['name']));
        } else {

            // echo 'noimage';
            echo json_encode(array('brand_img'=>'noimage','brand'=>$branch['name']));
        }

    }

    public function get_discounts_settle($asJson=true){
        $this->load->model('dine/cashier_model');
        $this->load->model('dine/settings_model');
        $trans_disc_cart = sess('trans_disc_cart');
        $typeCN = sess('trans_type_cart');
        $discounts = $this->settings_model->get_receipt_discounts();
        $discs = array();
        $this->make->sDivRow();
            foreach ($discounts as $res) {
                if($res->inactive != 1){
                    $this->make->sDivCol(12);
                        $this->make->button("[".strtoupper($res->disc_code)."] ".strtoupper($res->disc_name),array('id'=>'item-disc-btn-'.$res->disc_code,'class'=>'disc-btn-row btn-block settle-btn-green'));
                    $this->make->eDivCol();
                    $ids[$res->disc_code] = array(
                        "disc_code"=>$res->disc_code,
                        "disc_id"=>$res->disc_id,
                        "disc_name"=>$res->disc_name,
                        "disc_rate"=>$res->disc_rate,
                        "fix"=>$res->fix,
                        "no_tax"=>$res->no_tax
                    );
                    $guest = null;
                    if(isset($typeCN[0]['guest'])){
                        $ids[$res->disc_code]['guest'] = $typeCN[0]['guest'];
                    }else{
                         $ids[$res->disc_code]['guest'] = 1;
                    }
                    if(isset($trans_disc_cart[$res->disc_code])){
                        $row = $trans_disc_cart[$res->disc_code];
                        $ids[$res->disc_code]['guest'] = $row['guest'];
                        $ids[$res->disc_code]['disc_type'] = $row['disc_type'];
                        foreach ($row['persons'] as $code => $per) {
                            $ids[$res->disc_code]['persons'][$code] = array(
                                'name' => $per['name'],
                                'code' => $per['code'],
                                'bday' => $per['bday']
                            );
                        }
                    }
                }
            }
        $this->make->eDivRow();
        $code = $this->make->code();

        echo json_encode(array('code'=>$code,'ids'=>$ids));
    }

    //for discount per item
    public function discount_item_settle($trans_id=null){

        $trans_disc_cart = sess('trans_disc_cart');
        $disc_id = $this->input->post('disc_id');
        $disc_code = $this->input->post('disc_code');
        $disc_remarks = $this->input->post('disc_remarks');

        //get details of disc
        $where = array('disc_id'=>$disc_id);
        $det_d = $this->site_model->get_details($where,'receipt_discounts');

        $wagon = array();
        $error = null;
        $name  = 'trans_cart';
        $wagon = $this->session->userData($name);
        $row = $wagon[$trans_id];
        // $char = $this->input->post('operator');
        // $val = $this->input->post('value');
        
        $total_amt = $row['qty'] * $row['cost'];

        if($disc_code == ATHLETE_CODE){
            $to_disc = $total_amt / 1.12;
            $less_v = 0;
            $rate = $det_d[0]->disc_rate / 100;
            $discount = $to_disc * $rate;
            $total_disc = $less_v + $discount;
        }else{
            if($det_d[0]->fix == 1){
                $discount = $det_d[0]->disc_rate;
                $total_disc = $discount;
            }else{
                if($det_d[0]->no_tax == 1){
                    $to_disc = $total_amt / 1.12;
                    $less_v = $to_disc * 0.12;
                    $rate = $det_d[0]->disc_rate / 100;
                    $discount = $to_disc * $rate;
                    $total_disc = $less_v + $discount;
                }else{
                    $rate = $det_d[0]->disc_rate / 100;
                    $discount = $total_amt * $rate;
                    $total_disc = $discount;
                }
            }
        }


        // echo $total_disc; die();
        $disc = array();
        if($this->session->userData('item_discount')){
            $disc = $this->session->userData('item_discount');
        }

        $selected = $this->session->userData('selected_person');
        // echo "<pre>",print_r($selected),"</pre>";die();

        $disc[$trans_id] = array(
                                'discount'=>$discount,
                                // 'less_vat'=>$less_v,
                                'disc_id'=>$disc_id,
                                'type'=>'equal',
                                'disc_code'=>$disc_code,
                                'remarks'=>$disc_remarks,
                                'disc_rate'=>$det_d[0]->disc_rate,
                                'items'=>$trans_id,
                                'amount'=>$discount,
                                'no_tax'=>$det_d[0]->no_tax,
                                'name'=>$selected['sname'],
                                'bday'=>null,
                                'code'=>$selected['code'],
                                'total_dsc'=>$total_disc,
                                'guest'=>1,
        );
        
        // echo "<pre>",print_r($disc),"</pre>";die();
        $new_amt = $total_amt - $total_disc;
        // switch($char){
        //     case "times":
        //         $row['qty'] *= $val;
        //         break;
        //     case "equal":
        //         $row['qty'] = $val;
        //         break;
        //     case "plus";
        //         $row['qty'] += $val;
        //         break;
        //     case "minus";
        //         $row['qty'] -= $val;
        //         if($row['qty'] <= 0)
        //             $row['qty'] = 1;
        //         break;
        // }
        // $wagon[$trans_id] = $row;
        $this->session->set_userData('item_discount',$disc);
        echo json_encode(array("error"=>null,"discounted_amt"=>round($new_amt,2)));
    }

    public function remove_person_disc_line_settle($disc=null,$code=null){
        $person_disc_cart = sess('person_disc_cart');
        $item_discount = sess('item_discount');
        $trans_cart = sess('trans_cart');
        $affeted_row = array();
        if($item_discount){
            foreach($item_discount as $line_id => $vv){
                if($vv['code'] == $code){
                    unset($item_discount[$line_id]);
                    sess_initialize('item_discount',$item_discount);

                    $affeted_row[$line_id] = array('def_amt'=>$trans_cart[$line_id]['qty'] * $trans_cart[$line_id]['cost']);
                }
            }
        }

        // echo $affeted_row; die();
        // $this->session->set_userData('item_discount',$disc);
        // $persons = array();
        // if(isset($person_disc_cart[$code])){
        //     $persons = $person_disc_cart[$code];
        // }
        unset($person_disc_cart[$code]);
        // $person_disc_cart = $persons;
        sess_initialize('person_disc_cart',$person_disc_cart);

         $counter = sess('counter');
        // print_r($counter);exit;
        $this->site_model->delete_tbl('trans_sales_discounts',array('sales_id'=>$counter['sales_id']));
    
        echo json_encode(array('affeted_row'=>$affeted_row));
    }

    public function counter_trans_details(){
            // if(LOCALSYNC){
            //     $this->load->model('core/sync_model');
            //  }
            // echo "<pre>",print_r(sess('customer_name')),"</pre>";die();
            $this->load->model('dine/cashier_model');
            $counter = sess('counter');
            $trans_cart = sess('trans_cart');
            $trans_mod_cart = sess('trans_mod_cart');
            $trans_submod_cart = sess('trans_submod_cart');
            $trans_type_cart = sess('trans_type_cart');
            $trans_disc_cart = sess('trans_disc_cart');
            $trans_charge_cart = sess('trans_charge_cart');
            $loyalty_card = sess('loyalty_card');
            $reasons = sess('reasons');
            $item_discount = sess('item_discount');
            $trans_customer_name = (!empty(sess('customer_name'))) ? sess('customer_name') : '';
            $totals  = $this->total_trans(false,$trans_cart);
            $total_amount = $totals['total'];
            $total_gross = $totals['gross'];
            $charges = $totals['charges'];
            $local_tax = $totals['local_tax'];
            $error = null;
            $act = null;
            $sales_id = null;
            $type = null;
            $type_id = SALES_TRANS;
            $print_echo = array();
            

            $serve_no = 0;
            if(isset($trans_type_cart[0]['serve_no'])){
                $serve_no = $trans_type_cart[0]['serve_no'];
            }

            if(count($trans_cart) <= 0){
                $error = "Error! There are no items.";
            }
            else if(count($counter) <= 0){
                $error = "Error! Shift or User is invalid.";
            }
            // else if(NEED_FOOD_SERVER && !isset($counter['waiter_id']) && $counter['type'] != 'counter' && $counter['type'] != 'takeout'){
            else if(NEED_FOOD_SERVER && !isset($counter['waiter_id']) && $counter['type'] == 'dinein'){
                $error = "Select Food Server";
            }
            // else if(SERVER_NO_SETUP && $serve_no == 0 && $counter['type'] == 'counter' ){
            //     $error = "Please Select Serve No.";
            // }
            // else if(SERVER_NO_SETUP && $serve_no == 0 && $counter['type'] == 'takeout' ){
            //     $error = "Please Select Serve No.";
            // }
            else{
                if(count($trans_disc_cart) > 0){
                    foreach ($trans_disc_cart as $disc_id => $row) {
                        if(!isset($row['disc_type'])){
                            $error = "Select Discount Type. If equally Divided or All Items.";
                        }
                        else{
                            if($row['disc_type'] == "")
                                $error = "Select Discount Type. If equally Divided or All Items.";
                        }
                    }
                    if($error != null){
                        if($asJson){
                            echo json_encode(array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type));
                            return false;
                        }
                        else{
                            return array('error'=>$error,'act'=>$act,'id'=>$sales_id,'type'=>$type);
                        }
                    }
                }


                
                $type = $counter['type'];
                #save sa trans_sales
                $table = null;
                $guest = 0;
                
                $customer = null;
                if(isset($trans_type_cart[0]['table'])){
                    $table = $trans_type_cart[0]['table'];
                }
                if(isset($trans_type_cart[0]['guest'])){
                    $guest = $trans_type_cart[0]['guest'];
                }
                
                if(count($trans_disc_cart) > 0){
                    foreach ($trans_disc_cart as $disc_code => $dc) {
                        $guest = $dc['guest'];
                    }
                } 
                if(isset($trans_type_cart[0]['customer_id'])){
                    $customer = $trans_type_cart[0]['customer_id'];
                }
                if(count($loyalty_card) > 0){
                    foreach ($loyalty_card as $code => $row) {
                        $customer = $row['cust_id'];
                        // $loyalty = array(
                        //     "cust_id" => $row['cust_id'],
                        //     "code" => $row['code']
                        // );
                    }

                }
                $waiter = null;
                if(isset($counter['waiter_id'])){
                    $waiter = $counter['waiter_id'];
                }

              

               
                #save sa trans_sales_menus
                $trans_sales_menu = array();
                $trans_sales_items = array();
                $total_gross = 0;
                $alcohol = 0;

                // echo "<pre>",print_r($trans_cart),"</pre>";die();

                foreach ($trans_cart as $trans_id => $v) {

                    if($v['qty'] == 0){ //if qty is zero skip the item to resolve the splitting 0 issue @jx10292019
                        continue;
                    }
                    $remarks = $serial_key = null;
                    $nocharge = 0;
                    $rate = (isset($trans_disc_cart[$trans_id]['disc_percent'])) ?  $trans_disc_cart[$trans_id]['disc_percent'] : 0 ;
                    $percent_disc = ($v['cost'] * $v['qty']) * ($rate / 100);
                    $percent_abs = (isset($trans_disc_cart[$trans_id]['disc_absolute'])) ? $trans_disc_cart[$trans_id]['disc_absolute'] : 0;
                    $total_disc = $percent_disc + $percent_abs;

                   
                    if(isset($v['nocharge']) && $v['nocharge'] != 0){
                        $nocharge = $v['nocharge'];
                    }
                    if(isset($v['remarks']) && $v['remarks'] != ""){
                        $remarks = $v['remarks'];
                    }
                    $kitchen_slip_printed=0;
                    if(isset($v['kitchen_slip_printed']) && $v['kitchen_slip_printed'] != ""){
                        $kitchen_slip_printed = $v['kitchen_slip_printed'];
                    }
                    $free = $free_reason = null;
                    if(isset($v['free_user_id'])){
                        $free = $v['free_user_id'];
                    }

                     if(isset($v['free_reason'])){
                        $free_reason = $v['free_reason'];
                    }
                    

                    if(!isset($v['retail'])){
                        $where = array('menu_id'=>$v['menu_id']);
                        $m_det = $this->site_model->get_details($where,'menus');

                        
                    }
                    else{
                        $where = array('item_id'=>$v['menu_id']);
                        $i_det = $this->site_model->get_details($where,'items');

                        
                    }
                    $total_gross += $v['qty'] *$v['cost'];

                    $where = array('menu_id'=>$v['menu_id']);
                    $men = $this->site_model->get_details($where,'menus');

                    if($men[0]->alcohol == 1){
                        $alcohol += $v['qty'] *$v['cost'];
                    }

                }
                if(count($trans_sales_menu) > 0)
                {
                    // $trans_id = $this->cashier_model->add_trans_sales_menus($trans_sales_menu);
                    //  if(LOCALSYNC){
                    //     $this->sync_model->add_trans_sales_menus($sales_id);
                    // }
                }
                
                if(count($trans_sales_items) > 0)
                {
                    // $this->cashier_model->add_trans_sales_items($trans_sales_items);
                    // if(LOCALSYNC){
                    //     $this->sync_model->add_trans_sales_items($sales_id);
                    // }
                }
                #save sa trans_sales_menu_modifiers
                if(count($trans_mod_cart) > 0){
                    $trans_sales_menu_modifiers = array();
                    foreach ($trans_mod_cart as $trans_mod_id => $m) {
                        $kitchen_slip_printed=0;
                        if(isset($m['kitchen_slip_printed']) && $m['kitchen_slip_printed'] != ""){
                            $kitchen_slip_printed = $m['kitchen_slip_printed'];
                        }
                        if(isset($trans_cart[$m['trans_id']])){
                            //menu
                            $where = array('menu_id'=>$m['menu_id']);
                            $m_det = $this->site_model->get_details($where,'menus');

                            //mod group
                            $where = array('mod_group_id'=>$m['mod_group_id']);
                            $mg_det = $this->site_model->get_details($where,'modifier_groups');

                            //mod
                            $where = array('mod_id'=>$m['mod_id']);
                            $mod_det = $this->site_model->get_details($where,'modifiers');


                           
                            $total_gross += $m['qty'] *$m['cost'];

                            // $where = array('menu_id'=>$v['menu_id']);
                            // $men = $this->site_model->get_details($where,'menus');

                            if($m_det[0]->alcohol == 1){
                                $alcohol += $m['qty'] *$m['cost'];
                            }

                        }
                    }
                    if(count($trans_sales_menu_modifiers) > 0)
                    {
                        // $trans_id = $this->cashier_model->add_trans_sales_menu_modifiers($trans_sales_menu_modifiers);
                        // if(LOCALSYNC){
                        //     $this->sync_model->add_trans_sales_menu_modifiers($sales_id);
                        // }
                    }
                }

                #save sa trans_sales_menu_submodifiers
                if(count($trans_submod_cart) > 0){
                    $trans_sales_menu_submodifiers = array();
                    foreach ($trans_submod_cart as $trans_submod_id => $m) {
                        $kitchen_slip_printed=0;
                        if(isset($m['kitchen_slip_printed']) && $m['kitchen_slip_printed'] != ""){
                            $kitchen_slip_printed = $m['kitchen_slip_printed'];
                        }
                        if(isset($trans_cart[$m['trans_id']])){
                            //menu
                            $where = array('menu_id'=>$trans_cart[$m['trans_id']]['menu_id']);
                            $m_det = $this->site_model->get_details($where,'menus');

                            
                            $total_gross += $m['qty'] *$m['price'];

                            if($m_det[0]->alcohol == 1){
                                $alcohol += $m['qty'] *$m['cost'];
                            }
                        }
                    }
                    if(count($trans_sales_menu_modifiers) > 0)
                    {
                        // $trans_id = $this->cashier_model->add_trans_sales_menu_submodifiers($trans_sales_menu_submodifiers);
                        // if(LOCALSYNC){
                        //     $this->sync_model->add_trans_sales_menu_modifiers($sales_id);
                        // }
                    }
                }

                if(count($item_discount) > 0){
                    //for save sa trans_sales_discounts pero per item
                    $trans_sales_disc_items = array();
                    foreach($item_discount as $id => $dc){
                        $total_disc += $dc['amount'];
                        

                    }
                    
                }else{
                    #save sa trans_sales_discounts
                    $total_disc = 0;
                    if(count($trans_disc_cart) > 0){
                        $trans_sales_disc_cart = array();
                        $total = 0;
                        foreach ($trans_cart as $trans_id => $trans){
                            if(isset($trans['cost']))
                                $cost = $trans['cost'];
                            if(isset($trans['price']))
                                $cost = $trans['price'];

                            if(isset($trans['modifiers'])){
                                foreach ($trans['modifiers'] as $trans_mod_id => $mod) {
                                    if($trans_id == $mod['line_id'])
                                        $cost += $mod['price'];
                                }
                            }

                            else{
                                if(count($trans_mod_cart) > 0){
                                    foreach ($trans_mod_cart as $trans_mod_id => $mod) {
                                        if($trans_id == $mod['trans_id'])
                                            $cost += $mod['cost'];
                                    }
                                }
                            }
                            if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
                                $rate = 1.12;
                                $cost = ($cost / $rate);
                                if(isset($zero_rated)){
                                    $zero_rated += $v['qty'] * $cost;
                                }else{
                                    $zero_rated = $v['qty'] * $cost;
                                }
                            }
                            $total += $trans['qty'] * $cost;
                        }

                        foreach ($trans_disc_cart as $disc_id => $dc) {
                            $dit = "";
                            if(isset($dc['items'])){
                                foreach ($dc['items'] as $lines) {
                                    $dit .= $lines.",";
                                }
                                if($dit != "")
                                    $dit = substr($dit,0,-1);                        
                            }
                            

                            $discount = 0;
                            $rate = $dc['disc_rate'];
                            switch ($dc['disc_type']) {
                                case "equal":
                                    
                                    if($dc['disc_code'] == 'SNDISC'){
                                        $divi = ($total-$alcohol)/$dc['guest'];
                                    }else{
                                        $divi = $total/$dc['guest'];
                                    }
                                    $divi_less = $divi;

                                    $where = array('id'=>1);
                                    $set_det = $this->site_model->get_details($where,'settings');

                                    if($counter['type'] != 'dinein' && $counter['type'] != 'mcb' && $dc['disc_code'] == 'SNDISC' && $divi > $set_det[0]->ceiling_amount && $set_det[0]->ceiling_amount > 0){
                                        $divi = $set_det[0]->ceiling_amount;
                                        $divi_less = $set_det[0]->ceiling_amount;
                                    }

                                    if($counter['type'] == 'mcb' && $dc['disc_code'] == 'SNDISC' && $divi > $set_det[0]->ceiling_mcb && $set_det[0]->ceiling_mcb > 0){
                                        $divi = $set_det[0]->ceiling_mcb;
                                        $divi_less = $set_det[0]->ceiling_mcb;
                                    }

                                    if($dc['disc_code'] == ATHLETE_CODE){
                                        // if($dc['no_tax'] == 1){
                                            $divi_less = ($divi / 1.12);
                                        // }
                                        $no_persons = count($dc['persons']);
                                        // foreach ($row['persons'] as $code => $per) {
                                        $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $divi_less);
                                        $discount = ($rate / 100) * $divi_less;
                                    }else{
                                        if($dc['no_tax'] == 1){
                                            $divi_less = ($divi / 1.12);
                                        }
                                        $no_persons = count($dc['persons']);
                                        // foreach ($row['persons'] as $code => $per) {
                                        $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $divi_less);
                                        $discount = ($rate / 100) * $divi_less;
                                    }

                                    // }
                                    // $total = ($divi * $row['guest']) - $discount;

                                    break;
                                default:
                                    // $no_citizens = count($dc['persons']);
                                    // if($dc['no_tax'] == 1)
                                    //     $total = ($total / 1.12);                     
                                    // $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total);
                                    // $discount = ($rate / 100) * $total;
                                    if($dc['fix'] == 0){
                                        if(DISCOUNT_NET_OF_VAT && $row['disc_code'] != DISCOUNT_NET_OF_VAT_EX){
                                            $no_citizens = count($dc['persons']);
                                            $total_net_vat = ($total / 1.12);                     
                                            foreach ($dc['persons'] as $code => $per) {
                                                $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total_net_vat);
                                                $discount += ($rate / 100) * $total_net_vat;
                                            }
                                            $total -= $discount; 
                                        }
                                        else{
                                            $no_citizens = count($dc['persons']);

                                            // echo $no_citizens; die();
                                            if($dc['disc_code'] == ATHLETE_CODE){
                                                // if($dc['no_tax'] == 1)
                                                    $total = ($total / 1.12);                     
                                                foreach ($dc['persons'] as $code => $per) {
                                                    $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total);
                                                    $discount += ($rate / 100) * $total;
                                                }
                                            }else{
                                                if($dc['no_tax'] == 1)
                                                    $total = ($total / 1.12);                     
                                                foreach ($dc['persons'] as $code => $per) {
                                                    $discs[] = array('type'=>$dc['disc_code'],'amount'=>($rate / 100) * $total);
                                                    $discount += ($rate / 100) * $total;
                                                }
                                            }

                                            $total -= $discount;                                        
                                        }    
                                    }
                                    else{
                                        if($dc['openamt'] != 0){
                                            $discs[] = array('type'=>$dc['disc_code'],'amount'=>$dc['openamt']);
                                            $discount += $dc['openamt'];
                                            $total -= $discount;
                                        }else{
                                            $discs[] = array('type'=>$dc['disc_code'],'amount'=>$rate);
                                            $discount += $rate;
                                            $total -= $discount;
                                        }

                                    }
                                    // }    
                            }
                            foreach ($dc['persons'] as $pcode => $oper) {
                                
                                $total_disc += $discount;
                            }
                        }
                        
                    }

                }


                
                // save sa trans_sales_charges
                $total_charge = 0;
                if(count($trans_charge_cart) > 0){
                    $trans_sales_charge_cart = array();
                    foreach ($trans_charge_cart as $charge_id => $ch) {
                      
                        $total_charge += $charges[$charge_id]['amount'];
                    }
                    
                }

               
                // echo $total_charge;exit;

               // print_r($charges);exit;
                // echo $total_charge;exit;
                // echo "<pre>",print_r($total_charge),"</pre>";die();
                $tax = $this->get_tax_rates(false);
                $taxable_amount = $total_gross;
                $not_taxable_amount = 0;
                $zero_rated = 0;
                $diplomat_count = 0;
                $g_count = 0;
                if(count($tax) > 0){

                    if(isset($counter['zero_rated']) && $counter['zero_rated'] == 1){
                        $rate = 1.12;
                        // $cost = ($cost / $rate);
                        // $rate = 0.12;
                        $zero_rated += $total_gross / $rate;
                        $taxable_amount -= $total_gross;
                        $not_taxable_amount += $total_gross / $rate;
                    }else{
                        
                        if(count($item_discount)>0){
                            foreach ($trans_cart as $trans_id => $v) {
                                $cost = $v['cost'];
                                $total = $v['qty'] * $cost;

                                if(isset($item_discount[$trans_id])){
                                    
                                    if($item_discount[$trans_id]['disc_code'] == 'DIPLOMAT'){
                                        $zero_rated += $total / 1.12;
                                        $not_taxable_amount += $total / 1.12;
                                        $taxable_amount -= $total;
                                    }else{
                                        $no_tx =  $item_discount[$trans_id]['no_tax'];
                                        if($no_tx == 1){
                                            $not_taxable_amount += $total / 1.12;
                                            $taxable_amount -= $total;
                                            // die('ss');
                                        }else{
                                            // $with_disc = $total - $item_discount[$trans_id]['amount'];
                                            // echo $with_disc; die();
                                            $taxable_amount -= $item_discount[$trans_id]['amount'];
                                        }
                                    }

                                }
                            }
                        }else{
                            foreach ($trans_disc_cart as $disc_id => $dc) {
                                $discount = 0;
                                $rate = $dc['disc_rate'];

                                $divi = $total_gross/$dc['guest'];
                                $no_tax_persons = count($dc['persons']);
                                $g_count = $dc['guest'];
                                foreach($dc['persons'] as $name => $val){
                                    if($dc['fix'] == 0){

                                        $where = array('id'=>1);
                                        $set_det = $this->site_model->get_details($where,'settings');
                                        if($counter['type'] != 'dinein' && $counter['type'] != 'mcb' && $dc['disc_code'] == 'SNDISC' && $divi > $set_det[0]->ceiling_amount && $set_det[0]->ceiling_amount > 0){
                                            $divi = $set_det[0]->ceiling_amount;
                                            $divi_less = $set_det[0]->ceiling_amount;
                                        }

                                        if($counter['type'] == 'mcb' && $dc['disc_code'] == 'SNDISC' && $divi > $set_det[0]->ceiling_mcb && $set_det[0]->ceiling_mcb > 0){
                                            $divi = $set_det[0]->ceiling_mcb;
                                            $divi_less = $set_det[0]->ceiling_mcb;
                                        }

                                        
                                        if($dc['disc_code'] == 'DIPLOMAT'){
                                            $divi_less = ($divi / 1.12);

                                            $zero_rated += $divi_less;
                                            $not_taxable_amount += $divi_less;
                                            $taxable_amount -= $divi;
                                            $diplomat_count++;
                                        }elseif($dc['disc_code'] == ATHLETE_CODE){
                                            $divi_less = ($divi / 1.12);
                                            $disc_per_person = ($rate / 100) * $divi_less;

                                            $taxable_amount -= $disc_per_person;

                                        }else{
                                            if($dc['no_tax'] == 1){
                                                $divi_less = ($divi / 1.12);
                                                $less_vat = $divi - $divi_less;
                                                // $not_taxable_amount += $divi_less * $no_tax_persons;
                                                // $taxable_amount -= $divi + $less_vat;
                                                $disc_per_person = ($rate / 100) * $divi_less;

                                                $no_tax = $divi_less * $no_tax_persons;
                                                $taxable_amount -= $divi;
                                                // echo $not_taxable_amount.'aa';
                                                $not_taxable_amount += $divi - $less_vat;
                                                // echo $not_taxable_amount.'bb';
                                            }else{
                                                $disc_per_person = ($rate / 100) * $divi; 
                                                // $not_taxable_amount = 0;
                                                // $disc_persons = $disc_per_person * $no_tax_persons;
                                                $taxable_amount -= $disc_per_person;
                                            }
                                        }


                                    }else{
                                        // $disc_per_person = $divi - $rate;
                                        $disc_per_person = $rate;
                                        $taxable_amount -= $disc_per_person;
                                        // $taxable_amount -= $discount;
                                        // $not_taxable_amount = 0; 
                                    }
                                }

                                
                            }
                        }


                    }

                    // echo $not_taxable_amount; die();
                    //remove charges 
                   
                        if($g_count == $diplomat_count){
                            $zero_rated -= $total_disc;
                               
                        }

                    
                        if($g_count == $diplomat_count){
                            $not_taxable_amount -= $total_disc;
                            
                        }



                    // if(LOCALSYNC){
                    //     if(count($trans_sales_zero_rated) > 0)
                    //         $this->sync_model->add_trans_sales_zero_rated($sales_id);

                    //     if(count($trans_sales_no_tax) > 0)
                    //         $this->sync_model->add_trans_sales_no_tax($sales_id);
                    // }
                    if($zero_rated != 0 && $total_disc != 0){
                        if($g_count == $diplomat_count){
                            $taxable_amount = 0;
                        }
                    }

                    $am = $taxable_amount;
                    $trans_tax = 0;
                    foreach ($tax as $tax_id => $tx) {
                        $rate = ($tx['rate'] / 100);
                        $tax_value = ($am / ($rate + 1) ) * $rate;
                        // ($am / 1.12) * .12
                        $trans_tax += $tax_value;
                    }
                    
                    $vat_sales_txt = $taxable_amount / 1.12;


                }
             


                //for update sa trans_Sales ng iba pang details
                $trans_sales_details = array(
                    "total_gross"       => $total_gross,
                    "total_discount" => $total_disc,
                    "total_charges" => $total_charge,
                    "zero_rated" => $zero_rated,
                    "no_tax" => $not_taxable_amount,
                    "tax" => $trans_tax,
                    "local_tax" => $local_tax,
                    "vat_sales_txt" => $vat_sales_txt,
                );               
                
                echo json_encode($trans_sales_details);
                
            }

          
        
    }

    function check_modifier_grp(){
        $wagon = $this->session->userData('trans_cart');
        $mods = $this->session->userData('trans_mod_cart');
        // $modsubs = $this->session->userData('trans_submod_cart');

        $trans_id = $this->input->post('trans_id');
        $mod_id = $this->input->post('mod_id');
        $mod_group_id = $this->input->post('mod_group_id');
        $mod_seq_last = $this->input->post('mod_seq_last');
        $curr_mod_seq = $this->input->post('curr_mod_seq');


        $where = array('mod_id'=>$mod_id);
        $mdet = $this->site_model->get_details($where,'modifier_sub');

        if(count($mdet) > 0){
            echo json_encode(array('status'=>'enter_submod'));
        }else{
            $row = $wagon[$trans_id];

            $menu_mods = $this->menu_model->get_menu_modifiers(null,$mod_group_id);
            $where = array('mod_group_id'=>$mod_group_id);
            $bdet = $this->site_model->get_details($where,'modifier_groups');

            $line_qty = $row['qty'];     


            $must_select_count = $line_qty * $bdet[0]->multiple;       
            // echo "<pre>",print_r($wagon),"</pre>";die(); 

            $mod_grp_ctr = 0;
            foreach($mods as $mid => $vv){
                if($trans_id == $vv['trans_id'] && $mod_group_id == $vv['mod_group_id']){
                    $mod_grp_ctr += $vv['qty'];
                }
            }

            $menus = $this->menu_model->get_menus($row['menu_id'],null);
            $opt = array('name'=>$menus[0]->category_name);
            // echo $mod_grp_ctr; die();
            if($mod_grp_ctr == $must_select_count){
                if($curr_mod_seq == $mod_seq_last){
                    echo json_encode(array('status'=>'finish','obj'=>$opt,'cat_id'=>$menus[0]->menu_cat_id));
                }else{
                    echo json_encode(array('status'=>'next_div','obj'=>$opt,'cat_id'=>$menus[0]->menu_cat_id));
                }
            }else{
                echo json_encode(array('status'=>'stay','obj'=>$opt,'cat_id'=>$menus[0]->menu_cat_id));
            }
        }
        
    }

    function check_submodifier_grp(){
        $wagon = $this->session->userData('trans_cart');
        $mods = $this->session->userData('trans_mod_cart');
        $modsubs = $this->session->userData('trans_submod_cart');

        $trans_id = $this->input->post('trans_id');
        $mod_id = $this->input->post('mod_id');
        $submod_seq_last = $this->input->post('submod_seq_last');
        $curr_submod_seq = $this->input->post('curr_submod_seq');
        $group_id = $this->input->post('group_id');
        $mod_line_id = $this->input->post('mod_line_id');
        $submodgrp_qty = $this->input->post('submodgrp_qty');

        $row = $wagon[$trans_id];
        $row_mod = $mods[$mod_line_id];
        // $menu_mods = $this->menu_model->get_menu_modifiers(null,$mod_group_id);
        $where = array('mod_id'=>$mod_id);
        $bdet = $this->site_model->get_details($where,'modifier_sub');

        $line_qty = $row['qty'];     


        // $must_select_count = $line_qty * 1;
        $must_select_count = $row_mod['qty'] * $submodgrp_qty;    
        // echo "<pre>",print_r($modsubs),"</pre>";die(); 

        $submod_grp_ctr = 0;
        foreach($modsubs as $sid => $vv){
            if($trans_id == $vv['trans_id'] && $group_id == $vv['group_id'] && $mod_id == $vv['mod_id'] && $mod_line_id == $vv['mod_line_id']){
                $submod_grp_ctr += $vv['qty'];
            }
        }

        $menus = $this->menu_model->get_menus($row['menu_id'],null);
        // $opt = array('name'=>$menus[0]->category_name);
        

        $where = array('mod_id'=>$mod_id);
        $det = $this->site_model->get_details($where,'modifiers');
        $opt = array('name'=>$det[0]->name);
        // echo $mod_grp_ctr; die();
        if($submod_grp_ctr == $must_select_count){
            if($curr_submod_seq == $submod_seq_last){
                echo json_encode(array('status'=>'finish','obj'=>$opt,'menu_id'=>$row['menu_id'],'trans_id'=>$trans_id,'cat_id'=>$menus[0]->menu_cat_id));
            }else{
                echo json_encode(array('status'=>'next_div','obj'=>$opt,'menu_id'=>$row['menu_id'],'trans_id'=>$trans_id));
            }
        }else{
            echo json_encode(array('status'=>'stay','obj'=>$opt,'menu_id'=>$row['menu_id'],'trans_id'=>$trans_id));
        }


        // // print_r($rmodcount);exit;
        // // print_r($multiple * $row['qty']);exit;
        // if($modcount == $rmodcount * $row['qty'] && count($subs) == 0){
        //      echo json_encode(array('status'=>1,'return'=>'menus'));
        // }elseif($modcount ==$multiple * $row['qty'] && count($subs) > 0){
        //     // echo $rsubmodcount * $multiple;
        //     // echo count($subs) * $multiple;
        //     // print_r($submodcount);exit;
        //     // print_r($multiple);exit;
        //     if($rsubmodcount == $submodcount){
        //         echo json_encode(array('status'=>1,'return'=>'menus'));
        //     }

        // }elseif($modcount != $multiple * $row['qty'] && $rsubmodcount == $submodcount){
        //         // echo 1;
        //         echo json_encode(array('status'=>1,'return'=>'mods'));
        // }         
        
    }

    function check_next_page($page,$type){
        
        if($type == 'menus'){

            $cat_id = $this->input->post('cat_id');

            if(SHOW_NEW_SUBCATEGORY){
                $menus_sub = $this->menu_model->get_subcategory(null,$cat_id,true,null,0);
                $menus = $this->menu_model->get_menus_new(null,$cat_id,true,null,0);

                $menus_sub_cnt = count($menus_sub);
                $menus_cnt = count($menus);

                $all = $menus_sub_cnt + $menus_cnt;
                $must_count = MENU_COUNT_BUTTONS * $page;

                $next = 'no';
                if($all > $must_count){
                    $next = 'yes';
                }

                echo $next;
            }else{
                $menus = $this->menu_model->get_menus(null,$cat_id,true,null,0);
                $menus_cnt = count($menus);

                $must_count = MENU_COUNT_BUTTONS * $page;

                $next = 'no';
                if($menus_cnt > $must_count){
                    $next = 'yes';
                }

                echo $next;
            }

        }elseif($type == 'subcategory'){
            $subcat_id = $this->input->post('subcat_id');

            $menus = $this->menu_model->get_menu_subcat(null,$subcat_id,true,null,0);
            $menus_cnt = count($menus);

            $must_count = MENU_COUNT_BUTTONS * $page;

            $next = 'no';
            if($menus_cnt > $must_count){
                $next = 'yes';
            }

            echo $next;
        }
        
    }

    public function get_modifiers($mod_group_id=null,$trans_id){
        $this->load->model('dine/menu_model');
        $this->load->model('dine/mods_model');
        $wagon = $this->session->userData('trans_cart');
        $row = $wagon[$trans_id];
        // $row['menu_id'];
        // echo "<pre>",print_r($wagon),"</pre>";die(); 
        $menu_mods = $this->menu_model->get_menu_modifiers($row['menu_id']);

        $branch_color = $this->menu_model->get_branch_color(null);
        $b_color = "";
        foreach ($branch_color as $bc => $bc_val) {
            $b_color = $bc_val->branch_color;
            if(empty($bc_val->branch_color)){
                $branch_text_color = '#333';
            }else{
                $branch_text_color = $bc_val->branch_text_color;
            }
        }

        $group = array();
        $grp = array();
        $dflts = array();
        if(count($menu_mods) > 0){
            foreach ($menu_mods as $res) {
                if($res->mod_group_id == $mod_group_id){
                    $group[$res->mod_group_id] = array(
                        "name"=>$res->mod_group_name,
                        "mandatory"=>$res->mandatory,
                        "multiple"=>$res->multiple,
                        "bcolor"=>$b_color,
                        "branch_text_color"=>$branch_text_color,
                        "menu_id"=>$row['menu_id'],
                        "menu_name"=>$row['name'],
                        "min_no"=>$res->min_no
                    );

                    // $mod_check_sess[$res->mod_group_id] = array('trans_id'=>$trans_id,'mod_group_id'=>$res->mod_group_id);
                    $grp[] = $res->mod_group_id;
                }
            }

            // $grp[] = $mod_group_id;
            
            $details = $this->mods_model->get_modifier_group_details(null,$grp);
            $dets = array();
            foreach ($details as $det) {
                if($det->mod_inactive == 0){
                    $dets=array(
                        "name"=>$det->mod_name,
                        "cost"=>$det->mod_cost,
                        "default"=>$det->default
                    );
                    
                    $group[$det->mod_group_id]['details'][$det->mod_id] = $dets;
                }
            }
            

        }
        // echo "<pre>",print_r($group),"</pre>";die(); 
        echo json_encode(array('group'=>$group));
    }

    public function get_submodifiers($mod_id=null,$trans_id=null,$group_name=''){
        $this->load->model('dine/menu_model');
        $this->load->model('dine/mods_model');
        $ttype = $this->input->post('ttype');
        $menu_submods = $this->menu_model->get_menu_submodifiers(null,$mod_id);
        $branch_color = $this->menu_model->get_branch_color(null);
        $b_color = "";
        foreach ($branch_color as $bc => $bc_val) {
            $b_color = $bc_val->branch_color;
            if(empty($bc_val->branch_color)){
                $branch_text_color = '#333';
            }else{
                $branch_text_color = $bc_val->branch_text_color;
            }
        }
        $group = array();
        $grouping = array();
        // $grp = array();
        $dflts = array();
        $grp_ctr = 1;
        if(count($menu_submods) > 0){
            foreach ($menu_submods as $res) {

                if($group_name == $res->group){

                    $price = $res->cost;
                    if($ttype != 'dinein' && $ttype != 'reservation'){
                        $where = array('mod_sub_id'=>$res->mod_sub_id,'trans_type'=>$ttype);
                        $cost_det = $this->site_model->get_details($where,'modifier_sub_prices');

                        if(count($cost_det) > 0){
                            $price = $cost_det[0]->price;
                        }
                    }

                    $grp_id = str_replace(' ', '', $res->group);

                    if(!isset($grouping[$res->group])){
                        $grouping[$res->group] = array(
                            'group_name' => $res->group,
                            'group_id' => $grp_id
                        );
                    }

                    $group[$res->mod_sub_id] = array(
                        "name"=>$res->name,
                        "price"=>$price,
                        "branch_text_color"=>$branch_text_color,
                        'bcolor'=>$b_color,
                        'group'=>$res->group,
                        'group_id' => $grp_id
                        // "multiple"=>$res->multiple,
                        // "min_no"=>$res->min_no
                    );

                }


            }


        }
        // echo "<pre>",print_r($group),"</pre>";die();

        ksort($grouping);

        echo json_encode(array('group'=>$group,'grouping'=>$grouping));
    }

    public function get_menu_cats_quick_edit($asJson=true){
            $this->load->model('dine/menu_model');

            $branch = $this->get_branch_details(false);
            $def_brand = $branch['brand'];

            if($this->session->userData('brand_session')){
                $def_brand = $this->session->userData('brand_session');
            }

            // echo $def_brand;

            $categories = $this->menu_model->get_menu_categories(null,true,$def_brand);
            $branch_color = $this->menu_model->get_branch_color(null);
            $json = array();
            $json1 = array();
            $b_color = "";
            foreach ($branch_color as $bc => $bc_val) {
                $b_color = $bc_val->branch_color;
                $branch_text_color = $bc_val->branch_text_color;
                
            }
            foreach ($categories as $cat) {
                if($cat->arrangement > 0){
                    $json1[$cat->menu_cat_id] = array(
                        'name'=>$cat->menu_cat_name,
                        'id'=>$cat->menu_cat_id,
                        'arrangement'=>$cat->arrangement,
                        'bcolor'=>$b_color,
                        'branch_text_color'=>$branch_text_color,
                    );
                }else{
                    $json[$cat->menu_cat_id] = array(
                        'name'=>$cat->menu_cat_name,
                        'id'=>$cat->menu_cat_id,
                        'arrangement'=>$cat->arrangement,
                        'bcolor'=>$b_color,
                        'branch_text_color'=>$branch_text_color
                    );
                }

            }

                    // echo "<pre>",print_r($bc_val->branch_color),"</pre>";die();
            usort($json1, function($a, $b) {
                return strcmp($a["arrangement"], $b["arrangement"]);
            });

            usort($json, function($a, $b) {
                return strcmp($a["name"], $b["name"]);
            });

            $json = array_merge($json1, $json);

            // echo "<pre>",print_r($json),"</pre>";die();


            echo json_encode($json);
        }

        function check_modifier_count(){
            $wagon = $this->session->userData('trans_cart');
            $mods = $this->session->userData('trans_mod_cart');
            // $modsubs = $this->session->userData('trans_submod_cart');

            $trans_id = $this->input->post('trans_id');
            $mod_id = $this->input->post('mod_id');
            $qty = $this->input->post('qty');
            $mod_group_id = $this->input->post('mod_group_id');


            $where = array('mod_id'=>$mod_id);
            $mdet = $this->site_model->get_details($where,'modifier_sub');

            $row = $wagon[$trans_id];

            $menu_mods = $this->menu_model->get_menu_modifiers(null,$mod_group_id);
            $where = array('mod_group_id'=>$mod_group_id);
            $bdet = $this->site_model->get_details($where,'modifier_groups');

            $line_qty = $row['qty'];     


            $must_select_count = $line_qty * $bdet[0]->multiple;       
            // echo "<pre>",print_r($wagon),"</pre>";die(); 

            $mod_grp_ctr = 0;
            foreach($mods as $mid => $vv){
                if($trans_id == $vv['trans_id'] && $mod_group_id == $vv['mod_group_id']){
                    $mod_grp_ctr += $vv['qty'];
                }
            }

            $mod_grp_ctr += $qty;
            
            if($mod_grp_ctr > $must_select_count){
                echo json_encode(array('status'=>'error','message'=>'Modifier quantity should not be more than menu quantity.'));
            }else{
                echo json_encode(array('status'=>'success','message'=>''));
            }
            
        }

        function check_submodifier_count(){
            $wagon = $this->session->userData('trans_cart');
            $mods = $this->session->userData('trans_mod_cart');
            $modsubs = $this->session->userData('trans_submod_cart');

            $trans_id = $this->input->post('trans_id');
            $mod_id = $this->input->post('mod_id');
            $group_id = $this->input->post('group_id');
            $mod_line_id = $this->input->post('mod_line_id');
            $submod_grp_qty = $this->input->post('grp_qty');

            $qty = $this->input->post('qty');

            $row = $wagon[$trans_id];
            $row_mod = $mods[$mod_line_id];

            // $menu_mods = $this->menu_model->get_menu_modifiers(null,$mod_group_id);
            $where = array('mod_id'=>$mod_id);
            $bdet = $this->site_model->get_details($where,'modifier_sub');

            $line_qty = $row['qty'];     


            $must_select_count = $row_mod['qty'] * $submod_grp_qty;       
            // echo "<pre>",print_r($modsubs),"</pre>";die(); 

            $submod_grp_ctr = 0;

            // echo $submod_grp_qty.' - ';

            // $submod_grp_ctr = $submod_grp_qty - 1;

            // echo $submod_grp_ctr;

            if($modsubs){
                foreach($modsubs as $sid => $vv){
                    if($trans_id == $vv['trans_id'] && $group_id == $vv['group_id'] && $mod_id == $vv['mod_id'] && $mod_line_id == $vv['mod_line_id']){
                        $submod_grp_ctr += $vv['qty'];
                        // echo 'aw';
                    }
                }
            }
            

            $submod_grp_ctr += $qty;

            // echo $submod_grp_ctr." -- ".$must_select_count;
            
            if($submod_grp_ctr > $must_select_count){
                echo json_encode(array('status'=>'error','message'=>'Sub modifier quantity should not be more than menu quantity.'));
            }else{
                // if($submod_grp_ctr < $submod_grp_qty){
                //     echo json_encode(array('status'=>'addmore','message'=>''));
                // }else{
                    echo json_encode(array('status'=>'success','message'=>''));
                // }
            }
            
        }

    public function get_payment_group($asJson=true){
        $this->load->model('dine/settings_model');
        $sales_id = $this->input->post('id');
        $order = $this->get_order(false,$sales_id);

        $page = $this->input->post('page');
        // $set = $this->cashier_model->get_pos_settings();

        $upto = $page * 3;
        $fromto = $upto - (3 - 1);

        $payment_groups = $this->settings_model->get_payment_group('',true);       

        usort($payment_groups, $this->build_sorter_object('description'));

        $trans_buttons = array();
        // print_r($payment_types);
        // $ids = explode(',',$set->controls);
        $ctr = 1;
        $error = '';
        foreach($payment_groups as $value){

            if($ctr >= $fromto && $ctr <= $upto){
                $trans_buttons[$ctr] = array(
                    'text'=>strtoupper($value->description),
                    'text_id'=>$value->payment_group_id,
                );

            }

            $ctr++;
        }

        if(count($trans_buttons) > 0){

        }else{
            $error = count($payment_groups);
        }
        // echo "<pre>",print_r($trans_buttons),"</pre>";die(); 

        echo json_encode(array('buttons'=>$trans_buttons,'count'=>$ctr,'error'=>$error));
    }

    public function get_payment_type($asJson=true){
        $this->load->model('dine/settings_model');
        $sales_id = $this->input->post('id');
        $order = $this->get_order(false,$sales_id);

        $page = $this->input->post('page');
        // $set = $this->cashier_model->get_pos_settings();

        $upto = $page * 3;
        $fromto = $upto - (3 - 1);

        $val = strtolower($this->input->post('val'));
        // echo $page; die();     

        if($val != ''){
            $trans_buttons = array();
            $error = '';
            
            $payment_session = array();
            if($this->session->userData('payment_session')){
                $payment_session = $this->session->userData('payment_session');
            }
            
            $found = array();
            $ctr = 1;
            foreach($payment_session as $id => $v){

                // echo $v['text'].'---';
                if(strpos(strtolower($v['text']), $val) !== false){

                    if($ctr >= $fromto && $ctr <= $upto){
                        $trans_buttons[$id] = array(
                            'text'=>strtoupper($v['text']),
                            'text_id'=>$id,
                            'new_trans_type'=>$v['is_new']
                        );
                        // $found[$id] = array('stext'=>$v['text'],'is_new'=>$v['is_new']);
                    }
                    
                    $ctr++;
                    
                    // echo 'find--';
                }else{
                    // echo 'we--';
                }
            }

            $payment_types = $payment_session;
        }else{
            $pg_id = $this->input->post('pg_id');

            $payment_types = $this->settings_model->get_payment_types('',$pg_id,true);

            if($pg_id==1){
                $payment_types[] = (object) array('payment_group_id'=>'1','payment_code'=>'credit-card','description'=>'Credit Card');
            }else if($pg_id==2){
                $payment_types[] = (object) array('payment_group_id'=>'2','payment_code'=>'gift-cheque','description'=>'GIFT CHEQUE');
            }else if($pg_id==6){
                $payment_types[] = (object) array('payment_group_id'=>'6','payment_code'=>'debit-card','description'=>'DEBIT CARD');
                $payment_types[] = (object) array('payment_group_id'=>'6','payment_code'=>'cust-deposits','description'=>'CUSTOMER DEPOSIT');
                $payment_types[] = (object) array('payment_group_id'=>'6','payment_code'=>'sign-chit','description'=>'SIGN CHIT');
                $payment_types[] = (object) array('payment_group_id'=>'6','payment_code'=>'check','description'=>'CHECK');
                // $payment_types[] = (object) array('payment_group_id'=>'6','payment_code'=>'gcash','description'=>'GCASH');
                // $payment_types[] = (object) array('payment_group_id'=>'6','payment_code'=>'paymaya','description'=>'PAYMAYA');
                // $payment_types[] = (object) array('payment_group_id'=>'6','payment_code'=>'wechat','description'=>'WeChat');
                // $payment_types[] = (object) array('payment_group_id'=>'6','payment_code'=>'alipay','description'=>'Alipay');
                // $payment_types[] = (object) array('payment_group_id'=>'6','payment_code'=>'foodpanda','description'=>'Food Panda');

                if(MALL_ENABLED && MALL == "megamall"){
                    // $payment_types[] =  (object) array('payment_group_id'=>'6','payment_code'=>'smac-card','description'=>'SMAC');
                    // $payment_types[] =  (object) array('payment_group_id'=>'6','payment_code'=>'eplus-card','description'=>'E-Plus');
                    // $payment_types[] =  (object) array('payment_group_id'=>'6','payment_code'=>'online-deal','description'=>'Online');
                }

                if(round($order['order']['balance'],2)==round($order['order']['amount'],2)){
                    $payment_types[] =  (object) array('payment_group_id'=>'6','payment_code'=>'online-payment','description'=>'ONLINE PAYMENT');
                }
            }

            usort($payment_types, $this->build_sorter_object('description'));

            $trans_buttons = array();
            // print_r($payment_types);
            // $ids = explode(',',$set->controls);
            $ctr = 1;
            $error = '';
            foreach($payment_types as $value){

                if($ctr >= $fromto && $ctr <= $upto){
                    // $new_trans_type = "old_trans_type";
                    // if(strtolower($text[0]) == $text[1]){
                        $new_trans_type = "new_trans_type";
                    // }


                    $trans_buttons[$ctr] = array(
                        'text'=>strtoupper($value->description),
                        'text_id'=>$value->payment_code,
                        'new_trans_type'=>$new_trans_type
                    );

                }

                $ctr++;
            }
        }

        if(count($trans_buttons) > 0){

        }else{
            $error = count($payment_types);
        }
        // echo "<pre>",print_r($trans_buttons),"</pre>";die(); 

        echo json_encode(array('buttons'=>$trans_buttons,'count'=>$ctr,'error'=>$error));
    }

    function build_sorter_object($key) {
        return function ($a, $b) use ($key) {;
            return strnatcmp($a->$key, $b->$key);
        };
    }

    public function void_deposit_reason_pop($amount=null){
            // $this->make->input('Amount','add_amount');
            $this->make->input('Amount','credit_amount',$amount,null,array('class'=>'count-inputs big-man-input rOkay','type'=>'number','ro-msg'=>'tenant code must not be empty'));
            $this->make->input('Credit Note No','credit_note_no');
            $this->make->textarea('Type Reason','other-reason-txt');
            // $this->make->input('Date & Time','datetime',null,null,array('class'=>'rOkay datetimepicker','style'=>'position:initial;'),fa('fa-calendar'));
            // $this->make->textarea('Type Reason','other-reason-txt');
            echo $this->make->code();    
        }

    public function void_cust_deposit(){
            // echo "<pre>",print_r($_POST),"</pre>";die();
            $this->load->model('dine/cashier_model');
            $this->load->model('dine/items_model');
            $this->load->model('core/trans_model');
            $approver = "";
            $reason = "";
            $credit_amount = "";
            $credit_note_no = "";
            $ref_no = "";
            $error = '';
            if($this->input->post('approver'))
                $approver = $this->input->post('approver');
            if($this->input->post('ref_no'))
                $ref_no = $this->input->post('ref_no');
            if($this->input->post('reason'))
                $reason = $this->input->post('reason');
            if($this->input->post('approver'))
                $approver = $this->input->post('approver');
            if($this->input->post('credit_amount'))
                $credit_amount = $this->input->post('credit_amount');
            if($this->input->post('credit_note_no'))
                $credit_note_no = $this->input->post('credit_note_no');
            $sid = array();
            $now = $this->site_model->get_db_now();
            $user = $this->session->userdata('user');
            $user_id = $user['id'];
            $shift = $this->clock_model->get_curr_shift(date2Sql($now),$user_id);
            if(count($shift) == 0){
                $error = 'You need to start a shift before voiding.';
                echo json_encode(array('error'=>$error));
                return false;
            }
            if(!$credit_amount || $credit_amount == ""){
                $error = 'Amount shall not be empty.';
                echo json_encode(array('error'=>$error));
                return false;                
            }
            if(!$credit_note_no || $credit_note_no == ""){
                $error = 'Credit Note # shall not be empty.';
                echo json_encode(array('error'=>$error));
                return false;                
            }
           
            $this->cashier_model->update_customer_bank_deposit(array('credit_amount'=>$credit_amount,'credit_note_no'=>$credit_note_no,'approver'=>$user_id,'reason'=>$reason,'inactive'=>1),$ref_no);

            // echo $this->db->last_query();exit;
            // $print = $this->print_sales_receipt($sales_id,false);
            $js_rcps = array();
            if(PRINT_VERSION  && PRINT_VERSION=='V3'){
                $prints = $this->print_void_cust_deposit($ref_no,false);
                $js_rcps = $prints['js_rcps'];
            }else{
                $this->print_void_cust_deposit($ref_no,false);
            }
            

            echo json_encode(array('error'=>$error,'js_rcps'=>$js_rcps));
            // redirect(base_url()."cashier",'refresh');
        }

         public function print_void_cust_deposit($ref_no=null,$asJson=true,$return_print_str=false,$add_reprinted=true,$splits=null,$include_footer=true,$no_prints=1,$order_slip_prints=0,$approved_by=null,$main_db=false,$openDrawer=false){
            // if(LOCALSYNC){
            //     $this->load->model('core/sync_model');
            // }
            // if($main_db){
            //     $this->db = $this->load->database('main', TRUE);
            // }
            $branch = $this->get_branch_details(false);
            $get_det_reserve = $this->cashier_model->get_cust_bank($ref_no);
            $print_str = "\r\n";

            $wrap = wordwrap($branch['name'],PAPER_WIDTH,"|#|");
            $exp = explode("|#|", $wrap);
            foreach ($exp as $v) {
                $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
            }

            // $wrap = wordwrap($branch['desc'],PAPER_WIDTH,"|#|");
            // $exp = explode("|#|", $wrap);
            // foreach ($exp as $v) {
            //     $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
            // }

            $wrap = wordwrap($branch['address'],PAPER_WIDTH,"|#|");
            $exp = explode("|#|", $wrap);
            foreach ($exp as $v) {
                $print_str .= $this->align_center($v,PAPER_WIDTH," ")."\r\n";
            }

            if($branch['tin'] != ""){
                // $print_str .= $this->append_chars('VAT REG TIN:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['tin'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
                $print_str .= $this->append_chars('VAT REG TIN:'.$branch['tin'],"right",PAPER_WIDTH," ")."\r\n";
            }
            // if($branch['accrdn'] != ""){
            //     $print_str .= $this->append_chars('ACCRDN:',"right",PAPER_DET_SUBCOL," ").$this->append_chars($branch['accrdn'],"right",PAPER_TOTAL_COL_1," ")."\r\n";
            // }
            if($branch['machine_no'] != ""){
                $print_str .= $this->append_chars('MIN:'.$branch['machine_no'],"right",PAPER_WIDTH," ")."\r\n";
                // $print_str .= $this->append_chars('MIN:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['machine_no'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
            }
            if($branch['permit_no'] != ""){
                $print_str .= $this->append_chars('PERMIT:'.$branch['permit_no'],"right",PAPER_WIDTH," ")."\r\n";
                // $print_str .= $this->append_chars('PERMIT:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['permit_no'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
            }
            if($branch['serial'] != ""){
                $print_str .= $this->append_chars('SN:'.$branch['serial'],"right",PAPER_WIDTH," ")."\r\n";
                // $print_str .= $this->append_chars('SN:',"right",PAPER_RECEIPT_TEXT," ").$this->append_chars($branch['serial'],"right",PAPER_RECEIPT_INPUT," ")."\r\n";
            }

            $print_str .= $this->align_center("***** VOIDED TRANSACTION *****",PAPER_WIDTH," ")."\r\n";
            foreach ($get_det_reserve as $get_det => $det_vals) {
                # code...
            $print_str .= $this->append_chars(ucwords($det_vals->username),"right",PAPER_RD_COL_MID," ").$this->append_chars($this->site_model->get_db_now('php'),"left",PAPER_TOTAL_COL_2," ")."\r\n"."Terminal ID : ". TERMINAL_ID
                ."\r\n";
            $print_str .= $this->append_chars(ucwords('customer:'),"right",PAPER_RD_COL_MID," ").$this->append_chars($det_vals->fname.' '.$det_vals->lname,"left",PAPER_TOTAL_COL_2," ")
                ."\r\n";
            $print_str .= $this->append_chars(ucwords('Deposit Date/Time:'),"right",PAPER_RD_COL_MID," ").$this->append_chars(date("m/d/Y g:i A", strtotime($det_vals->cb_datetime)),"left",PAPER_TOTAL_COL_2," ")
                ."\r\n";
            $print_str .= $this->append_chars(ucwords('Deposit Reference #:'),"right",PAPER_RD_COL_MID," ").$this->append_chars($det_vals->trans_ref,"left",PAPER_TOTAL_COL_2," ")
                ."\r\n";
            $print_str .= $this->append_chars(ucwords('Credit Note #:'),"right",PAPER_RD_COL_MID," ").$this->append_chars($det_vals->credit_note_no,"left",PAPER_TOTAL_COL_2," ")
                ."\r\n";
            $print_str .= $this->append_chars(ucwords('Refund Amount:'),"right",PAPER_RD_COL_MID," ").$this->append_chars($det_vals->credit_amount,"left",PAPER_TOTAL_COL_2," ")
                ."\r\n";
                // .PAPER_LINE."\r\n";
            }

            $print_str .= $this->align_center("***** NOTHING FOLLOWS *****",PAPER_WIDTH," ")."\r\n";
                



            if ($return_print_str) {
                return $print_str;
            }
            // echo "<pre>".$print_str."</pre>";
            // return false;

            if(PRINT_VERSION && PRINT_VERSION == 'V2'){


                // if(BILLING_PRINTER){
                //     if(BILLING_PRINTER != "DEFAULT"){
                         $this->do_print_receipt_v2($print_str);  
                //     }
                // }

                if($openDrawer){
                    $pet = $this->cashier_model->get_pos_settings();
                    $open_drawer_printer = $pet->open_drawer_printer;
                    // if($open_drawer_printer != ""){
                    //     $this->do_print_receipt_v2($print_str);  
                    //     // $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".$open_drawer_printer."\"  ";   
                    // }            
                }
            }else if(PRINT_VERSION && PRINT_VERSION=='V3'){
                // $this->do_print_os($print_str,$printer['printer'],$printer['no']);  
                $js_rcp = $this->html_print($print_str);
                $js_rcps = array();
                if(BILLING_PRINTER){
                    if(BILLING_PRINTER != "DEFAULT"){
                        $js_rcps[] = array('printer'=>BILLING_PRINTER,'value'=>$js_rcp);
                    }
                }

                if($openDrawer){
                    $pet = $this->cashier_model->get_pos_settings();
                    $open_drawer_printer = $pet->open_drawer_printer;
                    if($open_drawer_printer != ""){
                        $js_rcps[] = array('printer'=>BILLING_PRINTER,'value'=>$open_drawer_printer);
                    }            
                }

                return array('js_rcps'=>$js_rcps);
            }else{
                // $this->do_print_os($print_str,$printer['printer'],$printer['no']);  

                $filename = "sales.txt";
                $fp = fopen($filename, "w+");
                fwrite($fp,$print_str);
                fclose($fp);

                $batfile = "print.bat";
                $fh1 = fopen($batfile,'w+');
                $root = dirname(BASEPATH);
                $battxt ="NOTEPAD /P \"".realpath($root."/".$filename)."\"";

                if(BILLING_PRINTER){
                    if(BILLING_PRINTER != "DEFAULT"){
                        $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".BILLING_PRINTER."\"  ";   
                    }
                }

                if($openDrawer){
                    $pet = $this->cashier_model->get_pos_settings();
                    $open_drawer_printer = $pet->open_drawer_printer;
                    if($open_drawer_printer != ""){
                        $battxt = "NOTEPAD /PT \"".realpath($root."/".$filename)."\" \"".$open_drawer_printer."\"  ";   
                    }            
                }

                fwrite($fh1, $battxt);
                fclose($fh1);
                session_write_close();
                // exec($filename);
                for ($i=0; $i < $no_prints; $i++) { 
                    exec($batfile);
                }
                session_start();
                unlink($filename);
                unlink($batfile);
            }

            // if($order_slip_prints > 0){
            //     $this->print_order_slip($header_print_str,$post_details,$order_slip_prints);            
            // }

            // if ($asJson)
            //     echo json_encode(array('msg'=>'Receipt # '.(!empty($order['ref']) ? $order['ref'] : $sales_id).' has been printed'));
            // else
            //     return array('msg'=>'Receipt # '.(!empty($order['ref']) ? $order['ref'] : $sales_id).' has been printed');
        }

    public function html_print($print_str='',$is_bill = false, $sales_id = ''){
        $js_rcp = '<div style="width:270px;"><pre>'.$print_str.'</pre></div>';

        if($is_bill && $is_bill != 'osqr'){
            $js_rcp .= $this->align_center('<div id="qr_code" style="display: block;
                      margin-left: auto;
                      margin-right: auto;
                      margin-top: 5px;
                      width: 40%;" qr_code_value="'.$sales_id.'"></div>',PAPER_WIDTH," ")."\r\n";
            
            $js_rcp .= '<script src="'. base_url() .'js/jquery.qrcode.js"></script>
                        <script src="'. base_url() .'js/qrcode.js"></script>';
            $js_rcp .= '<script>
                        $(document).ready(function(){
                            var qrcode = $("#qr_code").attr("qr_code_value");
                            jQuery("#qr_code").qrcode({
                                width: 120,
                                height: 100,
                                text    : qrcode
                            });
                        }); 
                        </script>';

            $js_rcp .= '<script>setTimeout(function (){ print(); }, 10);</script>';
        }elseif($is_bill && $is_bill == 'osqr'){
            $js_rcp .= $this->align_center('<div id="qr_code" style="display: block;
                      margin-left: auto;
                      margin-right: auto;
                      margin-top: 5px;
                      width: 40%;" qr_code_value="'.$sales_id.'"></div>',PAPER_WIDTH," ")."\r\n";
            
            $js_rcp .= '<script src="'. base_url() .'js/jquery.qrcode.js"></script>
                        <script src="'. base_url() .'js/qrcode.js"></script>';
            $js_rcp .= '<script>
                        $(document).ready(function(){
                            var qrcode = $("#qr_code").attr("qr_code_value");
                            jQuery("#qr_code").qrcode({
                                width: 120,
                                height: 100,
                                text    : qrcode
                            });
                        }); 
                        </script>';

            $js_rcp .= '<script>print()</script>';
        }else{
            $js_rcp .= '<script>print()</script>';
        }

        $js_rcp .= '<style>
                @media print {
                html, body, div, span, applet, object, iframe,
                h1, h2, h3, h4, h5, h6, p, blockquote, pre,
                a, abbr, acronym, address, big, cite, code,
                del, dfn, em, img, ins, kbd, q, s, samp,
                small, strike, strong, sub, sup, tt, var,
                b, u, i, center,
                dl, dt, dd, ol, ul, li,
                fieldset, form, label, legend,
                table, caption, tbody, tfoot, thead, tr, th, td,
                article, aside, canvas, details, embed, 
                figure, figcaption, footer, header, hgroup, 
                menu, nav, output, ruby, section, summary,
                time, mark, audio, video {
                    margin: 0;
                    padding: 0;
                    border: 0;
                    font-size: 100%;
                    font: inherit;
                    vertical-align: baseline;
                    color:#000 !important;
                }
                  .media-cashier-panel, .cashier-wrapper, #noty_topRight_layout_container, .ui-keyboard{ display:none; }
                  #print-rcp{ display:block;  }
                  @page { margin: 0; }
                  body { margin: 0px; padding:0px }
                  div { margin: 0px; padding:0px }
                  .modal-backdrop.in{ opacity: 0 }
                }
                pre {
                    font-family:Lucida Console;
                    font-size:11.5px;
                    overflow-x: auto;
                    // text-align:justify;
                    white-space: pre-wrap;
                    white-space: -moz-pre-wrap;
                    white-space: -pre-wrap;
                    white-space: -o-pre-wrap;
                    word-wrap: break-word;
                    word-break:keep-all;
                 }
                </style>';          
        

        return $js_rcp;
    }

    function test_print(){
       echo '<script src="'. base_url() .'js/jquery.qrcode.js"></script>
             <script src="'. base_url() .'js/qrcode.js"></script>';
    }

    public function set_default_printer($printer){
        if($printer && $printer != 'DEFAULT'){
            if(OPERATING_SYSTEM == 'Windows'){
                shell_exec('RUNDLL32 PRINTUI.DLL,PrintUIEntry /y /n "'. $printer.'"');
            }else{
                shell_exec('lpoptions -d "'. $printer.'"');
            }
        }        
    }

    public function encrypt_data(){
        $txt = $this->input->post('txt');

        $encrypt = urlencode($this->encrypt->encode($txt));
        // $encrypt = urlencode($txt);

        // echo $encrypt;


        $enc = str_replace('%','~~',$encrypt);
        echo $enc;
        
        // $to_dec = str_replace('~~','%',$enc);


        // $txts = rawurldecode('tXoTJuS%2Fvs7yIZvECUQmxUBokGpEiOwUzF4i9Gk9mwiLbdftL2eGlWf1k7yYxK6HFMBnPk798HbOx9ckeYFtzA%3D%3D');
        // $txts2 =$this->encrypt->decode($txts);
        // echo $txts2.'ss';
    }

    function combine_tables($sales_id=null){
        $this->load->helper('dine/cashier_helper');
        $this->load->helper('core/on_screen_key_helper');
        $data = $this->syter->spawn(null,false);
        $tables = $this->get_tables_other(false,null,'dinein');
        $tbl_id = null;
        if($sales_id != null){
            $where = array('sales_id'=>$sales_id);
            $details = $this->site_model->get_details($where,'trans_sales');
            $tbl_id = $details[0]->table_id;
        }

        $data['code'] = tableCombine($tables,$tbl_id);
        $data['add_css'] = array('css/pos.css','css/onscrkeys.css', 'css/cashier.css');
        $data['add_js'] = array('js/on_screen_keys.js');
        $data['load_js'] = 'dine/cashier';
        $data['use_js'] = 'tableCombineJs';
        $this->load->view('load',$data);
    }

    function go_combine_table($sales_id=null,$table_id=null,$manager=""){
        $this->load->model('dine/cashier_model');
        $error = "";


        $args['trans_sales.sales_id'] = $sales_id;
        $join['tables'] = array('content'=>'trans_sales.table_id = tables.tbl_id','mode'=>'left');
        $result = $this->site_model->get_tbl('trans_sales',$args,array(),$join,true,'trans_sales.*, tables.name as tbl_name');


        $combines = array(
            'main_sales_id'=>$sales_id,
            'main_tbl_id'=>$result[0]->table_id,
            // 'combined_sales_id'=>$sales_id,
            'combined_tbl_id'=>$table_id
        );
        $this->cashier_model->add_combine_tables($combines);

        
        site_alert('Order #'.$sales_id." successfully combined",'success');
    }

    public function print_order_no($sales_id=null){
            // if(LOCALSYNC){
            //     $this->load->model('core/sync_model');
            // }
          
        
        $branch = $this->get_branch_details(false);
        $return = $this->get_order(false,$sales_id);
        $order = $return['order'];

        $args = array();
        $args['sales_id'] = $sales_id;
        $args['kitchen_slip_printed'] = 1;

        // $sales_menus = $this->cashier_model->get_trans_sales_menus(null,$args);

        $js_rcp='';
        $print_str='';
        
        if($order['queue_print'] == 0 && PRINT_ORDER_NO){
        // if(!$sales_menus){
            if(PRINT_VERSION && PRINT_VERSION == 'V3'){
                $print_str = "<div style='font-size:20px;text-align:center'>ORDER #</div>" ."\r\n";
                $print_str .= "<div style='font-size:20px;text-align:center'>".sprintf("%05d", $order['queue_id'])."</div>";
                $js_rcp = $this->html_print($print_str);

                 $this->site_model->update_tbl('trans_sales','sales_id',array('queue_print'=>1),$sales_id); 
            }else{
                // $print_str = $this->align_center("ORDER #",PAPER_WIDTH," ")."\r\n";
                // $print_str = $this->align_center(sprintf("%05d", $order['queue_id']),PAPER_WIDTH," ")."\r\n";

                $print_str .=  align_center(strtoupper($order['type']),PAPER_WIDTH," ")."\r\n";
                $print_str .=  align_center(strtoupper('ORDER # '.sprintf("%05d", $order['queue_id'])),PAPER_WIDTH," ")."\r\n";

                $this->site_model->update_tbl('trans_sales','sales_id',array('queue_print'=>1),$sales_id);      

                $filename = "order_no.txt";
                $fp = fopen($filename, "w+");
                fwrite($fp,$print_str);
                fclose($fp);

                $batfile = "print.bat";
                $fh1 = fopen($batfile,'w+');
                $root = dirname(BASEPATH);

                fwrite($fh1, "NOTEPAD /P \"".realpath($root."/".$filename)."\"");
                fclose($fh1);
                session_write_close();
                    
                exec($batfile);
                
                session_start();
                unlink($filename);
                unlink($batfile);
            }

            // if ($asJson)
            //     echo json_encode(array('msg'=>'Receipt # '.(!empty($order['ref']) ? $order['ref'] : $sales_id).' has been printed','js_rcps'=>$js_rcps,'ord_slip'=>$order_slip_prints));
            // else           
        }
        return array('msg'=>'Receipt # '.(!empty($order['ref']) ? $order['ref'] : $sales_id).' has been printed','js_rcp'=>$js_rcp);
    }

    public function print_os_qr($sales_id=null,$not_printed_only=true,$reprinted=false,$use_main=false){
            
            if($use_main){
                $this->db = $this->load->database('main',true);
            }
            $return = $this->get_order(false,$sales_id);
            $order = $return['order'];
            $details = $return['details'];
            $details2 = $return['details2'];
            $details_to = $return['details_to'];


            $update_line_ids = array();
            $update_line_mod_ids = array();
            $update_line_submod_ids = array();
            $print_bar_str = array();
                // $print_bar_str[] = strtoupper($order['type']);
            $print_bar_str[] = "Ref #: ".$order['ref'];
            $print_bar_str[] = "Name: ".strtoupper($order['customer_name']);
                // $print_bar_str[] = "Reference # ".$order['sales_id'];
            // echo "<pre>",print_r($details2),"</pre>";die();
            $js_rcps = array();
                $has_to_print = 0;
                $update_line_ids = array();
                // $print_str = $this->os_header();
                $print_str =  "";
                $print_str_part_1_v2 ="";
                $print_str_part_2_v2 ="";
                $print_str_part_3_v2 ="";
                $print_str_part_4_v2 ="";
                $print_str .=  align_center(strtoupper('ORDER SLIP'),PAPER_WIDTH," ")."\r\n";
                  $guest = (int)$order['guest'];
                // echo var_dump($guest);
                if($guest == 0)
                    $guest = 1;
                if($order['type'] == "reservation"){
                    $print_str .= "Reference # ".$order['ref_no']."\r\n";
                    $print_str .= "Transaction # ".$order['sales_id']."      "."Guest # : ".$guest."\r\n";

                }else{
                    $print_str .= "Reference # ".$order['sales_id']."      "."Guest # : ".$guest."\r\n";
                }
              
                // $print_str .=strtoupper($order['type']) ."\r\n";
                $serve_no = $order['serve_no'];
                if($serve_no > 0){
                    $print_str .= "Serve No: ".$serve_no."\r\n";
                    $print_str_part_3_v2 .= "Serve No: ".$serve_no."\r\n";
                }
                if($order['waiter_username'] != ""){
                    $print_str .= "FS: ".$order['waiter_username']."\r\n";
                    $print_str_part_2_v2 .=  "FS: ".strtoupper($order['waiter_username'])."              ".strtoupper($order['type'])."\r\n";
                }
                
                // $print_str .= "============"."\r\n";
                $print_str .= PAPER_LINE."\r\n";
                if($order['inactive'] == 1){
                    $print_str .=  align_center('*** VOIDED TRANSACTION ***',PAPER_WIDTH," ")."\r\n\r\n";
                }
                $print_str .=  align_center(strtoupper('Billing Printer'),PAPER_WIDTH," ")."\r\n\r\n";
                
                if($reprinted){
                    $print_str .=  align_center('[REPRINTED]',PAPER_WIDTH," ")."\r\n\r\n";
                }
               
                // echo "<pre>",print_r($details2),"</pre>";
                foreach ($details2 as $menu_id => $val) {
                    if(isset($val['retail']) &&  $val['retail'] == 1){
                        continue;
                    }
                    $category = $this->site_model->get_tbl('menus',array('menu_id'=>$val['menu_id']),array(),null,true,'menu_sub_cat_id');
                    $cat = $category[0];
                    // echo $this->db->last_query();die();
                    // echo "<pre>",print_r($cat->menu_sub_cat_id),"</pre>";die();

                    // if($printer['sub_cat_id'] == $cat->menu_sub_cat_id){
                        $all_str = "";
                        $menu_str = "";
                        
                        $qty = 0;
                        $remarks = "";
                        $modi = 0;
                        foreach($val['dets'] as $line_id =>$dets){
                            
                            $mod_bar_str = "";
                            if( $cat->menu_sub_cat_id == BEVERAGE_ID){

                                    $print_bar_str[] = $val['name'];
                                    
                            }
                            if($not_printed_only){

                                if($dets['kitchen_slip_printed'] == 0){  
                                     // var_dump($not_printed_only);
                                    // $all_str .= $menu_str;
                                    $update_line_ids[]=$dets['id'];
                                    // $has_to_print++;


                                    if(count($dets['modifiers']) > 0){
                                        
                                        // if($printer['sub_cat_id'] == SUBCAT_BEV){
                                        //     $all_str .= $print_mod_bev;
                                        // }else{
                                        //     $all_str .= $print_mod_food;
                                        // }
                                        if($cat->menu_sub_cat_id != RAMEN_ID){
                                            $print_str_part_1_v2 .= "<bold>";
                                            $print_str_part_1_v2 .= $this->append_chars($dets['qty']." @ ","right",4," ");
                                            $print_str_part_1_v2 .= "</bold>";
                                            $all_str .= $this->append_chars($dets['qty'],"right",4," ");
                                            // echo $str;
                                            $len = strlen($val['name']);

                                            if($len > 30){
                                                $arr2 = str_split($val['name'], 30);
                                                $counter = 1;
                                                foreach($arr2 as $k => $vv){
                                                    if($counter == 1){
                                                       $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                       $print_str_part_1_v2  .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                    }else{
                                                        // if ($val['qty'] == 1) {
                                                            $all_str .= $this->append_chars("","right",4," ");
                                                            $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                            $print_str_part_1_v2  .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";

                                                        // } else {
                                                            // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                                            //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                                        // }
                                                    }
                                                    $counter++;
                                                }

                                            }else{
                                                $all_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                $print_str_part_1_v2  .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                            }

                                            if(isset($dets['remarks']) && $dets['remarks'] != ""){
                                                $all_str .= "     * ";
                                                $all_str .= $this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."\r\n";
                                                $print_str_part_1_v2  .= "<indentbold>     * ".$this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."</indentbold>"."\r\n";
                                            }

                                            // echo $str.'ssss';
                                            // echo "<pre>",print_r($dets['modifiers']),"</pre>";die();

                                            foreach ($dets['modifiers'] as $mod_id => $mod) {

                                                $mod_sub_cat = $this->site_model->get_tbl('modifiers',array('mod_id'=>$mod['id']),array(),null,true,'mod_sub_cat_id');
                                                $mod_sc = $mod_sub_cat[0];


                                                $mod_str = "";
                                                $kitchen_mod_slip_printed = $mod['kitchen_slip_printed'];
                                                if($mod['kitchen_slip_printed'] == ""){
                                                    $kitchen_mod_slip_printed = 0;
                                                }
                                                $mod_str .= "     - ";

                                                if($mod['qty'] == 1){
                                                    $mod_str .= $this->append_chars(substrwords($mod['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                    .$this->append_chars(null,"left",8," ")."\r\n";
                                                }else{
                                                    $mod_str .= $this->append_chars(substrwords($mod['qty'].' '.$mod['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                    .$this->append_chars(null,"left",8," ")."\r\n";
                                                }
                                                
                                                
                                                if(!empty( $mod_bar_str)){
                                                     $mod_bar_str .= ", ".substrwords($mod['name'],100,"");
                                                }else{
                                                    $mod_bar_str .= substrwords($mod['name'],100,"");
                                                }

                                                $smod_str = "";
                                                if(isset($mod['submodifiers'])){
                                                    
                                                    foreach($mod['submodifiers'] as $sub_id => $subm){
                                                        if($subm['mod_line_id'] == $mod['mod_line_id']){
                                                            $kitchen_submod_slip_printed = $subm['kitchen_slip_printed'];
                                                            if($subm['kitchen_slip_printed'] == ""){
                                                                $kitchen_submod_slip_printed = 0;
                                                            }

                                                            $smod_str .= "         * ";

                                                            if($subm['qty'] == 1){
                                                                $smod_str .= $this->append_chars(substrwords($subm['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                            .$this->append_chars(null,"left",8," ")."\r\n";
                                                            }else{
                                                                $smod_str .= $this->append_chars(substrwords($subm['qty'].' '.$subm['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                            .$this->append_chars(null,"left",8," ")."\r\n";
                                                            }
                                                            

                                                            if($not_printed_only){
                                                                if($kitchen_submod_slip_printed == 0){ 
                                                                    // if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                                    //     // $print_mod_bev .= $str;
                                                                    //     $all_str .= $smod_str;
                                                                    //     $print_str_part_1_v2  .= $smod_str;
                                                                    //     $has_to_print++;
                                                                    // }
                                                                    // else{
                                                                    //     // $print_mod_food .= $str;
                                                                    //     $all_str .= $mod_str;
                                                                    // }
                                                                    // $all_str .= $mod_str;
                                                                    $update_line_submod_ids[]=$subm['sales_submod_id'];
                                                                    // $has_to_print++;
                                                                }   
                                                            }   
                                                            else{
                                                                // if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                                //     // $print_mod_bev .= $str;
                                                                //     $all_str .= $smod_str;
                                                                //     $print_str_part_1_v2  .= $smod_str;
                                                                //     $has_to_print++;
                                                                // }
                                                                // else{
                                                                //     // $print_mod_food .= $str;
                                                                //     $all_str .= $mod_str;
                                                                // }
                                                                // $all_str .= $mod_str;
                                                                $update_line_submod_ids[]=$subm['sales_submod_id'];
                                                                // $has_to_print++;
                                                            }



                                                        }
                                                    }

                                                }

                                                if($not_printed_only){
                                                    if($kitchen_mod_slip_printed == 0){ 
                                                        // if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                            // $print_mod_bev .= $str;
                                                            $all_str .= $mod_str;
                                                            $all_str .= $smod_str;
                                                            $print_str_part_1_v2  .= $mod_str;
                                                            $print_str_part_1_v2  .= $smod_str;
                                                            $has_to_print++;
                                                        // }
                                                        // else{
                                                        //     // $print_mod_food .= $str;
                                                        //     $all_str .= $mod_str;
                                                        // }
                                                        // $all_str .= $mod_str;
                                                        $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                        // $has_to_print++;
                                                    }   
                                                }   
                                                else{
                                                    // if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                        // $print_mod_bev .= $str;
                                                        $all_str .= $mod_str;
                                                        $all_str .= $smod_str;
                                                        $print_str_part_1_v2  .= $mod_str;
                                                        $print_str_part_1_v2  .= $smod_str;
                                                        $has_to_print++;
                                                    // }
                                                    // else{
                                                    //     // $print_mod_food .= $str;
                                                    //     $all_str .= $mod_str;
                                                    // }
                                                    // $all_str .= $mod_str;
                                                    $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                    // $has_to_print++;
                                                }
                                            }

                                        }


                                    }else{
                                         $print_bar_str[]  = "";
                                         $print_bar_str[] = $dets['remarks'];
                                         // echo "asdasdasdsadsadasd";
                                         //             echo "<pre>aa:",print_r($val),"</pre>";//die();
                                        $qty += $dets['qty'];
                                        if($remarks == ""){
                                            $remarks = $dets['remarks'];
                                        }else{
                                            if($dets['remarks'] != ""){
                                                $remarks .= ", ".$dets['remarks'];
                                            }
                                        }
                                    }

                                }   
                                // echo " " .$cat->menu_sub_cat_id   . " : ". BEVERAGE_ID. "<br>";
                                // if( $cat->menu_sub_cat_id == BEVERAGE_ID){

                                //     $print_bar_str[] = $val['name'];
                                    
                                // }
                            }   
                            else{
                                // $all_str .= $menu_str;
                                $update_line_ids[]=$dets['id'];
                                // $has_to_print++;

                                if(count($dets['modifiers']) > 0){
                                        
                                        
                                    // if($printer['sub_cat_id'] == SUBCAT_BEV){
                                    //     $all_str .= $print_mod_bev;
                                    // }else{
                                    //     $all_str .= $print_mod_food;
                                    // }

                                    if($cat->menu_sub_cat_id != RAMEN_ID){

                                        $all_str .= $this->append_chars($dets['qty'],"right",4," ");
                                        $print_str_part_1_v2  .= "<bold>".$this->append_chars($dets['qty']." @ ","right",4," ")."</bold>";
                                        // echo $str;
                                        $len = strlen($val['name']);

                                        if($len > 30){
                                            $arr2 = str_split($val['name'], 30);
                                            $counter = 1;
                                            foreach($arr2 as $k => $vv){
                                                if($counter == 1){
                                                   $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                   $print_str_part_1_v2  .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                }else{
                                                    // if ($val['qty'] == 1) {
                                                        $all_str .= $this->append_chars("","right",4," ");
                                                        $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                        $print_str_part_1_v2  .= $this->append_chars("","right",4," ");
                                                        $print_str_part_1_v2  .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                    // } else {
                                                        // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                                        //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                                    // }
                                                }
                                                $counter++;
                                            }

                                        }else{
                                            $all_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                            $print_str_part_1_v2  .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                        }

                                        if(isset($dets['remarks']) && $dets['remarks'] != ""){
                                            $all_str .= "     * ";
                                            $all_str .= $this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."\r\n";
                                            $print_str_part_1_v2 .= "<indentbold>". "     * ".$this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."</indentbold>"."\r\n";
                                        }

                                        // echo $str.'ssss';
                                        // echo "<pre>",print_r($dets['modifiers']),"</pre>";die();

                                        foreach ($dets['modifiers'] as $mod_id => $mod) {

                                            $mod_sub_cat = $this->site_model->get_tbl('modifiers',array('mod_id'=>$mod['id']),array(),null,true,'mod_sub_cat_id');
                                            $mod_sc = $mod_sub_cat[0];


                                            $mod_str = "";
                                            $kitchen_mod_slip_printed = $mod['kitchen_slip_printed'];
                                            if($mod['kitchen_slip_printed'] == ""){
                                                $kitchen_mod_slip_printed = 0;
                                            }
                                            $mod_str .= "     - ";
                                            $mod_str .= $this->append_chars(substrwords($mod['qty'].' '.$mod['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                .$this->append_chars(null,"left",8," ")."\r\n";
                                            
                                            if(!empty( $mod_bar_str)){
                                                 $mod_bar_str .= ", ".substrwords($mod['name'],100,"");
                                            }else{
                                                $mod_bar_str .= substrwords($mod['name'],100,"");
                                            }

                                            //printing of os para sa submdifer
                                            $smod_str = "";
                                            if(isset($mod['submodifiers'])){
                                                    
                                                foreach($mod['submodifiers'] as $sub_id => $subm){
                                                    if($subm['mod_line_id'] == $mod['mod_line_id']){
                                                        $kitchen_submod_slip_printed = $subm['kitchen_slip_printed'];
                                                        if($subm['kitchen_slip_printed'] == ""){
                                                            $kitchen_submod_slip_printed = 0;
                                                        }

                                                        $smod_str .= "         * ";
                                                        $smod_str .= $this->append_chars(substrwords($subm['qty'].' '.$subm['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                        .$this->append_chars(null,"left",8," ")."\r\n";

                                                        if($not_printed_only){
                                                            if($kitchen_submod_slip_printed == 0){ 
                                                                // if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                                //     // $print_mod_bev .= $str;
                                                                //     $all_str .= $smod_str;
                                                                //     $print_str_part_1_v2  .= $smod_str;
                                                                //     $has_to_print++;
                                                                // }
                                                                // else{
                                                                //     // $print_mod_food .= $str;
                                                                //     $all_str .= $mod_str;
                                                                // }
                                                                // $all_str .= $mod_str;
                                                                $update_line_submod_ids[]=$subm['sales_submod_id'];
                                                                // $has_to_print++;
                                                            }   
                                                        }   
                                                        else{
                                                            // if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                            //     // $print_mod_bev .= $str;
                                                            //     $all_str .= $smod_str;
                                                            //     $print_str_part_1_v2  .= $smod_str;
                                                            //     $has_to_print++;
                                                            // }
                                                            // else{
                                                            //     // $print_mod_food .= $str;
                                                            //     $all_str .= $mod_str;
                                                            // }
                                                            // $all_str .= $mod_str;
                                                            $update_line_submod_ids[]=$subm['sales_submod_id'];
                                                            // $has_to_print++;
                                                        }



                                                    }
                                                }

                                            }



                                            if($not_printed_only){
                                                if($kitchen_mod_slip_printed == 0){ 
                                                    // if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                        // $print_mod_bev .= $str;
                                                        $all_str .= $mod_str;
                                                        $all_str .= $smod_str;
                                                        $print_str_part_1_v2 .= $mod_str;
                                                        $print_str_part_1_v2 .= $smod_str;
                                                        $has_to_print++;
                                                    // }
                                                    // else{
                                                    //     // $print_mod_food .= $str;
                                                    //     $all_str .= $mod_str;
                                                    // }
                                                    // $all_str .= $mod_str;
                                                    $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                    // $has_to_print++;
                                                }   
                                            }   
                                            else{
                                                // echo $printer['sub_cat_id'].'====';
                                                // if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                    // $print_mod_bev .= $str;
                                                    $all_str .= $mod_str;
                                                    $all_str .= $smod_str;
                                                    $print_str_part_1_v2 .= $mod_str;
                                                    $print_str_part_1_v2 .= $smod_str;
                                                    $has_to_print++;
                                                // }
                                                // else{
                                                //     // $print_mod_food .= $str;
                                                //     $all_str .= $mod_str;
                                                // }
                                                // $all_str .= $mod_str;
                                                $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                // $has_to_print++;
                                            }
                                        }

                                    }
                                   

                                }else{
                                    $qty += $dets['qty'];
                                    if($remarks == ""){
                                        $remarks = $dets['remarks'];
                                    }else{
                                        if($dets['remarks'] != ""){
                                            $remarks .= ", ".$dets['remarks'];
                                        }
                                    }
                                }

                                if(isset($mod_str)){
                                    $print_bar_str[] = $mod_bar_str;
                                }

                                $print_bar_str[] = $dets['remarks'];

                            }

                            

                        }

                        if($qty > 0){

                            // if($printer['sub_cat_id'] == $cat->menu_sub_cat_id){
                                $has_to_print++;
                                $all_str .= $this->append_chars($qty,"right",4," ");
                                $print_str_part_1_v2 .= "<bold>".$this->append_chars($qty ." @ " ,"right",4," ")."</bold>";
                                $len = strlen($val['name']);

                                if($len > 30){
                                    $arr2 = str_split($val['name'], 30);
                                    $counter = 1;
                                    foreach($arr2 as $k => $vv){
                                        if($counter == 1){
                                           $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                            $print_str_part_1_v2 .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                        }else{
                                            // if ($val['qty'] == 1) {
                                                $all_str .= $this->append_chars("","right",4," ");
                                                $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                $print_str_part_1_v2 .= $this->append_chars("","right",4," ");
                                                $print_str_part_1_v2 .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                            // } else {
                                                // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                                //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                            // }
                                        }
                                        $counter++;
                                    }

                                }else{
                                    $all_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                    $print_str_part_1_v2 .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                }

                                // if(isset($order['type']) && $order['type'] == "App Order" && isset($order['memo']) &&  $order['memo'] != ""){
                                        // $all_str .= "     * ";
                                        // $all_str .= $this->append_chars(ucwords($order['memo']),"right",PAPER_DET_COL_2," ")."\r\n";
                                // }else{
                                    if(isset($remarks) && $remarks != ""){
                                        $all_str .= "     * ";
                                        $all_str .= $this->append_chars(ucwords($remarks),"right",PAPER_DET_COL_2," ")."\r\n";
                                        $print_str_part_1_v2 .=  "<indentbold>     * ".$this->append_chars(ucwords($remarks),"right",PAPER_DET_COL_2," ")."</indentbold>\r\n";
                                    }

                                   
                                // }

                                // if(isset($remarks) && $remarks != ""){
                                    // $all_str .= "     * ";
                                    // $all_str .= $this->append_chars(ucwords($remarks),"right",PAPER_DET_COL_2," ")."\r\n";
                                // }

                            // }

                        }
                        

                   
                        $print_str .= $all_str;
                        // echo $print_str;
                    // }
                }

                ////for takeout dinein

                if(count($details_to) > 0){

                    // $print_str .= "\r\n";
                    $print_str .= "===========FOR TAKEOUT=========="."\r\n";



                    foreach ($details_to as $menu_id => $val) {
                        if(isset($val['retail']) &&  $val['retail'] == 1){
                            continue;
                        }
                        $category = $this->site_model->get_tbl('menus',array('menu_id'=>$val['menu_id']),array(),null,true,'menu_sub_cat_id');
                        $cat = $category[0];
                        // echo $this->db->last_query();die();
                        // echo "<pre>",print_r($cat->menu_sub_cat_id),"</pre>";die();

                        // if($printer['sub_cat_id'] == $cat->menu_sub_cat_id){
                            $all_str = "";
                            $menu_str = "";
                            
                            $qty = 0;
                            $remarks = "";
                            $modi = 0;
                            foreach($val['dets'] as $line_id =>$dets){
                                
                                $mod_bar_str = "";
                                if( $cat->menu_sub_cat_id == BEVERAGE_ID){

                                        $print_bar_str[] = $val['name'];
                                        
                                }
                                if($not_printed_only){

                                    if($dets['kitchen_slip_printed'] == 0){  
                                         // var_dump($not_printed_only);
                                        // $all_str .= $menu_str;
                                        $update_line_ids[]=$dets['id'];
                                        // $has_to_print++;


                                        if(count($dets['modifiers']) > 0){
                                            
                                            // if($printer['sub_cat_id'] == SUBCAT_BEV){
                                            //     $all_str .= $print_mod_bev;
                                            // }else{
                                            //     $all_str .= $print_mod_food;
                                            // }
                                            if($cat->menu_sub_cat_id != RAMEN_ID){
                                                $print_str_part_1_v2 .= "<bold>";
                                                $print_str_part_1_v2 .= $this->append_chars($dets['qty']." @ ","right",4," ");
                                                $print_str_part_1_v2 .= "</bold>";
                                                $all_str .= $this->append_chars($dets['qty'],"right",4," ");
                                                // echo $str;
                                                $len = strlen($val['name']);

                                                if($len > 30){
                                                    $arr2 = str_split($val['name'], 30);
                                                    $counter = 1;
                                                    foreach($arr2 as $k => $vv){
                                                        if($counter == 1){
                                                           $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                           $print_str_part_1_v2  .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                        }else{
                                                            // if ($val['qty'] == 1) {
                                                                $all_str .= $this->append_chars("","right",4," ");
                                                                $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                                $print_str_part_1_v2  .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";

                                                            // } else {
                                                                // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                                                //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                                            // }
                                                        }
                                                        $counter++;
                                                    }

                                                }else{
                                                    $all_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                    $print_str_part_1_v2  .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                }

                                                if(isset($dets['remarks']) && $dets['remarks'] != ""){
                                                    $all_str .= "     * ";
                                                    $all_str .= $this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."\r\n";
                                                    $print_str_part_1_v2  .= "<indentbold>     * ".$this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."</indentbold>"."\r\n";
                                                }

                                                // echo $str.'ssss';
                                                // echo "<pre>",print_r($dets['modifiers']),"</pre>";die();

                                                foreach ($dets['modifiers'] as $mod_id => $mod) {

                                                    $mod_sub_cat = $this->site_model->get_tbl('modifiers',array('mod_id'=>$mod['id']),array(),null,true,'mod_sub_cat_id');
                                                    $mod_sc = $mod_sub_cat[0];


                                                    $mod_str = "";
                                                    $kitchen_mod_slip_printed = $mod['kitchen_slip_printed'];
                                                    if($mod['kitchen_slip_printed'] == ""){
                                                        $kitchen_mod_slip_printed = 0;
                                                    }
                                                    $mod_str .= "     - ";

                                                    if($mod['qty'] == 1){
                                                        $mod_str .= $this->append_chars(substrwords($mod['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                        .$this->append_chars(null,"left",8," ")."\r\n";
                                                    }else{
                                                        $mod_str .= $this->append_chars(substrwords($mod['qty'].' '.$mod['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                        .$this->append_chars(null,"left",8," ")."\r\n";
                                                    }
                                                    
                                                    
                                                    if(!empty( $mod_bar_str)){
                                                         $mod_bar_str .= ", ".substrwords($mod['name'],100,"");
                                                    }else{
                                                        $mod_bar_str .= substrwords($mod['name'],100,"");
                                                    }

                                                    if($not_printed_only){
                                                        if($kitchen_mod_slip_printed == 0){ 
                                                            // if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                                // $print_mod_bev .= $str;
                                                                $all_str .= $mod_str;
                                                                $print_str_part_1_v2  .= $mod_str;
                                                                $has_to_print++;
                                                            // }
                                                            // else{
                                                            //     // $print_mod_food .= $str;
                                                            //     $all_str .= $mod_str;
                                                            // }
                                                            // $all_str .= $mod_str;
                                                            $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                            // $has_to_print++;
                                                        }   
                                                    }   
                                                    else{
                                                        // if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                            // $print_mod_bev .= $str;
                                                            $all_str .= $mod_str;
                                                            $print_str_part_1_v2  .= $mod_str;
                                                            $has_to_print++;
                                                        // }
                                                        // else{
                                                        //     // $print_mod_food .= $str;
                                                        //     $all_str .= $mod_str;
                                                        // }
                                                        // $all_str .= $mod_str;
                                                        $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                        // $has_to_print++;
                                                    }
                                                }

                                            }


                                        }else{
                                             $print_bar_str[]  = "";
                                             $print_bar_str[] = $dets['remarks'];
                                             // echo "asdasdasdsadsadasd";
                                             //             echo "<pre>aa:",print_r($val),"</pre>";//die();
                                            $qty += $dets['qty'];
                                            if($remarks == ""){
                                                $remarks = $dets['remarks'];
                                            }else{
                                                if($dets['remarks'] != ""){
                                                    $remarks .= ", ".$dets['remarks'];
                                                }
                                            }
                                        }

                                    }   
                                    // echo " " .$cat->menu_sub_cat_id   . " : ". BEVERAGE_ID. "<br>";
                                    // if( $cat->menu_sub_cat_id == BEVERAGE_ID){

                                    //     $print_bar_str[] = $val['name'];
                                        
                                    // }
                                }   
                                else{
                                    // $all_str .= $menu_str;
                                    $update_line_ids[]=$dets['id'];
                                    // $has_to_print++;

                                    if(count($dets['modifiers']) > 0){
                                            
                                            
                                        // if($printer['sub_cat_id'] == SUBCAT_BEV){
                                        //     $all_str .= $print_mod_bev;
                                        // }else{
                                        //     $all_str .= $print_mod_food;
                                        // }

                                        if($cat->menu_sub_cat_id != RAMEN_ID){

                                            $all_str .= $this->append_chars($dets['qty'],"right",4," ");
                                            $print_str_part_1_v2  .= "<bold>".$this->append_chars($dets['qty']." @ ","right",4," ")."</bold>";
                                            // echo $str;
                                            $len = strlen($val['name']);

                                            if($len > 30){
                                                $arr2 = str_split($val['name'], 30);
                                                $counter = 1;
                                                foreach($arr2 as $k => $vv){
                                                    if($counter == 1){
                                                       $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                       $print_str_part_1_v2  .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                    }else{
                                                        // if ($val['qty'] == 1) {
                                                            $all_str .= $this->append_chars("","right",4," ");
                                                            $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                            $print_str_part_1_v2  .= $this->append_chars("","right",4," ");
                                                            $print_str_part_1_v2  .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                        // } else {
                                                            // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                                            //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                                        // }
                                                    }
                                                    $counter++;
                                                }

                                            }else{
                                                $all_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                $print_str_part_1_v2  .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                            }

                                            if(isset($dets['remarks']) && $dets['remarks'] != ""){
                                                $all_str .= "     * ";
                                                $all_str .= $this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."\r\n";
                                                $print_str_part_1_v2 .= "<indentbold>". "     * ".$this->append_chars(ucwords($dets['remarks']),"right",PAPER_DET_COL_2," ")."</indentbold>"."\r\n";
                                            }

                                            // echo $str.'ssss';
                                            // echo "<pre>",print_r($dets['modifiers']),"</pre>";die();

                                            foreach ($dets['modifiers'] as $mod_id => $mod) {

                                                $mod_sub_cat = $this->site_model->get_tbl('modifiers',array('mod_id'=>$mod['id']),array(),null,true,'mod_sub_cat_id');
                                                $mod_sc = $mod_sub_cat[0];


                                                $mod_str = "";
                                                $kitchen_mod_slip_printed = $mod['kitchen_slip_printed'];
                                                if($mod['kitchen_slip_printed'] == ""){
                                                    $kitchen_mod_slip_printed = 0;
                                                }
                                                $mod_str .= "     - ";
                                                $mod_str .= $this->append_chars(substrwords($mod['name'],100,""),"right",PAPER_DET_COL_2," ")
                                                    .$this->append_chars(null,"left",8," ")."\r\n";
                                                
                                                if(!empty( $mod_bar_str)){
                                                     $mod_bar_str .= ", ".substrwords($mod['name'],100,"");
                                                }else{
                                                    $mod_bar_str .= substrwords($mod['name'],100,"");
                                                }

                                                if($not_printed_only){
                                                    if($kitchen_mod_slip_printed == 0){ 
                                                        // if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                            // $print_mod_bev .= $str;
                                                            $all_str .= $mod_str;
                                                            $print_str_part_1_v2 .= $mod_str;
                                                            $has_to_print++;
                                                        // }
                                                        // else{
                                                        //     // $print_mod_food .= $str;
                                                        //     $all_str .= $mod_str;
                                                        // }
                                                        // $all_str .= $mod_str;
                                                        $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                        // $has_to_print++;
                                                    }   
                                                }   
                                                else{
                                                    // echo $printer['sub_cat_id'].'====';
                                                    // if($mod_sc->mod_sub_cat_id == $printer['sub_cat_id']){
                                                        // $print_mod_bev .= $str;
                                                        $all_str .= $mod_str;
                                                        $print_str_part_1_v2 .= $mod_str;
                                                        $has_to_print++;
                                                    // }
                                                    // else{
                                                    //     // $print_mod_food .= $str;
                                                    //     $all_str .= $mod_str;
                                                    // }
                                                    // $all_str .= $mod_str;
                                                    $update_line_mod_ids[]=$mod['sales_mod_id'];
                                                    // $has_to_print++;
                                                }
                                            }

                                        }
                                       

                                    }else{
                                        $qty += $dets['qty'];
                                        if($remarks == ""){
                                            $remarks = $dets['remarks'];
                                        }else{
                                            if($dets['remarks'] != ""){
                                                $remarks .= ", ".$dets['remarks'];
                                            }
                                        }
                                    }

                                    if(isset($mod_str)){
                                        $print_bar_str[] = $mod_bar_str;
                                    }

                                    $print_bar_str[] = $dets['remarks'];

                                }

                                

                            }

                            if($qty > 0){

                                // if($printer['sub_cat_id'] == $cat->menu_sub_cat_id){
                                    $has_to_print++;
                                    $all_str .= $this->append_chars($qty,"right",4," ");
                                    $print_str_part_1_v2 .= "<bold>".$this->append_chars($qty ." @ " ,"right",4," ")."</bold>";
                                    $len = strlen($val['name']);

                                    if($len > 30){
                                        $arr2 = str_split($val['name'], 30);
                                        $counter = 1;
                                        foreach($arr2 as $k => $vv){
                                            if($counter == 1){
                                               $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                $print_str_part_1_v2 .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                            }else{
                                                // if ($val['qty'] == 1) {
                                                    $all_str .= $this->append_chars("","right",4," ");
                                                    $all_str .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                    $print_str_part_1_v2 .= $this->append_chars("","right",4," ");
                                                    $print_str_part_1_v2 .= $this->append_chars(substrwords($vv,100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                                // } else {
                                                    // $print_str .= $this->append_chars(substrwords($vv,100,"")." @ ".$val['price'],"right",PAPER_DET_COL_2," ").
                                                    //     $this->append_chars("","left",PAPER_DET_COL_3," ")."\r\n";
                                                // }
                                            }
                                            $counter++;
                                        }

                                    }else{
                                        $all_str .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                        $print_str_part_1_v2 .= $this->append_chars(substrwords($val['name'],100,""),"right",PAPER_DET_COL_2," ").$this->append_chars(null,"left",8," ")."\r\n";
                                    }

                                    // if(isset($order['type']) && $order['type'] == "App Order" && isset($order['memo']) &&  $order['memo'] != ""){
                                            // $all_str .= "     * ";
                                            // $all_str .= $this->append_chars(ucwords($order['memo']),"right",PAPER_DET_COL_2," ")."\r\n";
                                    // }else{
                                        if(isset($remarks) && $remarks != ""){
                                            $all_str .= "     * ";
                                            $all_str .= $this->append_chars(ucwords($remarks),"right",PAPER_DET_COL_2," ")."\r\n";
                                            $print_str_part_1_v2 .=  "<indentbold>     * ".$this->append_chars(ucwords($remarks),"right",PAPER_DET_COL_2," ")."</indentbold>\r\n";
                                        }

                                       
                                    // }

                                    // if(isset($remarks) && $remarks != ""){
                                        // $all_str .= "     * ";
                                        // $all_str .= $this->append_chars(ucwords($remarks),"right",PAPER_DET_COL_2," ")."\r\n";
                                    // }

                                // }

                            }
                            

                       
                            $print_str .= $all_str;
                            // echo $print_str;
                        // }
                    }


                }

               $print_str .= PAPER_LINE."\r\n";
               if($order['table_name'] != ""){
                    // $print_str .=  align_center($order['table_name'],PAPER_WIDTH," ")."\r\n";
                    $print_str .= "Table #: ".$order['table_name']."  ";
                    $print_str_part_3_v2 .= "Table #: ".$order['table_name']."  ";
                }
                if($order['update_date']){
                    $print_str .= $order['update_date']."\r\n";
                    $print_str_part_4_v2 .= $order['update_date']."\r\n";
                }else{
                    $print_str .= $order['datetime']."\r\n";
                    $print_str_part_4_v2 .= $order['datetime']."\r\n";
                }

                 $print_str .=  align_center(strtoupper($order['type']),PAPER_WIDTH," ")."\r\n\r\n";
              
                // var_dump($has_to_print);
                // echo "<pre>",print_r($print_bar_str),"</pre>";die();
                // $has_to_print++; /
                ##### MENU FOR EACH END #######################################################
                // if($has_to_print > 0){
                    $js = '';
                    // if(PRINT_VERSION && PRINT_VERSION == 'V2'){
                    //     if(BEVERAGE_BARCODE_ENABLED && count($print_bar_str) > 2){

                    //         $this->do_print_bar_receipt_v2($print_bar_str);
                    //      }
                    //      /// echo "test";die();
                    //     $this->do_print_os_v2($print_str_part_1_v2,BILLING_PRINTER,$printer['no'],$print_str_part_2_v2,$print_str_part_3_v2,$print_str_part_4_v2);  
                    // }else 
                    // if(PRINT_VERSION && PRINT_VERSION == 'V3'){
                    //     if(BEVERAGE_BARCODE_ENABLED && count($print_bar_str) > 2){

                    //         $js_rcp = $this->html_print($print_bar_str);

                    //         $js_rcps[]=array('printer'=>BILLING_PRINTER,'value'=>$js_rcp);
                    //      }

                        $js_rcp = $this->html_print($print_str,'osqr');

                        $js_rcps[]=array('printer'=>BILLING_PRINTER,'value'=>$js_rcp);
                    // }else{
                //         require APPPATH . 'libraries/phpqrcode/qrlib.php';
                //         $text = " PRODUCT ID 23456";
                //         $qr_filename=$sales_id.'.png'; 
                //         QRcode::png($sales_id,$qr_filename);

                //         require APPPATH . 'libraries/PHPRtfLite.php';

                //         // register PHPRtfLite class loader
                //         PHPRtfLite::registerAutoloader();

                //         // rtf document
                //         $rtf = new PHPRtfLite();

                //         //paragraph formats
                //         $parFormat = new PHPRtfLite_ParFormat();

                //         $parGreyLeft = new PHPRtfLite_ParFormat();
                //         $parGreyLeft->setShading(10);

                //         $parGreyCenter = new PHPRtfLite_ParFormat(PHPRtfLite_ParFormat::TEXT_ALIGN_CENTER);
                //         $parGreyCenter->setShading(10);

                //         // $dir = dirname(__FILE__);

                //         $sect = $rtf->addSection();

                //         $filename = "qr_order.rtf";

                //         $sect->writeText($print_str, new PHPRtfLite_Font(), new PHPRtfLite_ParFormat());

                //         $dir = dirname(dirname(dirname(dirname(__FILE__))));
                //         $sect->addImage($dir.'/'.$sales_id.'.png', null);
                          
                //         $rtf->save($filename, false); // false is only used for unit test

                //         $batfile = "print.bat";
                //         $fh1 = fopen($batfile,'w+');
                //         $root = dirname(BASEPATH);
                //         // $battxt = "write.exe /PT \"".realpath($root."/".$filename)."\" \"".BILLING_PRINTER."\"  ";
                //         $battxt = "NOTEPAD /PT \"".realpath($root."/"."qr_order.txt")."\" \"".BILLING_PRINTER."\"  ";
                //         echo $battxt;
                //         fwrite($fh1, $battxt);
                //         fclose($fh1);
                //         session_write_close();
                //         // for ($i=0; $i < $kitchen_printer_no; $i++) { 
                //             exec($batfile);
                //         // }
                //         session_start();
                //         // unlink($qr_filename);
                //         // unlink($filename);
                //         unlink($batfile);
                //     //     if(BEVERAGE_BARCODE_ENABLED && count($print_bar_str) > 2){
                //     //         $this->do_print_bar_receipt_v1($print_bar_str,BILLING_PRINTER,$printer['no']);  
                //     //     }else{
                //     //         $this->do_print_os($print_str,BILLING_PRINTER,$printer['no']);  
                //     //     }

                //     // }
                    
                            
                // }
                // echo "<pre>".$print_str."</pre>";
           

            if($this->input->post('isjson') == 1){
                echo json_encode(array('js_rcps'=>$js_rcps));
            }else{
                return array('js_rcps'=>$js_rcps);
            }
            
        }        
}